{
  "openapi": "3.0.0",
  "paths": {
    "/search/store/v3": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "stores"
                  ],
                  "properties": {
                    "stores": {
                      "type": "array",
                      "description": "List of stores",
                      "example": [
                        {
                          "_id": "7c0360a5-20f4-470a-b8a0-124a509ad827",
                          "name": "Starbucks (Fox Plaza)",
                          "phone_number": 14158638332,
                          "address": {
                            "street_addr": "1390 Market Street",
                            "city": "San Francisco",
                            "state": "CA",
                            "zipcode": "94102",
                            "country": "US",
                            "street_addr_2": "",
                            "latitude": 37.77709,
                            "longitude": -122.4172976
                          },
                          "type": "restaurant",
                          "description": "Breakfast, Cafe, Coffee And Tea, Dinner, Lunch",
                          "local_hours": {
                            "operational": {
                              "Monday": "09:30AM - 01:00AM",
                              "Tuesday": "09:00AM - 2:00PM, 5:00PM - 9:30PM",
                              "Wednesday": "12:00AM - 4:00PM",
                              "Thursday": "8:00AM - 4:00AM",
                              "Friday": "10:00AM - 12:00AM",
                              "Saturday": "Closed",
                              "Sunday": "Open 24 hours"
                            },
                            "delivery": {
                              "Monday": "09:30AM - 01:00AM",
                              "Tuesday": "09:00AM - 2:00PM, 5:00PM - 9:30PM",
                              "Wednesday": "12:00AM - 4:00PM",
                              "Thursday": "8:00AM - 4:00AM",
                              "Friday": "10:00AM - 12:00AM",
                              "Saturday": "Closed",
                              "Sunday": "Open 24 hours"
                            },
                            "pickup": {
                              "Monday": "09:30AM - 01:00AM",
                              "Tuesday": "09:00AM - 2:00PM, 5:00PM - 9:30PM",
                              "Wednesday": "12:00AM - 4:00PM",
                              "Thursday": "8:00AM - 4:00AM",
                              "Friday": "10:00AM - 12:00AM",
                              "Saturday": "Closed",
                              "Sunday": "Open 24 hours"
                            },
                            "dine_in": {
                              "Monday": "09:30AM - 01:00AM",
                              "Tuesday": "09:00AM - 2:00PM, 5:00PM - 9:30PM",
                              "Wednesday": "12:00AM - 4:00PM",
                              "Thursday": "8:00AM - 4:00AM",
                              "Friday": "10:00AM - 12:00AM",
                              "Saturday": "Closed",
                              "Sunday": "Open 24 hours"
                            }
                          },
                          "utc_hours": {
                            "operational": {
                              "Monday": [
                                {
                                  "open": "02:30:00+00:00",
                                  "close": "18:00:00+00:00"
                                }
                              ],
                              "Tuesday": [
                                {
                                  "open": "02:00:00+00:00",
                                  "close": "07:00:00+00:00"
                                },
                                {
                                  "open": "10:00:00+00:00",
                                  "close": "14:30:00+00:00"
                                }
                              ],
                              "Wednesday": [
                                {
                                  "open": "17:00:00+00:00",
                                  "close": "09:00:00+00:00"
                                }
                              ],
                              "Thursday": [
                                {
                                  "open": "01:00:00+00:00",
                                  "close": "21:00:00+00:00"
                                }
                              ],
                              "Friday": [
                                {
                                  "open": "03:00:00+00:00",
                                  "close": "17:00:00+00:00"
                                }
                              ],
                              "Saturday": [
                                {
                                  "open": "Closed",
                                  "close": "Closed"
                                }
                              ],
                              "Sunday": [
                                {
                                  "open": "Open 24 hours",
                                  "close": "Open 24 hours"
                                }
                              ]
                            },
                            "delivery": {
                              "Monday": [
                                {
                                  "open": "02:30:00+00:00",
                                  "close": "18:00:00+00:00"
                                }
                              ],
                              "Tuesday": [
                                {
                                  "open": "02:00:00+00:00",
                                  "close": "07:00:00+00:00"
                                },
                                {
                                  "open": "10:00:00+00:00",
                                  "close": "14:30:00+00:00"
                                }
                              ],
                              "Wednesday": [
                                {
                                  "open": "17:00:00+00:00",
                                  "close": "09:00:00+00:00"
                                }
                              ],
                              "Thursday": [
                                {
                                  "open": "01:00:00+00:00",
                                  "close": "21:00:00+00:00"
                                }
                              ],
                              "Friday": [
                                {
                                  "open": "03:00:00+00:00",
                                  "close": "17:00:00+00:00"
                                }
                              ],
                              "Saturday": [
                                {
                                  "open": "Closed",
                                  "close": "Closed"
                                }
                              ],
                              "Sunday": [
                                {
                                  "open": "Open 24 hours",
                                  "close": "Open 24 hours"
                                }
                              ]
                            },
                            "pickup": {
                              "Monday": [
                                {
                                  "open": "02:30:00+00:00",
                                  "close": "18:00:00+00:00"
                                }
                              ],
                              "Tuesday": [
                                {
                                  "open": "02:00:00+00:00",
                                  "close": "07:00:00+00:00"
                                },
                                {
                                  "open": "10:00:00+00:00",
                                  "close": "14:30:00+00:00"
                                }
                              ],
                              "Wednesday": [
                                {
                                  "open": "17:00:00+00:00",
                                  "close": "09:00:00+00:00"
                                }
                              ],
                              "Thursday": [
                                {
                                  "open": "01:00:00+00:00",
                                  "close": "21:00:00+00:00"
                                }
                              ],
                              "Friday": [
                                {
                                  "open": "03:00:00+00:00",
                                  "close": "17:00:00+00:00"
                                }
                              ],
                              "Saturday": [
                                {
                                  "open": "Closed",
                                  "close": "Closed"
                                }
                              ],
                              "Sunday": [
                                {
                                  "open": "Open 24 hours",
                                  "close": "Open 24 hours"
                                }
                              ]
                            },
                            "dine_in": {
                              "Monday": [
                                {
                                  "open": "02:30:00+00:00",
                                  "close": "18:00:00+00:00"
                                }
                              ],
                              "Tuesday": [
                                {
                                  "open": "02:00:00+00:00",
                                  "close": "07:00:00+00:00"
                                },
                                {
                                  "open": "10:00:00+00:00",
                                  "close": "14:30:00+00:00"
                                }
                              ],
                              "Wednesday": [
                                {
                                  "open": "17:00:00+00:00",
                                  "close": "09:00:00+00:00"
                                }
                              ],
                              "Thursday": [
                                {
                                  "open": "01:00:00+00:00",
                                  "close": "21:00:00+00:00"
                                }
                              ],
                              "Friday": [
                                {
                                  "open": "03:00:00+00:00",
                                  "close": "17:00:00+00:00"
                                }
                              ],
                              "Saturday": [
                                {
                                  "open": "Closed",
                                  "close": "Closed"
                                }
                              ],
                              "Sunday": [
                                {
                                  "open": "Open 24 hours",
                                  "close": "Open 24 hours"
                                }
                              ]
                            }
                          },
                          "cuisines": [
                            "Asian",
                            "Breakfast",
                            "Cafe",
                            "Cafes",
                            "Coffee And Tea",
                            "Dinner",
                            "Lunch",
                            "Lunch Specials",
                            "Mongolian",
                            "Pickup",
                            "Salads",
                            "Sandwich",
                            "Takeout"
                          ],
                          "food_photos": [
                            "https://cdn-img.mealme.ai/22c383e6c3ac5cc90f462fca90ea7b884cb0ed5f/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f33383366313134322d313639312d343066612d393930382d6435346136653034613263652e6a706567"
                          ],
                          "logo_photos": [
                            "https://cdn-img.mealme.ai/b62450ab6b423becd18850a760f19e0c33034d9b/68747470733a2f2f7777772e737461726275636b732e636f6d2f6e6578745f7374617469632f69636f6e732f7077612d69636f6e2d3139322e706e67"
                          ],
                          "store_photos": [
                            "https://cdn-img.mealme.ai/787e4f9ac2ea5277b4a385be3d3fae6732e2aeb3/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f34363765646230622d636665372d343764642d613961632d6566383531666662626561382e6a706567"
                          ],
                          "dollar_signs": 1,
                          "pickup_enabled": false,
                          "delivery_enabled": true,
                          "is_open": true,
                          "quotes": {
                            "cheapest_delivery": {
                              "time_estimate": {
                                "minimum": 25,
                                "maximum": 35
                              },
                              "sales_tax_percent": 7.73,
                              "order_minimum": 0,
                              "delivery_fee": {
                                "delivery_fee_flat": 299,
                                "delivery_fee_percent": 0,
                                "delivery_fee_taxable": true,
                                "threshold_fees": []
                              },
                              "service_fee": {
                                "service_fee_flat": 250,
                                "service_fee_percent": 9.09,
                                "service_fee_min": 100,
                                "service_fee_taxable": true
                              },
                              "small_order_fee": {
                                "minimum_order_value": 1100,
                                "small_order_fee_flat": 200,
                                "small_order_fee_percent": 0
                              }
                            },
                            "fastest_delivery": {
                              "time_estimate": {
                                "minimum": 25,
                                "maximum": 35
                              },
                              "sales_tax_percent": 7.73,
                              "order_minimum": 0,
                              "delivery_fee": {
                                "delivery_fee_flat": 299,
                                "delivery_fee_percent": 0,
                                "delivery_fee_taxable": true,
                                "threshold_fees": []
                              },
                              "service_fee": {
                                "service_fee_flat": 250,
                                "service_fee_percent": 9.09,
                                "service_fee_min": 100,
                                "service_fee_taxable": true
                              },
                              "small_order_fee": {
                                "minimum_order_value": 1100,
                                "small_order_fee_flat": 200,
                                "small_order_fee_percent": 0
                              }
                            }
                          },
                          "offers_first_party_delivery": false,
                          "offers_third_party_delivery": true,
                          "miles": 0.23,
                          "weighted_rating_value": 4.83,
                          "aggregated_rating_count": 956,
                          "supports_upc_codes": false
                        }
                      ],
                      "items": {
                        "required": [
                          "_id",
                          "address",
                          "aggregated_rating_count",
                          "cuisines",
                          "delivery_enabled",
                          "description",
                          "dollar_signs",
                          "food_photos",
                          "hours",
                          "is_open",
                          "local_hours",
                          "logo_photos",
                          "miles",
                          "name",
                          "offers_first_party_delivery",
                          "offers_third_party_delivery",
                          "phone_number",
                          "pickup_enabled",
                          "store_photos",
                          "supports_upc_codes",
                          "type",
                          "weighted_rating_value"
                        ],
                        "properties": {
                          "_id": {
                            "type": "string",
                            "description": "MealMe ID of the store. Can be null in some cases.",
                            "example": "7c0360a5-20f4-470a-b8a0-124a509ad827"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the store",
                            "example": "7-Eleven"
                          },
                          "phone_number": {
                            "type": "integer",
                            "description": "Phone number of the store",
                            "example": 14158638332
                          },
                          "address": {
                            "description": "",
                            "required": [
                              "city",
                              "country",
                              "latitude",
                              "longitude",
                              "state",
                              "street_addr",
                              "street_addr_2",
                              "zipcode"
                            ],
                            "properties": {
                              "street_addr": {
                                "type": "string",
                                "description": "Street Address",
                                "example": "1390 Market Street"
                              },
                              "city": {
                                "type": "string",
                                "description": "City",
                                "example": "San Francisco"
                              },
                              "state": {
                                "type": "string",
                                "description": "State abbreviation",
                                "example": "CA"
                              },
                              "zipcode": {
                                "type": "string",
                                "description": "Zipcode",
                                "example": "94102"
                              },
                              "country": {
                                "type": "string",
                                "description": "Country abbreviation",
                                "example": "US"
                              },
                              "street_addr_2": {
                                "type": "string",
                                "description": "Street Address 2",
                                "example": "Apt. 123"
                              },
                              "latitude": {
                                "type": "number",
                                "description": "Latitude",
                                "example": 37.77709
                              },
                              "longitude": {
                                "type": "number",
                                "description": "Longitude",
                                "example": -122.4172976
                              }
                            },
                            "type": "object"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the store, either \"grocery\" or \"restaurant\"",
                            "example": "grocery"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the store",
                            "example": "Local convenience store with snacks, beverages, and more."
                          },
                          "local_hours": {
                            "description": "",
                            "properties": {
                              "operational": {
                                "description": "",
                                "properties": {
                                  "Monday": {
                                    "type": "string",
                                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                    "example": "09:30AM - 01:00AM"
                                  },
                                  "Tuesday": {
                                    "type": "string",
                                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                  },
                                  "Wednesday": {
                                    "type": "string",
                                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                                    "example": "12:00AM - 4:00PM"
                                  },
                                  "Thursday": {
                                    "type": "string",
                                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                    "example": "8:00AM - 4:00AM"
                                  },
                                  "Friday": {
                                    "type": "string",
                                    "description": "If a restaurant is open until midnight, it will show as above.",
                                    "example": "10:00AM - 12:00AM"
                                  },
                                  "Saturday": {
                                    "type": "string",
                                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                    "example": "Closed"
                                  },
                                  "Sunday": {
                                    "type": "string",
                                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                    "example": "Open 24 hours"
                                  }
                                },
                                "type": "object"
                              },
                              "delivery": {
                                "description": "",
                                "properties": {
                                  "Monday": {
                                    "type": "string",
                                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                    "example": "09:30AM - 01:00AM"
                                  },
                                  "Tuesday": {
                                    "type": "string",
                                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                  },
                                  "Wednesday": {
                                    "type": "string",
                                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                                    "example": "12:00AM - 4:00PM"
                                  },
                                  "Thursday": {
                                    "type": "string",
                                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                    "example": "8:00AM - 4:00AM"
                                  },
                                  "Friday": {
                                    "type": "string",
                                    "description": "If a restaurant is open until midnight, it will show as above.",
                                    "example": "10:00AM - 12:00AM"
                                  },
                                  "Saturday": {
                                    "type": "string",
                                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                    "example": "Closed"
                                  },
                                  "Sunday": {
                                    "type": "string",
                                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                    "example": "Open 24 hours"
                                  }
                                },
                                "type": "object"
                              },
                              "pickup": {
                                "description": "",
                                "properties": {
                                  "Monday": {
                                    "type": "string",
                                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                    "example": "09:30AM - 01:00AM"
                                  },
                                  "Tuesday": {
                                    "type": "string",
                                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                  },
                                  "Wednesday": {
                                    "type": "string",
                                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                                    "example": "12:00AM - 4:00PM"
                                  },
                                  "Thursday": {
                                    "type": "string",
                                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                    "example": "8:00AM - 4:00AM"
                                  },
                                  "Friday": {
                                    "type": "string",
                                    "description": "If a restaurant is open until midnight, it will show as above.",
                                    "example": "10:00AM - 12:00AM"
                                  },
                                  "Saturday": {
                                    "type": "string",
                                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                    "example": "Closed"
                                  },
                                  "Sunday": {
                                    "type": "string",
                                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                    "example": "Open 24 hours"
                                  }
                                },
                                "type": "object"
                              },
                              "dine_in": {
                                "description": "",
                                "properties": {
                                  "Monday": {
                                    "type": "string",
                                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                    "example": "09:30AM - 01:00AM"
                                  },
                                  "Tuesday": {
                                    "type": "string",
                                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                  },
                                  "Wednesday": {
                                    "type": "string",
                                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                                    "example": "12:00AM - 4:00PM"
                                  },
                                  "Thursday": {
                                    "type": "string",
                                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                    "example": "8:00AM - 4:00AM"
                                  },
                                  "Friday": {
                                    "type": "string",
                                    "description": "If a restaurant is open until midnight, it will show as above.",
                                    "example": "10:00AM - 12:00AM"
                                  },
                                  "Saturday": {
                                    "type": "string",
                                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                    "example": "Closed"
                                  },
                                  "Sunday": {
                                    "type": "string",
                                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                    "example": "Open 24 hours"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "hours": {
                            "description": "A mapping of quote ID(s) to their respective local hours.",
                            "allOf": [
                              {
                                "properties": {
                                  "*": {
                                    "description": "",
                                    "properties": {
                                      "operational": {
                                        "description": "",
                                        "properties": {
                                          "Monday": {
                                            "type": "string",
                                            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                            "example": "09:30AM - 01:00AM"
                                          },
                                          "Tuesday": {
                                            "type": "string",
                                            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                          },
                                          "Wednesday": {
                                            "type": "string",
                                            "description": "If a restaurant is opens at midnight, it will show as above. ",
                                            "example": "12:00AM - 4:00PM"
                                          },
                                          "Thursday": {
                                            "type": "string",
                                            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                            "example": "8:00AM - 4:00AM"
                                          },
                                          "Friday": {
                                            "type": "string",
                                            "description": "If a restaurant is open until midnight, it will show as above.",
                                            "example": "10:00AM - 12:00AM"
                                          },
                                          "Saturday": {
                                            "type": "string",
                                            "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                            "example": "Closed"
                                          },
                                          "Sunday": {
                                            "type": "string",
                                            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                            "example": "Open 24 hours"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "delivery": {
                                        "description": "",
                                        "properties": {
                                          "Monday": {
                                            "type": "string",
                                            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                            "example": "09:30AM - 01:00AM"
                                          },
                                          "Tuesday": {
                                            "type": "string",
                                            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                          },
                                          "Wednesday": {
                                            "type": "string",
                                            "description": "If a restaurant is opens at midnight, it will show as above. ",
                                            "example": "12:00AM - 4:00PM"
                                          },
                                          "Thursday": {
                                            "type": "string",
                                            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                            "example": "8:00AM - 4:00AM"
                                          },
                                          "Friday": {
                                            "type": "string",
                                            "description": "If a restaurant is open until midnight, it will show as above.",
                                            "example": "10:00AM - 12:00AM"
                                          },
                                          "Saturday": {
                                            "type": "string",
                                            "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                            "example": "Closed"
                                          },
                                          "Sunday": {
                                            "type": "string",
                                            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                            "example": "Open 24 hours"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "pickup": {
                                        "description": "",
                                        "properties": {
                                          "Monday": {
                                            "type": "string",
                                            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                            "example": "09:30AM - 01:00AM"
                                          },
                                          "Tuesday": {
                                            "type": "string",
                                            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                          },
                                          "Wednesday": {
                                            "type": "string",
                                            "description": "If a restaurant is opens at midnight, it will show as above. ",
                                            "example": "12:00AM - 4:00PM"
                                          },
                                          "Thursday": {
                                            "type": "string",
                                            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                            "example": "8:00AM - 4:00AM"
                                          },
                                          "Friday": {
                                            "type": "string",
                                            "description": "If a restaurant is open until midnight, it will show as above.",
                                            "example": "10:00AM - 12:00AM"
                                          },
                                          "Saturday": {
                                            "type": "string",
                                            "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                            "example": "Closed"
                                          },
                                          "Sunday": {
                                            "type": "string",
                                            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                            "example": "Open 24 hours"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "dine_in": {
                                        "description": "",
                                        "properties": {
                                          "Monday": {
                                            "type": "string",
                                            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                            "example": "09:30AM - 01:00AM"
                                          },
                                          "Tuesday": {
                                            "type": "string",
                                            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                          },
                                          "Wednesday": {
                                            "type": "string",
                                            "description": "If a restaurant is opens at midnight, it will show as above. ",
                                            "example": "12:00AM - 4:00PM"
                                          },
                                          "Thursday": {
                                            "type": "string",
                                            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                            "example": "8:00AM - 4:00AM"
                                          },
                                          "Friday": {
                                            "type": "string",
                                            "description": "If a restaurant is open until midnight, it will show as above.",
                                            "example": "10:00AM - 12:00AM"
                                          },
                                          "Saturday": {
                                            "type": "string",
                                            "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                            "example": "Closed"
                                          },
                                          "Sunday": {
                                            "type": "string",
                                            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                            "example": "Open 24 hours"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "utc_hours": {
                            "description": "",
                            "properties": {
                              "operational": {
                                "description": "",
                                "required": [
                                  "Friday",
                                  "Monday",
                                  "Saturday",
                                  "Sunday",
                                  "Thursday",
                                  "Tuesday",
                                  "Wednesday"
                                ],
                                "properties": {
                                  "Monday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Monday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Tuesday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Tuesday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Wednesday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Wednesday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Thursday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Thursday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Friday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Friday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Saturday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Saturday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Sunday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Sunday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "delivery": {
                                "description": "",
                                "required": [
                                  "Friday",
                                  "Monday",
                                  "Saturday",
                                  "Sunday",
                                  "Thursday",
                                  "Tuesday",
                                  "Wednesday"
                                ],
                                "properties": {
                                  "Monday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Monday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Tuesday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Tuesday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Wednesday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Wednesday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Thursday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Thursday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Friday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Friday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Saturday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Saturday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Sunday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Sunday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "pickup": {
                                "description": "",
                                "required": [
                                  "Friday",
                                  "Monday",
                                  "Saturday",
                                  "Sunday",
                                  "Thursday",
                                  "Tuesday",
                                  "Wednesday"
                                ],
                                "properties": {
                                  "Monday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Monday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Tuesday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Tuesday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Wednesday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Wednesday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Thursday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Thursday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Friday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Friday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Saturday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Saturday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Sunday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Sunday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "dine_in": {
                                "description": "",
                                "required": [
                                  "Friday",
                                  "Monday",
                                  "Saturday",
                                  "Sunday",
                                  "Thursday",
                                  "Tuesday",
                                  "Wednesday"
                                ],
                                "properties": {
                                  "Monday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Monday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Tuesday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Tuesday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Wednesday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Wednesday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Thursday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Thursday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Friday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Friday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Saturday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Saturday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "Sunday": {
                                    "type": "array",
                                    "description": "The list of opening and closing times on Sunday.",
                                    "items": {
                                      "required": [
                                        "closed",
                                        "open"
                                      ],
                                      "properties": {
                                        "open": {
                                          "type": "string",
                                          "description": "The store opening UTC time.",
                                          "example": "01:00:00+00:00"
                                        },
                                        "closed": {
                                          "type": "string",
                                          "description": "The store closing UTC time.",
                                          "example": "17:00:00+00:00"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "cuisines": {
                            "type": "array",
                            "description": "The cuisine types",
                            "example": [
                              "Snacks",
                              "Convenience",
                              "Ice Cream"
                            ],
                            "items": {
                              "type": "string",
                              "description": "Cuisine of the store"
                            }
                          },
                          "food_photos": {
                            "type": "array",
                            "description": "Photos of the food at the store",
                            "example": [
                              "https://cdn-img.mealme.ai/f9ccb38a3d986eeb3f25e5b021d85a73c5d492ba/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f65303762376261372d663036612d346237302d383861302d3466633932656261346236322e6a706567"
                            ],
                            "items": {
                              "type": "string",
                              "description": "Photo of the store"
                            }
                          },
                          "logo_photos": {
                            "type": "array",
                            "description": "Photos of the store's logo",
                            "example": [
                              "https://cdn-img.mealme.ai/9a55bb89e411b1ef87210731a2e7f9fe850cc979/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f76313630313330373339332f656a6e376377756b74766537766e696867616b782e6a7067"
                            ],
                            "items": {
                              "type": "string",
                              "description": "Photo of the store's logo"
                            }
                          },
                          "store_photos": {
                            "type": "array",
                            "description": "Photos of the store",
                            "example": [
                              "https://cdn-img.mealme.ai/7aba9346a8f2e1d8ecf453a86fe3be1b53f98270/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f36393264376333342d626465362d343337612d616435342d3961303633656333666161642e6a706567"
                            ],
                            "items": {
                              "type": "string",
                              "description": "Photo of the store"
                            }
                          },
                          "dollar_signs": {
                            "type": "integer",
                            "description": "Estimated cost of the store, like 1 representing \"$\" or 2 representing \"$$\"",
                            "example": 1
                          },
                          "pickup_enabled": {
                            "type": "boolean",
                            "description": "Whether the store supports pickup.",
                            "example": false
                          },
                          "delivery_enabled": {
                            "type": "boolean",
                            "description": "Whether the store supports delivery.",
                            "example": true
                          },
                          "is_open": {
                            "type": "boolean",
                            "description": "Whether the store is open. If null, then there is no data available on whether the store is open.",
                            "example": true
                          },
                          "quotes": {
                            "description": "",
                            "properties": {
                              "cheapest_delivery": {
                                "example": {
                                  "time_estimate": {
                                    "minimum": 43,
                                    "maximum": 45
                                  },
                                  "sales_tax_percent": 10.5,
                                  "delivery_fee": {
                                    "delivery_fee_flat": 0,
                                    "delivery_fee_percent": 0,
                                    "delivery_fee_taxable": false
                                  },
                                  "service_fee": {
                                    "service_fee_flat": 0,
                                    "service_fee_percent": 10,
                                    "service_fee_min": 300,
                                    "service_fee_max": 700,
                                    "service_fee_taxable": false
                                  },
                                  "small_order_fee": {
                                    "minimum_order_value": 0,
                                    "small_order_fee_flat": 0,
                                    "small_order_fee_percent": 0
                                  },
                                  "order_minimum": 1500,
                                  "threshold_fees": [],
                                  "asap_available": true
                                },
                                "allOf": [
                                  {
                                    "required": [
                                      "accepts_delivery_tip",
                                      "accepts_pickup_note",
                                      "accepts_pickup_tip",
                                      "asap_available",
                                      "courier_quote",
                                      "delivery_fee",
                                      "first_party_quote",
                                      "order_minimum",
                                      "sales_tax_percent",
                                      "service_fee",
                                      "small_order_fee",
                                      "third_party_quote",
                                      "time_estimate"
                                    ],
                                    "properties": {
                                      "time_estimate": {
                                        "description": "",
                                        "required": [
                                          "maximum",
                                          "minimum"
                                        ],
                                        "properties": {
                                          "minimum": {
                                            "type": "integer",
                                            "description": "Lower bound of delivery time estimate (in minutes)"
                                          },
                                          "maximum": {
                                            "type": "integer",
                                            "description": "Upper bound of delivery time estimate (in minutes)"
                                          },
                                          "scheduled": {
                                            "type": "array",
                                            "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                            "items": {
                                              "required": [
                                                "delivery_fee",
                                                "maximum",
                                                "minimum"
                                              ],
                                              "properties": {
                                                "minimum": {
                                                  "type": "integer",
                                                  "description": "Timestamp (seconds since 1970)"
                                                },
                                                "maximum": {
                                                  "type": "integer",
                                                  "description": "Timestamp (seconds since 1970)"
                                                },
                                                "delivery_fee": {
                                                  "description": "",
                                                  "required": [
                                                    "delivery_fee_flat",
                                                    "delivery_fee_percent"
                                                  ],
                                                  "properties": {
                                                    "delivery_fee_flat": {
                                                      "type": "integer",
                                                      "description": "Delivery fee amount in cents"
                                                    },
                                                    "delivery_fee_percent": {
                                                      "type": "number",
                                                      "description": "Delivery fee percentage"
                                                    },
                                                    "delivery_fee_taxable": {
                                                      "type": "boolean",
                                                      "description": "Whether the delivery fee is taxable or not"
                                                    },
                                                    "threshold_fees": {
                                                      "type": "array",
                                                      "description": "Threshold Fees, if they exist",
                                                      "items": {
                                                        "required": [
                                                          "threshold_cents",
                                                          "threshold_fee_cents"
                                                        ],
                                                        "properties": {
                                                          "threshold_cents": {
                                                            "type": "integer",
                                                            "description": "Subtotal that enacts a specific fee"
                                                          },
                                                          "threshold_fee_cents": {
                                                            "type": "integer",
                                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                          }
                                                        },
                                                        "type": "object"
                                                      }
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "sales_tax_percent": {
                                        "type": "integer",
                                        "description": "Sales tax in percentage terms"
                                      },
                                      "delivery_fee": {
                                        "description": "",
                                        "required": [
                                          "delivery_fee_flat",
                                          "delivery_fee_percent"
                                        ],
                                        "properties": {
                                          "delivery_fee_flat": {
                                            "type": "integer",
                                            "description": "Delivery fee amount in cents"
                                          },
                                          "delivery_fee_percent": {
                                            "type": "number",
                                            "description": "Delivery fee percentage"
                                          },
                                          "delivery_fee_taxable": {
                                            "type": "boolean",
                                            "description": "Whether the delivery fee is taxable or not"
                                          },
                                          "threshold_fees": {
                                            "type": "array",
                                            "description": "Threshold Fees, if they exist",
                                            "items": {
                                              "required": [
                                                "threshold_cents",
                                                "threshold_fee_cents"
                                              ],
                                              "properties": {
                                                "threshold_cents": {
                                                  "type": "integer",
                                                  "description": "Subtotal that enacts a specific fee"
                                                },
                                                "threshold_fee_cents": {
                                                  "type": "integer",
                                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "service_fee": {
                                        "description": "",
                                        "required": [
                                          "service_fee_flat",
                                          "service_fee_percent"
                                        ],
                                        "properties": {
                                          "service_fee_flat": {
                                            "type": "integer",
                                            "description": "Service fee amount in cents"
                                          },
                                          "service_fee_percent": {
                                            "type": "number",
                                            "description": "Service fee percentage from 0 to 100"
                                          },
                                          "service_fee_min": {
                                            "type": "integer",
                                            "description": "Minimum service fee amount in cents"
                                          },
                                          "service_fee_max": {
                                            "type": "integer",
                                            "description": "Maximum service fee amount in cents"
                                          },
                                          "service_fee_taxable": {
                                            "type": "boolean",
                                            "description": "Whether the service fee is taxable or not"
                                          },
                                          "threshold_fees": {
                                            "type": "array",
                                            "description": "Threshold Fees, if they exist",
                                            "items": {
                                              "required": [
                                                "threshold_cents",
                                                "threshold_fee_cents"
                                              ],
                                              "properties": {
                                                "threshold_cents": {
                                                  "type": "integer",
                                                  "description": "Subtotal that enacts a specific fee"
                                                },
                                                "threshold_fee_cents": {
                                                  "type": "integer",
                                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "small_order_fee": {
                                        "description": "",
                                        "required": [
                                          "minimum_order_value",
                                          "small_order_fee_flat",
                                          "small_order_fee_percent"
                                        ],
                                        "properties": {
                                          "minimum_order_value": {
                                            "type": "integer",
                                            "description": "Minimum amount to not incur small order fee in cents",
                                            "example": 0
                                          },
                                          "small_order_fee_flat": {
                                            "type": "integer",
                                            "description": "Small order fee amount in cents",
                                            "example": 0
                                          },
                                          "small_order_fee_percent": {
                                            "type": "number",
                                            "description": "Small order fee percentage",
                                            "example": 0
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "order_minimum": {
                                        "type": "integer",
                                        "description": "Minimum order amount in cents"
                                      },
                                      "min_tip": {
                                        "type": "integer",
                                        "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                      },
                                      "asap_available": {
                                        "type": "integer",
                                        "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                      },
                                      "first_party_quote": {
                                        "type": "boolean",
                                        "description": "Whether this quote is provided by the store"
                                      },
                                      "third_party_quote": {
                                        "type": "boolean",
                                        "description": "Whether this quote is provided by a third party service"
                                      },
                                      "courier_quote": {
                                        "type": "boolean",
                                        "description": "Whether this quote is provided by a last-mile delivery service."
                                      },
                                      "accepts_delivery_tip": {
                                        "type": "boolean",
                                        "description": "Whether a delivery tip is accepted."
                                      },
                                      "accepts_pickup_tip": {
                                        "type": "boolean",
                                        "description": "Whether a pickup tip is accepted."
                                      },
                                      "accepts_pickup_note": {
                                        "type": "boolean",
                                        "description": "Whether a pickup note is accepted."
                                      }
                                    },
                                    "type": "object"
                                  }
                                ],
                                "description": ""
                              },
                              "fastest_delivery": {
                                "example": {
                                  "time_estimate": {
                                    "minimum": 15,
                                    "maximum": 30
                                  },
                                  "sales_tax_percent": 10.5,
                                  "delivery_fee": {
                                    "delivery_fee_flat": 199,
                                    "delivery_fee_percent": 0,
                                    "delivery_fee_taxable": false
                                  },
                                  "service_fee": {
                                    "service_fee_flat": 0,
                                    "service_fee_percent": 5
                                  },
                                  "small_order_fee": {
                                    "minimum_order_value": 1200,
                                    "small_order_fee_flat": 200,
                                    "small_order_fee_percent": 0
                                  },
                                  "order_minimum": 0,
                                  "threshold_fees": [
                                    {
                                      "threshold_cents": 10000,
                                      "threshold_fee_cents": 1000
                                    },
                                    {
                                      "threshold_cents": 20000,
                                      "threshold_fee_cents": 2000
                                    }
                                  ]
                                },
                                "allOf": [
                                  {
                                    "required": [
                                      "accepts_delivery_tip",
                                      "accepts_pickup_note",
                                      "accepts_pickup_tip",
                                      "asap_available",
                                      "courier_quote",
                                      "delivery_fee",
                                      "first_party_quote",
                                      "order_minimum",
                                      "sales_tax_percent",
                                      "service_fee",
                                      "small_order_fee",
                                      "third_party_quote",
                                      "time_estimate"
                                    ],
                                    "properties": {
                                      "time_estimate": {
                                        "description": "",
                                        "required": [
                                          "maximum",
                                          "minimum"
                                        ],
                                        "properties": {
                                          "minimum": {
                                            "type": "integer",
                                            "description": "Lower bound of delivery time estimate (in minutes)"
                                          },
                                          "maximum": {
                                            "type": "integer",
                                            "description": "Upper bound of delivery time estimate (in minutes)"
                                          },
                                          "scheduled": {
                                            "type": "array",
                                            "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                            "items": {
                                              "required": [
                                                "delivery_fee",
                                                "maximum",
                                                "minimum"
                                              ],
                                              "properties": {
                                                "minimum": {
                                                  "type": "integer",
                                                  "description": "Timestamp (seconds since 1970)"
                                                },
                                                "maximum": {
                                                  "type": "integer",
                                                  "description": "Timestamp (seconds since 1970)"
                                                },
                                                "delivery_fee": {
                                                  "description": "",
                                                  "required": [
                                                    "delivery_fee_flat",
                                                    "delivery_fee_percent"
                                                  ],
                                                  "properties": {
                                                    "delivery_fee_flat": {
                                                      "type": "integer",
                                                      "description": "Delivery fee amount in cents"
                                                    },
                                                    "delivery_fee_percent": {
                                                      "type": "number",
                                                      "description": "Delivery fee percentage"
                                                    },
                                                    "delivery_fee_taxable": {
                                                      "type": "boolean",
                                                      "description": "Whether the delivery fee is taxable or not"
                                                    },
                                                    "threshold_fees": {
                                                      "type": "array",
                                                      "description": "Threshold Fees, if they exist",
                                                      "items": {
                                                        "required": [
                                                          "threshold_cents",
                                                          "threshold_fee_cents"
                                                        ],
                                                        "properties": {
                                                          "threshold_cents": {
                                                            "type": "integer",
                                                            "description": "Subtotal that enacts a specific fee"
                                                          },
                                                          "threshold_fee_cents": {
                                                            "type": "integer",
                                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                          }
                                                        },
                                                        "type": "object"
                                                      }
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "sales_tax_percent": {
                                        "type": "integer",
                                        "description": "Sales tax in percentage terms"
                                      },
                                      "delivery_fee": {
                                        "description": "",
                                        "required": [
                                          "delivery_fee_flat",
                                          "delivery_fee_percent"
                                        ],
                                        "properties": {
                                          "delivery_fee_flat": {
                                            "type": "integer",
                                            "description": "Delivery fee amount in cents"
                                          },
                                          "delivery_fee_percent": {
                                            "type": "number",
                                            "description": "Delivery fee percentage"
                                          },
                                          "delivery_fee_taxable": {
                                            "type": "boolean",
                                            "description": "Whether the delivery fee is taxable or not"
                                          },
                                          "threshold_fees": {
                                            "type": "array",
                                            "description": "Threshold Fees, if they exist",
                                            "items": {
                                              "required": [
                                                "threshold_cents",
                                                "threshold_fee_cents"
                                              ],
                                              "properties": {
                                                "threshold_cents": {
                                                  "type": "integer",
                                                  "description": "Subtotal that enacts a specific fee"
                                                },
                                                "threshold_fee_cents": {
                                                  "type": "integer",
                                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "service_fee": {
                                        "description": "",
                                        "required": [
                                          "service_fee_flat",
                                          "service_fee_percent"
                                        ],
                                        "properties": {
                                          "service_fee_flat": {
                                            "type": "integer",
                                            "description": "Service fee amount in cents"
                                          },
                                          "service_fee_percent": {
                                            "type": "number",
                                            "description": "Service fee percentage from 0 to 100"
                                          },
                                          "service_fee_min": {
                                            "type": "integer",
                                            "description": "Minimum service fee amount in cents"
                                          },
                                          "service_fee_max": {
                                            "type": "integer",
                                            "description": "Maximum service fee amount in cents"
                                          },
                                          "service_fee_taxable": {
                                            "type": "boolean",
                                            "description": "Whether the service fee is taxable or not"
                                          },
                                          "threshold_fees": {
                                            "type": "array",
                                            "description": "Threshold Fees, if they exist",
                                            "items": {
                                              "required": [
                                                "threshold_cents",
                                                "threshold_fee_cents"
                                              ],
                                              "properties": {
                                                "threshold_cents": {
                                                  "type": "integer",
                                                  "description": "Subtotal that enacts a specific fee"
                                                },
                                                "threshold_fee_cents": {
                                                  "type": "integer",
                                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "small_order_fee": {
                                        "description": "",
                                        "required": [
                                          "minimum_order_value",
                                          "small_order_fee_flat",
                                          "small_order_fee_percent"
                                        ],
                                        "properties": {
                                          "minimum_order_value": {
                                            "type": "integer",
                                            "description": "Minimum amount to not incur small order fee in cents",
                                            "example": 0
                                          },
                                          "small_order_fee_flat": {
                                            "type": "integer",
                                            "description": "Small order fee amount in cents",
                                            "example": 0
                                          },
                                          "small_order_fee_percent": {
                                            "type": "number",
                                            "description": "Small order fee percentage",
                                            "example": 0
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "order_minimum": {
                                        "type": "integer",
                                        "description": "Minimum order amount in cents"
                                      },
                                      "min_tip": {
                                        "type": "integer",
                                        "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                      },
                                      "asap_available": {
                                        "type": "integer",
                                        "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                      },
                                      "first_party_quote": {
                                        "type": "boolean",
                                        "description": "Whether this quote is provided by the store"
                                      },
                                      "third_party_quote": {
                                        "type": "boolean",
                                        "description": "Whether this quote is provided by a third party service"
                                      },
                                      "courier_quote": {
                                        "type": "boolean",
                                        "description": "Whether this quote is provided by a last-mile delivery service."
                                      },
                                      "accepts_delivery_tip": {
                                        "type": "boolean",
                                        "description": "Whether a delivery tip is accepted."
                                      },
                                      "accepts_pickup_tip": {
                                        "type": "boolean",
                                        "description": "Whether a pickup tip is accepted."
                                      },
                                      "accepts_pickup_note": {
                                        "type": "boolean",
                                        "description": "Whether a pickup note is accepted."
                                      }
                                    },
                                    "type": "object"
                                  }
                                ],
                                "description": ""
                              },
                              "pickup": {
                                "example": {
                                  "time_estimate": {
                                    "minimum": 5,
                                    "maximum": 5
                                  },
                                  "sales_tax_percent": 10.5,
                                  "delivery_fee": {
                                    "delivery_fee_flat": 0,
                                    "delivery_fee_percent": 0,
                                    "delivery_fee_taxable": false
                                  },
                                  "service_fee": {
                                    "service_fee_flat": 0,
                                    "service_fee_percent": 0
                                  },
                                  "small_order_fee": {
                                    "minimum_order_value": 1200,
                                    "small_order_fee_flat": 200,
                                    "small_order_fee_percent": 0
                                  },
                                  "order_minimum": 100,
                                  "threshold_fees": []
                                },
                                "allOf": [
                                  {
                                    "required": [
                                      "accepts_delivery_tip",
                                      "accepts_pickup_note",
                                      "accepts_pickup_tip",
                                      "asap_available",
                                      "courier_quote",
                                      "delivery_fee",
                                      "first_party_quote",
                                      "order_minimum",
                                      "sales_tax_percent",
                                      "service_fee",
                                      "small_order_fee",
                                      "third_party_quote",
                                      "time_estimate"
                                    ],
                                    "properties": {
                                      "time_estimate": {
                                        "description": "",
                                        "required": [
                                          "maximum",
                                          "minimum"
                                        ],
                                        "properties": {
                                          "minimum": {
                                            "type": "integer",
                                            "description": "Lower bound of delivery time estimate (in minutes)"
                                          },
                                          "maximum": {
                                            "type": "integer",
                                            "description": "Upper bound of delivery time estimate (in minutes)"
                                          },
                                          "scheduled": {
                                            "type": "array",
                                            "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                            "items": {
                                              "required": [
                                                "delivery_fee",
                                                "maximum",
                                                "minimum"
                                              ],
                                              "properties": {
                                                "minimum": {
                                                  "type": "integer",
                                                  "description": "Timestamp (seconds since 1970)"
                                                },
                                                "maximum": {
                                                  "type": "integer",
                                                  "description": "Timestamp (seconds since 1970)"
                                                },
                                                "delivery_fee": {
                                                  "description": "",
                                                  "required": [
                                                    "delivery_fee_flat",
                                                    "delivery_fee_percent"
                                                  ],
                                                  "properties": {
                                                    "delivery_fee_flat": {
                                                      "type": "integer",
                                                      "description": "Delivery fee amount in cents"
                                                    },
                                                    "delivery_fee_percent": {
                                                      "type": "number",
                                                      "description": "Delivery fee percentage"
                                                    },
                                                    "delivery_fee_taxable": {
                                                      "type": "boolean",
                                                      "description": "Whether the delivery fee is taxable or not"
                                                    },
                                                    "threshold_fees": {
                                                      "type": "array",
                                                      "description": "Threshold Fees, if they exist",
                                                      "items": {
                                                        "required": [
                                                          "threshold_cents",
                                                          "threshold_fee_cents"
                                                        ],
                                                        "properties": {
                                                          "threshold_cents": {
                                                            "type": "integer",
                                                            "description": "Subtotal that enacts a specific fee"
                                                          },
                                                          "threshold_fee_cents": {
                                                            "type": "integer",
                                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                          }
                                                        },
                                                        "type": "object"
                                                      }
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "sales_tax_percent": {
                                        "type": "integer",
                                        "description": "Sales tax in percentage terms"
                                      },
                                      "delivery_fee": {
                                        "description": "",
                                        "required": [
                                          "delivery_fee_flat",
                                          "delivery_fee_percent"
                                        ],
                                        "properties": {
                                          "delivery_fee_flat": {
                                            "type": "integer",
                                            "description": "Delivery fee amount in cents"
                                          },
                                          "delivery_fee_percent": {
                                            "type": "number",
                                            "description": "Delivery fee percentage"
                                          },
                                          "delivery_fee_taxable": {
                                            "type": "boolean",
                                            "description": "Whether the delivery fee is taxable or not"
                                          },
                                          "threshold_fees": {
                                            "type": "array",
                                            "description": "Threshold Fees, if they exist",
                                            "items": {
                                              "required": [
                                                "threshold_cents",
                                                "threshold_fee_cents"
                                              ],
                                              "properties": {
                                                "threshold_cents": {
                                                  "type": "integer",
                                                  "description": "Subtotal that enacts a specific fee"
                                                },
                                                "threshold_fee_cents": {
                                                  "type": "integer",
                                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "service_fee": {
                                        "description": "",
                                        "required": [
                                          "service_fee_flat",
                                          "service_fee_percent"
                                        ],
                                        "properties": {
                                          "service_fee_flat": {
                                            "type": "integer",
                                            "description": "Service fee amount in cents"
                                          },
                                          "service_fee_percent": {
                                            "type": "number",
                                            "description": "Service fee percentage from 0 to 100"
                                          },
                                          "service_fee_min": {
                                            "type": "integer",
                                            "description": "Minimum service fee amount in cents"
                                          },
                                          "service_fee_max": {
                                            "type": "integer",
                                            "description": "Maximum service fee amount in cents"
                                          },
                                          "service_fee_taxable": {
                                            "type": "boolean",
                                            "description": "Whether the service fee is taxable or not"
                                          },
                                          "threshold_fees": {
                                            "type": "array",
                                            "description": "Threshold Fees, if they exist",
                                            "items": {
                                              "required": [
                                                "threshold_cents",
                                                "threshold_fee_cents"
                                              ],
                                              "properties": {
                                                "threshold_cents": {
                                                  "type": "integer",
                                                  "description": "Subtotal that enacts a specific fee"
                                                },
                                                "threshold_fee_cents": {
                                                  "type": "integer",
                                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "small_order_fee": {
                                        "description": "",
                                        "required": [
                                          "minimum_order_value",
                                          "small_order_fee_flat",
                                          "small_order_fee_percent"
                                        ],
                                        "properties": {
                                          "minimum_order_value": {
                                            "type": "integer",
                                            "description": "Minimum amount to not incur small order fee in cents",
                                            "example": 0
                                          },
                                          "small_order_fee_flat": {
                                            "type": "integer",
                                            "description": "Small order fee amount in cents",
                                            "example": 0
                                          },
                                          "small_order_fee_percent": {
                                            "type": "number",
                                            "description": "Small order fee percentage",
                                            "example": 0
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "order_minimum": {
                                        "type": "integer",
                                        "description": "Minimum order amount in cents"
                                      },
                                      "min_tip": {
                                        "type": "integer",
                                        "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                      },
                                      "asap_available": {
                                        "type": "integer",
                                        "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                      },
                                      "first_party_quote": {
                                        "type": "boolean",
                                        "description": "Whether this quote is provided by the store"
                                      },
                                      "third_party_quote": {
                                        "type": "boolean",
                                        "description": "Whether this quote is provided by a third party service"
                                      },
                                      "courier_quote": {
                                        "type": "boolean",
                                        "description": "Whether this quote is provided by a last-mile delivery service."
                                      },
                                      "accepts_delivery_tip": {
                                        "type": "boolean",
                                        "description": "Whether a delivery tip is accepted."
                                      },
                                      "accepts_pickup_tip": {
                                        "type": "boolean",
                                        "description": "Whether a pickup tip is accepted."
                                      },
                                      "accepts_pickup_note": {
                                        "type": "boolean",
                                        "description": "Whether a pickup note is accepted."
                                      }
                                    },
                                    "type": "object"
                                  }
                                ],
                                "description": ""
                              }
                            },
                            "type": "object"
                          },
                          "quote_types": {
                            "description": "",
                            "properties": {
                              "<quote id>": {
                                "type": "array",
                                "description": "The list of quote types available for this quote id.",
                                "items": {
                                  "type": "string",
                                  "description": "Quote Type",
                                  "example": "pickup",
                                  "enum": [
                                    "pickup",
                                    "delivery"
                                  ]
                                }
                              }
                            },
                            "type": "object"
                          },
                          "offers_first_party_delivery": {
                            "type": "boolean",
                            "description": "Whether or not the store delivers directly.",
                            "example": false
                          },
                          "offers_third_party_delivery": {
                            "type": "boolean",
                            "description": "Whether or not the store delivers with third-party services.",
                            "example": false
                          },
                          "miles": {
                            "type": "number",
                            "description": "Miles from the user to the store",
                            "example": 0.23
                          },
                          "weighted_rating_value": {
                            "type": "number",
                            "description": "The weighted average rating of this store across all the websites it appears on. Floating-point from 1 to 5 (inclusive) or 0.",
                            "example": 4.83
                          },
                          "aggregated_rating_count": {
                            "type": "integer",
                            "description": "Number of total aggregated ratings for this store across all the websites it appears on. Non-negative integer.",
                            "example": 956
                          },
                          "supports_upc_codes": {
                            "type": "boolean",
                            "description": "Whether the store's inventory supports UPC codes.",
                            "example": false
                          }
                        },
                        "type": "object"
                      }
                    },
                    "next_page": {
                      "type": "integer",
                      "description": "The next page number to pass to the `page` parameter for more results",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Search For A Store",
        "operationId": "get_search_store_v3",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The search query. Try leaving this empty to browse what's available!",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "latitude",
            "in": "query",
            "required": true,
            "description": "The latitude of the user.",
            "schema": {
              "type": "number",
              "default": 37.7786357
            }
          },
          {
            "name": "longitude",
            "in": "query",
            "required": true,
            "description": "The longitude of the user. In the US, this value is negative.",
            "schema": {
              "type": "number",
              "default": -122.3918135
            }
          },
          {
            "name": "store_type",
            "in": "query",
            "description": "The type of stores to search from. Can be `restaurant`, `grocery`, or empty string for both.",
            "schema": {
              "type": "string",
              "default": "restaurant"
            }
          },
          {
            "name": "budget",
            "in": "query",
            "description": "The maximum amount, in Dollars, that the user has specified they'd like to spend on this meal. Required for applying a `sort`.",
            "schema": {
              "type": "number",
              "default": 20
            }
          },
          {
            "name": "user_street_num",
            "in": "query",
            "description": "Street number of the user. Required if `fetch_quotes` is `true` and `pickup` is `false`.",
            "schema": {
              "type": "string",
              "default": "188"
            }
          },
          {
            "name": "user_street_name",
            "in": "query",
            "description": "Street name of the user. Required if `fetch_quotes` is `true` and `pickup` is `false`.",
            "schema": {
              "type": "string",
              "default": "King Street"
            }
          },
          {
            "name": "user_city",
            "in": "query",
            "description": "City of the user. Required if `fetch_quotes` is `true` and `pickup` is `false`.",
            "schema": {
              "type": "string",
              "default": "San Francisco"
            }
          },
          {
            "name": "user_state",
            "in": "query",
            "description": "State abbreviation of the user. Required if `fetch_quotes` is `true` and `pickup` is `false`.",
            "schema": {
              "type": "string",
              "default": "CA"
            }
          },
          {
            "name": "user_zipcode",
            "in": "query",
            "description": "Zipcode of the user. Required if `fetch_quotes` is `true` and `pickup` is `false`.",
            "schema": {
              "type": "string",
              "default": "94107"
            }
          },
          {
            "name": "user_country",
            "in": "query",
            "description": "Country of the user. Can be `US` or `CA`. Required if `fetch_quotes` is `true` and `pickup` is `false`.",
            "schema": {
              "type": "string",
              "default": "US"
            }
          },
          {
            "name": "pickup",
            "in": "query",
            "description": "If `true`, filter stores to only those that offer pickup. If `false`, filter to only stores with delivery.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "fetch_quotes",
            "in": "query",
            "description": "Whether to fetch realtime delivery/pickup quotes. Note that this being `true` greatly increases response time. Note that if this is `true` and the `query` is also empty then store hours will not be in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "timeout",
            "in": "query",
            "description": "Timeout to apply if `fetch_quotes = true`, in seconds.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort type. Can be `cheapest`, `fastest`, `rating`, `distance` or the default `relevance`.",
            "schema": {
              "type": "string",
              "default": "relevance"
            }
          },
          {
            "name": "open",
            "in": "query",
            "description": "Whether or not to return only open restaurants.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "dollar_signs",
            "in": "query",
            "description": "ex: `2` (which would signal $$). Cost for the average meal. This can represent `1` ($) for the cheapest stores or `4` ($$$$) for the most expensive stores.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cuisine",
            "in": "query",
            "description": "The cuisine to filter stores by.",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "minimum_rating",
            "in": "query",
            "description": "ex: `4.6`. The minimum rating allowed.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "maximum_miles",
            "in": "query",
            "description": "ex: `1.5`. The maximum distance allowed, in miles.",
            "schema": {
              "type": "number",
              "default": 3
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "ex: `0`. The page to fetch, to retrieve more results. This is returned as `next_page` in the response.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "min_lat",
            "in": "query",
            "description": "The minimum latitude for a \"Search In This Area\".",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_lat",
            "in": "query",
            "description": "The maximum latitude for a \"Search In This Area\".",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "min_lon",
            "in": "query",
            "description": "The minimum longitude for a \"Search In This Area\".",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_lon",
            "in": "query",
            "description": "The maximum longitude for a \"Search In This Area\".",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "search_focus",
            "in": "query",
            "description": "Whether to focus the search on store name or item name. Can be `item`, `store`, or left empty for both.",
            "schema": {
              "type": "string",
              "default": "store"
            }
          },
          {
            "name": "default_quote",
            "in": "query",
            "description": "Whether to return one default `quote` when `fetch_quotes` is `true`.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "autocomplete",
            "in": "query",
            "description": "Whether to autocomplete the query.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "include_utc_hours",
            "in": "query",
            "description": "Whether to include store hours in utc time.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "projections",
            "in": "query",
            "description": "A comma-delimited list of store properties to include in the response, exclusively. Note that the following properties cannot be excluded: `_id`, `name`, `address`, `type`, `is_open`. If `fetch_quotes` is `true`, `quotes` cannot be excluded.\n\nAllowed values: `_id`, `name`, `phone_number`, `address`, `description`, `hours`, `local_hours`, `cuisines`, `food_photos`, `logo_photos`, `store_photos`, `dollar_signs`, `pickup_enabled`, `delivery_enabled`, `is_open`, `offers_first_party_delivery`, `offers_third_party_delivery`, `miles`, `weighted_rating_value`, `aggregated_rating_count`, `supports_upc_codes`, `type`",
            "schema": {
              "type": "string",
              "default": "_id,name,address,type,is_open"
            }
          },
          {
            "name": "use_new_db",
            "in": "query",
            "description": "Whether to perform the store search among a new database. Note that if `use_new_db` is `true`, `use_new_db` must also be `true` when making a request to [](https://docs.mealme.ai/reference/get_inventory_details) or [Get MealMe Store](https://docs.mealme.ai/reference/get_store_lookup_v2) with any store `_id` returned from this request.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Search"
        ]
      }
    },
    "/search/product/v4": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "products"
                  ],
                  "properties": {
                    "products": {
                      "type": "array",
                      "description": "List of products search results.",
                      "example": [
                        {
                          "product_id": "gAAAAABjD4hRaWDKhhS8okjGe6IaTgyAQv0XOlKhc96dV4qi-4pOrDD35WaT6sTUCVM6OrOpZTb2sOSt5QREX1WT_KoAqbZiJ-4ZAAdUV6_95pkhth9eysrJizKARzmY53wE8k9UI3Otp5xaAIU_YS45dxKXgZuRDjnf5vW-1UM4puerH4hqKCajZHK4plg8n_WQitF8om0RCKfghwRxOb6GOgh7bfs4LI0kQ_BGFwFUh6QY8704S1z6G3yoA8p_eL3Ac7QMCRFqTKCHIgYmLFzPsuv091nQ19yQy5tCpW6kRU5Mh9MKGqRiSzO7TgYa-f5MZmsM1-oCX-jLqej3nWeR9hYEyR4y_4T5qgEiE6qJGadIaAgNayPRiLh2nwTSl5JhD7ifd3zg_Rryxwk06wkLsWGrJqkc6i5GDUS-qlUVH4DiCKhYMFw2PtbxdBiRVOBPmycm7Iry7bk6FK2b_xAJZ4ibkX1GrHtNvGF-U-8qNrCrKBDGmmT-Iu6ZrXpypV-TV5SAofkbopOOf9wWHNo1QL2SOSivmtkgUNY5iBs1VvQn9Ngv70gk-skTfjb8aemXDCAuEGf8v5sV54NFm6GQ-kgoDJ-YENIAMNCURSFRXoe3zbNvtZdHZdSan7AA0d88UVIsXbVMVC6JB8wqjKjptoSHuYfbSBNX6EyVQwJDXKjybAkNvmf1XROEU1K48oRmqM6W7ur0PimzbzdpNcIAztNzCYQlGP0_ka7jsy0IsIQpEG18HIT-Cb_JujHGEAdwKzLGAoKRV6oQlDtzPN9udT9AJA9K4MZIC-DNTmdt85iIIKAQJvpFKoi4jm0sZGGqEd5zj1sYvDVApH2p9ji86Lt4-Zfp9i_EWtroORr9pXWbAU7wvPXKyY7IWr8GGHA8ubVJgWZYOGX04EbtGBCRWKT95I-Wr4rv-Tk-eBOv9W5373vetz2V0zXG_PYuSq7bPRmxzuHzV6B6nGr-jvMsAdKgjo0Izi5u3hYtKGt21kgoRoatS4krvoV1mp9fY9rC8XlXImrEYw68GzBl1ud0rB8XKHL4uQ==",
                          "item_name": "Iced Coffee",
                          "image": "https://cdn-img.mealme.ai/ebae3c8ec46eddc4606601fd1b99df9ca83a489e/68747470733a2f2f636e2d67656f312e756265722e636f6d2f696d6167652d70726f632f726573697a652f656174732f666f726d61743d776562702f77696474683d3234302f6865696768743d3139322f7175616c6974793d37302f7372636236343d6148523063484d364c79396b4d584a6862484e765a323571626d637a4e79356a624739315a475a79623235304c6d356c644338334f44526d5a6d45354d6930304d474e6d4c54526b5a6a49744f4468694f4330334f54526c597a46694e4467345a545175616e426c5a773d3d",
                          "description": "Freshly brewed Starbucks® Iced Coffee Blend served chilled and sweetened over ice. An absolutely, seriously, refreshingly lift to any day.",
                          "category": "Cold Coffees",
                          "price": 520,
                          "formatted_price": "$5.20",
                          "upc_codes": [],
                          "unit_size": "16",
                          "unit_of_measurement": "oz",
                          "attributes": [
                            "Lactose-Free"
                          ],
                          "should_fetch_customizations": true,
                          "menu_id": "gAAAAABjD4hRxqPQieZ3Gc8e4wx0prYJ3vESaBWuS4hQI3tjbvlHzqMV8lwllOiZ_MDJzG6HW7Qf_afnFR_onCrrgU8aNLuR9tI-O3O_qYoTeplDs4ZG1J67U41sTwrpV_7AUxS6o7CXOj5gWm8NTK23jZQ7hSfdrq4BZD3qWrvwsmvGoHegs7pOTExzAL0okJIyGPUtmII8S3_YcGbf66P8rwh4d8AmqJuyZR3mmaCfcJvq7xD6hRQAolyeJclgQmL84-Yles_XNFjPxi-Za5EM1V9OjkqaZ0P-V8uuaivXvLR3dcKCHRl8g-mFOnwpAULLn0zsyFn2MkChPGIvLFHucSdn2eUP2nk90SY1diWqE0DB7y90It8CrUQFSL0SLX8TgORqkl6J6ErzhSl8yAx7KSwKC9vPqA==",
                          "grand_total": 1201,
                          "quote": {
                            "time_estimate": {
                              "minimum": 20,
                              "maximum": 35
                            },
                            "sales_tax_percent": 8.02,
                            "order_minimum": 0,
                            "delivery_fee": {
                              "delivery_fee_flat": 199,
                              "delivery_fee_percent": 0,
                              "delivery_fee_taxable": false,
                              "threshold_fees": []
                            },
                            "service_fee": {
                              "service_fee_flat": 345,
                              "service_fee_percent": 18.18,
                              "service_fee_min": 286,
                              "service_fee_max": 900,
                              "service_fee_taxable": false
                            },
                            "small_order_fee": {
                              "minimum_order_value": 0,
                              "small_order_fee_flat": 0,
                              "small_order_fee_percent": 0
                            },
                            "address": {
                              "street_num": "2727",
                              "street_name": "Mariposa St",
                              "city": "San Francisco",
                              "zipcode": "94110",
                              "state": "CA",
                              "country": "US"
                            }
                          },
                          "store": {
                            "_id": "41a7fdd5-b766-5a0a-8562-9006ab6df957",
                            "name": "Starbucks",
                            "phone_number": 14155522649,
                            "address": {
                              "street_addr": "2727 Mariposa St",
                              "city": "San Francisco",
                              "state": "CA",
                              "zipcode": "94110",
                              "country": "US",
                              "street_addr_2": "",
                              "latitude": 37.7628973,
                              "longitude": -122.4104542
                            },
                            "type": "restaurant",
                            "description": "Freshly brewed Starbucks® Iced Coffee Blend served chilled and sweetened over ice. An absolutely, seriously, refreshingly lift to any day.",
                            "local_hours": {
                              "operational": {
                                "Monday": "06:00AM - 05:00PM",
                                "Tuesday": "04:00AM - 09:00PM",
                                "Wednesday": "04:00AM - 09:00PM",
                                "Thursday": "04:00AM - 09:00PM",
                                "Friday": "04:00AM - 09:00PM",
                                "Saturday": "05:00AM - 09:00PM",
                                "Sunday": "05:00AM - 09:00PM"
                              },
                              "delivery": {
                                "Monday": "06:00AM - 05:00PM",
                                "Tuesday": "04:00AM - 09:00PM",
                                "Wednesday": "04:00AM - 09:00PM",
                                "Thursday": "04:00AM - 09:00PM",
                                "Friday": "04:00AM - 09:00PM",
                                "Saturday": "05:00AM - 09:00PM",
                                "Sunday": "05:00AM - 09:00PM"
                              },
                              "pickup": {
                                "Monday": "Closed",
                                "Tuesday": "Closed",
                                "Wednesday": "Closed",
                                "Thursday": "Closed",
                                "Friday": "Closed",
                                "Saturday": "Closed",
                                "Sunday": "Closed"
                              },
                              "dine_in": {
                                "Monday": "06:00AM - 05:00PM",
                                "Tuesday": "04:00AM - 09:00PM",
                                "Wednesday": "04:00AM - 09:00PM",
                                "Thursday": "04:00AM - 09:00PM",
                                "Friday": "04:00AM - 09:00PM",
                                "Saturday": "05:00AM - 09:00PM",
                                "Sunday": "05:00AM - 09:00PM"
                              }
                            },
                            "dollar_signs": 1,
                            "pickup_enabled": false,
                            "delivery_enabled": true,
                            "is_open": true,
                            "offers_first_party_delivery": false,
                            "offers_third_party_delivery": false,
                            "miles": 1.4900872190894556,
                            "weighted_rating_value": 4.7,
                            "aggregated_rating_count": 100
                          }
                        }
                      ],
                      "items": {
                        "required": [
                          "attributes",
                          "category",
                          "description",
                          "formatted_price",
                          "grand_total",
                          "image",
                          "item_name",
                          "menu_id",
                          "original_price",
                          "price",
                          "product_id",
                          "should_fetch_customizations",
                          "store",
                          "unit_of_measurement",
                          "unit_size"
                        ],
                        "properties": {
                          "product_id": {
                            "type": "string",
                            "description": "The MealMe Product ID",
                            "example": "gAAAAABisq4zaclbhj_pOLJMMtsoUeXun4JmapdfWpLqz9fhel7ZMl7tTllTGm5X2it5sIZpV7mj2S0aEfnWNBXBK3jDgZa4p--8vIjQx1lHZZC6S6k1FOqhMfLs297PoA_uJoUZ-E7igoEubdjyNkER0YXjGogmhkdBiFyVVGLVONl_UW0PjHGVv1DzVxSLtNJn7INvtvH4YXi4_cgvIU8AVBMbuoJyOqvDgQRz6AWfnFzfOdF5fJEjesmcJitEcVZ_cvLRN8yourkHE8p08Y6DpsjrGLs23XA-_T-U5u9HMbmjjG9_IME-9Kvq8ZA5WQzS43dpT47pHgCG2KY5MnGxYg-ZYGUUC5im3UACmY0I6yzkR8iNGMf5KovQtTDbGLgKe_a6oHZdh6Y6I_8gi5Zj-1VligOu1rCAlVsb8WPxvs469p3ns72T-1J_t5KE1KHJ1iqgkTTX_G0ec5rREABOzMo0D8NpCaPdTjdb04mxHpvxcarQrQhu8qkz6vRlEWZEk5QOaano99_fJtFIodU6ymSbCFLyucNj3XA8EUyco-fjZfaUvzs="
                          },
                          "item_name": {
                            "type": "string",
                            "description": "The item's name",
                            "example": "Iced Black Coffee"
                          },
                          "image": {
                            "type": "string",
                            "description": "Image of the item, if it exists",
                            "example": "https://cdn-img.mealme.ai/502b9e3a38d1395352faccd16d6daa2f667268d2/68747470733a2f2f64326c6e72356d6861376279636a2e636c6f756466726f6e742e6e65742f70726f647563742d696d6167652f66696c652f6c617267655f64356163336130302d386566392d343461662d396537632d3436383163386632316239662e706e67"
                          },
                          "description": {
                            "type": "string",
                            "description": "The item's description",
                            "example": "Our Classic Beverage!"
                          },
                          "category": {
                            "type": "string",
                            "description": "The item's category",
                            "example": "Cold Coffees"
                          },
                          "price": {
                            "type": "integer",
                            "description": "The item's base price in cents",
                            "example": 500
                          },
                          "formatted_price": {
                            "type": "string",
                            "description": "This product's price formatted in the store's accepted currency",
                            "example": "$5.00"
                          },
                          "original_price": {
                            "type": "integer",
                            "description": "The product's original price. This will only be available if the product is currently on sale.",
                            "example": 700
                          },
                          "upc_codes": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "The list of upc codes for this product",
                              "example": [
                                "1234"
                              ]
                            },
                            "description": ""
                          },
                          "unit_size": {
                            "type": "number",
                            "description": "The unit size for this product",
                            "example": 12
                          },
                          "unit_of_measurement": {
                            "type": "string",
                            "description": "The unit of measurement used to measure the product's size (i.e. oz, lb, L, gal)",
                            "example": "oz"
                          },
                          "should_fetch_customizations": {
                            "type": "boolean",
                            "description": "Whether a request should be made to `/restaurants/details/product` to fetch customizations",
                            "example": true
                          },
                          "attributes": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "The list of dietary preferences for this product.",
                              "example": [
                                "Lactose-Free"
                              ]
                            },
                            "description": ""
                          },
                          "menu_id": {
                            "type": "string",
                            "description": "The product's menu ID",
                            "example": "gAAAAABisq4zjEh2BFV35vfjge4ZVQDyoBFZN-QvjUdpvEqBG5d4YSAwfBZ2oY3yQFdS3K7WyLnxuVPPhd5RlKwMGlQD3YpKCf9gzsBe6YcvzUD2mGoFR7Ucg8DT8OT1MkV_NkBKqPQ2YCFCGhGECsWfSatARHatM8XmN3oeTO7vNRQxoePbZxt0J_WMg7n24-kvMERLbtVpimIARjqu6AwVZ5yjr98TUWzP0rvQYQIUqCKHXPuxqW8NhEi0nPp2B_g10hCAkzPB6yYDvUTf-cp9VM9LXPXn6rtF3JherT-kBHwOE_Zh9ZAzZlqvnxl890Z-InD5h8Rw"
                          },
                          "grand_total": {
                            "type": "integer",
                            "description": "The grand total in cents for this product, including any fees if `fetch_quotes=true`",
                            "example": 500
                          },
                          "quote": {
                            "description": "",
                            "required": [
                              "accepts_delivery_tip",
                              "accepts_pickup_note",
                              "accepts_pickup_tip",
                              "asap_available",
                              "courier_quote",
                              "delivery_fee",
                              "first_party_quote",
                              "order_minimum",
                              "sales_tax_percent",
                              "service_fee",
                              "small_order_fee",
                              "third_party_quote",
                              "time_estimate"
                            ],
                            "properties": {
                              "time_estimate": {
                                "description": "",
                                "required": [
                                  "maximum",
                                  "minimum"
                                ],
                                "properties": {
                                  "minimum": {
                                    "type": "integer",
                                    "description": "Lower bound of delivery time estimate (in minutes)"
                                  },
                                  "maximum": {
                                    "type": "integer",
                                    "description": "Upper bound of delivery time estimate (in minutes)"
                                  },
                                  "scheduled": {
                                    "type": "array",
                                    "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                    "items": {
                                      "required": [
                                        "delivery_fee",
                                        "maximum",
                                        "minimum"
                                      ],
                                      "properties": {
                                        "minimum": {
                                          "type": "integer",
                                          "description": "Timestamp (seconds since 1970)"
                                        },
                                        "maximum": {
                                          "type": "integer",
                                          "description": "Timestamp (seconds since 1970)"
                                        },
                                        "delivery_fee": {
                                          "description": "",
                                          "required": [
                                            "delivery_fee_flat",
                                            "delivery_fee_percent"
                                          ],
                                          "properties": {
                                            "delivery_fee_flat": {
                                              "type": "integer",
                                              "description": "Delivery fee amount in cents"
                                            },
                                            "delivery_fee_percent": {
                                              "type": "number",
                                              "description": "Delivery fee percentage"
                                            },
                                            "delivery_fee_taxable": {
                                              "type": "boolean",
                                              "description": "Whether the delivery fee is taxable or not"
                                            },
                                            "threshold_fees": {
                                              "type": "array",
                                              "description": "Threshold Fees, if they exist",
                                              "items": {
                                                "required": [
                                                  "threshold_cents",
                                                  "threshold_fee_cents"
                                                ],
                                                "properties": {
                                                  "threshold_cents": {
                                                    "type": "integer",
                                                    "description": "Subtotal that enacts a specific fee"
                                                  },
                                                  "threshold_fee_cents": {
                                                    "type": "integer",
                                                    "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "sales_tax_percent": {
                                "type": "integer",
                                "description": "Sales tax in percentage terms"
                              },
                              "delivery_fee": {
                                "description": "",
                                "required": [
                                  "delivery_fee_flat",
                                  "delivery_fee_percent"
                                ],
                                "properties": {
                                  "delivery_fee_flat": {
                                    "type": "integer",
                                    "description": "Delivery fee amount in cents"
                                  },
                                  "delivery_fee_percent": {
                                    "type": "number",
                                    "description": "Delivery fee percentage"
                                  },
                                  "delivery_fee_taxable": {
                                    "type": "boolean",
                                    "description": "Whether the delivery fee is taxable or not"
                                  },
                                  "threshold_fees": {
                                    "type": "array",
                                    "description": "Threshold Fees, if they exist",
                                    "items": {
                                      "required": [
                                        "threshold_cents",
                                        "threshold_fee_cents"
                                      ],
                                      "properties": {
                                        "threshold_cents": {
                                          "type": "integer",
                                          "description": "Subtotal that enacts a specific fee"
                                        },
                                        "threshold_fee_cents": {
                                          "type": "integer",
                                          "description": "Flat delivery fee that will be charged for this threshold_cents"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "service_fee": {
                                "description": "",
                                "required": [
                                  "service_fee_flat",
                                  "service_fee_percent"
                                ],
                                "properties": {
                                  "service_fee_flat": {
                                    "type": "integer",
                                    "description": "Service fee amount in cents"
                                  },
                                  "service_fee_percent": {
                                    "type": "number",
                                    "description": "Service fee percentage from 0 to 100"
                                  },
                                  "service_fee_min": {
                                    "type": "integer",
                                    "description": "Minimum service fee amount in cents"
                                  },
                                  "service_fee_max": {
                                    "type": "integer",
                                    "description": "Maximum service fee amount in cents"
                                  },
                                  "service_fee_taxable": {
                                    "type": "boolean",
                                    "description": "Whether the service fee is taxable or not"
                                  },
                                  "threshold_fees": {
                                    "type": "array",
                                    "description": "Threshold Fees, if they exist",
                                    "items": {
                                      "required": [
                                        "threshold_cents",
                                        "threshold_fee_cents"
                                      ],
                                      "properties": {
                                        "threshold_cents": {
                                          "type": "integer",
                                          "description": "Subtotal that enacts a specific fee"
                                        },
                                        "threshold_fee_cents": {
                                          "type": "integer",
                                          "description": "Flat delivery fee that will be charged for this threshold_cents"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "small_order_fee": {
                                "description": "",
                                "required": [
                                  "minimum_order_value",
                                  "small_order_fee_flat",
                                  "small_order_fee_percent"
                                ],
                                "properties": {
                                  "minimum_order_value": {
                                    "type": "integer",
                                    "description": "Minimum amount to not incur small order fee in cents",
                                    "example": 0
                                  },
                                  "small_order_fee_flat": {
                                    "type": "integer",
                                    "description": "Small order fee amount in cents",
                                    "example": 0
                                  },
                                  "small_order_fee_percent": {
                                    "type": "number",
                                    "description": "Small order fee percentage",
                                    "example": 0
                                  }
                                },
                                "type": "object"
                              },
                              "order_minimum": {
                                "type": "integer",
                                "description": "Minimum order amount in cents"
                              },
                              "min_tip": {
                                "type": "integer",
                                "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                              },
                              "asap_available": {
                                "type": "integer",
                                "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                              },
                              "first_party_quote": {
                                "type": "boolean",
                                "description": "Whether this quote is provided by the store"
                              },
                              "third_party_quote": {
                                "type": "boolean",
                                "description": "Whether this quote is provided by a third party service"
                              },
                              "courier_quote": {
                                "type": "boolean",
                                "description": "Whether this quote is provided by a last-mile delivery service."
                              },
                              "accepts_delivery_tip": {
                                "type": "boolean",
                                "description": "Whether a delivery tip is accepted."
                              },
                              "accepts_pickup_tip": {
                                "type": "boolean",
                                "description": "Whether a pickup tip is accepted."
                              },
                              "accepts_pickup_note": {
                                "type": "boolean",
                                "description": "Whether a pickup note is accepted."
                              }
                            },
                            "type": "object"
                          },
                          "store": {
                            "required": [
                              "_id",
                              "address",
                              "aggregated_rating_count",
                              "cuisines",
                              "delivery_enabled",
                              "description",
                              "dollar_signs",
                              "food_photos",
                              "hours",
                              "is_open",
                              "local_hours",
                              "logo_photos",
                              "miles",
                              "name",
                              "offers_first_party_delivery",
                              "offers_third_party_delivery",
                              "phone_number",
                              "pickup_enabled",
                              "store_photos",
                              "supports_upc_codes",
                              "type",
                              "weighted_rating_value"
                            ],
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "MealMe ID of the store. Can be null in some cases.",
                                "example": "7c0360a5-20f4-470a-b8a0-124a509ad827"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the store",
                                "example": "7-Eleven"
                              },
                              "phone_number": {
                                "type": "integer",
                                "description": "Phone number of the store",
                                "example": 14158638332
                              },
                              "address": {
                                "description": "",
                                "required": [
                                  "city",
                                  "country",
                                  "latitude",
                                  "longitude",
                                  "state",
                                  "street_addr",
                                  "street_addr_2",
                                  "zipcode"
                                ],
                                "properties": {
                                  "street_addr": {
                                    "type": "string",
                                    "description": "Street Address",
                                    "example": "1390 Market Street"
                                  },
                                  "city": {
                                    "type": "string",
                                    "description": "City",
                                    "example": "San Francisco"
                                  },
                                  "state": {
                                    "type": "string",
                                    "description": "State abbreviation",
                                    "example": "CA"
                                  },
                                  "zipcode": {
                                    "type": "string",
                                    "description": "Zipcode",
                                    "example": "94102"
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "Country abbreviation",
                                    "example": "US"
                                  },
                                  "street_addr_2": {
                                    "type": "string",
                                    "description": "Street Address 2",
                                    "example": "Apt. 123"
                                  },
                                  "latitude": {
                                    "type": "number",
                                    "description": "Latitude",
                                    "example": 37.77709
                                  },
                                  "longitude": {
                                    "type": "number",
                                    "description": "Longitude",
                                    "example": -122.4172976
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of the store, either \"grocery\" or \"restaurant\"",
                                "example": "grocery"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of the store",
                                "example": "Local convenience store with snacks, beverages, and more."
                              },
                              "local_hours": {
                                "description": "",
                                "properties": {
                                  "operational": {
                                    "description": "",
                                    "properties": {
                                      "Monday": {
                                        "type": "string",
                                        "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                        "example": "09:30AM - 01:00AM"
                                      },
                                      "Tuesday": {
                                        "type": "string",
                                        "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                        "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                      },
                                      "Wednesday": {
                                        "type": "string",
                                        "description": "If a restaurant is opens at midnight, it will show as above. ",
                                        "example": "12:00AM - 4:00PM"
                                      },
                                      "Thursday": {
                                        "type": "string",
                                        "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                        "example": "8:00AM - 4:00AM"
                                      },
                                      "Friday": {
                                        "type": "string",
                                        "description": "If a restaurant is open until midnight, it will show as above.",
                                        "example": "10:00AM - 12:00AM"
                                      },
                                      "Saturday": {
                                        "type": "string",
                                        "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                        "example": "Closed"
                                      },
                                      "Sunday": {
                                        "type": "string",
                                        "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                        "example": "Open 24 hours"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "delivery": {
                                    "description": "",
                                    "properties": {
                                      "Monday": {
                                        "type": "string",
                                        "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                        "example": "09:30AM - 01:00AM"
                                      },
                                      "Tuesday": {
                                        "type": "string",
                                        "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                        "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                      },
                                      "Wednesday": {
                                        "type": "string",
                                        "description": "If a restaurant is opens at midnight, it will show as above. ",
                                        "example": "12:00AM - 4:00PM"
                                      },
                                      "Thursday": {
                                        "type": "string",
                                        "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                        "example": "8:00AM - 4:00AM"
                                      },
                                      "Friday": {
                                        "type": "string",
                                        "description": "If a restaurant is open until midnight, it will show as above.",
                                        "example": "10:00AM - 12:00AM"
                                      },
                                      "Saturday": {
                                        "type": "string",
                                        "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                        "example": "Closed"
                                      },
                                      "Sunday": {
                                        "type": "string",
                                        "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                        "example": "Open 24 hours"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "pickup": {
                                    "description": "",
                                    "properties": {
                                      "Monday": {
                                        "type": "string",
                                        "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                        "example": "09:30AM - 01:00AM"
                                      },
                                      "Tuesday": {
                                        "type": "string",
                                        "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                        "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                      },
                                      "Wednesday": {
                                        "type": "string",
                                        "description": "If a restaurant is opens at midnight, it will show as above. ",
                                        "example": "12:00AM - 4:00PM"
                                      },
                                      "Thursday": {
                                        "type": "string",
                                        "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                        "example": "8:00AM - 4:00AM"
                                      },
                                      "Friday": {
                                        "type": "string",
                                        "description": "If a restaurant is open until midnight, it will show as above.",
                                        "example": "10:00AM - 12:00AM"
                                      },
                                      "Saturday": {
                                        "type": "string",
                                        "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                        "example": "Closed"
                                      },
                                      "Sunday": {
                                        "type": "string",
                                        "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                        "example": "Open 24 hours"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "dine_in": {
                                    "description": "",
                                    "properties": {
                                      "Monday": {
                                        "type": "string",
                                        "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                        "example": "09:30AM - 01:00AM"
                                      },
                                      "Tuesday": {
                                        "type": "string",
                                        "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                        "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                      },
                                      "Wednesday": {
                                        "type": "string",
                                        "description": "If a restaurant is opens at midnight, it will show as above. ",
                                        "example": "12:00AM - 4:00PM"
                                      },
                                      "Thursday": {
                                        "type": "string",
                                        "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                        "example": "8:00AM - 4:00AM"
                                      },
                                      "Friday": {
                                        "type": "string",
                                        "description": "If a restaurant is open until midnight, it will show as above.",
                                        "example": "10:00AM - 12:00AM"
                                      },
                                      "Saturday": {
                                        "type": "string",
                                        "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                        "example": "Closed"
                                      },
                                      "Sunday": {
                                        "type": "string",
                                        "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                        "example": "Open 24 hours"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "hours": {
                                "description": "A mapping of quote ID(s) to their respective local hours.",
                                "allOf": [
                                  {
                                    "properties": {
                                      "*": {
                                        "description": "",
                                        "properties": {
                                          "operational": {
                                            "description": "",
                                            "properties": {
                                              "Monday": {
                                                "type": "string",
                                                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                                "example": "09:30AM - 01:00AM"
                                              },
                                              "Tuesday": {
                                                "type": "string",
                                                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                              },
                                              "Wednesday": {
                                                "type": "string",
                                                "description": "If a restaurant is opens at midnight, it will show as above. ",
                                                "example": "12:00AM - 4:00PM"
                                              },
                                              "Thursday": {
                                                "type": "string",
                                                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                                "example": "8:00AM - 4:00AM"
                                              },
                                              "Friday": {
                                                "type": "string",
                                                "description": "If a restaurant is open until midnight, it will show as above.",
                                                "example": "10:00AM - 12:00AM"
                                              },
                                              "Saturday": {
                                                "type": "string",
                                                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                                "example": "Closed"
                                              },
                                              "Sunday": {
                                                "type": "string",
                                                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                                "example": "Open 24 hours"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "delivery": {
                                            "description": "",
                                            "properties": {
                                              "Monday": {
                                                "type": "string",
                                                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                                "example": "09:30AM - 01:00AM"
                                              },
                                              "Tuesday": {
                                                "type": "string",
                                                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                              },
                                              "Wednesday": {
                                                "type": "string",
                                                "description": "If a restaurant is opens at midnight, it will show as above. ",
                                                "example": "12:00AM - 4:00PM"
                                              },
                                              "Thursday": {
                                                "type": "string",
                                                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                                "example": "8:00AM - 4:00AM"
                                              },
                                              "Friday": {
                                                "type": "string",
                                                "description": "If a restaurant is open until midnight, it will show as above.",
                                                "example": "10:00AM - 12:00AM"
                                              },
                                              "Saturday": {
                                                "type": "string",
                                                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                                "example": "Closed"
                                              },
                                              "Sunday": {
                                                "type": "string",
                                                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                                "example": "Open 24 hours"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "pickup": {
                                            "description": "",
                                            "properties": {
                                              "Monday": {
                                                "type": "string",
                                                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                                "example": "09:30AM - 01:00AM"
                                              },
                                              "Tuesday": {
                                                "type": "string",
                                                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                              },
                                              "Wednesday": {
                                                "type": "string",
                                                "description": "If a restaurant is opens at midnight, it will show as above. ",
                                                "example": "12:00AM - 4:00PM"
                                              },
                                              "Thursday": {
                                                "type": "string",
                                                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                                "example": "8:00AM - 4:00AM"
                                              },
                                              "Friday": {
                                                "type": "string",
                                                "description": "If a restaurant is open until midnight, it will show as above.",
                                                "example": "10:00AM - 12:00AM"
                                              },
                                              "Saturday": {
                                                "type": "string",
                                                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                                "example": "Closed"
                                              },
                                              "Sunday": {
                                                "type": "string",
                                                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                                "example": "Open 24 hours"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "dine_in": {
                                            "description": "",
                                            "properties": {
                                              "Monday": {
                                                "type": "string",
                                                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                                "example": "09:30AM - 01:00AM"
                                              },
                                              "Tuesday": {
                                                "type": "string",
                                                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                              },
                                              "Wednesday": {
                                                "type": "string",
                                                "description": "If a restaurant is opens at midnight, it will show as above. ",
                                                "example": "12:00AM - 4:00PM"
                                              },
                                              "Thursday": {
                                                "type": "string",
                                                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                                "example": "8:00AM - 4:00AM"
                                              },
                                              "Friday": {
                                                "type": "string",
                                                "description": "If a restaurant is open until midnight, it will show as above.",
                                                "example": "10:00AM - 12:00AM"
                                              },
                                              "Saturday": {
                                                "type": "string",
                                                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                                "example": "Closed"
                                              },
                                              "Sunday": {
                                                "type": "string",
                                                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                                "example": "Open 24 hours"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  }
                                ]
                              },
                              "utc_hours": {
                                "description": "",
                                "properties": {
                                  "operational": {
                                    "description": "",
                                    "required": [
                                      "Friday",
                                      "Monday",
                                      "Saturday",
                                      "Sunday",
                                      "Thursday",
                                      "Tuesday",
                                      "Wednesday"
                                    ],
                                    "properties": {
                                      "Monday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Monday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Tuesday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Tuesday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Wednesday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Wednesday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Thursday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Thursday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Friday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Friday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Saturday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Saturday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Sunday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Sunday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "delivery": {
                                    "description": "",
                                    "required": [
                                      "Friday",
                                      "Monday",
                                      "Saturday",
                                      "Sunday",
                                      "Thursday",
                                      "Tuesday",
                                      "Wednesday"
                                    ],
                                    "properties": {
                                      "Monday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Monday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Tuesday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Tuesday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Wednesday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Wednesday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Thursday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Thursday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Friday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Friday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Saturday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Saturday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Sunday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Sunday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "pickup": {
                                    "description": "",
                                    "required": [
                                      "Friday",
                                      "Monday",
                                      "Saturday",
                                      "Sunday",
                                      "Thursday",
                                      "Tuesday",
                                      "Wednesday"
                                    ],
                                    "properties": {
                                      "Monday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Monday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Tuesday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Tuesday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Wednesday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Wednesday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Thursday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Thursday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Friday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Friday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Saturday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Saturday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Sunday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Sunday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "dine_in": {
                                    "description": "",
                                    "required": [
                                      "Friday",
                                      "Monday",
                                      "Saturday",
                                      "Sunday",
                                      "Thursday",
                                      "Tuesday",
                                      "Wednesday"
                                    ],
                                    "properties": {
                                      "Monday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Monday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Tuesday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Tuesday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Wednesday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Wednesday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Thursday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Thursday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Friday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Friday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Saturday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Saturday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Sunday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Sunday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "cuisines": {
                                "type": "array",
                                "description": "The cuisine types",
                                "example": [
                                  "Snacks",
                                  "Convenience",
                                  "Ice Cream"
                                ],
                                "items": {
                                  "type": "string",
                                  "description": "Cuisine of the store"
                                }
                              },
                              "food_photos": {
                                "type": "array",
                                "description": "Photos of the food at the store",
                                "example": [
                                  "https://cdn-img.mealme.ai/f9ccb38a3d986eeb3f25e5b021d85a73c5d492ba/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f65303762376261372d663036612d346237302d383861302d3466633932656261346236322e6a706567"
                                ],
                                "items": {
                                  "type": "string",
                                  "description": "Photo of the store"
                                }
                              },
                              "logo_photos": {
                                "type": "array",
                                "description": "Photos of the store's logo",
                                "example": [
                                  "https://cdn-img.mealme.ai/9a55bb89e411b1ef87210731a2e7f9fe850cc979/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f76313630313330373339332f656a6e376377756b74766537766e696867616b782e6a7067"
                                ],
                                "items": {
                                  "type": "string",
                                  "description": "Photo of the store's logo"
                                }
                              },
                              "store_photos": {
                                "type": "array",
                                "description": "Photos of the store",
                                "example": [
                                  "https://cdn-img.mealme.ai/7aba9346a8f2e1d8ecf453a86fe3be1b53f98270/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f36393264376333342d626465362d343337612d616435342d3961303633656333666161642e6a706567"
                                ],
                                "items": {
                                  "type": "string",
                                  "description": "Photo of the store"
                                }
                              },
                              "dollar_signs": {
                                "type": "integer",
                                "description": "Estimated cost of the store, like 1 representing \"$\" or 2 representing \"$$\"",
                                "example": 1
                              },
                              "pickup_enabled": {
                                "type": "boolean",
                                "description": "Whether the store supports pickup.",
                                "example": false
                              },
                              "delivery_enabled": {
                                "type": "boolean",
                                "description": "Whether the store supports delivery.",
                                "example": true
                              },
                              "is_open": {
                                "type": "boolean",
                                "description": "Whether the store is open. If null, then there is no data available on whether the store is open.",
                                "example": true
                              },
                              "quotes": {
                                "description": "",
                                "properties": {
                                  "cheapest_delivery": {
                                    "example": {
                                      "time_estimate": {
                                        "minimum": 43,
                                        "maximum": 45
                                      },
                                      "sales_tax_percent": 10.5,
                                      "delivery_fee": {
                                        "delivery_fee_flat": 0,
                                        "delivery_fee_percent": 0,
                                        "delivery_fee_taxable": false
                                      },
                                      "service_fee": {
                                        "service_fee_flat": 0,
                                        "service_fee_percent": 10,
                                        "service_fee_min": 300,
                                        "service_fee_max": 700,
                                        "service_fee_taxable": false
                                      },
                                      "small_order_fee": {
                                        "minimum_order_value": 0,
                                        "small_order_fee_flat": 0,
                                        "small_order_fee_percent": 0
                                      },
                                      "order_minimum": 1500,
                                      "threshold_fees": [],
                                      "asap_available": true
                                    },
                                    "allOf": [
                                      {
                                        "required": [
                                          "accepts_delivery_tip",
                                          "accepts_pickup_note",
                                          "accepts_pickup_tip",
                                          "asap_available",
                                          "courier_quote",
                                          "delivery_fee",
                                          "first_party_quote",
                                          "order_minimum",
                                          "sales_tax_percent",
                                          "service_fee",
                                          "small_order_fee",
                                          "third_party_quote",
                                          "time_estimate"
                                        ],
                                        "properties": {
                                          "time_estimate": {
                                            "description": "",
                                            "required": [
                                              "maximum",
                                              "minimum"
                                            ],
                                            "properties": {
                                              "minimum": {
                                                "type": "integer",
                                                "description": "Lower bound of delivery time estimate (in minutes)"
                                              },
                                              "maximum": {
                                                "type": "integer",
                                                "description": "Upper bound of delivery time estimate (in minutes)"
                                              },
                                              "scheduled": {
                                                "type": "array",
                                                "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                                "items": {
                                                  "required": [
                                                    "delivery_fee",
                                                    "maximum",
                                                    "minimum"
                                                  ],
                                                  "properties": {
                                                    "minimum": {
                                                      "type": "integer",
                                                      "description": "Timestamp (seconds since 1970)"
                                                    },
                                                    "maximum": {
                                                      "type": "integer",
                                                      "description": "Timestamp (seconds since 1970)"
                                                    },
                                                    "delivery_fee": {
                                                      "description": "",
                                                      "required": [
                                                        "delivery_fee_flat",
                                                        "delivery_fee_percent"
                                                      ],
                                                      "properties": {
                                                        "delivery_fee_flat": {
                                                          "type": "integer",
                                                          "description": "Delivery fee amount in cents"
                                                        },
                                                        "delivery_fee_percent": {
                                                          "type": "number",
                                                          "description": "Delivery fee percentage"
                                                        },
                                                        "delivery_fee_taxable": {
                                                          "type": "boolean",
                                                          "description": "Whether the delivery fee is taxable or not"
                                                        },
                                                        "threshold_fees": {
                                                          "type": "array",
                                                          "description": "Threshold Fees, if they exist",
                                                          "items": {
                                                            "required": [
                                                              "threshold_cents",
                                                              "threshold_fee_cents"
                                                            ],
                                                            "properties": {
                                                              "threshold_cents": {
                                                                "type": "integer",
                                                                "description": "Subtotal that enacts a specific fee"
                                                              },
                                                              "threshold_fee_cents": {
                                                                "type": "integer",
                                                                "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                              }
                                                            },
                                                            "type": "object"
                                                          }
                                                        }
                                                      },
                                                      "type": "object"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "sales_tax_percent": {
                                            "type": "integer",
                                            "description": "Sales tax in percentage terms"
                                          },
                                          "delivery_fee": {
                                            "description": "",
                                            "required": [
                                              "delivery_fee_flat",
                                              "delivery_fee_percent"
                                            ],
                                            "properties": {
                                              "delivery_fee_flat": {
                                                "type": "integer",
                                                "description": "Delivery fee amount in cents"
                                              },
                                              "delivery_fee_percent": {
                                                "type": "number",
                                                "description": "Delivery fee percentage"
                                              },
                                              "delivery_fee_taxable": {
                                                "type": "boolean",
                                                "description": "Whether the delivery fee is taxable or not"
                                              },
                                              "threshold_fees": {
                                                "type": "array",
                                                "description": "Threshold Fees, if they exist",
                                                "items": {
                                                  "required": [
                                                    "threshold_cents",
                                                    "threshold_fee_cents"
                                                  ],
                                                  "properties": {
                                                    "threshold_cents": {
                                                      "type": "integer",
                                                      "description": "Subtotal that enacts a specific fee"
                                                    },
                                                    "threshold_fee_cents": {
                                                      "type": "integer",
                                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "service_fee": {
                                            "description": "",
                                            "required": [
                                              "service_fee_flat",
                                              "service_fee_percent"
                                            ],
                                            "properties": {
                                              "service_fee_flat": {
                                                "type": "integer",
                                                "description": "Service fee amount in cents"
                                              },
                                              "service_fee_percent": {
                                                "type": "number",
                                                "description": "Service fee percentage from 0 to 100"
                                              },
                                              "service_fee_min": {
                                                "type": "integer",
                                                "description": "Minimum service fee amount in cents"
                                              },
                                              "service_fee_max": {
                                                "type": "integer",
                                                "description": "Maximum service fee amount in cents"
                                              },
                                              "service_fee_taxable": {
                                                "type": "boolean",
                                                "description": "Whether the service fee is taxable or not"
                                              },
                                              "threshold_fees": {
                                                "type": "array",
                                                "description": "Threshold Fees, if they exist",
                                                "items": {
                                                  "required": [
                                                    "threshold_cents",
                                                    "threshold_fee_cents"
                                                  ],
                                                  "properties": {
                                                    "threshold_cents": {
                                                      "type": "integer",
                                                      "description": "Subtotal that enacts a specific fee"
                                                    },
                                                    "threshold_fee_cents": {
                                                      "type": "integer",
                                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "small_order_fee": {
                                            "description": "",
                                            "required": [
                                              "minimum_order_value",
                                              "small_order_fee_flat",
                                              "small_order_fee_percent"
                                            ],
                                            "properties": {
                                              "minimum_order_value": {
                                                "type": "integer",
                                                "description": "Minimum amount to not incur small order fee in cents",
                                                "example": 0
                                              },
                                              "small_order_fee_flat": {
                                                "type": "integer",
                                                "description": "Small order fee amount in cents",
                                                "example": 0
                                              },
                                              "small_order_fee_percent": {
                                                "type": "number",
                                                "description": "Small order fee percentage",
                                                "example": 0
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "order_minimum": {
                                            "type": "integer",
                                            "description": "Minimum order amount in cents"
                                          },
                                          "min_tip": {
                                            "type": "integer",
                                            "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                          },
                                          "asap_available": {
                                            "type": "integer",
                                            "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                          },
                                          "first_party_quote": {
                                            "type": "boolean",
                                            "description": "Whether this quote is provided by the store"
                                          },
                                          "third_party_quote": {
                                            "type": "boolean",
                                            "description": "Whether this quote is provided by a third party service"
                                          },
                                          "courier_quote": {
                                            "type": "boolean",
                                            "description": "Whether this quote is provided by a last-mile delivery service."
                                          },
                                          "accepts_delivery_tip": {
                                            "type": "boolean",
                                            "description": "Whether a delivery tip is accepted."
                                          },
                                          "accepts_pickup_tip": {
                                            "type": "boolean",
                                            "description": "Whether a pickup tip is accepted."
                                          },
                                          "accepts_pickup_note": {
                                            "type": "boolean",
                                            "description": "Whether a pickup note is accepted."
                                          }
                                        },
                                        "type": "object"
                                      }
                                    ],
                                    "description": ""
                                  },
                                  "fastest_delivery": {
                                    "example": {
                                      "time_estimate": {
                                        "minimum": 15,
                                        "maximum": 30
                                      },
                                      "sales_tax_percent": 10.5,
                                      "delivery_fee": {
                                        "delivery_fee_flat": 199,
                                        "delivery_fee_percent": 0,
                                        "delivery_fee_taxable": false
                                      },
                                      "service_fee": {
                                        "service_fee_flat": 0,
                                        "service_fee_percent": 5
                                      },
                                      "small_order_fee": {
                                        "minimum_order_value": 1200,
                                        "small_order_fee_flat": 200,
                                        "small_order_fee_percent": 0
                                      },
                                      "order_minimum": 0,
                                      "threshold_fees": [
                                        {
                                          "threshold_cents": 10000,
                                          "threshold_fee_cents": 1000
                                        },
                                        {
                                          "threshold_cents": 20000,
                                          "threshold_fee_cents": 2000
                                        }
                                      ]
                                    },
                                    "allOf": [
                                      {
                                        "required": [
                                          "accepts_delivery_tip",
                                          "accepts_pickup_note",
                                          "accepts_pickup_tip",
                                          "asap_available",
                                          "courier_quote",
                                          "delivery_fee",
                                          "first_party_quote",
                                          "order_minimum",
                                          "sales_tax_percent",
                                          "service_fee",
                                          "small_order_fee",
                                          "third_party_quote",
                                          "time_estimate"
                                        ],
                                        "properties": {
                                          "time_estimate": {
                                            "description": "",
                                            "required": [
                                              "maximum",
                                              "minimum"
                                            ],
                                            "properties": {
                                              "minimum": {
                                                "type": "integer",
                                                "description": "Lower bound of delivery time estimate (in minutes)"
                                              },
                                              "maximum": {
                                                "type": "integer",
                                                "description": "Upper bound of delivery time estimate (in minutes)"
                                              },
                                              "scheduled": {
                                                "type": "array",
                                                "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                                "items": {
                                                  "required": [
                                                    "delivery_fee",
                                                    "maximum",
                                                    "minimum"
                                                  ],
                                                  "properties": {
                                                    "minimum": {
                                                      "type": "integer",
                                                      "description": "Timestamp (seconds since 1970)"
                                                    },
                                                    "maximum": {
                                                      "type": "integer",
                                                      "description": "Timestamp (seconds since 1970)"
                                                    },
                                                    "delivery_fee": {
                                                      "description": "",
                                                      "required": [
                                                        "delivery_fee_flat",
                                                        "delivery_fee_percent"
                                                      ],
                                                      "properties": {
                                                        "delivery_fee_flat": {
                                                          "type": "integer",
                                                          "description": "Delivery fee amount in cents"
                                                        },
                                                        "delivery_fee_percent": {
                                                          "type": "number",
                                                          "description": "Delivery fee percentage"
                                                        },
                                                        "delivery_fee_taxable": {
                                                          "type": "boolean",
                                                          "description": "Whether the delivery fee is taxable or not"
                                                        },
                                                        "threshold_fees": {
                                                          "type": "array",
                                                          "description": "Threshold Fees, if they exist",
                                                          "items": {
                                                            "required": [
                                                              "threshold_cents",
                                                              "threshold_fee_cents"
                                                            ],
                                                            "properties": {
                                                              "threshold_cents": {
                                                                "type": "integer",
                                                                "description": "Subtotal that enacts a specific fee"
                                                              },
                                                              "threshold_fee_cents": {
                                                                "type": "integer",
                                                                "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                              }
                                                            },
                                                            "type": "object"
                                                          }
                                                        }
                                                      },
                                                      "type": "object"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "sales_tax_percent": {
                                            "type": "integer",
                                            "description": "Sales tax in percentage terms"
                                          },
                                          "delivery_fee": {
                                            "description": "",
                                            "required": [
                                              "delivery_fee_flat",
                                              "delivery_fee_percent"
                                            ],
                                            "properties": {
                                              "delivery_fee_flat": {
                                                "type": "integer",
                                                "description": "Delivery fee amount in cents"
                                              },
                                              "delivery_fee_percent": {
                                                "type": "number",
                                                "description": "Delivery fee percentage"
                                              },
                                              "delivery_fee_taxable": {
                                                "type": "boolean",
                                                "description": "Whether the delivery fee is taxable or not"
                                              },
                                              "threshold_fees": {
                                                "type": "array",
                                                "description": "Threshold Fees, if they exist",
                                                "items": {
                                                  "required": [
                                                    "threshold_cents",
                                                    "threshold_fee_cents"
                                                  ],
                                                  "properties": {
                                                    "threshold_cents": {
                                                      "type": "integer",
                                                      "description": "Subtotal that enacts a specific fee"
                                                    },
                                                    "threshold_fee_cents": {
                                                      "type": "integer",
                                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "service_fee": {
                                            "description": "",
                                            "required": [
                                              "service_fee_flat",
                                              "service_fee_percent"
                                            ],
                                            "properties": {
                                              "service_fee_flat": {
                                                "type": "integer",
                                                "description": "Service fee amount in cents"
                                              },
                                              "service_fee_percent": {
                                                "type": "number",
                                                "description": "Service fee percentage from 0 to 100"
                                              },
                                              "service_fee_min": {
                                                "type": "integer",
                                                "description": "Minimum service fee amount in cents"
                                              },
                                              "service_fee_max": {
                                                "type": "integer",
                                                "description": "Maximum service fee amount in cents"
                                              },
                                              "service_fee_taxable": {
                                                "type": "boolean",
                                                "description": "Whether the service fee is taxable or not"
                                              },
                                              "threshold_fees": {
                                                "type": "array",
                                                "description": "Threshold Fees, if they exist",
                                                "items": {
                                                  "required": [
                                                    "threshold_cents",
                                                    "threshold_fee_cents"
                                                  ],
                                                  "properties": {
                                                    "threshold_cents": {
                                                      "type": "integer",
                                                      "description": "Subtotal that enacts a specific fee"
                                                    },
                                                    "threshold_fee_cents": {
                                                      "type": "integer",
                                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "small_order_fee": {
                                            "description": "",
                                            "required": [
                                              "minimum_order_value",
                                              "small_order_fee_flat",
                                              "small_order_fee_percent"
                                            ],
                                            "properties": {
                                              "minimum_order_value": {
                                                "type": "integer",
                                                "description": "Minimum amount to not incur small order fee in cents",
                                                "example": 0
                                              },
                                              "small_order_fee_flat": {
                                                "type": "integer",
                                                "description": "Small order fee amount in cents",
                                                "example": 0
                                              },
                                              "small_order_fee_percent": {
                                                "type": "number",
                                                "description": "Small order fee percentage",
                                                "example": 0
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "order_minimum": {
                                            "type": "integer",
                                            "description": "Minimum order amount in cents"
                                          },
                                          "min_tip": {
                                            "type": "integer",
                                            "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                          },
                                          "asap_available": {
                                            "type": "integer",
                                            "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                          },
                                          "first_party_quote": {
                                            "type": "boolean",
                                            "description": "Whether this quote is provided by the store"
                                          },
                                          "third_party_quote": {
                                            "type": "boolean",
                                            "description": "Whether this quote is provided by a third party service"
                                          },
                                          "courier_quote": {
                                            "type": "boolean",
                                            "description": "Whether this quote is provided by a last-mile delivery service."
                                          },
                                          "accepts_delivery_tip": {
                                            "type": "boolean",
                                            "description": "Whether a delivery tip is accepted."
                                          },
                                          "accepts_pickup_tip": {
                                            "type": "boolean",
                                            "description": "Whether a pickup tip is accepted."
                                          },
                                          "accepts_pickup_note": {
                                            "type": "boolean",
                                            "description": "Whether a pickup note is accepted."
                                          }
                                        },
                                        "type": "object"
                                      }
                                    ],
                                    "description": ""
                                  },
                                  "pickup": {
                                    "example": {
                                      "time_estimate": {
                                        "minimum": 5,
                                        "maximum": 5
                                      },
                                      "sales_tax_percent": 10.5,
                                      "delivery_fee": {
                                        "delivery_fee_flat": 0,
                                        "delivery_fee_percent": 0,
                                        "delivery_fee_taxable": false
                                      },
                                      "service_fee": {
                                        "service_fee_flat": 0,
                                        "service_fee_percent": 0
                                      },
                                      "small_order_fee": {
                                        "minimum_order_value": 1200,
                                        "small_order_fee_flat": 200,
                                        "small_order_fee_percent": 0
                                      },
                                      "order_minimum": 100,
                                      "threshold_fees": []
                                    },
                                    "allOf": [
                                      {
                                        "required": [
                                          "accepts_delivery_tip",
                                          "accepts_pickup_note",
                                          "accepts_pickup_tip",
                                          "asap_available",
                                          "courier_quote",
                                          "delivery_fee",
                                          "first_party_quote",
                                          "order_minimum",
                                          "sales_tax_percent",
                                          "service_fee",
                                          "small_order_fee",
                                          "third_party_quote",
                                          "time_estimate"
                                        ],
                                        "properties": {
                                          "time_estimate": {
                                            "description": "",
                                            "required": [
                                              "maximum",
                                              "minimum"
                                            ],
                                            "properties": {
                                              "minimum": {
                                                "type": "integer",
                                                "description": "Lower bound of delivery time estimate (in minutes)"
                                              },
                                              "maximum": {
                                                "type": "integer",
                                                "description": "Upper bound of delivery time estimate (in minutes)"
                                              },
                                              "scheduled": {
                                                "type": "array",
                                                "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                                "items": {
                                                  "required": [
                                                    "delivery_fee",
                                                    "maximum",
                                                    "minimum"
                                                  ],
                                                  "properties": {
                                                    "minimum": {
                                                      "type": "integer",
                                                      "description": "Timestamp (seconds since 1970)"
                                                    },
                                                    "maximum": {
                                                      "type": "integer",
                                                      "description": "Timestamp (seconds since 1970)"
                                                    },
                                                    "delivery_fee": {
                                                      "description": "",
                                                      "required": [
                                                        "delivery_fee_flat",
                                                        "delivery_fee_percent"
                                                      ],
                                                      "properties": {
                                                        "delivery_fee_flat": {
                                                          "type": "integer",
                                                          "description": "Delivery fee amount in cents"
                                                        },
                                                        "delivery_fee_percent": {
                                                          "type": "number",
                                                          "description": "Delivery fee percentage"
                                                        },
                                                        "delivery_fee_taxable": {
                                                          "type": "boolean",
                                                          "description": "Whether the delivery fee is taxable or not"
                                                        },
                                                        "threshold_fees": {
                                                          "type": "array",
                                                          "description": "Threshold Fees, if they exist",
                                                          "items": {
                                                            "required": [
                                                              "threshold_cents",
                                                              "threshold_fee_cents"
                                                            ],
                                                            "properties": {
                                                              "threshold_cents": {
                                                                "type": "integer",
                                                                "description": "Subtotal that enacts a specific fee"
                                                              },
                                                              "threshold_fee_cents": {
                                                                "type": "integer",
                                                                "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                              }
                                                            },
                                                            "type": "object"
                                                          }
                                                        }
                                                      },
                                                      "type": "object"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "sales_tax_percent": {
                                            "type": "integer",
                                            "description": "Sales tax in percentage terms"
                                          },
                                          "delivery_fee": {
                                            "description": "",
                                            "required": [
                                              "delivery_fee_flat",
                                              "delivery_fee_percent"
                                            ],
                                            "properties": {
                                              "delivery_fee_flat": {
                                                "type": "integer",
                                                "description": "Delivery fee amount in cents"
                                              },
                                              "delivery_fee_percent": {
                                                "type": "number",
                                                "description": "Delivery fee percentage"
                                              },
                                              "delivery_fee_taxable": {
                                                "type": "boolean",
                                                "description": "Whether the delivery fee is taxable or not"
                                              },
                                              "threshold_fees": {
                                                "type": "array",
                                                "description": "Threshold Fees, if they exist",
                                                "items": {
                                                  "required": [
                                                    "threshold_cents",
                                                    "threshold_fee_cents"
                                                  ],
                                                  "properties": {
                                                    "threshold_cents": {
                                                      "type": "integer",
                                                      "description": "Subtotal that enacts a specific fee"
                                                    },
                                                    "threshold_fee_cents": {
                                                      "type": "integer",
                                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "service_fee": {
                                            "description": "",
                                            "required": [
                                              "service_fee_flat",
                                              "service_fee_percent"
                                            ],
                                            "properties": {
                                              "service_fee_flat": {
                                                "type": "integer",
                                                "description": "Service fee amount in cents"
                                              },
                                              "service_fee_percent": {
                                                "type": "number",
                                                "description": "Service fee percentage from 0 to 100"
                                              },
                                              "service_fee_min": {
                                                "type": "integer",
                                                "description": "Minimum service fee amount in cents"
                                              },
                                              "service_fee_max": {
                                                "type": "integer",
                                                "description": "Maximum service fee amount in cents"
                                              },
                                              "service_fee_taxable": {
                                                "type": "boolean",
                                                "description": "Whether the service fee is taxable or not"
                                              },
                                              "threshold_fees": {
                                                "type": "array",
                                                "description": "Threshold Fees, if they exist",
                                                "items": {
                                                  "required": [
                                                    "threshold_cents",
                                                    "threshold_fee_cents"
                                                  ],
                                                  "properties": {
                                                    "threshold_cents": {
                                                      "type": "integer",
                                                      "description": "Subtotal that enacts a specific fee"
                                                    },
                                                    "threshold_fee_cents": {
                                                      "type": "integer",
                                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "small_order_fee": {
                                            "description": "",
                                            "required": [
                                              "minimum_order_value",
                                              "small_order_fee_flat",
                                              "small_order_fee_percent"
                                            ],
                                            "properties": {
                                              "minimum_order_value": {
                                                "type": "integer",
                                                "description": "Minimum amount to not incur small order fee in cents",
                                                "example": 0
                                              },
                                              "small_order_fee_flat": {
                                                "type": "integer",
                                                "description": "Small order fee amount in cents",
                                                "example": 0
                                              },
                                              "small_order_fee_percent": {
                                                "type": "number",
                                                "description": "Small order fee percentage",
                                                "example": 0
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "order_minimum": {
                                            "type": "integer",
                                            "description": "Minimum order amount in cents"
                                          },
                                          "min_tip": {
                                            "type": "integer",
                                            "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                          },
                                          "asap_available": {
                                            "type": "integer",
                                            "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                          },
                                          "first_party_quote": {
                                            "type": "boolean",
                                            "description": "Whether this quote is provided by the store"
                                          },
                                          "third_party_quote": {
                                            "type": "boolean",
                                            "description": "Whether this quote is provided by a third party service"
                                          },
                                          "courier_quote": {
                                            "type": "boolean",
                                            "description": "Whether this quote is provided by a last-mile delivery service."
                                          },
                                          "accepts_delivery_tip": {
                                            "type": "boolean",
                                            "description": "Whether a delivery tip is accepted."
                                          },
                                          "accepts_pickup_tip": {
                                            "type": "boolean",
                                            "description": "Whether a pickup tip is accepted."
                                          },
                                          "accepts_pickup_note": {
                                            "type": "boolean",
                                            "description": "Whether a pickup note is accepted."
                                          }
                                        },
                                        "type": "object"
                                      }
                                    ],
                                    "description": ""
                                  }
                                },
                                "type": "object"
                              },
                              "quote_types": {
                                "description": "",
                                "properties": {
                                  "<quote id>": {
                                    "type": "array",
                                    "description": "The list of quote types available for this quote id.",
                                    "items": {
                                      "type": "string",
                                      "description": "Quote Type",
                                      "example": "pickup",
                                      "enum": [
                                        "pickup",
                                        "delivery"
                                      ]
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "offers_first_party_delivery": {
                                "type": "boolean",
                                "description": "Whether or not the store delivers directly.",
                                "example": false
                              },
                              "offers_third_party_delivery": {
                                "type": "boolean",
                                "description": "Whether or not the store delivers with third-party services.",
                                "example": false
                              },
                              "miles": {
                                "type": "number",
                                "description": "Miles from the user to the store",
                                "example": 0.23
                              },
                              "weighted_rating_value": {
                                "type": "number",
                                "description": "The weighted average rating of this store across all the websites it appears on. Floating-point from 1 to 5 (inclusive) or 0.",
                                "example": 4.83
                              },
                              "aggregated_rating_count": {
                                "type": "integer",
                                "description": "Number of total aggregated ratings for this store across all the websites it appears on. Non-negative integer.",
                                "example": 956
                              },
                              "supports_upc_codes": {
                                "type": "boolean",
                                "description": "Whether the store's inventory supports UPC codes.",
                                "example": false
                              }
                            },
                            "type": "object",
                            "description": ""
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Search For A Product",
        "operationId": "get_search_product_v4",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "The product search query. If empty, this endpoint will let you browse products available for ordering nearby.",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "product_id",
            "in": "query",
            "description": "Optional. If supplied, `query` will be ignored, and this endpoint will search for all matching products close to the user's location within the `maximum_miles` radius. A matching product is one that perfectly matches the same brand (i.e. Safeway) and product (i.e. Almond Breeze Unsweetened Original Almondmilk). Note: `product_id` can retrieved from [](https://docs.mealme.ai/reference/get_inventory_details), [Search For A Product](https://docs.mealme.ai/reference/get_search_product_v4), and [Search For A Cart](https://docs.mealme.ai/reference/get_search_cart)",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "store_name",
            "in": "query",
            "description": "The store from which to search for products within.",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "store_type",
            "in": "query",
            "description": "The type of stores to search from. Can be `grocery`, `restaurant`, or empty string for both.",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "menu_id",
            "in": "query",
            "description": "The ID of the menu from which to search for products within. The menu ID is provided by [](https://docs.mealme.ai/reference/get_inventory_details).",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "user_latitude",
            "in": "query",
            "required": true,
            "description": "The latitude of the user.",
            "schema": {
              "type": "number",
              "default": 37.7786357
            }
          },
          {
            "name": "user_longitude",
            "in": "query",
            "required": true,
            "description": "The longitude of the user. In the US, this value is negative.",
            "schema": {
              "type": "number",
              "default": -122.3918135
            }
          },
          {
            "name": "pickup",
            "in": "query",
            "description": "If `true`, filter stores to only those that offer pickup. If `false`, filter to only stores with delivery.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "budget",
            "in": "query",
            "description": "The maximum amount, in Dollars, that the user has specified they'd like to spend on an order. Required for applying a `cheapest` sort.",
            "schema": {
              "type": "number",
              "default": 20
            }
          },
          {
            "name": "upc_codes",
            "in": "query",
            "description": "Example: `66538783,031146250103`. The UPC codes to search for, delimited by comma. Takes precedence over the other ways you can search, `query` and `product_id`.",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "cuisine",
            "in": "query",
            "description": "The cuisine to filter products by.",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "user_street_num",
            "in": "query",
            "description": "Street number of the user. Required if `fetch_quotes` is `true` and `pickup` is `false`.",
            "schema": {
              "type": "string",
              "default": "188"
            }
          },
          {
            "name": "user_street_name",
            "in": "query",
            "description": "Street name of the user. Required if `fetch_quotes` is `true` and `pickup` is `false`.",
            "schema": {
              "type": "string",
              "default": "King Street"
            }
          },
          {
            "name": "user_city",
            "in": "query",
            "description": "City of the user. Required if `fetch_quotes` is `true` and `pickup` is `false`.",
            "schema": {
              "type": "string",
              "default": "San Francisco"
            }
          },
          {
            "name": "user_state",
            "in": "query",
            "description": "State abbreviation of the user. Required if `fetch_quotes` is `true` and `pickup` is `false`.",
            "schema": {
              "type": "string",
              "default": "CA"
            }
          },
          {
            "name": "user_zipcode",
            "in": "query",
            "description": "Zipcode of the user. Required if `fetch_quotes` is `true` and `pickup` is `false`.",
            "schema": {
              "type": "string",
              "default": "94107"
            }
          },
          {
            "name": "user_country",
            "in": "query",
            "description": "Country of the user. Can be `US` or `CA`. Required if `fetch_quotes` is `true` and `pickup` is `false`.",
            "schema": {
              "type": "string",
              "default": "US"
            }
          },
          {
            "name": "fetch_quotes",
            "in": "query",
            "description": "Whether to fetch realtime delivery/pickup quotes. Note that this being `true` greatly increases response time. Note that if this is `true` and the `query` is also empty then store hours will not be in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort type. Can be `cheapest`, `fastest`, `rating`, `distance` or the default `relevance`.",
            "schema": {
              "type": "string",
              "default": "relevance"
            }
          },
          {
            "name": "fuzzy_search",
            "in": "query",
            "description": "Whether to perform a lenient search that returns relevant products that may not exactly match the `query` provided.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "open",
            "in": "query",
            "description": "Whether to return only open restaurants.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "maximum_miles",
            "in": "query",
            "description": "ex: `1.5`. The maximum distance allowed, in miles.",
            "schema": {
              "type": "number",
              "default": 1.5
            }
          },
          {
            "name": "min_lat",
            "in": "query",
            "description": "The minimum latitude for a \"Search In This Area\".",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_lat",
            "in": "query",
            "description": "The maximum latitude for a \"Search In This Area\".",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "min_lon",
            "in": "query",
            "description": "The minimum longitude for a \"Search In This Area\".",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_lon",
            "in": "query",
            "description": "The maximum longitude for a \"Search In This Area\".",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "dollar_signs",
            "in": "query",
            "description": "ex: `2` (which would signal $$). Cost for the average meal. This can represent `1` ($) for the cheapest stores or `4` ($$$$) for the most expensive stores.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "minimum_rating",
            "in": "query",
            "description": "ex: `4.6`. The minimum rating allowed.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sale",
            "in": "query",
            "description": "Whether to search for products that are currently on sale.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "search_in_category",
            "in": "query",
            "description": "The category of the menu to search for products within. The list of a menu's categories are provided by [](https://docs.mealme.ai/reference/get_inventory_details).",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "autocomplete",
            "in": "query",
            "description": "Whether to autocomplete the query.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "ex: 0. The page to fetch",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "use_new_db",
            "in": "query",
            "description": "Whether to perform the product search among a new database. Note that if `use_new_db` is `true`, `use_new_db` must also be `true` when making a request to [](https://docs.mealme.ai/reference/get_inventory_details) or [Get MealMe Store](https://docs.mealme.ai/reference/get_store_lookup_v2) with any store `_id` returned from this request.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Search"
        ]
      }
    },
    "/search/cart": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "carts"
                  ],
                  "properties": {
                    "carts": {
                      "type": "array",
                      "description": "List of resulting carts",
                      "example": [
                        {
                          "products": {
                            "Whole Milk": [
                              {
                                "product_id": "gAAAAABi6Y6X17Oe4mBPObpYx0QjQuHT3PFHXgvy0fL0wLVEnD_zvAIluS1467rnlk05jzxSQ7QiK_yG8VDEhPjdkZhjICapPtrXjQgJ82UTnDrd9US5VKa-qU9bqHlZuhy0bRWNii74t6WKPrKNbSI64B6oeiaiW5S3XZ6PiAf_Lj1jgdybbJ4W6qj2SWZJBK20EclqZ2U4xvVFaQpX7aGciBjDA2vdNgx6rVsXBnPYTdIddbQrSi3NjiG1uc_BrZTBqsvaor4MEM31JZEl6DJsHEn32BzAgeIDq8NbYjwA-CYebohDK5pWs2pHXHLAz0gZ5tfNfxaw7TrxFBMFwjrWBzfmgcIC2FG2KwUq0ojFSEP6fcV9DlIqTAXiyeBub_YimU6xXILb6jI8jYAYTNzBnEcbcdI2OsVD12vbYz9A46fVN5oUbf-h8_NyNPGUAm7feeTJWWarcgifLAWwbKurI0q3qvc_Iupx8jHpUMPOTB1vWGUj9997F9ENSXoTMcuW8XxcxN5qPIBF7-DyMRPjcR8PcqSwaGG9hgRtm0WpRNrmtFlaTTgyn1PiP-fWXs2xYZ8SDB4X4Zi57YlJaGKM77OrBOmZIA==",
                                "item_name": "Lactaid Whole Milk",
                                "image": "https://d2lnr5mha7bycj.cloudfront.net/product-image/file/large_7ed5cc83-e633-4aae-8304-9dffe6dc74bd.jpg",
                                "description": "Fresh whole milk.",
                                "category": "Milk",
                                "price": 639,
                                "formatted_price": "$6.39",
                                "upc_codes": [],
                                "unit_size": 0.5,
                                "unit_of_measurement": "gal",
                                "attributes": [
                                  "Dairy-Free",
                                  "Lactose-Free",
                                  "Soy-Free"
                                ],
                                "should_fetch_customizations": true
                              }
                            ],
                            "Eggs": [
                              {
                                "product_id": "gAAAAABi6Y6X17Oe4mBPObpYx0QjQuHT3PFHXgvy0fL0wLVEnD_zvAIluS1467rnlk05jzxSQ7QiK_yG8VDEhPjdkZhjICapPtrXjQgJ82UTnDrd9US5VKa-qU9bqHlZuhy0bRWNii74t6WKPrKNbSI64B6oeiaiW5S3XZ6PiAf_Lj1jgdybbJ4W6qj2SWZJBK20EclqZ2U4xvVFaQpX7aGciBjDA2vdNgx6rVsXBnPYTdIddbQrSi3NjiG1uc_BrZTBqsvaor4MEM31JZEl6DJsHEn32BzAgeIDq8NbYjwA-CYebohDK5pWs2pHXHLAz0gZ5tfNfxaw7TrxFBMFwjrWBzfmgcIC2FG2KwUq0ojFSEP6fcV9DlIqTAXiyeBub_YimU6xXILb6jI8jYAYTNzBnEcbcdI2OsVD12vbYz9A46fVN5oUbf-h8_NyNPGUAm7feeTJWWarcgifLAWwbKurI0q3qvc_Iupx8jHpUMPOTB1vWGUj9997F9ENSXoTMcuW8XxcxN5qPIBF7-DyMRPjcR8PcqSwaGG9hgRtm0WpRNrmtFlaTTgyn1PiP-fWXs2xYZ8SDB4X4Zi57YlJaGKM77OrBOmZIA==",
                                "item_name": "O Organics Eggs, Brown, Large, Pasture-Raised",
                                "image": "https://d2lnr5mha7bycj.cloudfront.net/product-image/file/large_7ed5cc83-e633-4aae-8304-9dffe6dc74bd.jpg",
                                "description": "Fresh brown dozen eggs",
                                "price": 700,
                                "formatted_price": "$7.00",
                                "upc_codes": [],
                                "unit_size": 1,
                                "unit_of_measurement": "dozen",
                                "attributes": [
                                  "Low Sugar"
                                ],
                                "should_fetch_customizations": true
                              }
                            ]
                          },
                          "menu_id": "gAAAAABi6Y6XqcCj9PQmqFBLgkKDz8gqIsNhcAdSHtOTPKq8QTFrmHuxafS2SvK9PKFF_zv7IT5EV78cRNpvICrbnfnw5Jblq3QBkDojX2fpGksN8TAEpgC9PHtqQyewvq-WcPXpK4Lk0_4G71pwECFtqC0R-KkHoa4GYPLGt34LZYfe2DOE9B4jTWzsBgCjCFTzyX7AUS3Y0ZMWAeKjCEjZ_BHCN45ACSlYOigNxZ5FCBNXRgrwJIHyTENU1z_o_eeFgXqFWdD6ccefU8ZSnwc9lw_JCcO1Y5Etr-j0CExxlGsSNhEZT3AtoEZiCYiqvBXbU7b3V-6S",
                          "grand_total": 2067,
                          "store": {
                            "_id": "754d773d-ea03-46fb-b7dc-8e40f855fd1e",
                            "name": "O Organics Market",
                            "phone_number": 14159746822,
                            "address": {
                              "street_addr": "145 Jackson St, Unit 1",
                              "city": "San Francisco",
                              "state": "CA",
                              "zipcode": "94188",
                              "country": "US",
                              "street_addr_2": "",
                              "latitude": 37.7974,
                              "longitude": -122.4001
                            },
                            "type": "grocery",
                            "description": "Get what you love from O Organics Market - delivered to you.",
                            "local_hours": {
                              "operational": {
                                "Monday": "06:00AM - 11:00PM",
                                "Tuesday": "06:00AM - 11:00PM",
                                "Wednesday": "06:00AM - 11:00PM",
                                "Thursday": "06:00AM - 11:00PM",
                                "Friday": "06:00AM - 11:00PM",
                                "Saturday": "06:00AM - 11:00PM",
                                "Sunday": "06:00AM - 11:00PM"
                              },
                              "delivery": {
                                "Monday": "06:00AM - 11:00PM",
                                "Tuesday": "06:00AM - 11:00PM",
                                "Wednesday": "06:00AM - 11:00PM",
                                "Thursday": "06:00AM - 11:00PM",
                                "Friday": "06:00AM - 11:00PM",
                                "Saturday": "06:00AM - 11:00PM",
                                "Sunday": "06:00AM - 11:00PM"
                              },
                              "pickup": {
                                "Monday": "Closed",
                                "Tuesday": "Closed",
                                "Wednesday": "Closed",
                                "Thursday": "Closed",
                                "Friday": "Closed",
                                "Saturday": "Closed",
                                "Sunday": "Closed"
                              },
                              "dine_in": {
                                "Monday": "Closed",
                                "Tuesday": "Closed",
                                "Wednesday": "Closed",
                                "Thursday": "Closed",
                                "Friday": "Closed",
                                "Saturday": "Closed",
                                "Sunday": "Closed"
                              }
                            },
                            "food_photos": [
                              "https://cdn-img.mealme.ai/e272aeadc9769a74bbfa711ab76428ec3477ae5f/68747470733a2f2f73686f70706572732e696e737461636172742e636f6d2f68616c766f722f77617265686f7573652f6c6f676f2f3431332f35633566353332642d323839362d346639322d613635342d3164666434656563656632652e706e67"
                            ],
                            "logo_photos": [
                              "https://cdn-img.mealme.ai/e272aeadc9769a74bbfa711ab76428ec3477ae5f/68747470733a2f2f73686f70706572732e696e737461636172742e636f6d2f68616c766f722f77617265686f7573652f6c6f676f2f3431332f35633566353332642d323839362d346639322d613635342d3164666434656563656632652e706e67"
                            ],
                            "store_photos": [
                              "https://cdn-img.mealme.ai/e272aeadc9769a74bbfa711ab76428ec3477ae5f/68747470733a2f2f73686f70706572732e696e737461636172742e636f6d2f68616c766f722f77617265686f7573652f6c6f676f2f3431332f35633566353332642d323839362d346639322d613635342d3164666434656563656632652e706e67"
                            ],
                            "dollar_signs": 3,
                            "pickup_enabled": false,
                            "delivery_enabled": true,
                            "is_open": true,
                            "offers_first_party_delivery": false,
                            "offers_third_party_delivery": true,
                            "miles": 1.373605808923405,
                            "weighted_rating_value": 0,
                            "aggregated_rating_count": 0
                          },
                          "quote": {
                            "time_estimate": {
                              "minimum": 57,
                              "maximum": 67,
                              "scheduled": [
                                {
                                  "id": "170352587",
                                  "minimum": 1659470400,
                                  "maximum": 1659477600,
                                  "delivery_fee": {
                                    "delivery_fee_flat": 399,
                                    "delivery_fee_percent": 0,
                                    "delivery_fee_taxable": true
                                  }
                                },
                                {
                                  "id": "1059732021",
                                  "minimum": 1659481200,
                                  "maximum": 1659488400,
                                  "delivery_fee": {
                                    "delivery_fee_flat": 399,
                                    "delivery_fee_percent": 0,
                                    "delivery_fee_taxable": true
                                  }
                                }
                              ]
                            },
                            "sales_tax_percent": 11.65,
                            "order_minimum": 1100,
                            "delivery_fee": {
                              "delivery_fee_flat": 399,
                              "delivery_fee_percent": 0,
                              "delivery_fee_taxable": true,
                              "threshold_fees": []
                            },
                            "service_fee": {
                              "service_fee_flat": 0,
                              "service_fee_percent": 13.64,
                              "service_fee_min": 0,
                              "service_fee_taxable": false
                            },
                            "small_order_fee": {
                              "minimum_order_value": 0,
                              "small_order_fee_flat": 0,
                              "small_order_fee_percent": 0
                            }
                          }
                        }
                      ],
                      "items": {
                        "required": [
                          "grand_total",
                          "menu_id",
                          "products",
                          "store"
                        ],
                        "properties": {
                          "products": {
                            "description": "",
                            "required": [
                              "*"
                            ],
                            "properties": {
                              "*": {
                                "type": "array",
                                "description": "List of product search results for a cart item query, sorted by relevance.",
                                "items": {
                                  "required": [
                                    "attributes",
                                    "category",
                                    "description",
                                    "formatted_price",
                                    "image",
                                    "item_name",
                                    "original_price",
                                    "price",
                                    "product_id",
                                    "unit_of_measurement",
                                    "unit_size",
                                    "upc_codes"
                                  ],
                                  "properties": {
                                    "item_name": {
                                      "type": "string",
                                      "description": "The item's name",
                                      "example": "Lactaid Whole Milk"
                                    },
                                    "product_id": {
                                      "type": "string",
                                      "description": "The MealMe Product ID",
                                      "example": "gAAAAABi4c1c6Pha-EhoxdT36F0eojiGoUYNyt4Skz83vlTpmj4gRLkhlyzEB80wgWDhj_GRvZhVf12yKy17ApsrouqUJJAhfrbe9g5yQcHq6Y5fy59816Z0D71mXJC4_uOXzscvquBooBvavPEvZoz9TnsDIBZJ1zrNJAUDQUCsG0W-dWgmNfxDnx880FmC-e2ueJpMa9udEEyTFnptgQXLR5_enfIWFMacBmKzy72lzOak5WmxJtJ3F0DCJPRlSaEKPl3tYCDx5amzbbR-1xh7Q9tBCxycIEfjtjQRUEHYiGaNeWHwRaNk5Mve6qOC6ZAxAG_1CismNc3Svx5N7ztAfHbGbHGfvcfHIw1KSegbctfXGsDjGofcDM7gMpu-7H0vjgqhVI_Mbg1OJ71rK0mtvE9rQbnP-Tosdn2oM70DM5Y69fuS8eFDqoY1kkCtjZJXXQ8_erqOkjMgXZ7HJCAm3uYGd8P_GZqy2hzfpSBD6MIxlAuTfOVHySiC1_P6I97HAnaYiO90QFWFeAfI2Dx6ZB4p9ZYakdoiexpYLA-uUJ7jB7OT3Qlvuuh4VOmxdHOtgawgwYQe"
                                    },
                                    "image": {
                                      "type": "string",
                                      "description": "Image of the item, if it exists",
                                      "example": "https://cdn-img.mealme.ai/90d01ee227f564e9cfaeb4d5bc7f47260f6337de/68747470733a2f2f732e636f726e657273686f706170702e636f6d2f70726f647563742d696d616765732f323732353130382e6a70673f76657273696f6e49643d4f4e6d71622e55372e646b6d4a30777956706a6f454e54374b6571592e4d7962"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "The item's description",
                                      "example": "Lactaid Whole Milk"
                                    },
                                    "category": {
                                      "type": "string",
                                      "description": "The item's category",
                                      "example": "Milk"
                                    },
                                    "price": {
                                      "type": "integer",
                                      "description": "The item's base price in cents",
                                      "example": 639
                                    },
                                    "formatted_price": {
                                      "type": "string",
                                      "description": "This item's price formatted in the store's accepted currency",
                                      "example": "$6.39"
                                    },
                                    "original_price": {
                                      "type": "integer",
                                      "description": "The product's original price. This will only be available if the product is currently on sale.",
                                      "example": 700
                                    },
                                    "unit_size": {
                                      "type": "number",
                                      "description": "The unit size for this product",
                                      "example": 1
                                    },
                                    "unit_of_measurement": {
                                      "type": "string",
                                      "description": "The unit of measurement used to measure the product's size (i.e. oz, lb, L, gal)",
                                      "example": "gal"
                                    },
                                    "attributes": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "The list of dietary preferences for this product.",
                                        "example": [
                                          "Dairy-Free",
                                          "Lactose-Free",
                                          "Soy-Free"
                                        ]
                                      },
                                      "description": ""
                                    },
                                    "upc_codes": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "The list of upc codes for this product",
                                        "example": [
                                          "12345"
                                        ]
                                      },
                                      "description": ""
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "menu_id": {
                            "type": "string",
                            "description": "The cart's menu ID",
                            "example": "gAAAAABisq4zjEh2BFV35vfjge4ZVQDyoBFZN-QvjUdpvEqBG5d4YSAwfBZ2oY3yQFdS3K7WyLnxuVPPhd5RlKwMGlQD3YpKCf9gzsBe6YcvzUD2mGoFR7Ucg8DT8OT1MkV_NkBKqPQ2YCFCGhGECsWfSatARHatM8XmN3oeTO7vNRQxoePbZxt0J_WMg7n24-kvMERLbtVpimIARjqu6AwVZ5yjr98TUWzP0rvQYQIUqCKHXPuxqW8NhEi0nPp2B_g10hCAkzPB6yYDvUTf-cp9VM9LXPXn6rtF3JherT-kBHwOE_Zh9ZAzZlqvnxl890Z-InD5h8Rw"
                          },
                          "quote": {
                            "example": {
                              "quote_id": "13881",
                              "time_estimate": {
                                "minimum": 15,
                                "maximum": 30,
                                "scheduled": [
                                  {
                                    "minimum": 1634760000,
                                    "maximum": 1634770800,
                                    "delivery_fee": {
                                      "delivery_fee_flat": 199,
                                      "delivery_fee_percent": 0,
                                      "delivery_fee_taxable": true
                                    }
                                  },
                                  {
                                    "minimum": 1634803200,
                                    "maximum": 1634814000,
                                    "delivery_fee": {
                                      "delivery_fee_flat": 199,
                                      "delivery_fee_percent": 0,
                                      "delivery_fee_taxable": true
                                    }
                                  }
                                ]
                              },
                              "sales_tax_percent": 10.5,
                              "delivery_fee": {
                                "delivery_fee_flat": 199,
                                "delivery_fee_percent": 0,
                                "delivery_fee_taxable": false
                              },
                              "service_fee": {
                                "service_fee_flat": 0,
                                "service_fee_percent": 5
                              },
                              "small_order_fee": {
                                "minimum_order_value": 1200,
                                "small_order_fee_flat": 200,
                                "small_order_fee_percent": 0
                              },
                              "order_minimum": 0,
                              "threshold_fees": [
                                {
                                  "threshold_cents": 10000,
                                  "threshold_fee_cents": 1000
                                },
                                {
                                  "threshold_cents": 20000,
                                  "threshold_fee_cents": 2000
                                }
                              ]
                            },
                            "allOf": [
                              {
                                "required": [
                                  "accepts_delivery_tip",
                                  "accepts_pickup_note",
                                  "accepts_pickup_tip",
                                  "asap_available",
                                  "courier_quote",
                                  "delivery_fee",
                                  "first_party_quote",
                                  "order_minimum",
                                  "sales_tax_percent",
                                  "service_fee",
                                  "small_order_fee",
                                  "third_party_quote",
                                  "time_estimate"
                                ],
                                "properties": {
                                  "time_estimate": {
                                    "description": "",
                                    "required": [
                                      "maximum",
                                      "minimum"
                                    ],
                                    "properties": {
                                      "minimum": {
                                        "type": "integer",
                                        "description": "Lower bound of delivery time estimate (in minutes)"
                                      },
                                      "maximum": {
                                        "type": "integer",
                                        "description": "Upper bound of delivery time estimate (in minutes)"
                                      },
                                      "scheduled": {
                                        "type": "array",
                                        "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                        "items": {
                                          "required": [
                                            "delivery_fee",
                                            "maximum",
                                            "minimum"
                                          ],
                                          "properties": {
                                            "minimum": {
                                              "type": "integer",
                                              "description": "Timestamp (seconds since 1970)"
                                            },
                                            "maximum": {
                                              "type": "integer",
                                              "description": "Timestamp (seconds since 1970)"
                                            },
                                            "delivery_fee": {
                                              "description": "",
                                              "required": [
                                                "delivery_fee_flat",
                                                "delivery_fee_percent"
                                              ],
                                              "properties": {
                                                "delivery_fee_flat": {
                                                  "type": "integer",
                                                  "description": "Delivery fee amount in cents"
                                                },
                                                "delivery_fee_percent": {
                                                  "type": "number",
                                                  "description": "Delivery fee percentage"
                                                },
                                                "delivery_fee_taxable": {
                                                  "type": "boolean",
                                                  "description": "Whether the delivery fee is taxable or not"
                                                },
                                                "threshold_fees": {
                                                  "type": "array",
                                                  "description": "Threshold Fees, if they exist",
                                                  "items": {
                                                    "required": [
                                                      "threshold_cents",
                                                      "threshold_fee_cents"
                                                    ],
                                                    "properties": {
                                                      "threshold_cents": {
                                                        "type": "integer",
                                                        "description": "Subtotal that enacts a specific fee"
                                                      },
                                                      "threshold_fee_cents": {
                                                        "type": "integer",
                                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                      }
                                                    },
                                                    "type": "object"
                                                  }
                                                }
                                              },
                                              "type": "object"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "sales_tax_percent": {
                                    "type": "integer",
                                    "description": "Sales tax in percentage terms"
                                  },
                                  "delivery_fee": {
                                    "description": "",
                                    "required": [
                                      "delivery_fee_flat",
                                      "delivery_fee_percent"
                                    ],
                                    "properties": {
                                      "delivery_fee_flat": {
                                        "type": "integer",
                                        "description": "Delivery fee amount in cents"
                                      },
                                      "delivery_fee_percent": {
                                        "type": "number",
                                        "description": "Delivery fee percentage"
                                      },
                                      "delivery_fee_taxable": {
                                        "type": "boolean",
                                        "description": "Whether the delivery fee is taxable or not"
                                      },
                                      "threshold_fees": {
                                        "type": "array",
                                        "description": "Threshold Fees, if they exist",
                                        "items": {
                                          "required": [
                                            "threshold_cents",
                                            "threshold_fee_cents"
                                          ],
                                          "properties": {
                                            "threshold_cents": {
                                              "type": "integer",
                                              "description": "Subtotal that enacts a specific fee"
                                            },
                                            "threshold_fee_cents": {
                                              "type": "integer",
                                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "service_fee": {
                                    "description": "",
                                    "required": [
                                      "service_fee_flat",
                                      "service_fee_percent"
                                    ],
                                    "properties": {
                                      "service_fee_flat": {
                                        "type": "integer",
                                        "description": "Service fee amount in cents"
                                      },
                                      "service_fee_percent": {
                                        "type": "number",
                                        "description": "Service fee percentage from 0 to 100"
                                      },
                                      "service_fee_min": {
                                        "type": "integer",
                                        "description": "Minimum service fee amount in cents"
                                      },
                                      "service_fee_max": {
                                        "type": "integer",
                                        "description": "Maximum service fee amount in cents"
                                      },
                                      "service_fee_taxable": {
                                        "type": "boolean",
                                        "description": "Whether the service fee is taxable or not"
                                      },
                                      "threshold_fees": {
                                        "type": "array",
                                        "description": "Threshold Fees, if they exist",
                                        "items": {
                                          "required": [
                                            "threshold_cents",
                                            "threshold_fee_cents"
                                          ],
                                          "properties": {
                                            "threshold_cents": {
                                              "type": "integer",
                                              "description": "Subtotal that enacts a specific fee"
                                            },
                                            "threshold_fee_cents": {
                                              "type": "integer",
                                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "small_order_fee": {
                                    "description": "",
                                    "required": [
                                      "minimum_order_value",
                                      "small_order_fee_flat",
                                      "small_order_fee_percent"
                                    ],
                                    "properties": {
                                      "minimum_order_value": {
                                        "type": "integer",
                                        "description": "Minimum amount to not incur small order fee in cents",
                                        "example": 0
                                      },
                                      "small_order_fee_flat": {
                                        "type": "integer",
                                        "description": "Small order fee amount in cents",
                                        "example": 0
                                      },
                                      "small_order_fee_percent": {
                                        "type": "number",
                                        "description": "Small order fee percentage",
                                        "example": 0
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "order_minimum": {
                                    "type": "integer",
                                    "description": "Minimum order amount in cents"
                                  },
                                  "min_tip": {
                                    "type": "integer",
                                    "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                  },
                                  "asap_available": {
                                    "type": "integer",
                                    "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                  },
                                  "first_party_quote": {
                                    "type": "boolean",
                                    "description": "Whether this quote is provided by the store"
                                  },
                                  "third_party_quote": {
                                    "type": "boolean",
                                    "description": "Whether this quote is provided by a third party service"
                                  },
                                  "courier_quote": {
                                    "type": "boolean",
                                    "description": "Whether this quote is provided by a last-mile delivery service."
                                  },
                                  "accepts_delivery_tip": {
                                    "type": "boolean",
                                    "description": "Whether a delivery tip is accepted."
                                  },
                                  "accepts_pickup_tip": {
                                    "type": "boolean",
                                    "description": "Whether a pickup tip is accepted."
                                  },
                                  "accepts_pickup_note": {
                                    "type": "boolean",
                                    "description": "Whether a pickup note is accepted."
                                  }
                                },
                                "type": "object"
                              }
                            ],
                            "description": ""
                          },
                          "grand_total": {
                            "type": "integer",
                            "description": "The cart's total price in cents, including any fees if `fetch_quotes=true`. The first product from each product list is used to calculate subtotal.",
                            "example": 500
                          },
                          "store": {
                            "required": [
                              "_id",
                              "address",
                              "aggregated_rating_count",
                              "cuisines",
                              "delivery_enabled",
                              "description",
                              "dollar_signs",
                              "food_photos",
                              "hours",
                              "is_open",
                              "local_hours",
                              "logo_photos",
                              "miles",
                              "name",
                              "offers_first_party_delivery",
                              "offers_third_party_delivery",
                              "phone_number",
                              "pickup_enabled",
                              "store_photos",
                              "supports_upc_codes",
                              "type",
                              "weighted_rating_value"
                            ],
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "MealMe ID of the store. Can be null in some cases.",
                                "example": "7c0360a5-20f4-470a-b8a0-124a509ad827"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the store",
                                "example": "7-Eleven"
                              },
                              "phone_number": {
                                "type": "integer",
                                "description": "Phone number of the store",
                                "example": 14158638332
                              },
                              "address": {
                                "description": "",
                                "required": [
                                  "city",
                                  "country",
                                  "latitude",
                                  "longitude",
                                  "state",
                                  "street_addr",
                                  "street_addr_2",
                                  "zipcode"
                                ],
                                "properties": {
                                  "street_addr": {
                                    "type": "string",
                                    "description": "Street Address",
                                    "example": "1390 Market Street"
                                  },
                                  "city": {
                                    "type": "string",
                                    "description": "City",
                                    "example": "San Francisco"
                                  },
                                  "state": {
                                    "type": "string",
                                    "description": "State abbreviation",
                                    "example": "CA"
                                  },
                                  "zipcode": {
                                    "type": "string",
                                    "description": "Zipcode",
                                    "example": "94102"
                                  },
                                  "country": {
                                    "type": "string",
                                    "description": "Country abbreviation",
                                    "example": "US"
                                  },
                                  "street_addr_2": {
                                    "type": "string",
                                    "description": "Street Address 2",
                                    "example": "Apt. 123"
                                  },
                                  "latitude": {
                                    "type": "number",
                                    "description": "Latitude",
                                    "example": 37.77709
                                  },
                                  "longitude": {
                                    "type": "number",
                                    "description": "Longitude",
                                    "example": -122.4172976
                                  }
                                },
                                "type": "object"
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of the store, either \"grocery\" or \"restaurant\"",
                                "example": "grocery"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of the store",
                                "example": "Local convenience store with snacks, beverages, and more."
                              },
                              "local_hours": {
                                "description": "",
                                "properties": {
                                  "operational": {
                                    "description": "",
                                    "properties": {
                                      "Monday": {
                                        "type": "string",
                                        "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                        "example": "09:30AM - 01:00AM"
                                      },
                                      "Tuesday": {
                                        "type": "string",
                                        "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                        "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                      },
                                      "Wednesday": {
                                        "type": "string",
                                        "description": "If a restaurant is opens at midnight, it will show as above. ",
                                        "example": "12:00AM - 4:00PM"
                                      },
                                      "Thursday": {
                                        "type": "string",
                                        "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                        "example": "8:00AM - 4:00AM"
                                      },
                                      "Friday": {
                                        "type": "string",
                                        "description": "If a restaurant is open until midnight, it will show as above.",
                                        "example": "10:00AM - 12:00AM"
                                      },
                                      "Saturday": {
                                        "type": "string",
                                        "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                        "example": "Closed"
                                      },
                                      "Sunday": {
                                        "type": "string",
                                        "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                        "example": "Open 24 hours"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "delivery": {
                                    "description": "",
                                    "properties": {
                                      "Monday": {
                                        "type": "string",
                                        "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                        "example": "09:30AM - 01:00AM"
                                      },
                                      "Tuesday": {
                                        "type": "string",
                                        "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                        "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                      },
                                      "Wednesday": {
                                        "type": "string",
                                        "description": "If a restaurant is opens at midnight, it will show as above. ",
                                        "example": "12:00AM - 4:00PM"
                                      },
                                      "Thursday": {
                                        "type": "string",
                                        "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                        "example": "8:00AM - 4:00AM"
                                      },
                                      "Friday": {
                                        "type": "string",
                                        "description": "If a restaurant is open until midnight, it will show as above.",
                                        "example": "10:00AM - 12:00AM"
                                      },
                                      "Saturday": {
                                        "type": "string",
                                        "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                        "example": "Closed"
                                      },
                                      "Sunday": {
                                        "type": "string",
                                        "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                        "example": "Open 24 hours"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "pickup": {
                                    "description": "",
                                    "properties": {
                                      "Monday": {
                                        "type": "string",
                                        "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                        "example": "09:30AM - 01:00AM"
                                      },
                                      "Tuesday": {
                                        "type": "string",
                                        "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                        "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                      },
                                      "Wednesday": {
                                        "type": "string",
                                        "description": "If a restaurant is opens at midnight, it will show as above. ",
                                        "example": "12:00AM - 4:00PM"
                                      },
                                      "Thursday": {
                                        "type": "string",
                                        "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                        "example": "8:00AM - 4:00AM"
                                      },
                                      "Friday": {
                                        "type": "string",
                                        "description": "If a restaurant is open until midnight, it will show as above.",
                                        "example": "10:00AM - 12:00AM"
                                      },
                                      "Saturday": {
                                        "type": "string",
                                        "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                        "example": "Closed"
                                      },
                                      "Sunday": {
                                        "type": "string",
                                        "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                        "example": "Open 24 hours"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "dine_in": {
                                    "description": "",
                                    "properties": {
                                      "Monday": {
                                        "type": "string",
                                        "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                        "example": "09:30AM - 01:00AM"
                                      },
                                      "Tuesday": {
                                        "type": "string",
                                        "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                        "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                      },
                                      "Wednesday": {
                                        "type": "string",
                                        "description": "If a restaurant is opens at midnight, it will show as above. ",
                                        "example": "12:00AM - 4:00PM"
                                      },
                                      "Thursday": {
                                        "type": "string",
                                        "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                        "example": "8:00AM - 4:00AM"
                                      },
                                      "Friday": {
                                        "type": "string",
                                        "description": "If a restaurant is open until midnight, it will show as above.",
                                        "example": "10:00AM - 12:00AM"
                                      },
                                      "Saturday": {
                                        "type": "string",
                                        "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                        "example": "Closed"
                                      },
                                      "Sunday": {
                                        "type": "string",
                                        "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                        "example": "Open 24 hours"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "hours": {
                                "description": "A mapping of quote ID(s) to their respective local hours.",
                                "allOf": [
                                  {
                                    "properties": {
                                      "*": {
                                        "description": "",
                                        "properties": {
                                          "operational": {
                                            "description": "",
                                            "properties": {
                                              "Monday": {
                                                "type": "string",
                                                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                                "example": "09:30AM - 01:00AM"
                                              },
                                              "Tuesday": {
                                                "type": "string",
                                                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                              },
                                              "Wednesday": {
                                                "type": "string",
                                                "description": "If a restaurant is opens at midnight, it will show as above. ",
                                                "example": "12:00AM - 4:00PM"
                                              },
                                              "Thursday": {
                                                "type": "string",
                                                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                                "example": "8:00AM - 4:00AM"
                                              },
                                              "Friday": {
                                                "type": "string",
                                                "description": "If a restaurant is open until midnight, it will show as above.",
                                                "example": "10:00AM - 12:00AM"
                                              },
                                              "Saturday": {
                                                "type": "string",
                                                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                                "example": "Closed"
                                              },
                                              "Sunday": {
                                                "type": "string",
                                                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                                "example": "Open 24 hours"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "delivery": {
                                            "description": "",
                                            "properties": {
                                              "Monday": {
                                                "type": "string",
                                                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                                "example": "09:30AM - 01:00AM"
                                              },
                                              "Tuesday": {
                                                "type": "string",
                                                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                              },
                                              "Wednesday": {
                                                "type": "string",
                                                "description": "If a restaurant is opens at midnight, it will show as above. ",
                                                "example": "12:00AM - 4:00PM"
                                              },
                                              "Thursday": {
                                                "type": "string",
                                                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                                "example": "8:00AM - 4:00AM"
                                              },
                                              "Friday": {
                                                "type": "string",
                                                "description": "If a restaurant is open until midnight, it will show as above.",
                                                "example": "10:00AM - 12:00AM"
                                              },
                                              "Saturday": {
                                                "type": "string",
                                                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                                "example": "Closed"
                                              },
                                              "Sunday": {
                                                "type": "string",
                                                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                                "example": "Open 24 hours"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "pickup": {
                                            "description": "",
                                            "properties": {
                                              "Monday": {
                                                "type": "string",
                                                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                                "example": "09:30AM - 01:00AM"
                                              },
                                              "Tuesday": {
                                                "type": "string",
                                                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                              },
                                              "Wednesday": {
                                                "type": "string",
                                                "description": "If a restaurant is opens at midnight, it will show as above. ",
                                                "example": "12:00AM - 4:00PM"
                                              },
                                              "Thursday": {
                                                "type": "string",
                                                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                                "example": "8:00AM - 4:00AM"
                                              },
                                              "Friday": {
                                                "type": "string",
                                                "description": "If a restaurant is open until midnight, it will show as above.",
                                                "example": "10:00AM - 12:00AM"
                                              },
                                              "Saturday": {
                                                "type": "string",
                                                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                                "example": "Closed"
                                              },
                                              "Sunday": {
                                                "type": "string",
                                                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                                "example": "Open 24 hours"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "dine_in": {
                                            "description": "",
                                            "properties": {
                                              "Monday": {
                                                "type": "string",
                                                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                                "example": "09:30AM - 01:00AM"
                                              },
                                              "Tuesday": {
                                                "type": "string",
                                                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                              },
                                              "Wednesday": {
                                                "type": "string",
                                                "description": "If a restaurant is opens at midnight, it will show as above. ",
                                                "example": "12:00AM - 4:00PM"
                                              },
                                              "Thursday": {
                                                "type": "string",
                                                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                                "example": "8:00AM - 4:00AM"
                                              },
                                              "Friday": {
                                                "type": "string",
                                                "description": "If a restaurant is open until midnight, it will show as above.",
                                                "example": "10:00AM - 12:00AM"
                                              },
                                              "Saturday": {
                                                "type": "string",
                                                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                                "example": "Closed"
                                              },
                                              "Sunday": {
                                                "type": "string",
                                                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                                "example": "Open 24 hours"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  }
                                ]
                              },
                              "utc_hours": {
                                "description": "",
                                "properties": {
                                  "operational": {
                                    "description": "",
                                    "required": [
                                      "Friday",
                                      "Monday",
                                      "Saturday",
                                      "Sunday",
                                      "Thursday",
                                      "Tuesday",
                                      "Wednesday"
                                    ],
                                    "properties": {
                                      "Monday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Monday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Tuesday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Tuesday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Wednesday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Wednesday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Thursday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Thursday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Friday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Friday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Saturday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Saturday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Sunday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Sunday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "delivery": {
                                    "description": "",
                                    "required": [
                                      "Friday",
                                      "Monday",
                                      "Saturday",
                                      "Sunday",
                                      "Thursday",
                                      "Tuesday",
                                      "Wednesday"
                                    ],
                                    "properties": {
                                      "Monday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Monday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Tuesday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Tuesday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Wednesday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Wednesday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Thursday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Thursday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Friday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Friday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Saturday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Saturday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Sunday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Sunday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "pickup": {
                                    "description": "",
                                    "required": [
                                      "Friday",
                                      "Monday",
                                      "Saturday",
                                      "Sunday",
                                      "Thursday",
                                      "Tuesday",
                                      "Wednesday"
                                    ],
                                    "properties": {
                                      "Monday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Monday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Tuesday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Tuesday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Wednesday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Wednesday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Thursday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Thursday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Friday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Friday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Saturday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Saturday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Sunday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Sunday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "dine_in": {
                                    "description": "",
                                    "required": [
                                      "Friday",
                                      "Monday",
                                      "Saturday",
                                      "Sunday",
                                      "Thursday",
                                      "Tuesday",
                                      "Wednesday"
                                    ],
                                    "properties": {
                                      "Monday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Monday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Tuesday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Tuesday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Wednesday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Wednesday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Thursday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Thursday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Friday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Friday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Saturday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Saturday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "Sunday": {
                                        "type": "array",
                                        "description": "The list of opening and closing times on Sunday.",
                                        "items": {
                                          "required": [
                                            "closed",
                                            "open"
                                          ],
                                          "properties": {
                                            "open": {
                                              "type": "string",
                                              "description": "The store opening UTC time.",
                                              "example": "01:00:00+00:00"
                                            },
                                            "closed": {
                                              "type": "string",
                                              "description": "The store closing UTC time.",
                                              "example": "17:00:00+00:00"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              },
                              "cuisines": {
                                "type": "array",
                                "description": "The cuisine types",
                                "example": [
                                  "Snacks",
                                  "Convenience",
                                  "Ice Cream"
                                ],
                                "items": {
                                  "type": "string",
                                  "description": "Cuisine of the store"
                                }
                              },
                              "food_photos": {
                                "type": "array",
                                "description": "Photos of the food at the store",
                                "example": [
                                  "https://cdn-img.mealme.ai/f9ccb38a3d986eeb3f25e5b021d85a73c5d492ba/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f65303762376261372d663036612d346237302d383861302d3466633932656261346236322e6a706567"
                                ],
                                "items": {
                                  "type": "string",
                                  "description": "Photo of the store"
                                }
                              },
                              "logo_photos": {
                                "type": "array",
                                "description": "Photos of the store's logo",
                                "example": [
                                  "https://cdn-img.mealme.ai/9a55bb89e411b1ef87210731a2e7f9fe850cc979/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f76313630313330373339332f656a6e376377756b74766537766e696867616b782e6a7067"
                                ],
                                "items": {
                                  "type": "string",
                                  "description": "Photo of the store's logo"
                                }
                              },
                              "store_photos": {
                                "type": "array",
                                "description": "Photos of the store",
                                "example": [
                                  "https://cdn-img.mealme.ai/7aba9346a8f2e1d8ecf453a86fe3be1b53f98270/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f36393264376333342d626465362d343337612d616435342d3961303633656333666161642e6a706567"
                                ],
                                "items": {
                                  "type": "string",
                                  "description": "Photo of the store"
                                }
                              },
                              "dollar_signs": {
                                "type": "integer",
                                "description": "Estimated cost of the store, like 1 representing \"$\" or 2 representing \"$$\"",
                                "example": 1
                              },
                              "pickup_enabled": {
                                "type": "boolean",
                                "description": "Whether the store supports pickup.",
                                "example": false
                              },
                              "delivery_enabled": {
                                "type": "boolean",
                                "description": "Whether the store supports delivery.",
                                "example": true
                              },
                              "is_open": {
                                "type": "boolean",
                                "description": "Whether the store is open. If null, then there is no data available on whether the store is open.",
                                "example": true
                              },
                              "quotes": {
                                "description": "",
                                "properties": {
                                  "cheapest_delivery": {
                                    "example": {
                                      "time_estimate": {
                                        "minimum": 43,
                                        "maximum": 45
                                      },
                                      "sales_tax_percent": 10.5,
                                      "delivery_fee": {
                                        "delivery_fee_flat": 0,
                                        "delivery_fee_percent": 0,
                                        "delivery_fee_taxable": false
                                      },
                                      "service_fee": {
                                        "service_fee_flat": 0,
                                        "service_fee_percent": 10,
                                        "service_fee_min": 300,
                                        "service_fee_max": 700,
                                        "service_fee_taxable": false
                                      },
                                      "small_order_fee": {
                                        "minimum_order_value": 0,
                                        "small_order_fee_flat": 0,
                                        "small_order_fee_percent": 0
                                      },
                                      "order_minimum": 1500,
                                      "threshold_fees": [],
                                      "asap_available": true
                                    },
                                    "allOf": [
                                      {
                                        "required": [
                                          "accepts_delivery_tip",
                                          "accepts_pickup_note",
                                          "accepts_pickup_tip",
                                          "asap_available",
                                          "courier_quote",
                                          "delivery_fee",
                                          "first_party_quote",
                                          "order_minimum",
                                          "sales_tax_percent",
                                          "service_fee",
                                          "small_order_fee",
                                          "third_party_quote",
                                          "time_estimate"
                                        ],
                                        "properties": {
                                          "time_estimate": {
                                            "description": "",
                                            "required": [
                                              "maximum",
                                              "minimum"
                                            ],
                                            "properties": {
                                              "minimum": {
                                                "type": "integer",
                                                "description": "Lower bound of delivery time estimate (in minutes)"
                                              },
                                              "maximum": {
                                                "type": "integer",
                                                "description": "Upper bound of delivery time estimate (in minutes)"
                                              },
                                              "scheduled": {
                                                "type": "array",
                                                "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                                "items": {
                                                  "required": [
                                                    "delivery_fee",
                                                    "maximum",
                                                    "minimum"
                                                  ],
                                                  "properties": {
                                                    "minimum": {
                                                      "type": "integer",
                                                      "description": "Timestamp (seconds since 1970)"
                                                    },
                                                    "maximum": {
                                                      "type": "integer",
                                                      "description": "Timestamp (seconds since 1970)"
                                                    },
                                                    "delivery_fee": {
                                                      "description": "",
                                                      "required": [
                                                        "delivery_fee_flat",
                                                        "delivery_fee_percent"
                                                      ],
                                                      "properties": {
                                                        "delivery_fee_flat": {
                                                          "type": "integer",
                                                          "description": "Delivery fee amount in cents"
                                                        },
                                                        "delivery_fee_percent": {
                                                          "type": "number",
                                                          "description": "Delivery fee percentage"
                                                        },
                                                        "delivery_fee_taxable": {
                                                          "type": "boolean",
                                                          "description": "Whether the delivery fee is taxable or not"
                                                        },
                                                        "threshold_fees": {
                                                          "type": "array",
                                                          "description": "Threshold Fees, if they exist",
                                                          "items": {
                                                            "required": [
                                                              "threshold_cents",
                                                              "threshold_fee_cents"
                                                            ],
                                                            "properties": {
                                                              "threshold_cents": {
                                                                "type": "integer",
                                                                "description": "Subtotal that enacts a specific fee"
                                                              },
                                                              "threshold_fee_cents": {
                                                                "type": "integer",
                                                                "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                              }
                                                            },
                                                            "type": "object"
                                                          }
                                                        }
                                                      },
                                                      "type": "object"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "sales_tax_percent": {
                                            "type": "integer",
                                            "description": "Sales tax in percentage terms"
                                          },
                                          "delivery_fee": {
                                            "description": "",
                                            "required": [
                                              "delivery_fee_flat",
                                              "delivery_fee_percent"
                                            ],
                                            "properties": {
                                              "delivery_fee_flat": {
                                                "type": "integer",
                                                "description": "Delivery fee amount in cents"
                                              },
                                              "delivery_fee_percent": {
                                                "type": "number",
                                                "description": "Delivery fee percentage"
                                              },
                                              "delivery_fee_taxable": {
                                                "type": "boolean",
                                                "description": "Whether the delivery fee is taxable or not"
                                              },
                                              "threshold_fees": {
                                                "type": "array",
                                                "description": "Threshold Fees, if they exist",
                                                "items": {
                                                  "required": [
                                                    "threshold_cents",
                                                    "threshold_fee_cents"
                                                  ],
                                                  "properties": {
                                                    "threshold_cents": {
                                                      "type": "integer",
                                                      "description": "Subtotal that enacts a specific fee"
                                                    },
                                                    "threshold_fee_cents": {
                                                      "type": "integer",
                                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "service_fee": {
                                            "description": "",
                                            "required": [
                                              "service_fee_flat",
                                              "service_fee_percent"
                                            ],
                                            "properties": {
                                              "service_fee_flat": {
                                                "type": "integer",
                                                "description": "Service fee amount in cents"
                                              },
                                              "service_fee_percent": {
                                                "type": "number",
                                                "description": "Service fee percentage from 0 to 100"
                                              },
                                              "service_fee_min": {
                                                "type": "integer",
                                                "description": "Minimum service fee amount in cents"
                                              },
                                              "service_fee_max": {
                                                "type": "integer",
                                                "description": "Maximum service fee amount in cents"
                                              },
                                              "service_fee_taxable": {
                                                "type": "boolean",
                                                "description": "Whether the service fee is taxable or not"
                                              },
                                              "threshold_fees": {
                                                "type": "array",
                                                "description": "Threshold Fees, if they exist",
                                                "items": {
                                                  "required": [
                                                    "threshold_cents",
                                                    "threshold_fee_cents"
                                                  ],
                                                  "properties": {
                                                    "threshold_cents": {
                                                      "type": "integer",
                                                      "description": "Subtotal that enacts a specific fee"
                                                    },
                                                    "threshold_fee_cents": {
                                                      "type": "integer",
                                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "small_order_fee": {
                                            "description": "",
                                            "required": [
                                              "minimum_order_value",
                                              "small_order_fee_flat",
                                              "small_order_fee_percent"
                                            ],
                                            "properties": {
                                              "minimum_order_value": {
                                                "type": "integer",
                                                "description": "Minimum amount to not incur small order fee in cents",
                                                "example": 0
                                              },
                                              "small_order_fee_flat": {
                                                "type": "integer",
                                                "description": "Small order fee amount in cents",
                                                "example": 0
                                              },
                                              "small_order_fee_percent": {
                                                "type": "number",
                                                "description": "Small order fee percentage",
                                                "example": 0
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "order_minimum": {
                                            "type": "integer",
                                            "description": "Minimum order amount in cents"
                                          },
                                          "min_tip": {
                                            "type": "integer",
                                            "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                          },
                                          "asap_available": {
                                            "type": "integer",
                                            "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                          },
                                          "first_party_quote": {
                                            "type": "boolean",
                                            "description": "Whether this quote is provided by the store"
                                          },
                                          "third_party_quote": {
                                            "type": "boolean",
                                            "description": "Whether this quote is provided by a third party service"
                                          },
                                          "courier_quote": {
                                            "type": "boolean",
                                            "description": "Whether this quote is provided by a last-mile delivery service."
                                          },
                                          "accepts_delivery_tip": {
                                            "type": "boolean",
                                            "description": "Whether a delivery tip is accepted."
                                          },
                                          "accepts_pickup_tip": {
                                            "type": "boolean",
                                            "description": "Whether a pickup tip is accepted."
                                          },
                                          "accepts_pickup_note": {
                                            "type": "boolean",
                                            "description": "Whether a pickup note is accepted."
                                          }
                                        },
                                        "type": "object"
                                      }
                                    ],
                                    "description": ""
                                  },
                                  "fastest_delivery": {
                                    "example": {
                                      "time_estimate": {
                                        "minimum": 15,
                                        "maximum": 30
                                      },
                                      "sales_tax_percent": 10.5,
                                      "delivery_fee": {
                                        "delivery_fee_flat": 199,
                                        "delivery_fee_percent": 0,
                                        "delivery_fee_taxable": false
                                      },
                                      "service_fee": {
                                        "service_fee_flat": 0,
                                        "service_fee_percent": 5
                                      },
                                      "small_order_fee": {
                                        "minimum_order_value": 1200,
                                        "small_order_fee_flat": 200,
                                        "small_order_fee_percent": 0
                                      },
                                      "order_minimum": 0,
                                      "threshold_fees": [
                                        {
                                          "threshold_cents": 10000,
                                          "threshold_fee_cents": 1000
                                        },
                                        {
                                          "threshold_cents": 20000,
                                          "threshold_fee_cents": 2000
                                        }
                                      ]
                                    },
                                    "allOf": [
                                      {
                                        "required": [
                                          "accepts_delivery_tip",
                                          "accepts_pickup_note",
                                          "accepts_pickup_tip",
                                          "asap_available",
                                          "courier_quote",
                                          "delivery_fee",
                                          "first_party_quote",
                                          "order_minimum",
                                          "sales_tax_percent",
                                          "service_fee",
                                          "small_order_fee",
                                          "third_party_quote",
                                          "time_estimate"
                                        ],
                                        "properties": {
                                          "time_estimate": {
                                            "description": "",
                                            "required": [
                                              "maximum",
                                              "minimum"
                                            ],
                                            "properties": {
                                              "minimum": {
                                                "type": "integer",
                                                "description": "Lower bound of delivery time estimate (in minutes)"
                                              },
                                              "maximum": {
                                                "type": "integer",
                                                "description": "Upper bound of delivery time estimate (in minutes)"
                                              },
                                              "scheduled": {
                                                "type": "array",
                                                "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                                "items": {
                                                  "required": [
                                                    "delivery_fee",
                                                    "maximum",
                                                    "minimum"
                                                  ],
                                                  "properties": {
                                                    "minimum": {
                                                      "type": "integer",
                                                      "description": "Timestamp (seconds since 1970)"
                                                    },
                                                    "maximum": {
                                                      "type": "integer",
                                                      "description": "Timestamp (seconds since 1970)"
                                                    },
                                                    "delivery_fee": {
                                                      "description": "",
                                                      "required": [
                                                        "delivery_fee_flat",
                                                        "delivery_fee_percent"
                                                      ],
                                                      "properties": {
                                                        "delivery_fee_flat": {
                                                          "type": "integer",
                                                          "description": "Delivery fee amount in cents"
                                                        },
                                                        "delivery_fee_percent": {
                                                          "type": "number",
                                                          "description": "Delivery fee percentage"
                                                        },
                                                        "delivery_fee_taxable": {
                                                          "type": "boolean",
                                                          "description": "Whether the delivery fee is taxable or not"
                                                        },
                                                        "threshold_fees": {
                                                          "type": "array",
                                                          "description": "Threshold Fees, if they exist",
                                                          "items": {
                                                            "required": [
                                                              "threshold_cents",
                                                              "threshold_fee_cents"
                                                            ],
                                                            "properties": {
                                                              "threshold_cents": {
                                                                "type": "integer",
                                                                "description": "Subtotal that enacts a specific fee"
                                                              },
                                                              "threshold_fee_cents": {
                                                                "type": "integer",
                                                                "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                              }
                                                            },
                                                            "type": "object"
                                                          }
                                                        }
                                                      },
                                                      "type": "object"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "sales_tax_percent": {
                                            "type": "integer",
                                            "description": "Sales tax in percentage terms"
                                          },
                                          "delivery_fee": {
                                            "description": "",
                                            "required": [
                                              "delivery_fee_flat",
                                              "delivery_fee_percent"
                                            ],
                                            "properties": {
                                              "delivery_fee_flat": {
                                                "type": "integer",
                                                "description": "Delivery fee amount in cents"
                                              },
                                              "delivery_fee_percent": {
                                                "type": "number",
                                                "description": "Delivery fee percentage"
                                              },
                                              "delivery_fee_taxable": {
                                                "type": "boolean",
                                                "description": "Whether the delivery fee is taxable or not"
                                              },
                                              "threshold_fees": {
                                                "type": "array",
                                                "description": "Threshold Fees, if they exist",
                                                "items": {
                                                  "required": [
                                                    "threshold_cents",
                                                    "threshold_fee_cents"
                                                  ],
                                                  "properties": {
                                                    "threshold_cents": {
                                                      "type": "integer",
                                                      "description": "Subtotal that enacts a specific fee"
                                                    },
                                                    "threshold_fee_cents": {
                                                      "type": "integer",
                                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "service_fee": {
                                            "description": "",
                                            "required": [
                                              "service_fee_flat",
                                              "service_fee_percent"
                                            ],
                                            "properties": {
                                              "service_fee_flat": {
                                                "type": "integer",
                                                "description": "Service fee amount in cents"
                                              },
                                              "service_fee_percent": {
                                                "type": "number",
                                                "description": "Service fee percentage from 0 to 100"
                                              },
                                              "service_fee_min": {
                                                "type": "integer",
                                                "description": "Minimum service fee amount in cents"
                                              },
                                              "service_fee_max": {
                                                "type": "integer",
                                                "description": "Maximum service fee amount in cents"
                                              },
                                              "service_fee_taxable": {
                                                "type": "boolean",
                                                "description": "Whether the service fee is taxable or not"
                                              },
                                              "threshold_fees": {
                                                "type": "array",
                                                "description": "Threshold Fees, if they exist",
                                                "items": {
                                                  "required": [
                                                    "threshold_cents",
                                                    "threshold_fee_cents"
                                                  ],
                                                  "properties": {
                                                    "threshold_cents": {
                                                      "type": "integer",
                                                      "description": "Subtotal that enacts a specific fee"
                                                    },
                                                    "threshold_fee_cents": {
                                                      "type": "integer",
                                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "small_order_fee": {
                                            "description": "",
                                            "required": [
                                              "minimum_order_value",
                                              "small_order_fee_flat",
                                              "small_order_fee_percent"
                                            ],
                                            "properties": {
                                              "minimum_order_value": {
                                                "type": "integer",
                                                "description": "Minimum amount to not incur small order fee in cents",
                                                "example": 0
                                              },
                                              "small_order_fee_flat": {
                                                "type": "integer",
                                                "description": "Small order fee amount in cents",
                                                "example": 0
                                              },
                                              "small_order_fee_percent": {
                                                "type": "number",
                                                "description": "Small order fee percentage",
                                                "example": 0
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "order_minimum": {
                                            "type": "integer",
                                            "description": "Minimum order amount in cents"
                                          },
                                          "min_tip": {
                                            "type": "integer",
                                            "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                          },
                                          "asap_available": {
                                            "type": "integer",
                                            "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                          },
                                          "first_party_quote": {
                                            "type": "boolean",
                                            "description": "Whether this quote is provided by the store"
                                          },
                                          "third_party_quote": {
                                            "type": "boolean",
                                            "description": "Whether this quote is provided by a third party service"
                                          },
                                          "courier_quote": {
                                            "type": "boolean",
                                            "description": "Whether this quote is provided by a last-mile delivery service."
                                          },
                                          "accepts_delivery_tip": {
                                            "type": "boolean",
                                            "description": "Whether a delivery tip is accepted."
                                          },
                                          "accepts_pickup_tip": {
                                            "type": "boolean",
                                            "description": "Whether a pickup tip is accepted."
                                          },
                                          "accepts_pickup_note": {
                                            "type": "boolean",
                                            "description": "Whether a pickup note is accepted."
                                          }
                                        },
                                        "type": "object"
                                      }
                                    ],
                                    "description": ""
                                  },
                                  "pickup": {
                                    "example": {
                                      "time_estimate": {
                                        "minimum": 5,
                                        "maximum": 5
                                      },
                                      "sales_tax_percent": 10.5,
                                      "delivery_fee": {
                                        "delivery_fee_flat": 0,
                                        "delivery_fee_percent": 0,
                                        "delivery_fee_taxable": false
                                      },
                                      "service_fee": {
                                        "service_fee_flat": 0,
                                        "service_fee_percent": 0
                                      },
                                      "small_order_fee": {
                                        "minimum_order_value": 1200,
                                        "small_order_fee_flat": 200,
                                        "small_order_fee_percent": 0
                                      },
                                      "order_minimum": 100,
                                      "threshold_fees": []
                                    },
                                    "allOf": [
                                      {
                                        "required": [
                                          "accepts_delivery_tip",
                                          "accepts_pickup_note",
                                          "accepts_pickup_tip",
                                          "asap_available",
                                          "courier_quote",
                                          "delivery_fee",
                                          "first_party_quote",
                                          "order_minimum",
                                          "sales_tax_percent",
                                          "service_fee",
                                          "small_order_fee",
                                          "third_party_quote",
                                          "time_estimate"
                                        ],
                                        "properties": {
                                          "time_estimate": {
                                            "description": "",
                                            "required": [
                                              "maximum",
                                              "minimum"
                                            ],
                                            "properties": {
                                              "minimum": {
                                                "type": "integer",
                                                "description": "Lower bound of delivery time estimate (in minutes)"
                                              },
                                              "maximum": {
                                                "type": "integer",
                                                "description": "Upper bound of delivery time estimate (in minutes)"
                                              },
                                              "scheduled": {
                                                "type": "array",
                                                "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                                "items": {
                                                  "required": [
                                                    "delivery_fee",
                                                    "maximum",
                                                    "minimum"
                                                  ],
                                                  "properties": {
                                                    "minimum": {
                                                      "type": "integer",
                                                      "description": "Timestamp (seconds since 1970)"
                                                    },
                                                    "maximum": {
                                                      "type": "integer",
                                                      "description": "Timestamp (seconds since 1970)"
                                                    },
                                                    "delivery_fee": {
                                                      "description": "",
                                                      "required": [
                                                        "delivery_fee_flat",
                                                        "delivery_fee_percent"
                                                      ],
                                                      "properties": {
                                                        "delivery_fee_flat": {
                                                          "type": "integer",
                                                          "description": "Delivery fee amount in cents"
                                                        },
                                                        "delivery_fee_percent": {
                                                          "type": "number",
                                                          "description": "Delivery fee percentage"
                                                        },
                                                        "delivery_fee_taxable": {
                                                          "type": "boolean",
                                                          "description": "Whether the delivery fee is taxable or not"
                                                        },
                                                        "threshold_fees": {
                                                          "type": "array",
                                                          "description": "Threshold Fees, if they exist",
                                                          "items": {
                                                            "required": [
                                                              "threshold_cents",
                                                              "threshold_fee_cents"
                                                            ],
                                                            "properties": {
                                                              "threshold_cents": {
                                                                "type": "integer",
                                                                "description": "Subtotal that enacts a specific fee"
                                                              },
                                                              "threshold_fee_cents": {
                                                                "type": "integer",
                                                                "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                              }
                                                            },
                                                            "type": "object"
                                                          }
                                                        }
                                                      },
                                                      "type": "object"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "sales_tax_percent": {
                                            "type": "integer",
                                            "description": "Sales tax in percentage terms"
                                          },
                                          "delivery_fee": {
                                            "description": "",
                                            "required": [
                                              "delivery_fee_flat",
                                              "delivery_fee_percent"
                                            ],
                                            "properties": {
                                              "delivery_fee_flat": {
                                                "type": "integer",
                                                "description": "Delivery fee amount in cents"
                                              },
                                              "delivery_fee_percent": {
                                                "type": "number",
                                                "description": "Delivery fee percentage"
                                              },
                                              "delivery_fee_taxable": {
                                                "type": "boolean",
                                                "description": "Whether the delivery fee is taxable or not"
                                              },
                                              "threshold_fees": {
                                                "type": "array",
                                                "description": "Threshold Fees, if they exist",
                                                "items": {
                                                  "required": [
                                                    "threshold_cents",
                                                    "threshold_fee_cents"
                                                  ],
                                                  "properties": {
                                                    "threshold_cents": {
                                                      "type": "integer",
                                                      "description": "Subtotal that enacts a specific fee"
                                                    },
                                                    "threshold_fee_cents": {
                                                      "type": "integer",
                                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "service_fee": {
                                            "description": "",
                                            "required": [
                                              "service_fee_flat",
                                              "service_fee_percent"
                                            ],
                                            "properties": {
                                              "service_fee_flat": {
                                                "type": "integer",
                                                "description": "Service fee amount in cents"
                                              },
                                              "service_fee_percent": {
                                                "type": "number",
                                                "description": "Service fee percentage from 0 to 100"
                                              },
                                              "service_fee_min": {
                                                "type": "integer",
                                                "description": "Minimum service fee amount in cents"
                                              },
                                              "service_fee_max": {
                                                "type": "integer",
                                                "description": "Maximum service fee amount in cents"
                                              },
                                              "service_fee_taxable": {
                                                "type": "boolean",
                                                "description": "Whether the service fee is taxable or not"
                                              },
                                              "threshold_fees": {
                                                "type": "array",
                                                "description": "Threshold Fees, if they exist",
                                                "items": {
                                                  "required": [
                                                    "threshold_cents",
                                                    "threshold_fee_cents"
                                                  ],
                                                  "properties": {
                                                    "threshold_cents": {
                                                      "type": "integer",
                                                      "description": "Subtotal that enacts a specific fee"
                                                    },
                                                    "threshold_fee_cents": {
                                                      "type": "integer",
                                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "small_order_fee": {
                                            "description": "",
                                            "required": [
                                              "minimum_order_value",
                                              "small_order_fee_flat",
                                              "small_order_fee_percent"
                                            ],
                                            "properties": {
                                              "minimum_order_value": {
                                                "type": "integer",
                                                "description": "Minimum amount to not incur small order fee in cents",
                                                "example": 0
                                              },
                                              "small_order_fee_flat": {
                                                "type": "integer",
                                                "description": "Small order fee amount in cents",
                                                "example": 0
                                              },
                                              "small_order_fee_percent": {
                                                "type": "number",
                                                "description": "Small order fee percentage",
                                                "example": 0
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "order_minimum": {
                                            "type": "integer",
                                            "description": "Minimum order amount in cents"
                                          },
                                          "min_tip": {
                                            "type": "integer",
                                            "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                          },
                                          "asap_available": {
                                            "type": "integer",
                                            "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                          },
                                          "first_party_quote": {
                                            "type": "boolean",
                                            "description": "Whether this quote is provided by the store"
                                          },
                                          "third_party_quote": {
                                            "type": "boolean",
                                            "description": "Whether this quote is provided by a third party service"
                                          },
                                          "courier_quote": {
                                            "type": "boolean",
                                            "description": "Whether this quote is provided by a last-mile delivery service."
                                          },
                                          "accepts_delivery_tip": {
                                            "type": "boolean",
                                            "description": "Whether a delivery tip is accepted."
                                          },
                                          "accepts_pickup_tip": {
                                            "type": "boolean",
                                            "description": "Whether a pickup tip is accepted."
                                          },
                                          "accepts_pickup_note": {
                                            "type": "boolean",
                                            "description": "Whether a pickup note is accepted."
                                          }
                                        },
                                        "type": "object"
                                      }
                                    ],
                                    "description": ""
                                  }
                                },
                                "type": "object"
                              },
                              "quote_types": {
                                "description": "",
                                "properties": {
                                  "<quote id>": {
                                    "type": "array",
                                    "description": "The list of quote types available for this quote id.",
                                    "items": {
                                      "type": "string",
                                      "description": "Quote Type",
                                      "example": "pickup",
                                      "enum": [
                                        "pickup",
                                        "delivery"
                                      ]
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "offers_first_party_delivery": {
                                "type": "boolean",
                                "description": "Whether or not the store delivers directly.",
                                "example": false
                              },
                              "offers_third_party_delivery": {
                                "type": "boolean",
                                "description": "Whether or not the store delivers with third-party services.",
                                "example": false
                              },
                              "miles": {
                                "type": "number",
                                "description": "Miles from the user to the store",
                                "example": 0.23
                              },
                              "weighted_rating_value": {
                                "type": "number",
                                "description": "The weighted average rating of this store across all the websites it appears on. Floating-point from 1 to 5 (inclusive) or 0.",
                                "example": 4.83
                              },
                              "aggregated_rating_count": {
                                "type": "integer",
                                "description": "Number of total aggregated ratings for this store across all the websites it appears on. Non-negative integer.",
                                "example": 956
                              },
                              "supports_upc_codes": {
                                "type": "boolean",
                                "description": "Whether the store's inventory supports UPC codes.",
                                "example": false
                              }
                            },
                            "type": "object",
                            "description": ""
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Search For A Cart",
        "operationId": "get_search_cart",
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "description": "A dictionary mapping each product query to the desired quantity",
            "schema": {
              "type": "string",
              "default": "{\"Whole Milk\": 1, \"Eggs\": 1}"
            }
          },
          {
            "name": "store_name",
            "in": "query",
            "description": "The store from which to search for carts within.",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "store_type",
            "in": "query",
            "description": "The type of stores to search from. Can be `grocery`, `restaurant`, or empty string for both.",
            "schema": {
              "type": "string",
              "default": "grocery"
            }
          },
          {
            "name": "menu_id",
            "in": "query",
            "description": "The ID of the menu from which to search for carts within. The menu ID is provided by [](https://docs.mealme.ai/reference/get_inventory_details).",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "user_latitude",
            "in": "query",
            "required": true,
            "description": "The latitude of the user.",
            "schema": {
              "type": "number",
              "default": 37.7786357
            }
          },
          {
            "name": "user_longitude",
            "in": "query",
            "required": true,
            "description": "The longitude of the user. In the US, this value is negative.",
            "schema": {
              "type": "number",
              "default": -122.3918135
            }
          },
          {
            "name": "pickup",
            "in": "query",
            "description": "If `true`, filter stores to only those that offer pickup. If `false`, filter to only stores with delivery.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "budget",
            "in": "query",
            "description": "The maximum amount, in Dollars, that the user has specified they'd like to spend on an order. Required for applying a `cheapest` sort.",
            "schema": {
              "type": "number",
              "default": 20
            }
          },
          {
            "name": "cuisine",
            "in": "query",
            "description": "The cuisine to filter products by.",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "user_street_num",
            "in": "query",
            "description": "Street number of the user. Required if `fetch_quotes` is `true` and `pickup` is `false`.",
            "schema": {
              "type": "string",
              "default": "188"
            }
          },
          {
            "name": "user_street_name",
            "in": "query",
            "description": "Street name of the user. Required if `fetch_quotes` is `true` and `pickup` is `false`.",
            "schema": {
              "type": "string",
              "default": "King Street"
            }
          },
          {
            "name": "user_city",
            "in": "query",
            "description": "City of the user. Required if `fetch_quotes` is `true` and `pickup` is `false`.",
            "schema": {
              "type": "string",
              "default": "San Francisco"
            }
          },
          {
            "name": "user_state",
            "in": "query",
            "description": "State abbreviation of the user. Required if `fetch_quotes` is `true` and `pickup` is `false`.",
            "schema": {
              "type": "string",
              "default": "CA"
            }
          },
          {
            "name": "user_zipcode",
            "in": "query",
            "description": "Zipcode of the user. Required if `fetch_quotes` is `true` and `pickup` is `false`.",
            "schema": {
              "type": "string",
              "default": "94107"
            }
          },
          {
            "name": "user_country",
            "in": "query",
            "description": "Country of the user. Can be `US` or `CA`. Required if `fetch_quotes` is `true` and `pickup` is `false`.",
            "schema": {
              "type": "string",
              "default": "US"
            }
          },
          {
            "name": "fetch_quotes",
            "in": "query",
            "description": "Whether to fetch realtime delivery/pickup quotes. Note that this being `true` greatly increases response time. Note that if this is `true` and the `query` is also empty then store hours will not be in the response.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The sort type. Can be `cheapest`, `fastest`, `rating`, `distance` or the default `relevance`.",
            "schema": {
              "type": "string",
              "default": "relevance"
            }
          },
          {
            "name": "full_carts_only",
            "in": "query",
            "description": "Whether to strictly return complete carts which contain product(s) for every product query in `query`.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "split_cart",
            "in": "query",
            "description": "Whether to return carts split across multiple stores.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "fuzzy_search",
            "in": "query",
            "description": "Whether to perform a lenient search that returns relevant products that may not exactly match the `query`.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "open",
            "in": "query",
            "description": "Whether or not to return only open restaurants.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "maximum_miles",
            "in": "query",
            "description": "ex: `1.5`. The maximum distance allowed, in miles.",
            "schema": {
              "type": "number",
              "default": 1.5
            }
          },
          {
            "name": "dollar_signs",
            "in": "query",
            "description": "ex: `2` (which would signal $$). Cost for the average meal. This can represent `1` ($) for the cheapest stores or `4` ($$$$) for the most expensive stores.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "minimum_rating",
            "in": "query",
            "description": "ex: `4.6`. The minimum rating allowed.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sale",
            "in": "query",
            "description": "Whether to search for products that are currently on sale.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "search_in_category",
            "in": "query",
            "description": "The category of the menu to search for carts within. The list of a menu's categories are provided by [](https://docs.mealme.ai/reference/get_inventory_details).",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "autocomplete",
            "in": "query",
            "description": "Whether to autocomplete the query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "use_new_db",
            "in": "query",
            "description": "Whether to perform the cart search among a new database. Note that if `use_new_db` is `true`, `use_new_db` must also be `true` when making a request to [](https://docs.mealme.ai/reference/get_inventory_details) or [Get MealMe Store](https://docs.mealme.ai/reference/get_store_lookup_v2) with any store `_id` returned from this request.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Search"
        ]
      }
    },
    "/details/inventory/v3": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "categories",
                    "menu_id"
                  ],
                  "properties": {
                    "quote": {
                      "description": "The quote for the given store",
                      "example": {
                        "time_estimate": {
                          "minimum": 43,
                          "maximum": 45
                        },
                        "sales_tax_percent": 10.5,
                        "delivery_fee": {
                          "delivery_fee_flat": 0,
                          "delivery_fee_percent": 0,
                          "delivery_fee_taxable": false
                        },
                        "service_fee": {
                          "service_fee_flat": 0,
                          "service_fee_percent": 10,
                          "service_fee_min": 300,
                          "service_fee_max": 700,
                          "service_fee_taxable": false
                        },
                        "small_order_fee": {
                          "minimum_order_value": 0,
                          "small_order_fee_flat": 0,
                          "small_order_fee_percent": 0
                        },
                        "order_minimum": 1500,
                        "threshold_fees": [],
                        "asap_available": true
                      },
                      "allOf": [
                        {
                          "required": [
                            "accepts_delivery_tip",
                            "accepts_pickup_note",
                            "accepts_pickup_tip",
                            "asap_available",
                            "courier_quote",
                            "delivery_fee",
                            "first_party_quote",
                            "order_minimum",
                            "sales_tax_percent",
                            "service_fee",
                            "small_order_fee",
                            "third_party_quote",
                            "time_estimate"
                          ],
                          "properties": {
                            "time_estimate": {
                              "description": "",
                              "required": [
                                "maximum",
                                "minimum"
                              ],
                              "properties": {
                                "minimum": {
                                  "type": "integer",
                                  "description": "Lower bound of delivery time estimate (in minutes)"
                                },
                                "maximum": {
                                  "type": "integer",
                                  "description": "Upper bound of delivery time estimate (in minutes)"
                                },
                                "scheduled": {
                                  "type": "array",
                                  "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                  "items": {
                                    "required": [
                                      "delivery_fee",
                                      "maximum",
                                      "minimum"
                                    ],
                                    "properties": {
                                      "minimum": {
                                        "type": "integer",
                                        "description": "Timestamp (seconds since 1970)"
                                      },
                                      "maximum": {
                                        "type": "integer",
                                        "description": "Timestamp (seconds since 1970)"
                                      },
                                      "delivery_fee": {
                                        "description": "",
                                        "required": [
                                          "delivery_fee_flat",
                                          "delivery_fee_percent"
                                        ],
                                        "properties": {
                                          "delivery_fee_flat": {
                                            "type": "integer",
                                            "description": "Delivery fee amount in cents"
                                          },
                                          "delivery_fee_percent": {
                                            "type": "number",
                                            "description": "Delivery fee percentage"
                                          },
                                          "delivery_fee_taxable": {
                                            "type": "boolean",
                                            "description": "Whether the delivery fee is taxable or not"
                                          },
                                          "threshold_fees": {
                                            "type": "array",
                                            "description": "Threshold Fees, if they exist",
                                            "items": {
                                              "required": [
                                                "threshold_cents",
                                                "threshold_fee_cents"
                                              ],
                                              "properties": {
                                                "threshold_cents": {
                                                  "type": "integer",
                                                  "description": "Subtotal that enacts a specific fee"
                                                },
                                                "threshold_fee_cents": {
                                                  "type": "integer",
                                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "sales_tax_percent": {
                              "type": "integer",
                              "description": "Sales tax in percentage terms"
                            },
                            "delivery_fee": {
                              "description": "",
                              "required": [
                                "delivery_fee_flat",
                                "delivery_fee_percent"
                              ],
                              "properties": {
                                "delivery_fee_flat": {
                                  "type": "integer",
                                  "description": "Delivery fee amount in cents"
                                },
                                "delivery_fee_percent": {
                                  "type": "number",
                                  "description": "Delivery fee percentage"
                                },
                                "delivery_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether the delivery fee is taxable or not"
                                },
                                "threshold_fees": {
                                  "type": "array",
                                  "description": "Threshold Fees, if they exist",
                                  "items": {
                                    "required": [
                                      "threshold_cents",
                                      "threshold_fee_cents"
                                    ],
                                    "properties": {
                                      "threshold_cents": {
                                        "type": "integer",
                                        "description": "Subtotal that enacts a specific fee"
                                      },
                                      "threshold_fee_cents": {
                                        "type": "integer",
                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "service_fee": {
                              "description": "",
                              "required": [
                                "service_fee_flat",
                                "service_fee_percent"
                              ],
                              "properties": {
                                "service_fee_flat": {
                                  "type": "integer",
                                  "description": "Service fee amount in cents"
                                },
                                "service_fee_percent": {
                                  "type": "number",
                                  "description": "Service fee percentage from 0 to 100"
                                },
                                "service_fee_min": {
                                  "type": "integer",
                                  "description": "Minimum service fee amount in cents"
                                },
                                "service_fee_max": {
                                  "type": "integer",
                                  "description": "Maximum service fee amount in cents"
                                },
                                "service_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether the service fee is taxable or not"
                                },
                                "threshold_fees": {
                                  "type": "array",
                                  "description": "Threshold Fees, if they exist",
                                  "items": {
                                    "required": [
                                      "threshold_cents",
                                      "threshold_fee_cents"
                                    ],
                                    "properties": {
                                      "threshold_cents": {
                                        "type": "integer",
                                        "description": "Subtotal that enacts a specific fee"
                                      },
                                      "threshold_fee_cents": {
                                        "type": "integer",
                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "small_order_fee": {
                              "description": "",
                              "required": [
                                "minimum_order_value",
                                "small_order_fee_flat",
                                "small_order_fee_percent"
                              ],
                              "properties": {
                                "minimum_order_value": {
                                  "type": "integer",
                                  "description": "Minimum amount to not incur small order fee in cents",
                                  "example": 0
                                },
                                "small_order_fee_flat": {
                                  "type": "integer",
                                  "description": "Small order fee amount in cents",
                                  "example": 0
                                },
                                "small_order_fee_percent": {
                                  "type": "number",
                                  "description": "Small order fee percentage",
                                  "example": 0
                                }
                              },
                              "type": "object"
                            },
                            "order_minimum": {
                              "type": "integer",
                              "description": "Minimum order amount in cents"
                            },
                            "min_tip": {
                              "type": "integer",
                              "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                            },
                            "asap_available": {
                              "type": "integer",
                              "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                            },
                            "first_party_quote": {
                              "type": "boolean",
                              "description": "Whether this quote is provided by the store"
                            },
                            "third_party_quote": {
                              "type": "boolean",
                              "description": "Whether this quote is provided by a third party service"
                            },
                            "courier_quote": {
                              "type": "boolean",
                              "description": "Whether this quote is provided by a last-mile delivery service."
                            },
                            "accepts_delivery_tip": {
                              "type": "boolean",
                              "description": "Whether a delivery tip is accepted."
                            },
                            "accepts_pickup_tip": {
                              "type": "boolean",
                              "description": "Whether a pickup tip is accepted."
                            },
                            "accepts_pickup_note": {
                              "type": "boolean",
                              "description": "Whether a pickup note is accepted."
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "menu_id": {
                      "type": "string",
                      "description": "The MealMe Menu ID",
                      "example": "gAAAAABihzvxA4pMVWefTSN3GFOL7b3CYG5yPIRnGUNnEu8oD72y0SiHcDkoloajAINb3pI4Kw6R5qR694t5fCXc8_DnvoB0_BeBlCZ_zJmelaZ4jWfcnF5ySNVt29YYobrl5PMQduRavTxgb5E2IvgZakNNbAzP9rYwyApbdaZ6n_RCwz09IlN2iOoqUlnNVL1WF8dDwqI6-XWMiA3XDI_A-k4QyVPZ0yMZDP_LuRzEnQOYIQ23CCyHHz2imKBP4ySAMNgeIKv0ynYV-a1ZfMC_MjFVyK_OHCds8KmiAM8RHZWt6-wR2m2xqMhKOg8NFWU5gWzYFVL_"
                    },
                    "categories": {
                      "type": "array",
                      "description": "List of inventory categories",
                      "example": [
                        {
                          "name": "All-American Slam®",
                          "price": 2420,
                          "qty_available": null,
                          "unit_size": null,
                          "unit_of_measurement": "",
                          "description": "Three scrambled eggs with Cheddar cheese, bacon strips, sausage links, hash browns and choice of bread.",
                          "image": "https://cdn-img.mealme.ai/5888abdc30b2d3883b7c75df474b6c54bdf0f5c3/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f63613166616631312d343566632d346438352d623164622d3665653664636633383038332e6a706567",
                          "formatted_price": "$24.20",
                          "product_id": "gAAAAABjK9szYobuv6iW65lgAmIKh_k-gjXi-oKzrcqka5vYOVLq3IWsQtW9VpRJyXC-SbyvwlNt6zZWcxtw04v4E-09MgEley3TlTuAhfKuYBWzW35wk6x7VHfr8vGv3v99CY7fr3gKJfwOBHbb-oCNaHEmV1f5lLzXOV8nN2O6pLSj4Fw8kYMK06X1asT3n6kchHv4qoo3PhMtHmlkVmAgjr3qVDpkeknJMzbA3CrC1E3IWpQhNYCZtHZKUIfdoG6c1hr1dURQVdsEduOmYEpT8DkI16StynnXrPuAhI78Ub2aM0Y--u41H3H45T-SB-N9Pc8JTXZmsudk3-H9ODuuhqvy4eyICUz-O8BsR4IaKoem2UvGBMNFUPQ5SWdfZOwu-eXiXMrOPD3OPJ2HqkmbjCG9sbL2qwRNYoDu-qqQHHhE1c-1HO-vyfjTPa9Aud7Ga5bAmMggapUZjIxjLGSKX6wM7mhdEWfa6cZ0eVlpq4M7vVm9SGtmm-UnGCpRXTuXA2-U-oI3DlMiN_VR7Hwzh_CN3k22tsALWsNLB2Sn6BiBSSCQtJ4p5yHyCaHFMWhXAPNFxBeLz3OzttCXx5GfZBhLXH_oP5VYfVqURmnB-xelfAwG6hBaq4mUoweH9cBF8HhN-Mom3FoBA0JtScAyaEXWBbBThuzHk4XnskJFhtX2diENMLZ21cXfp0h6biEwOPIY1_fDuM_m9zEUU0xVSOHSC5raizsDsH53cNhjTctuHNXZGyap3MgEyziChflrJoyvB1AZOsIKOp_58Hfacjf1sgGyuMg_OXkU7Bm-TuGY56fPE5Cwitmiv0rMV30ifzeWBxx6mD0BYWNC5EiM8fD1Gx4yYF06p2-p4leBYxR-FHTeoZDlxDmkaCR69POiWLekM7ZeMqb4o9Cb3Qy4URIbymH5MBcbOLPcR8aXX40T3Ksr1pvos6AH183D0cRjCDcBO5HhFHBG6NXpPEi38uFpyiNjuSLlYinxAm6wHofhS2bPCWOoPiCVfed_tHSGfapkzFqYckaIb9MBRTRYQBDm7_S6PzzJoxJSdVGlq9WwqHyWfqNHHUd9OsNClP_-ZmGSctFPlr5oqc6c8SklsoboQHemOynglmcMhb9ne1vphiVcLddALtvKeUhgdohLn-rOxrpnRCs4cttkI4bKtz6uWatSLLA4dSKGM3m0_9PftAuh7YLWZtMPVPwT4fqLAI5D2lIrnGs-nqVjVJ1FFyNY57U5wYOTOViHST7be3PGqV9kMP9em6vcl0OaMQlq_J0SiWvDnQNFyUO0YIKA-uBLQfykKfHfaWATpLdbj-WwIHS9R8BNuja0Yab9EQCppINPubJOO1ILHvuwckU4jKgWL0hgA_8ZYvYkrACvS4_pGAolXeROrr8PmyqQDzUd_0UWO3Amh71I1XK1xT5VRFacTa2sYuLstSK5C9ulo9kKPnSArDOi1TXrvMH8FJzRVFc9-D6T-p85mPfQcFMu6r8lrxk2YlUPNZDHvDACJijOC4c4nVT1xqR7ODxqrQVf5e40NTo7eQm94vOIJCAIy7UicJv42DQoVPRmovmB0PP_NspNkT744AXSHkLka8BuXbwEGuy_EmhhfrZK8hXjaUtTgvJVFy4ji94epJmjk_h3W7yaoW7ySEQBpgnooDN47qU-M3_F-sQGUk4i-tOqSl327ZI7FZR81_cqGVw91uptKvYxkM8=",
                          "should_fetch_customizations": true
                        }
                      ],
                      "items": {
                        "required": [
                          "menu_item_list",
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The category's name (eg. Beverages)",
                            "example": "Coffee"
                          },
                          "subcategory_id": {
                            "type": "string",
                            "description": "The optional Subcategory ID, needed to fetch the next layer of subcategories or products if there are no further subcategories.",
                            "example": "gAAAAABiQmehnAId3aB5e_-ViDOrhJGgX7EOwkjuRPt_9TCw_atbHwRy3wqlULcwE5s0UhjQIgaz0O8fhnfHLmmDQS1YgUwvpTS1xTAJTLOgUGaRe11Kaig="
                          },
                          "menu_item_list": {
                            "type": "array",
                            "description": "List of products in this category",
                            "items": {
                              "required": [
                                "attributes",
                                "description",
                                "formatted_price",
                                "image",
                                "is_alcoholic",
                                "is_available",
                                "min_price",
                                "name",
                                "original_price",
                                "price",
                                "product_id",
                                "qty_available",
                                "should_fetch_customizations",
                                "supports_image_scaling",
                                "unit_of_measurement",
                                "unit_size",
                                "upc_code"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The item's name (eg. Grande Stacker)",
                                  "example": "Iced Black Coffee"
                                },
                                "price": {
                                  "type": "integer",
                                  "description": "The item's base price in cents",
                                  "example": 500
                                },
                                "min_price": {
                                  "type": "integer",
                                  "description": "The item's minimum price in cents",
                                  "example": 500
                                },
                                "original_price": {
                                  "type": "integer",
                                  "description": "The product's original price. This will only be available if the product is currently on sale.",
                                  "example": 700
                                },
                                "qty_available": {
                                  "type": "integer",
                                  "description": "The remaining amount available. If null, unlimited is available."
                                },
                                "unit_size": {
                                  "type": "number",
                                  "description": "The unit size for this product",
                                  "example": 12
                                },
                                "unit_of_measurement": {
                                  "type": "string",
                                  "description": "The unit of measurement used to measure the product's size (i.e. oz, lb, L, gal)",
                                  "example": "oz"
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The item's description (eg. Melted cheese, double the seasoned beef, and nacho cheese sauce stacked up in a flour tortilla.",
                                  "example": "Our Classic Beverage!"
                                },
                                "image": {
                                  "type": "string",
                                  "description": "Image of the item, if it exists",
                                  "example": "https://cdn-img.mealme.ai/502b9e3a38d1395352faccd16d6daa2f667268d2/68747470733a2f2f64326c6e72356d6861376279636a2e636c6f756466726f6e742e6e65742f70726f647563742d696d6167652f66696c652f6c617267655f64356163336130302d386566392d343461662d396537632d3436383163386632316239662e706e67"
                                },
                                "formatted_price": {
                                  "type": "string",
                                  "description": "This item's price formatted in the restaurant's accepted currency",
                                  "example": "$5.00"
                                },
                                "product_id": {
                                  "type": "string",
                                  "description": "The MealMe Product ID",
                                  "example": "gAAAAABi6IJKDsJDuCdfEF3zQ2cBogEYyvlZhUq3Pn1G15uFl6l4khyg3_hdTJKh96-kYp2lFDJj_Dd3CNKrhw4u5wW3gCU9BQ9I9dIzr9UHhzE5XBZ4jszXNOUd8hp7ojMF6mYz6DinNeobtFYQF-dW5TvvDT7pYRm7lHleFK8JxPkgbzOGPFz_BRWER0KIKnRrULFVhYANYwxgxRW8lvygPDgwClOeq-0YgE3Un1DV9ZWZjpem1-XWaWnWGdPA_3f8OOslR7KF8SvUwKxx3M5AFiZSAPz-2zZljA__qC-S_ZlK3Ys5_xsJUz4tStmLLlEf5TVVsBLsjTKmkkK4Kd9k_K0UXYxkHMlJrit3z4NA0djr2vJNUqDzQ_XP4ZDZZF2qW2kCKPF1cIwZuVID-23OJdoHrO7HcSXNAFmCOA2g-ASQ_xn99MnjFI1Q1V64QHXdhORzQdH6Jj8J1tn2grXkav1j6y5KAxKCqZz6dkuEKKTvYdffYQ_-ACT0ef2kU-7eEajJY7tHf9BSO7ZQHDJTTmWxMY6qpmK8Hrzs31qWWLgF7Q1Vvaqki7N6u5hDxJu6REppgcQ_TSPVpgjr5FKYfQhSOMkC3D0w_NVvWgrnjfwwvuf9ED3AHsNLpGb0hkyc64dA0JI82nU-GmZ7gKPWWwBlIAWMtEGUyWblrhlf1izB0wbGm74="
                                },
                                "customizations": {
                                  "type": "array",
                                  "description": "List of customizations for this item",
                                  "items": {
                                    "required": [
                                      "charge_threshold",
                                      "customization_id",
                                      "max_choice_options",
                                      "min_choice_options",
                                      "name",
                                      "options"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The customization's name (eg. Choose your Meat)",
                                        "example": "Extra Ice?"
                                      },
                                      "min_choice_options": {
                                        "type": "integer",
                                        "description": "The minimum number of options that must be selected for this customization",
                                        "example": 0
                                      },
                                      "max_choice_options": {
                                        "type": "integer",
                                        "description": "The maximum number of options that must be selected for this customization",
                                        "example": 1
                                      },
                                      "charge_threshold": {
                                        "type": "integer",
                                        "description": "The maximum option quantity that comes at no extra cost. For example, if `charge_threshold=2` the product's base price won't increase if any two unique or non-unique options are selected.",
                                        "example": 1
                                      },
                                      "options": {
                                        "type": "array",
                                        "description": "List of options for this customization",
                                        "items": {
                                          "required": [
                                            "charge_threshold",
                                            "conditional_price",
                                            "default_qty",
                                            "formatted_price",
                                            "is_available",
                                            "is_required",
                                            "max_qty",
                                            "min_qty",
                                            "name",
                                            "option_id",
                                            "price"
                                          ],
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "This option's name (eg. Chicken).",
                                              "example": true
                                            },
                                            "price": {
                                              "type": "integer",
                                              "description": "This option's additional price in cents.",
                                              "example": 0
                                            },
                                            "customizations": {
                                              "type": "array",
                                              "description": "List of customizations for this option.",
                                              "example": [],
                                              "items": {
                                                "properties": {},
                                                "type": "object"
                                              }
                                            },
                                            "default_qty": {
                                              "type": "integer",
                                              "description": "The default quantity automatically selected for this option.",
                                              "example": 0
                                            },
                                            "min_qty": {
                                              "type": "integer",
                                              "description": "The minimum quantity required for this option, if selected.",
                                              "example": 0
                                            },
                                            "max_qty": {
                                              "type": "integer",
                                              "description": "The maximum quantity for this option.",
                                              "example": 1
                                            },
                                            "is_required": {
                                              "type": "boolean",
                                              "description": "Whether this option must be selected. If `is_required` is `true`, then a quantity of atleast `min_qty` must be selected.",
                                              "example": 0
                                            },
                                            "charge_threshold": {
                                              "type": "integer",
                                              "description": "The maximum option quantity that comes at no extra cost. For example, if `charge_threshold=2` the product's base price should only increase by the option's price if a quantity greater than 2 is selected.",
                                              "example": 1
                                            },
                                            "formatted_price": {
                                              "type": "string",
                                              "description": "This option's additional price formatted in the store's accepted currency.",
                                              "example": "$0.00"
                                            },
                                            "option_id": {
                                              "type": "integer",
                                              "description": "This option's UUID.",
                                              "example": "gAAAAABi2J7G1dSgi_qhOEcmKI7dE5DSubG-_6ujtGfDtkuWJLKo_4Vy63k9I7bbjIhNH2K-n-7_8oKJs2fE3f_mJInhbbrSBAqmH7e0g4HlLS9gStkv1Rst0WCFQFah_QzyrhyfiG1jIlmGvGYmiVEV_aG1aTPwpANudL2GMmAWTRlG_4J7snU="
                                            },
                                            "conditional_price": {
                                              "description": "A mapping of option ID to price in cents. If this property exists for an option, then its price is dependent on the selected option of another customization. This property defines the conditional pricing.",
                                              "allOf": [
                                                {
                                                  "required": [
                                                    "*"
                                                  ],
                                                  "properties": {
                                                    "*": {
                                                      "type": "integer",
                                                      "description": "The option's price in cents if the option corresponding to the key is also selected",
                                                      "example": 200
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              ]
                                            },
                                            "is_available": {
                                              "type": "boolean",
                                              "description": "Whether the option is currently available.",
                                              "example": true
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "customization_id": {
                                        "type": "string",
                                        "description": "The uuid for the customization",
                                        "example": "gAAAAABi2GRjalyt5qpvx650sKGop-NgTUE1BBRpm7oasAAjNS_w9SGeNsPSzzwkRvl3WEj3zsYqtjQUBfVIUtsmnzyZktN8ZLWOuyfvpBkO_OQzIf5gvvP2wuOSHIoc0w-k_j726owyBwBF3rmS6e9C8QA7O7JY-wlB5Bcy94S7EtLw1VLTTWlIe-DpCDJp81L4JFA-yQRN9jErerBlqDii9515XaTvmMhKwywT4uAF-vRY4688N9k="
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "attributes": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "The list of dietary preferences for this product.",
                                    "example": [
                                      "Diary-Free",
                                      "Lactose-Free"
                                    ]
                                  },
                                  "description": ""
                                },
                                "is_alcoholic": {
                                  "type": "boolean",
                                  "description": "Whether the product contains alcohol.",
                                  "example": true
                                },
                                "upc_code": {
                                  "type": "string",
                                  "description": "The upc code of the product",
                                  "example": "021000604647"
                                },
                                "should_fetch_customizations": {
                                  "type": "boolean",
                                  "description": "Whether a request should be made to to fetch customizations",
                                  "example": true
                                },
                                "supports_image_scaling": {
                                  "type": "boolean",
                                  "description": "Whether the product's image can be scaled with the `image_height` and `image_weight` input parameters",
                                  "example": true
                                },
                                "is_available": {
                                  "type": "boolean",
                                  "description": "Whether the product is currently available.",
                                  "example": true
                                },
                                "next_available": {
                                  "description": "The next time period that the product will be available. Note that this may only be existent when `is_available` is `false`.",
                                  "allOf": [
                                    {
                                      "required": [
                                        "close",
                                        "day",
                                        "next_close_timestamp",
                                        "next_open_timestamp",
                                        "open"
                                      ],
                                      "properties": {
                                        "day": {
                                          "type": "string",
                                          "description": "The week day of the start time of this period.",
                                          "example": "Friday"
                                        },
                                        "open": {
                                          "type": "string",
                                          "description": "The human-readable start time of this period.",
                                          "example": 36000
                                        },
                                        "close": {
                                          "type": "string",
                                          "description": "The human-readable end time of this period.",
                                          "example": 64799
                                        },
                                        "next_open_timestamp": {
                                          "type": "number",
                                          "description": "The UTC start timestamp of this period.",
                                          "example": 1687626000
                                        },
                                        "next_close_timestamp": {
                                          "type": "number",
                                          "description": "The UTC end timestamp of this period.",
                                          "example": 1687654799
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ]
                                },
                                "max_qty": {
                                  "type": "integer",
                                  "description": "The maximum quantity that can be selected.",
                                  "example": 10
                                }
                              },
                              "type": "object"
                            }
                          },
                          "menu_name": {
                            "type": "string",
                            "description": "The name of the menu the category falls under (eg. Breakfast).",
                            "example": "Breakfast"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "406": {
            "description": "Inventory Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason a menu is unavailable.",
                      "example": "Menu Request Failed"
                    },
                    "quote": {
                      "description": "",
                      "properties": {
                        "error": {
                          "type": "string",
                          "description": "The reason a quote is unavailable.",
                          "example": "Delivery is currently unavailable for this store."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Get Inventory",
        "operationId": "get_inventory_details_v3",
        "parameters": [
          {
            "name": "store_id",
            "in": "query",
            "required": true,
            "description": "The ID if the store to fetch a menu for",
            "schema": {
              "type": "string",
              "default": "c9f33d56-d138-4a49-9a4f-162f195c89b8"
            }
          },
          {
            "name": "subcategory_id",
            "in": "query",
            "description": "The optional Subcategory ID, needed for some requests if the menu is too large.",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "pickup",
            "in": "query",
            "description": "`true` for pickup quotes, `false` for delivery quotes.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "include_quote",
            "in": "query",
            "description": "Whether to include the realtime delivery/pickup quote.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "quote_preference",
            "in": "query",
            "description": "The preferred quote for order fulfillment. Can be `default`, `first_party`, `cheapest`, `fastest`, `first_available`, `cheapest_inventory`, or `cheapest_for_store`.",
            "schema": {
              "type": "string",
              "default": "first_available"
            }
          },
          {
            "name": "include_customizations",
            "in": "query",
            "description": "Whether to include customizations.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "budget",
            "in": "query",
            "description": "The maximum amount, in Dollars, that the user has specified they'd like to spend on an order. Used when `quote_preference=cheapest`.",
            "schema": {
              "type": "number",
              "default": 20
            }
          },
          {
            "name": "user_latitude",
            "in": "query",
            "required": true,
            "description": "The latitude of the user.",
            "schema": {
              "type": "number",
              "default": 37.7786357
            }
          },
          {
            "name": "user_longitude",
            "in": "query",
            "required": true,
            "description": "The longitude of the user. In the US, this value is negative.",
            "schema": {
              "type": "number",
              "default": -122.3918135
            }
          },
          {
            "name": "user_street_num",
            "in": "query",
            "required": true,
            "description": "Street number of the user.",
            "schema": {
              "type": "string",
              "default": "188"
            }
          },
          {
            "name": "user_street_name",
            "in": "query",
            "required": true,
            "description": "Street name of the user.",
            "schema": {
              "type": "string",
              "default": "King Street"
            }
          },
          {
            "name": "user_city",
            "in": "query",
            "required": true,
            "description": "City of the user.",
            "schema": {
              "type": "string",
              "default": "San Francisco"
            }
          },
          {
            "name": "user_state",
            "in": "query",
            "required": true,
            "description": "State abbreviation of the user.",
            "schema": {
              "type": "string",
              "default": "CA"
            }
          },
          {
            "name": "user_zipcode",
            "in": "query",
            "required": true,
            "description": "Zipcode of the user.",
            "schema": {
              "type": "string",
              "default": "94107"
            }
          },
          {
            "name": "user_country",
            "in": "query",
            "required": true,
            "description": "Country of the user. Can be `US` or `CA`.",
            "schema": {
              "type": "string",
              "default": "US"
            }
          },
          {
            "name": "image_height",
            "in": "query",
            "description": "The desired height to scale product images to. If supplied, then `image_width` will be ignored. The `thumbnail_image` property in the response will represent the scaled image URL, if `supports_image_scaling=true`.",
            "schema": {
              "type": "integer",
              "default": 300
            }
          },
          {
            "name": "image_width",
            "in": "query",
            "description": "The desired width to scale product images to. If `image_height` is supplied, then `image_width` will be ignored. The `thumbnail_image` property in the response will represent the scaled image URL, if `supports_image_scaling=true`.",
            "schema": {
              "type": "integer",
              "default": 300
            }
          },
          {
            "name": "menu_id",
            "in": "query",
            "description": "The ID of the menu to fetch. If supplied, the `store_id` and `quote_preference` parameters will be ignored.",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "available",
            "in": "query",
            "description": "Whether to only retrieve currently available products.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "min_scheduled_timestamp",
            "in": "query",
            "description": "The minimum timestamp for scheduled windows.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "max_scheduled_timestamp",
            "in": "query",
            "description": "The maximum timestamp for scheduled windows.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "include_fees",
            "in": "query",
            "description": "Whether to include real-time fees in the quote when `include_quote` is `true`.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "include_menu",
            "in": "query",
            "description": "Whether to include the real-time menu. `include_menu` can only be `false` if `include_quote` is `true`.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "use_new_db",
            "in": "query",
            "description": "Whether `store_id` was retrieved from the new database. Note that if `store_id` was retrieved from a `/store/search` request made with `use_new_db=true`, `use_new_db` must also be `true` in this request.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Inventory"
        ]
      }
    },
    "/details/product/v2": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "customizations",
                    "description",
                    "formatted_price",
                    "image",
                    "is_alcoholic",
                    "is_available",
                    "min_price",
                    "name",
                    "original_price",
                    "price",
                    "product_id",
                    "qty_available",
                    "supports_image_scaling",
                    "thumbnail_image",
                    "unit_of_measurement",
                    "unit_size",
                    "upc_code"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The product's name.",
                      "example": "Iced Black Coffee"
                    },
                    "price": {
                      "type": "integer",
                      "description": "The base price of the product, in cents.",
                      "example": 200
                    },
                    "qty_available": {
                      "type": "integer",
                      "description": "The remaining quantity available. If null, and unlimited amount is available."
                    },
                    "unit_size": {
                      "type": "number",
                      "description": "The unit size for this product.",
                      "example": 12
                    },
                    "unit_of_measurement": {
                      "type": "string",
                      "description": "The unit of measurement used to measure the product's size (i.e. oz, lb, L, gal).",
                      "example": "oz"
                    },
                    "description": {
                      "type": "string",
                      "description": "The product's description.",
                      "example": "Our Classic Beverage!"
                    },
                    "min_price": {
                      "type": "integer",
                      "description": "The product's minimum price, in cents.",
                      "example": 200
                    },
                    "image": {
                      "type": "string",
                      "description": "The image of the product.",
                      "example": "https://cdn-img.mealme.ai/436200dc0431f9629c1771dd24667b9af74a8a99/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f73396d68776c30347771373779646c76327966622e6a7067"
                    },
                    "original_price": {
                      "type": "integer",
                      "description": "The product's original price, in cents. The original price will differ from `price` if the product is currently discounted.",
                      "example": 700
                    },
                    "formatted_price": {
                      "type": "string",
                      "description": "This product's price formatted in the store's accepted currency",
                      "example": "$5.00"
                    },
                    "product_id": {
                      "type": "string",
                      "description": "The MealMe Product ID",
                      "example": "gAAAAABi6IJKDsJDuCdfEF3zQ2cBogEYyvlZhUq3Pn1G15uFl6l4khyg3_hdTJKh96-kYp2lFDJj_Dd3CNKrhw4u5wW3gCU9BQ9I9dIzr9UHhzE5XBZ4jszXNOUd8hp7ojMF6mYz6DinNeobtFYQF-dW5TvvDT7pYRm7lHleFK8JxPkgbzOGPFz_BRWER0KIKnRrULFVhYANYwxgxRW8lvygPDgwClOeq-0YgE3Un1DV9ZWZjpem1-XWaWnWGdPA_3f8OOslR7KF8SvUwKxx3M5AFiZSAPz-2zZljA__qC-S_ZlK3Ys5_xsJUz4tStmLLlEf5TVVsBLsjTKmkkK4Kd9k_K0UXYxkHMlJrit3z4NA0djr2vJNUqDzQ_XP4ZDZZF2qW2kCKPF1cIwZuVID-23OJdoHrO7HcSXNAFmCOA2g-ASQ_xn99MnjFI1Q1V64QHXdhORzQdH6Jj8J1tn2grXkav1j6y5KAxKCqZz6dkuEKKTvYdffYQ_-ACT0ef2kU-7eEajJY7tHf9BSO7ZQHDJTTmWxMY6qpmK8Hrzs31qWWLgF7Q1Vvaqki7N6u5hDxJu6REppgcQ_TSPVpgjr5FKYfQhSOMkC3D0w_NVvWgrnjfwwvuf9ED3AHsNLpGb0hkyc64dA0JI82nU-GmZ7gKPWWwBlIAWMtEGUyWblrhlf1izB0wbGm74="
                    },
                    "thumbnail_image": {
                      "type": "string",
                      "description": "The thumbnail image of the product.",
                      "example": "https://cdn-img.mealme.ai/10d7edecf681e9a60fffa6095198942cca938305/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f685f3330302c775f3330302c635f6c696d69742f73396d68776c30347771373779646c76327966622e6a7067"
                    },
                    "is_alcoholic": {
                      "type": "boolean",
                      "description": "Whether the product contains alcohol.",
                      "example": true
                    },
                    "upc_code": {
                      "type": "string",
                      "description": "The upc code of the product.",
                      "example": "021000604647"
                    },
                    "supports_image_scaling": {
                      "type": "boolean",
                      "description": "Whether the product's image can be scaled with the `image_height` and `image_weight` input parameters.",
                      "example": true
                    },
                    "is_available": {
                      "type": "boolean",
                      "description": "Whether the product is currently available",
                      "example": true
                    },
                    "default_customization_description": {
                      "type": "string",
                      "description": "A description of customizations that are included.",
                      "example": "Comes with Small Premium Roast Coffee"
                    },
                    "customizations": {
                      "type": "array",
                      "description": "List of customizations for this product.",
                      "example": [
                        {
                          "name": "Add Strawberry Topping",
                          "min_choice_options": 0,
                          "max_choice_options": 1,
                          "options": [
                            {
                              "name": "Strawberry Topping",
                              "price": 0,
                              "customizations": [],
                              "min_qty": 0,
                              "max_qty": 1,
                              "formatted_price": "$0.00",
                              "option_id": "gAAAAABi6eTp5hEa_7-AXIipoGFGb18GyugoPYx3bL4JIb7NRfavPLYIVUe4vcL8Y0ijERPJ83PeMKQGD_GzsfP4HcdaCjICmT7Vkh1IjWULGmKJtyETbMhtsSy4ieeG-NroSmidMIMaYgmpS3WBcWr4OmNrdaS1V6DM9nTwlf1O6-i5vuXEGjU="
                            }
                          ],
                          "customization_id": "gAAAAABi6eTphy9NstMVMveWjkadqTQtGoyg3SeSsms6uaiH-08qieDYzPgqr1xs7LfvAho1Knir3wqV2B-RypE8LBLwQ2nAG6HyOQN8rhA4n4XF7qzW4Nrl8SKEiCohK4EZ6I-olUPjvA-MpQLQOBPYGEstxPOwVjmWiCDelknbo7KjTKpcbJOOJNMhm9MIzBD2pgJDVRA2XuTrrFxcljq3tLyMQ2PfleTsYXpWFsyqI6DHQ_lvrg4="
                        }
                      ],
                      "items": {
                        "required": [
                          "charge_threshold",
                          "customization_id",
                          "max_choice_options",
                          "min_choice_options",
                          "name",
                          "options"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The customization's name (eg. Choose your Meat)",
                            "example": "Extra Ice?"
                          },
                          "min_choice_options": {
                            "type": "integer",
                            "description": "The minimum number of options that must be selected for this customization",
                            "example": 0
                          },
                          "max_choice_options": {
                            "type": "integer",
                            "description": "The maximum number of options that must be selected for this customization",
                            "example": 1
                          },
                          "charge_threshold": {
                            "type": "integer",
                            "description": "The maximum option quantity that comes at no extra cost. For example, if `charge_threshold=2` the product's base price won't increase if any two unique or non-unique options are selected.",
                            "example": 1
                          },
                          "options": {
                            "type": "array",
                            "description": "List of options for this customization",
                            "items": {
                              "required": [
                                "charge_threshold",
                                "conditional_price",
                                "default_qty",
                                "formatted_price",
                                "is_available",
                                "is_required",
                                "max_qty",
                                "min_qty",
                                "name",
                                "option_id",
                                "price"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "This option's name (eg. Chicken).",
                                  "example": true
                                },
                                "price": {
                                  "type": "integer",
                                  "description": "This option's additional price in cents.",
                                  "example": 0
                                },
                                "customizations": {
                                  "type": "array",
                                  "description": "List of customizations for this option.",
                                  "example": [],
                                  "items": {
                                    "properties": {},
                                    "type": "object"
                                  }
                                },
                                "default_qty": {
                                  "type": "integer",
                                  "description": "The default quantity automatically selected for this option.",
                                  "example": 0
                                },
                                "min_qty": {
                                  "type": "integer",
                                  "description": "The minimum quantity required for this option, if selected.",
                                  "example": 0
                                },
                                "max_qty": {
                                  "type": "integer",
                                  "description": "The maximum quantity for this option.",
                                  "example": 1
                                },
                                "is_required": {
                                  "type": "boolean",
                                  "description": "Whether this option must be selected. If `is_required` is `true`, then a quantity of atleast `min_qty` must be selected.",
                                  "example": 0
                                },
                                "charge_threshold": {
                                  "type": "integer",
                                  "description": "The maximum option quantity that comes at no extra cost. For example, if `charge_threshold=2` the product's base price should only increase by the option's price if a quantity greater than 2 is selected.",
                                  "example": 1
                                },
                                "formatted_price": {
                                  "type": "string",
                                  "description": "This option's additional price formatted in the store's accepted currency.",
                                  "example": "$0.00"
                                },
                                "option_id": {
                                  "type": "integer",
                                  "description": "This option's UUID.",
                                  "example": "gAAAAABi2J7G1dSgi_qhOEcmKI7dE5DSubG-_6ujtGfDtkuWJLKo_4Vy63k9I7bbjIhNH2K-n-7_8oKJs2fE3f_mJInhbbrSBAqmH7e0g4HlLS9gStkv1Rst0WCFQFah_QzyrhyfiG1jIlmGvGYmiVEV_aG1aTPwpANudL2GMmAWTRlG_4J7snU="
                                },
                                "conditional_price": {
                                  "description": "A mapping of option ID to price in cents. If this property exists for an option, then its price is dependent on the selected option of another customization. This property defines the conditional pricing.",
                                  "allOf": [
                                    {
                                      "required": [
                                        "*"
                                      ],
                                      "properties": {
                                        "*": {
                                          "type": "integer",
                                          "description": "The option's price in cents if the option corresponding to the key is also selected",
                                          "example": 200
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ]
                                },
                                "is_available": {
                                  "type": "boolean",
                                  "description": "Whether the option is currently available.",
                                  "example": true
                                }
                              },
                              "type": "object"
                            }
                          },
                          "customization_id": {
                            "type": "string",
                            "description": "The uuid for the customization",
                            "example": "gAAAAABi2GRjalyt5qpvx650sKGop-NgTUE1BBRpm7oasAAjNS_w9SGeNsPSzzwkRvl3WEj3zsYqtjQUBfVIUtsmnzyZktN8ZLWOuyfvpBkO_OQzIf5gvvP2wuOSHIoc0w-k_j726owyBwBF3rmS6e9C8QA7O7JY-wlB5Bcy94S7EtLw1VLTTWlIe-DpCDJp81L4JFA-yQRN9jErerBlqDii9515XaTvmMhKwywT4uAF-vRY4688N9k="
                          }
                        },
                        "type": "object"
                      }
                    },
                    "quote": {
                      "description": "The quote for the given product. The quote will only be available when `include_quote=true`.",
                      "example": {
                        "time_estimate": {
                          "minimum": 43,
                          "maximum": 45
                        },
                        "sales_tax_percent": 10.5,
                        "delivery_fee": {
                          "delivery_fee_flat": 0,
                          "delivery_fee_percent": 0,
                          "delivery_fee_taxable": false
                        },
                        "service_fee": {
                          "service_fee_flat": 0,
                          "service_fee_percent": 10,
                          "service_fee_min": 300,
                          "service_fee_max": 700,
                          "service_fee_taxable": false
                        },
                        "small_order_fee": {
                          "minimum_order_value": 0,
                          "small_order_fee_flat": 0,
                          "small_order_fee_percent": 0
                        },
                        "order_minimum": 1500,
                        "threshold_fees": [],
                        "asap_available": true
                      },
                      "allOf": [
                        {
                          "required": [
                            "accepts_delivery_tip",
                            "accepts_pickup_note",
                            "accepts_pickup_tip",
                            "asap_available",
                            "courier_quote",
                            "delivery_fee",
                            "first_party_quote",
                            "order_minimum",
                            "sales_tax_percent",
                            "service_fee",
                            "small_order_fee",
                            "third_party_quote",
                            "time_estimate"
                          ],
                          "properties": {
                            "time_estimate": {
                              "description": "",
                              "required": [
                                "maximum",
                                "minimum"
                              ],
                              "properties": {
                                "minimum": {
                                  "type": "integer",
                                  "description": "Lower bound of delivery time estimate (in minutes)"
                                },
                                "maximum": {
                                  "type": "integer",
                                  "description": "Upper bound of delivery time estimate (in minutes)"
                                },
                                "scheduled": {
                                  "type": "array",
                                  "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                  "items": {
                                    "required": [
                                      "delivery_fee",
                                      "maximum",
                                      "minimum"
                                    ],
                                    "properties": {
                                      "minimum": {
                                        "type": "integer",
                                        "description": "Timestamp (seconds since 1970)"
                                      },
                                      "maximum": {
                                        "type": "integer",
                                        "description": "Timestamp (seconds since 1970)"
                                      },
                                      "delivery_fee": {
                                        "description": "",
                                        "required": [
                                          "delivery_fee_flat",
                                          "delivery_fee_percent"
                                        ],
                                        "properties": {
                                          "delivery_fee_flat": {
                                            "type": "integer",
                                            "description": "Delivery fee amount in cents"
                                          },
                                          "delivery_fee_percent": {
                                            "type": "number",
                                            "description": "Delivery fee percentage"
                                          },
                                          "delivery_fee_taxable": {
                                            "type": "boolean",
                                            "description": "Whether the delivery fee is taxable or not"
                                          },
                                          "threshold_fees": {
                                            "type": "array",
                                            "description": "Threshold Fees, if they exist",
                                            "items": {
                                              "required": [
                                                "threshold_cents",
                                                "threshold_fee_cents"
                                              ],
                                              "properties": {
                                                "threshold_cents": {
                                                  "type": "integer",
                                                  "description": "Subtotal that enacts a specific fee"
                                                },
                                                "threshold_fee_cents": {
                                                  "type": "integer",
                                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "sales_tax_percent": {
                              "type": "integer",
                              "description": "Sales tax in percentage terms"
                            },
                            "delivery_fee": {
                              "description": "",
                              "required": [
                                "delivery_fee_flat",
                                "delivery_fee_percent"
                              ],
                              "properties": {
                                "delivery_fee_flat": {
                                  "type": "integer",
                                  "description": "Delivery fee amount in cents"
                                },
                                "delivery_fee_percent": {
                                  "type": "number",
                                  "description": "Delivery fee percentage"
                                },
                                "delivery_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether the delivery fee is taxable or not"
                                },
                                "threshold_fees": {
                                  "type": "array",
                                  "description": "Threshold Fees, if they exist",
                                  "items": {
                                    "required": [
                                      "threshold_cents",
                                      "threshold_fee_cents"
                                    ],
                                    "properties": {
                                      "threshold_cents": {
                                        "type": "integer",
                                        "description": "Subtotal that enacts a specific fee"
                                      },
                                      "threshold_fee_cents": {
                                        "type": "integer",
                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "service_fee": {
                              "description": "",
                              "required": [
                                "service_fee_flat",
                                "service_fee_percent"
                              ],
                              "properties": {
                                "service_fee_flat": {
                                  "type": "integer",
                                  "description": "Service fee amount in cents"
                                },
                                "service_fee_percent": {
                                  "type": "number",
                                  "description": "Service fee percentage from 0 to 100"
                                },
                                "service_fee_min": {
                                  "type": "integer",
                                  "description": "Minimum service fee amount in cents"
                                },
                                "service_fee_max": {
                                  "type": "integer",
                                  "description": "Maximum service fee amount in cents"
                                },
                                "service_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether the service fee is taxable or not"
                                },
                                "threshold_fees": {
                                  "type": "array",
                                  "description": "Threshold Fees, if they exist",
                                  "items": {
                                    "required": [
                                      "threshold_cents",
                                      "threshold_fee_cents"
                                    ],
                                    "properties": {
                                      "threshold_cents": {
                                        "type": "integer",
                                        "description": "Subtotal that enacts a specific fee"
                                      },
                                      "threshold_fee_cents": {
                                        "type": "integer",
                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "small_order_fee": {
                              "description": "",
                              "required": [
                                "minimum_order_value",
                                "small_order_fee_flat",
                                "small_order_fee_percent"
                              ],
                              "properties": {
                                "minimum_order_value": {
                                  "type": "integer",
                                  "description": "Minimum amount to not incur small order fee in cents",
                                  "example": 0
                                },
                                "small_order_fee_flat": {
                                  "type": "integer",
                                  "description": "Small order fee amount in cents",
                                  "example": 0
                                },
                                "small_order_fee_percent": {
                                  "type": "number",
                                  "description": "Small order fee percentage",
                                  "example": 0
                                }
                              },
                              "type": "object"
                            },
                            "order_minimum": {
                              "type": "integer",
                              "description": "Minimum order amount in cents"
                            },
                            "min_tip": {
                              "type": "integer",
                              "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                            },
                            "asap_available": {
                              "type": "integer",
                              "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                            },
                            "first_party_quote": {
                              "type": "boolean",
                              "description": "Whether this quote is provided by the store"
                            },
                            "third_party_quote": {
                              "type": "boolean",
                              "description": "Whether this quote is provided by a third party service"
                            },
                            "courier_quote": {
                              "type": "boolean",
                              "description": "Whether this quote is provided by a last-mile delivery service."
                            },
                            "accepts_delivery_tip": {
                              "type": "boolean",
                              "description": "Whether a delivery tip is accepted."
                            },
                            "accepts_pickup_tip": {
                              "type": "boolean",
                              "description": "Whether a pickup tip is accepted."
                            },
                            "accepts_pickup_note": {
                              "type": "boolean",
                              "description": "Whether a pickup note is accepted."
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "406": {
            "description": "Product Details Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason product details are unavailable.",
                      "example": "Delivery is currently unavailable for this store."
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Get Product Details",
        "operationId": "get_product_details_v2",
        "parameters": [
          {
            "name": "product_id",
            "in": "query",
            "required": true,
            "description": "The Product ID given for this store by the Restaurant Menu API or Grocery Products API",
            "schema": {
              "type": "string",
              "default": "gAAAAAAAAAAAvcAsFofXR7XlzNv5B6-g-g4LYpn_gyjc_cgeC6wQe1oZyBfofHwAixWg_PRhuN9-xlG2116-3eIy5GBBDorFsH5n16GHeaHK_fukGkBwWWrcX7h-91BVtrzshylZJvFOU_4oTpgxON4egF-yzD-BbtfBkDfpbzDT68fqR0os9NcfXsdPf5lEJnIgHhLuX16L2AdYDZHtR5gC2gjZ44shJtobKB29RbBgQcpQJF8N7Mj4oaCBaSCjf63nuMuMRwUeuJgqTJBLJgwm8UPySvZJl4mjjpTr8LijQiKv2DXCc3knorXMJeqtDUERwERT1K9BdQeuw2xr_S-FaXmwckYwDQ_RI03glUQe9v_zwCSdy5keF8M4JFP6SHFwy3i2gszhZo5aqoAPf3CucAiZ126dRxscNew1wqqNTXLkDhCIpqgH98CiIYAP-vkHBaH1Fwg3nHIFC0pzWvuml8rvv7WnVn9_lcw7bMeOrLBHw9yaZu_QsOIJi8k96UduDtLEnws1cJU1JtZN_F8v1QuG8hW5l2BVwkiEtPYziiEQfwkmFAMiHjmaPJdR6-A7uTLDU6bycD2KQRxb1O0-wgTSajpAwxZdeAML5qWv-uf_pgPAq8F4eyHTvWpF44BpZT2tuY_73grjanKgvYuExK8J2PcZ9P8a3DUKOQPWkWq9GAkg4R854GhuPBVDuk507YLUEFaA2dOYtEcRQuR0MCYixmcBVA=="
            }
          },
          {
            "name": "pickup",
            "in": "query",
            "description": "`true` for pickup quotes, `false` for delivery quotes.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "include_quote",
            "in": "query",
            "description": "Whether to include the realtime delivery/pickup quote.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "user_latitude",
            "in": "query",
            "description": "The latitude of the user. Strongly recommended for realtime price and availability.",
            "schema": {
              "type": "number",
              "default": 37.7786357
            }
          },
          {
            "name": "user_longitude",
            "in": "query",
            "description": "The longitude of the user. Strongly recommended for realtime price and availability. In the US, this value is negative.",
            "schema": {
              "type": "number",
              "default": -122.3918135
            }
          },
          {
            "name": "user_street_num",
            "in": "query",
            "description": "Street number of the user.",
            "schema": {
              "type": "string",
              "default": "188"
            }
          },
          {
            "name": "user_street_name",
            "in": "query",
            "description": "Street name of the user.",
            "schema": {
              "type": "string",
              "default": "King Street"
            }
          },
          {
            "name": "user_city",
            "in": "query",
            "description": "City of the user.",
            "schema": {
              "type": "string",
              "default": "San Francisco"
            }
          },
          {
            "name": "user_state",
            "in": "query",
            "description": "State abbreviation of the user.",
            "schema": {
              "type": "string",
              "default": "CA"
            }
          },
          {
            "name": "user_zipcode",
            "in": "query",
            "description": "Zipcode of the user.",
            "schema": {
              "type": "string",
              "default": "94107"
            }
          },
          {
            "name": "user_country",
            "in": "query",
            "description": "Country of the user. Can be `US` or `CA`.",
            "schema": {
              "type": "string",
              "default": "US"
            }
          },
          {
            "name": "include_default_customization_description",
            "in": "query",
            "description": "Whether to include a description of included customizations.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "image_height",
            "in": "query",
            "description": "The desired height to scale the product's image to. If supplied, then `image_width` will be ignored. The `thumbnail_image` property in the response will represent the scaled image URL, if `supports_image_scaling=true`.",
            "schema": {
              "type": "integer",
              "default": 300
            }
          },
          {
            "name": "image_width",
            "in": "query",
            "description": "The desired width to scale product's image to. If `image_height` is supplied, then `image_width` will be ignored. The `thumbnail_image` property in the response will represent the scaled image URL, if `supports_image_scaling=true`.",
            "schema": {
              "type": "integer",
              "default": 300
            }
          },
          {
            "name": "include_fees",
            "in": "query",
            "description": "Whether to include real-time fees in the quote when `include_quote` is `true`.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Inventory"
        ]
      }
    },
    "/payment/create/v2": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "payment_method_id",
                    "status"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Message describing whether payment creation was successful.",
                      "example": "Successfully created payment method"
                    },
                    "payment_method_id": {
                      "type": "string",
                      "description": "The ID of the newly created payment method. The payment method ID can be supplied to [Create Order](https://docs.mealme.ai/reference/post_order_v3) to place an order.",
                      "example": "pm_1MZBBkEFrDExIlIksM7oTHEI"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "User id does not match user email",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "User id does not match user email",
                      "example": "User ID linked to user_email does not match user_id.",
                      "enum": [
                        "User ID linked to user_email does not match user_id."
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Create Payment Method",
        "operationId": "post_payment_create_v2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "user_email",
                  "user_id"
                ],
                "properties": {
                  "user_email": {
                    "type": "string",
                    "description": "The email of the user to create a payment method for.",
                    "example": "steve@apple.com"
                  },
                  "user_id": {
                    "type": "string",
                    "description": "The unique user ID of the user to create a payment method for.",
                    "example": "7B36A9CF"
                  },
                  "payment_method": {
                    "description": "",
                    "required": [
                      "card_number",
                      "cvc",
                      "expiration_month",
                      "expiration_year"
                    ],
                    "properties": {
                      "card_number": {
                        "type": "integer",
                        "description": "The card number of the payment method",
                        "example": 4242424242424242
                      },
                      "expiration_year": {
                        "type": "integer",
                        "description": "The expiration year of the payment method, like `2025`",
                        "example": 2034
                      },
                      "expiration_month": {
                        "type": "integer",
                        "description": "The expiration month of the payment method, like `1` for the month of January",
                        "example": 12
                      },
                      "cvc": {
                        "type": "string",
                        "description": "CVC code of the payment method",
                        "example": "123"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Payment"
        ]
      }
    },
    "/payment/list": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "payment_methods"
                  ],
                  "properties": {
                    "payment_methods": {
                      "type": "array",
                      "description": "The user's list of payment methods",
                      "example": [
                        {
                          "id": "pm_1MZAMnEFrDExIlIkxivWVP8p",
                          "exp_month": 12,
                          "exp_year": 2034,
                          "last4": "4242",
                          "network": "visa"
                        }
                      ],
                      "items": {
                        "required": [
                          "exp_month",
                          "exp_year",
                          "id",
                          "last4",
                          "network"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The payment method ID.",
                            "example": "pm_1MZAMnEFrDExIlIkxivWVP8p"
                          },
                          "exp_month": {
                            "type": "integer",
                            "description": "The payment method expiration month.",
                            "example": 12
                          },
                          "exp_year": {
                            "type": "integer",
                            "description": "The payment method expiration year.",
                            "example": 2034
                          },
                          "last4": {
                            "type": "string",
                            "description": "The 4 digits of the payment method.",
                            "example": "4242"
                          },
                          "network": {
                            "type": "string",
                            "description": "The payment method network.",
                            "example": "visa"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "List Payment Methods",
        "operationId": "get_payment_list",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "description": "The self-provided user ID",
            "schema": {
              "type": "string",
              "default": "7B36A9CF"
            }
          },
          {
            "name": "user_email",
            "in": "query",
            "required": true,
            "description": "The user's email",
            "schema": {
              "type": "string",
              "default": "steve@apple.com"
            }
          }
        ],
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Payment"
        ]
      }
    },
    "/payment/delete": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Status of attempt to delete a payment method.",
                      "example": "Successfully created payment method"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "User id does not match user email",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "User id does not match user email",
                      "example": "User ID linked to user_email does not match user_id.",
                      "enum": [
                        "User ID linked to user_email does not match user_id."
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Delete Payment Method",
        "operationId": "post_payment_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "payment_method_id",
                  "user_email",
                  "user_id"
                ],
                "properties": {
                  "user_email": {
                    "type": "string",
                    "description": "The email of the user to create a payment method for.",
                    "example": "steve@apple.com"
                  },
                  "user_id": {
                    "type": "string",
                    "description": "The unique user ID of the user to create a payment method for.",
                    "example": "7B36A9CF"
                  },
                  "payment_method_id": {
                    "type": "string",
                    "description": "The ID of the payment method to delete.",
                    "example": "pm_1MZBBkEFrDExIlIksM7oTHEI"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Payment"
        ]
      }
    },
    "/payment/get_payment_intent": {
      "post": {
        "responses": {
          "200": {
            "description": "Payment Intent Successful",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "client_secret",
                    "order_id",
                    "payment_intent_id",
                    "tracking_link"
                  ],
                  "properties": {
                    "client_secret": {
                      "type": "string",
                      "description": "The payment intent's client secret, used for completing payments on your front-end, along with a publishable key (provided by MealMe).",
                      "example": "ABC123"
                    },
                    "order_id": {
                      "type": "string",
                      "description": "The ID of the order, ready to be confirmed upon successfully capturing payment on your front-end.",
                      "example": "-Mxak0IAuif3TvN9hBP7"
                    },
                    "payment_intent_id": {
                      "type": "string",
                      "description": "The ID of an uncofirmed payment intent attached to the order, which encapsulates the transaction details.",
                      "example": "pi_123456789DExIlIk080MvIam"
                    },
                    "tracking_link": {
                      "type": "string",
                      "description": "Tracking link for the order.",
                      "example": "https://mealme.cc/tracking?tracking_id=-Mn8_a0-R1ERnHlCQUZp"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "406": {
            "description": "Quote Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason a quote is unavailable.",
                      "example": "Delivery is currently unavailable for this store."
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "420": {
            "description": "Product Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason a checkout error was encountered.",
                      "example": "Checkout Error: Does not meet order minimum requirement."
                    },
                    "invalid_option_ids": {
                      "type": "array",
                      "description": "The list of invalid option IDs.",
                      "example": [
                        "n2z3o2ndeC_xNeD918jRVrgI-Oq6vUhuLkgiTnoAIhxWmZhKsqPRqcmz1joT4IvIPh1HnMC01yM070ODKJrE62x95u1IfLF1-89nJiFWkjEqUA6Gq4VKN14-MhZBc_d0gKU5AkrJYGIIpCbfzbK0pOhj3NIEhQHRkQaQr7CtID0UyQp-AxZRCobu80WU3rDACmdCMWHL3K_2ChtpMWS8eoVh_1xvqwUEEDEMio_98vLwamPyehQUTmebfgwz3RtjetNZR2fXIx3OLEUWGXbyzIlY7NGI9D3qD52PyxOSmQYEGf3lsaoXa03CIx8H1f19NrPOuGh2pnbZS-83Mf6DWKmDDjVXvq7JCCamVO1GPYxEeh5Hz9AnZsDJaLXVGGplwMu6zYRhxBMMG8nSu-UFc7UOGrBTBJlVJyC6Q3s-MlW3R8KaUA=="
                      ],
                      "items": {
                        "type": "string",
                        "description": "The option ID."
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Checkout Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason a checkout error was encountered.",
                      "example": "Checkout Error: Does not meet order minimum requirement."
                    },
                    "invalid_option_ids": {
                      "type": "array",
                      "description": "The list of invalid option IDs.",
                      "example": [
                        "n2z3o2ndeC_xNeD918jRVrgI-Oq6vUhuLkgiTnoAIhxWmZhKsqPRqcmz1joT4IvIPh1HnMC01yM070ODKJrE62x95u1IfLF1-89nJiFWkjEqUA6Gq4VKN14-MhZBc_d0gKU5AkrJYGIIpCbfzbK0pOhj3NIEhQHRkQaQr7CtID0UyQp-AxZRCobu80WU3rDACmdCMWHL3K_2ChtpMWS8eoVh_1xvqwUEEDEMio_98vLwamPyehQUTmebfgwz3RtjetNZR2fXIx3OLEUWGXbyzIlY7NGI9D3qD52PyxOSmQYEGf3lsaoXa03CIx8H1f19NrPOuGh2pnbZS-83Mf6DWKmDDjVXvq7JCCamVO1GPYxEeh5Hz9AnZsDJaLXVGGplwMu6zYRhxBMMG8nSu-UFc7UOGrBTBJlVJyC6Q3s-MlW3R8KaUA=="
                      ],
                      "items": {
                        "type": "string",
                        "description": "The option ID."
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Get Payment Intent",
        "operationId": "post_get_payment_intent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "items",
                  "pickup",
                  "user_email",
                  "user_id",
                  "user_name",
                  "user_phone"
                ],
                "properties": {
                  "items": {
                    "type": "array",
                    "description": "The list of items to include in the order. All items must come from the same menu.",
                    "default": [
                      {
                        "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                        "notes": "No whipped cream."
                      }
                    ],
                    "example": [
                      {
                        "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                        "notes": "No whipped cream."
                      }
                    ],
                    "items": {
                      "required": [
                        "product_id"
                      ],
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "description": "The product's ID."
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                        },
                        "product_marked_price": {
                          "type": "integer",
                          "description": "The self-provided marked price (in cents) to be used in the email receipt."
                        },
                        "selected_options": {
                          "type": "array",
                          "description": "The list of selected options for the product.",
                          "items": {
                            "required": [
                              "option_id",
                              "quantity"
                            ],
                            "properties": {
                              "option_id": {
                                "type": "string",
                                "description": "Option ID"
                              },
                              "quantity": {
                                "type": "integer",
                                "description": "The option quantity (must be greater than 0)"
                              },
                              "marked_price": {
                                "type": "integer",
                                "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                              }
                            },
                            "type": "object"
                          }
                        },
                        "notes": {
                          "type": "string",
                          "description": "The product notes for the store."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "pickup": {
                    "type": "boolean",
                    "description": "Whether to the order fulfillment type is pickup or delivery.",
                    "default": false,
                    "example": false
                  },
                  "scheduled_id": {
                    "type": "string",
                    "description": "The ID corresponding to the desired scheduled pickup/delivery window. If not provided, the ASAP window will be chosen by default. Scheduled IDs are provided by [](https://docs.mealme.ai/reference/get_inventory_details) and [](https://docs.mealme.ai/reference/get_product_details) when `include_quote` is `true`.",
                    "example": ""
                  },
                  "driver_tip_cents": {
                    "type": "integer",
                    "description": "The tip for the driver, in cents. This field will be ignored for `pickup` orders.",
                    "default": 100,
                    "example": 100
                  },
                  "pickup_tip_cents": {
                    "type": "integer",
                    "description": "The tip for the store, in cents. Note that this field can only be provided when `quote.accepts_pickup_tip` is `true` from [](https://docs.mealme.ai/reference/get_inventory_details).",
                    "default": 0,
                    "example": 100
                  },
                  "user_latitude": {
                    "type": "number",
                    "description": "Latitude of the user. Not required for `pickup` orders.",
                    "default": 37.7786357,
                    "example": 37.7786357
                  },
                  "user_longitude": {
                    "type": "number",
                    "description": "Longitude of the user. Not required for `pickup` orders.",
                    "default": -122.3918135,
                    "example": -122.3918135
                  },
                  "user_street_num": {
                    "type": "string",
                    "description": "Street number of the user. Not required for `pickup` orders.",
                    "default": "188",
                    "example": "188"
                  },
                  "user_street_name": {
                    "type": "string",
                    "description": "Street name of the user. Not required for `pickup` orders.",
                    "default": "King Street",
                    "example": "King Street"
                  },
                  "user_apt_num": {
                    "type": "string",
                    "description": "Apartment number of the user. Not required for `pickup` orders.",
                    "example": "108"
                  },
                  "user_city": {
                    "type": "string",
                    "description": "City of the user. Not required for `pickup` orders.",
                    "default": "San Francisco",
                    "example": "San Francisco"
                  },
                  "user_state": {
                    "type": "string",
                    "description": "State of the user. Not required for `pickup` orders.",
                    "default": "CA",
                    "example": "CA"
                  },
                  "user_country": {
                    "type": "string",
                    "description": "Country of the user. Can either be `US` or `CA`. Not required for `pickup` orders.",
                    "default": "US",
                    "example": "US"
                  },
                  "user_zipcode": {
                    "type": "string",
                    "description": "Zipcode of the user. Not required for `pickup` orders.",
                    "default": "94107",
                    "example": "94107"
                  },
                  "user_dropoff_notes": {
                    "type": "string",
                    "description": "Dropoff delivery notes for the user. Not required for `pickup` orders.",
                    "default": "Leave in lobby",
                    "example": "Leave in lobby"
                  },
                  "user_pickup_notes": {
                    "type": "string",
                    "description": "User pickup notes for the store. Not required for `delivery` orders.  Note that this field can only be provided when `quote.accepts_pickup_note` is `true` from [](https://docs.mealme.ai/reference/get_inventory_details).",
                    "example": "This pickup order is for Steve"
                  },
                  "user_name": {
                    "type": "string",
                    "description": "User's name. This is required so that the store and/or driver know who to give the products to at dropoff.",
                    "default": "Steve Jobs",
                    "example": "Steve Jobs"
                  },
                  "user_email": {
                    "type": "string",
                    "description": "User's email. Order confirmation, updates, and tracking link will be sent to the email provided here.",
                    "default": "steve@apple.com",
                    "example": "steve@apple.com"
                  },
                  "user_phone": {
                    "type": "integer",
                    "description": "User's phone number. This is required so that the store and/or driver know who to call for handling product replacements, drop-off, etc. Must include country code.",
                    "default": 14044442058,
                    "example": 14044442058
                  },
                  "user_id": {
                    "type": "string",
                    "description": "A unique ID for the user generated in your system, which can later be supplied to [Get Orders](https://docs.mealme.ai/reference/get_account_orders) to fetch a user's order(s).",
                    "default": "7B36A9CF",
                    "example": "7B36A9CF"
                  },
                  "disable_sms": {
                    "type": "boolean",
                    "description": "Whether to send the user order status updates via SMS. It's highly recommended to enable SMS, so that the user can receive order updates from the store and/or driver.",
                    "default": false,
                    "example": false
                  },
                  "email_receipt_specifications": {
                    "description": "Set of optional configurations used to modify email reciept",
                    "allOf": [
                      {
                        "properties": {
                          "prices_marked": {
                            "type": "boolean",
                            "description": "If `true`, the price(s) in the email receipt will reflect the amount(s) specified via the `product_marked_price` and `marked_price` input parameters. If `charge_user` is `true`, the total charged will also reflect these amount(s).",
                            "default": false,
                            "example": false
                          },
                          "added_fee": {
                            "description": "Your added service fee. Any added fees will be reflected in the email receipt and included in the total charged when `charger_user` is `true`.",
                            "allOf": [
                              {
                                "properties": {
                                  "added_fee_flat": {
                                    "type": "integer",
                                    "description": "Flat fee added by API client, in cents.",
                                    "default": 0,
                                    "example": 100
                                  },
                                  "added_fee_percent": {
                                    "type": "integer",
                                    "description": "Percent fee added by API client, range [0-100].",
                                    "default": 0,
                                    "example": 50
                                  },
                                  "is_added_fee_taxable": {
                                    "type": "boolean",
                                    "description": "Whether API client added fee is taxable.",
                                    "example": false
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "unify_service_fee": {
                            "type": "boolean",
                            "description": "Whether to combine the underlying service's service fee and your `added_fee` in one line item in the email receipt.",
                            "default": false,
                            "example": false
                          },
                          "misc_fees": {
                            "type": "array",
                            "description": "List of miscellaneous fees or discounts to display in the email receipt.",
                            "example": [
                              {
                                "fee_name": "Chef tip",
                                "fee_amount": 200
                              }
                            ],
                            "items": {
                              "required": [
                                "fee_amount",
                                "fee_name"
                              ],
                              "properties": {
                                "fee_name": {
                                  "type": "string",
                                  "description": "Name of the fee"
                                },
                                "fee_amount": {
                                  "type": "integer",
                                  "description": "The fee amount, in cents"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "disable_email": {
                            "type": "boolean",
                            "description": "Whether to send the user an email receipt.",
                            "default": false,
                            "example": false
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "sms_options": {
                    "description": "Set of optional SMS-specific configurations.",
                    "allOf": [
                      {
                        "properties": {
                          "notifications": {
                            "description": "The set of optional custom SMS messages to send to `user_phone` for each event.",
                            "allOf": [
                              {
                                "properties": {
                                  "order_placed": {
                                    "type": "string",
                                    "description": "The SMS message to send to `user_phone` upon an order being successfully placed.",
                                    "example": "Your order is confirmed, here is your tracking link https://tracking.example.com/tracking?tracking_id=<>"
                                  },
                                  "store_confirmed": {
                                    "type": "string",
                                    "description": "The SMS message to send to `user_phone` upon the store confirming the order.",
                                    "example": "McDonald's has confirmed your order."
                                  },
                                  "pickup_ready": {
                                    "type": "string",
                                    "description": "The SMS message to send to `user_phone` when the store confirms the pickup order is ready.",
                                    "example": "Your order is ready for pickup."
                                  },
                                  "driver_arriving": {
                                    "type": "string",
                                    "description": "The SMS message to send to `user_phone` when the driver is arriving to the delivery address.",
                                    "example": "You delivery driver is on the way."
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "favorited": {
                    "type": "boolean",
                    "description": "Whether to add this order as a favorited order",
                    "default": false,
                    "example": false
                  },
                  "enable_substitution": {
                    "type": "boolean",
                    "description": "Whether to automatically substitute the cart with an equivalent one at a different nearby chain location, upon encountering a checkout failure",
                    "default": false,
                    "example": false
                  },
                  "customer_order_id": {
                    "type": "string",
                    "description": "A unique ID for the order generated in your system. This will be returned in the response from [Get Orders](https://docs.mealme.ai/reference/get_account_orders) when looking up an order.",
                    "example": "ABC123"
                  },
                  "autofill_selected_options": {
                    "type": "boolean",
                    "description": "Whether to automatically select the default quantity for all options and fulfill all customization requirements.",
                    "default": false,
                    "example": false
                  },
                  "metadata": {
                    "description": "A set of key-value pairs that you can attach to an order, and later reference with '/account/orders`.",
                    "example": {
                      "Promo Code": "ABC123"
                    },
                    "allOf": [
                      {
                        "properties": {
                          "*": {
                            "type": "string",
                            "description": "Any metadata value",
                            "example": "ABC123"
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "tracking_link": {
                    "type": "string",
                    "description": "The tracking link to communicate with the customer via SMS/email. If provided, the MealMe tracking link will be replaced with this one. If the tracking link is to be composed of the MealMe order ID, use `<>` as the placedholder. For example, if the tracking link `https://tracking.example.com/tracking?tracking_id=<>` is provided, and the `order_id` in the response is `-Mxak0IAuif3TvN9hBP7`, then the final tracking link will be `https://tracking.example.com/tracking?tracking_id=-Mxak0IAuif3TvN9hBP7`",
                    "example": "https://tracking.example.com/tracking?tracking_id=<>"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Payment"
        ]
      }
    },
    "/order/order/v3": {
      "post": {
        "responses": {
          "200": {
            "description": "Success: Order Placed",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "final_quote",
                    "is_sandbox",
                    "order_id",
                    "order_placed",
                    "tracking_link"
                  ],
                  "properties": {
                    "order_placed": {
                      "type": "boolean",
                      "description": "Whether or not the order was successfully placed.",
                      "example": true
                    },
                    "tracking_link": {
                      "type": "string",
                      "description": "Link to track the order.",
                      "example": "https://mealme.cc/tracking?tracking_id=-MpG8lp8Z0l5kU64Wzeq"
                    },
                    "final_quote": {
                      "description": "Final validated quote for the given products.",
                      "example": {
                        "store": "Denny's",
                        "store_address": "816 Mission Street, San Francisco, CA, 94103, US",
                        "store_id": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2",
                        "quote_id": "gAAAAABjG7umYvJfg_ehbOj-lSgmxf2BIbq9fgIx0p93xiGAqjpvKfn39koqrh-GFREtE6eF_9UpeHhT6RjXbAFIn1sYedSxCQCVz6J-UU7_cp8thURW5HIk9POHlOoOT8Hjg7hcywN0tdyFTBi1vOuKQCISLaA7esnZW8mdeH765ORynidGKhV4c_r695XvJ5hdLok1DbB7BCvA1MsL3SMxv1N2zr9KYOg0ZV4zFtU7l1s78cGhE5Fl91cio9ijS5RzVkMRVno-3JlSuULwThHLTPwQ4NCxDMtt_tdrDaOE1pTz26uAYezx_-Sqr3f1LTOrgaavvMX-kBpCvt2puVbHufiuYT9ytvsj9x6lOpZCe2Jgelh4a348e7bbD7DiO1d4GKS6zVF4",
                        "quote": {
                          "subtotal": 1840,
                          "delivery_fee_cents": 49,
                          "service_fee_cents": 680,
                          "small_order_fee_cents": 0,
                          "sales_tax_cents": 148,
                          "delivery_time_min": 25,
                          "delivery_time_max": 40,
                          "total_without_tips": 2717,
                          "expected_time_of_arrival": "04:31 PM",
                          "scheduled": {}
                        },
                        "items": [
                          {
                            "name": "New York Style Cheesecake",
                            "base_price": 1050,
                            "image": "https://cdn-img.mealme.ai/6244bce354dcb96f0581dc043e7912ef3c4ed7ae/68747470733a2f2f636e2d67656f312e756265722e636f6d2f696d6167652d70726f632f726573697a652f656174732f666f726d61743d776562702f77696474683d3234302f6865696768743d3139322f7175616c6974793d37302f7372636236343d6148523063484d364c79396b4d584a6862484e765a323571626d637a4e79356a624739315a475a79623235304c6d356c6443396d4f546c6a59324d325a53316a4d445a6d4c5451315a446b74596d59794e79316b4e5441344e3259794d545a684e324d75616e426c5a773d3d",
                            "description": "Plain or with strawberry topping and whipped cream.",
                            "product_id": "gAAAAABjG8USnlR2aO5GxjRKvzASB5R9v_Qa52BAwQr1uNbJUwrgLpzH_knEMYY-1LwsEhUaT5yfv8vg7STQrF-E-7H8w2tUhyFhmNIrTw74LujKsomvvjkfGpMjpeYaeyOylespcVKUbXrfruR28OM2LTC27rbo5TyIJ0hlZYnIs17dynR3frklATV1Mt1uSDJhbyrRv_7EFxSa9tGf0lrTcHd4hbF8_JIoWR_MIXgtHoqjlgjtv4_FvKML1VEFm-fPPiP8BEfQdJQgr3NHk3asIpWJfO-Lvv-z_IgAO4JCOEj9uBzDQIUbNd2_p9KMhO-CJNg_TsESjAvRbeMJO9jzKvgoplBEcmAUoUgRrcsfsfEJw9vyp_YqA35b_RdC3UXNbjYkumdiGUpF2qKcc89uvNKwPq2QnUBi4NrIo4UWmx759xZCcmewFaGl4BUIlSSjCwwTycsslG2pJE_fLel6_9STFg12gXhyS8bd-s1FmvMu74hL3q21QSgQnqmIJZv_BQgtPPNlAb_u1imw0ErM2KK9jMB3X3mA5DlE7x8gOoBetJzTkDoQVjxoqINwRFppWF8XB3JdOqbV3pj1_0Twj2gTKXqjs7xEeWf2n9aPVPrSX-lg0-UiFdhSR77yPdmW1auQHjykafD6xvdq6SgHXTOsnE24uIBiHPqJHX3KjKhYJw_Q0LLp9p8dFsgA9hEJkFGJhTEp9biQZ4SSopEHbdML0CcRxbWtN0O8isSAzjo48cAiUbJFBLSfsqz65qpoOdiliBHx7DY2RhpKTSMV-OjN3NnuCcQ3pIPAMt-HZ6TxGBc_LI0=",
                            "customizations": [
                              {
                                "name": "Add Strawberry Topping",
                                "selected_options": [
                                  {
                                    "name": "Strawberry Topping",
                                    "price": 0,
                                    "quantity": 1,
                                    "option_id": "gAAAAABjG8DMnsHajy2D0a93d4ofw5KVFPudW524M9IP7SJheejkk-o58OPdAyj0vmEZ6xHmadTleYn2pQ2yTPj--zwKPqelw46-W1JMy-fGpHh7BbZPUIGUYtg1-wr7Tr-eHOJ-Jr9AIKsqncELgUH-s5r9EerP0NP9veLmJMUBLhIl0JY66-_ZJlk4MCJ7Aagu6VjD7h058NqAqLz1S1L3GH07znrnMLCQpC9a8Jjlvz_H-WvTJCw=",
                                    "customizations": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "name": "Wavy Cut French Fries",
                            "base_price": 790,
                            "image": "https://cdn-img.mealme.ai/52823d72ddc90b4efe7e85def6784947ef459ef9/68747470733a2f2f636e2d67656f312e756265722e636f6d2f696d6167652d70726f632f726573697a652f656174732f666f726d61743d776562702f77696474683d3234302f6865696768743d3139322f7175616c6974793d37302f7372636236343d6148523063484d364c79396b4d584a6862484e765a323571626d637a4e79356a624739315a475a79623235304c6d356c644338304d6a426d4d7a41344e4330784e3251304c54526a4f544574596d466b5a69316d4d4463774d6d526959574a6d5a574975616e426c5a773d3d",
                            "description": "Side of wavy cut French Fries",
                            "product_id": "gAAAAABjG8USIYa1Z_dCVTEZkQrGwouHh1Q-a53IpBVqPoCn-r1v9sh2Yh1MQUDGrfl14mcB-W6bWRja5lYhRIL-0WWPQWXCX7mb9R3zFQXfrGdNzyxft4g4Ua3hBMcDCEZVOjyv087_F1RPA8O4SlrBCnfxWVytxWqNRPKskW-RBDwnF5gY4bO_uSsyv9LDhLz6d6KNANOf8maMDsYN_kkrpcw3r4PH6h6hPvzausGZ7NZsIT6GyJqJktvA9htbjQbwO5ttS86hKLxSSgIHRhynPwxi0f7uX8UGa3hqCPQlxv40vilaS7SzqXEu6VRl3bRkUDVKBftJtAgDjS2F3JLN4KiFONFaXFs5aFhwCjW_x800HpDiccufYxYPMMjr47wsUy-_Wyn9BlJL0sFupgKAAJqcX7fYIUJ-tiNUA5ubTa7NkP6ve6B66l5sw0xaQOH7xDnSp3-Ugu4guzy4s-ubwa-VBBKv60q4BI9VvM5WzFCk-ouBJMJ25NXiVcwde1wW-vUwRY2vLo4yNDbsXXI8WJnISvY5VQW13Si21QxaBz2jdqNMuaYIOd7e9jaQnjddtwuNyGnf4umSwSgPyDoywFE4eSvm7uoUSR8pVzLyaUuZuKZlJx2_vPIHNxVPnbMyKMw9uJ44-HFcBl81dL5Y8UHCCn0OD0Lg6OqdUu9TOxlCyVLtGBsAFOqtrKk90oWaikbLTZkG4WrAtaPHNvPxYmkeSE3E_ZsBlKpR30z1qohDRjAnaRsM5CM9r6JVUqNJUYJAsf1FHqeWrCHwHnhZZTJsEVE5A80lfNH_JW3nS0t5bYQj5dc=",
                            "customizations": []
                          }
                        ],
                        "tip": 100,
                        "total_with_tip": 2817,
                        "added_fees": {
                          "flat_fee_cents": 100,
                          "percent_fee": 50,
                          "is_fee_taxable": false,
                          "total_fee_cents": 936,
                          "sales_tax_cents": 0
                        }
                      },
                      "allOf": [
                        {
                          "required": [
                            "added_fees",
                            "items",
                            "misc_fees",
                            "quote",
                            "quote_id",
                            "store",
                            "store_address",
                            "store_id",
                            "tip",
                            "total_with_tip"
                          ],
                          "properties": {
                            "store": {
                              "type": "string",
                              "description": "The name of the store where the order was placed",
                              "example": "Denny's"
                            },
                            "store_address": {
                              "type": "string",
                              "description": "The address of the store where the order was placed",
                              "example": "816 Mission St, San Francisco, CA, 94103, US"
                            },
                            "store_id": {
                              "type": "string",
                              "description": "The MealMe store ID",
                              "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
                            },
                            "quote_id": {
                              "type": "string",
                              "description": "The MealMe Quote ID",
                              "example": "gAAAAABihzvxA4pMVWefTSN3GFOL7b3CYG5yPIRnGUNnEu8oD72y0SiHcDkoloajAINb3pI4Kw6R5qR694t5fCXc8_DnvoB0_BeBlCZ_zJmelaZ4jWfcnF5ySNVt29YYobrl5PMQduRavTxgb5E2IvgZakNNbAzP9rYwyApbdaZ6n_RCwz09IlN2iOoqUlnNVL1WF8dDwqI6-XWMiA3XDI_A-k4QyVPZ0yMZDP_LuRzEnQOYIQ23CCyHHz2imKBP4ySAMNgeIKv0ynYV-a1ZfMC_MjFVyK_OHCds8KmiAM8RHZWt6-wR2m2xqMhKOg8NFWU5gWzYFVL_"
                            },
                            "quote": {
                              "description": "The final quote summary including subtotal, tax, time estimate, quote fees, etc.",
                              "allOf": [
                                {
                                  "required": [
                                    "delivery_fee_cents",
                                    "delivery_time_max",
                                    "delivery_time_min",
                                    "expected_time_of_arrival",
                                    "sales_tax_cents",
                                    "scheduled",
                                    "service_fee_cents",
                                    "small_order_fee_cents",
                                    "subtotal",
                                    "total_without_tips"
                                  ],
                                  "properties": {
                                    "subtotal": {
                                      "type": "integer",
                                      "description": "The subtotal of the cart",
                                      "example": 1770
                                    },
                                    "delivery_fee_cents": {
                                      "type": "integer",
                                      "description": "The total delivery fee, in cents",
                                      "example": 49
                                    },
                                    "service_fee_cents": {
                                      "type": "integer",
                                      "description": "The total service fee, in cents",
                                      "example": 667
                                    },
                                    "small_order_fee_cents": {
                                      "type": "integer",
                                      "description": "The total small order fee, in cents",
                                      "example": 0
                                    },
                                    "sales_tax_cents": {
                                      "type": "integer",
                                      "description": "The total sales tax, in cents",
                                      "example": 142
                                    },
                                    "delivery_time_min": {
                                      "type": "integer",
                                      "description": "The minimum delivery time estimate, in minutes",
                                      "example": 25
                                    },
                                    "delivery_time_max": {
                                      "type": "integer",
                                      "description": "The maximum delivery time estimate, in minutes",
                                      "example": 40
                                    },
                                    "total_without_tips": {
                                      "type": "integer",
                                      "description": "The order amount excluding tips, in cents",
                                      "example": 2628
                                    },
                                    "expected_time_of_arrival": {
                                      "type": "string",
                                      "description": "The expected time of arrival, in user's timezone",
                                      "example": "09:20 PM"
                                    },
                                    "scheduled": {
                                      "description": "The scheduled delivery window corresponding to input parameter `scheduled_id` passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3)",
                                      "allOf": [
                                        {
                                          "required": [
                                            "delivery_fee",
                                            "maximum",
                                            "minimum"
                                          ],
                                          "properties": {
                                            "minimum": {
                                              "type": "integer",
                                              "description": "Timestamp (seconds since 1970)"
                                            },
                                            "maximum": {
                                              "type": "integer",
                                              "description": "Timestamp (seconds since 1970)"
                                            },
                                            "delivery_fee": {
                                              "description": "",
                                              "required": [
                                                "delivery_fee_flat",
                                                "delivery_fee_percent"
                                              ],
                                              "properties": {
                                                "delivery_fee_flat": {
                                                  "type": "integer",
                                                  "description": "Delivery fee amount in cents"
                                                },
                                                "delivery_fee_percent": {
                                                  "type": "number",
                                                  "description": "Delivery fee percentage"
                                                },
                                                "delivery_fee_taxable": {
                                                  "type": "boolean",
                                                  "description": "Whether the delivery fee is taxable or not"
                                                },
                                                "threshold_fees": {
                                                  "type": "array",
                                                  "description": "Threshold Fees, if they exist",
                                                  "items": {
                                                    "required": [
                                                      "threshold_cents",
                                                      "threshold_fee_cents"
                                                    ],
                                                    "properties": {
                                                      "threshold_cents": {
                                                        "type": "integer",
                                                        "description": "Subtotal that enacts a specific fee"
                                                      },
                                                      "threshold_fee_cents": {
                                                        "type": "integer",
                                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                      }
                                                    },
                                                    "type": "object"
                                                  }
                                                }
                                              },
                                              "type": "object"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      ]
                                    },
                                    "marked_subtotal": {
                                      "type": "integer",
                                      "description": "The subtotal of the cart including any provided marked prices, in cents",
                                      "example": 2000
                                    },
                                    "marked_total_without_tips": {
                                      "type": "integer",
                                      "description": "The order amount excluding tips, and including any provided marked prices, in cents",
                                      "example": 2800
                                    }
                                  },
                                  "type": "object"
                                }
                              ]
                            },
                            "items": {
                              "type": "array",
                              "description": "List of cart items",
                              "example": [
                                {
                                  "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                                  "notes": "No whipped cream."
                                }
                              ],
                              "items": {
                                "required": [
                                  "product_id"
                                ],
                                "properties": {
                                  "product_id": {
                                    "type": "string",
                                    "description": "The product's ID."
                                  },
                                  "quantity": {
                                    "type": "integer",
                                    "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                                  },
                                  "product_marked_price": {
                                    "type": "integer",
                                    "description": "The self-provided marked price (in cents) to be used in the email receipt."
                                  },
                                  "selected_options": {
                                    "type": "array",
                                    "description": "The list of selected options for the product.",
                                    "items": {
                                      "required": [
                                        "option_id",
                                        "quantity"
                                      ],
                                      "properties": {
                                        "option_id": {
                                          "type": "string",
                                          "description": "Option ID"
                                        },
                                        "quantity": {
                                          "type": "integer",
                                          "description": "The option quantity (must be greater than 0)"
                                        },
                                        "marked_price": {
                                          "type": "integer",
                                          "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "notes": {
                                    "type": "string",
                                    "description": "The product notes for the store."
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "tip": {
                              "type": "integer",
                              "description": "The total tip amount, in cents",
                              "example": 100
                            },
                            "total_with_tip": {
                              "type": "integer",
                              "description": "The total order amount including tip, in cents",
                              "example": 40
                            },
                            "added_fees": {
                              "description": "The total added fees for the cart, computed using the input `added_fee`passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3) or [](https://docs.mealme.ai/reference/post_courier_order)",
                              "example": 200,
                              "allOf": [
                                {
                                  "required": [
                                    "flat_fee_cents",
                                    "is_fee_taxable",
                                    "percent_fee",
                                    "sales_tax_cents",
                                    "total_fee_cents"
                                  ],
                                  "properties": {
                                    "flat_fee_cents": {
                                      "type": "integer",
                                      "description": "The API client added flat fee amount, in cents",
                                      "example": 100
                                    },
                                    "percent_fee": {
                                      "type": "integer",
                                      "description": "The API client added percent fee amount, in range 1-100",
                                      "example": 50
                                    },
                                    "is_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the API client added fee is taxable",
                                      "example": false
                                    },
                                    "total_fee_cents": {
                                      "type": "integer",
                                      "description": "The API client total added fee amount, in cents",
                                      "example": 985
                                    },
                                    "sales_tax_cents": {
                                      "type": "integer",
                                      "description": "The total sales tax amount charged for the API client added fee, in cents",
                                      "example": 0
                                    }
                                  },
                                  "type": "object"
                                }
                              ]
                            },
                            "misc_fees": {
                              "type": "array",
                              "description": "The list of miscellaneous fees applied on the order.",
                              "example": [
                                {
                                  "fee_name": "Chef tip",
                                  "fee_amount": 200
                                }
                              ],
                              "items": {
                                "required": [
                                  "fee_amount",
                                  "fee_name"
                                ],
                                "properties": {
                                  "fee_name": {
                                    "type": "string",
                                    "description": "Name of the fee"
                                  },
                                  "fee_amount": {
                                    "type": "integer",
                                    "description": "The fee amount, in cents"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "marked_total_with_tip": {
                              "type": "integer",
                              "description": "The total order amount including tip, and including any provided marked prices, in cents",
                              "example": 50
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "The ID of the placed order",
                      "example": "-N8vZEd-UnW_gZu6c4iO"
                    },
                    "is_sandbox": {
                      "type": "boolean",
                      "description": "Whether the order is a sandbox order.",
                      "example": true
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "202": {
            "description": "Order Ready To Be Placed",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "final_quote",
                    "order_id"
                  ],
                  "properties": {
                    "order_placed": {
                      "type": "boolean",
                      "description": "Whether or not the order was successfully placed.",
                      "default": false,
                      "example": false
                    },
                    "final_quote": {
                      "description": "Final validated quote for the given products.",
                      "example": {
                        "store": "Denny's",
                        "store_address": "816 Mission Street, San Francisco, CA, 94103, US",
                        "store_id": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2",
                        "quote_id": "gAAAAABjG7umYvJfg_ehbOj-lSgmxf2BIbq9fgIx0p93xiGAqjpvKfn39koqrh-GFREtE6eF_9UpeHhT6RjXbAFIn1sYedSxCQCVz6J-UU7_cp8thURW5HIk9POHlOoOT8Hjg7hcywN0tdyFTBi1vOuKQCISLaA7esnZW8mdeH765ORynidGKhV4c_r695XvJ5hdLok1DbB7BCvA1MsL3SMxv1N2zr9KYOg0ZV4zFtU7l1s78cGhE5Fl91cio9ijS5RzVkMRVno-3JlSuULwThHLTPwQ4NCxDMtt_tdrDaOE1pTz26uAYezx_-Sqr3f1LTOrgaavvMX-kBpCvt2puVbHufiuYT9ytvsj9x6lOpZCe2Jgelh4a348e7bbD7DiO1d4GKS6zVF4",
                        "quote": {
                          "subtotal": 1840,
                          "delivery_fee_cents": 49,
                          "service_fee_cents": 680,
                          "small_order_fee_cents": 0,
                          "sales_tax_cents": 148,
                          "delivery_time_min": 25,
                          "delivery_time_max": 40,
                          "total_without_tips": 2717,
                          "expected_time_of_arrival": "04:31 PM",
                          "scheduled": {}
                        },
                        "items": [
                          {
                            "name": "New York Style Cheesecake",
                            "base_price": 1050,
                            "image": "https://cdn-img.mealme.ai/6244bce354dcb96f0581dc043e7912ef3c4ed7ae/68747470733a2f2f636e2d67656f312e756265722e636f6d2f696d6167652d70726f632f726573697a652f656174732f666f726d61743d776562702f77696474683d3234302f6865696768743d3139322f7175616c6974793d37302f7372636236343d6148523063484d364c79396b4d584a6862484e765a323571626d637a4e79356a624739315a475a79623235304c6d356c6443396d4f546c6a59324d325a53316a4d445a6d4c5451315a446b74596d59794e79316b4e5441344e3259794d545a684e324d75616e426c5a773d3d",
                            "description": "Plain or with strawberry topping and whipped cream.",
                            "product_id": "gAAAAABjG8USnlR2aO5GxjRKvzASB5R9v_Qa52BAwQr1uNbJUwrgLpzH_knEMYY-1LwsEhUaT5yfv8vg7STQrF-E-7H8w2tUhyFhmNIrTw74LujKsomvvjkfGpMjpeYaeyOylespcVKUbXrfruR28OM2LTC27rbo5TyIJ0hlZYnIs17dynR3frklATV1Mt1uSDJhbyrRv_7EFxSa9tGf0lrTcHd4hbF8_JIoWR_MIXgtHoqjlgjtv4_FvKML1VEFm-fPPiP8BEfQdJQgr3NHk3asIpWJfO-Lvv-z_IgAO4JCOEj9uBzDQIUbNd2_p9KMhO-CJNg_TsESjAvRbeMJO9jzKvgoplBEcmAUoUgRrcsfsfEJw9vyp_YqA35b_RdC3UXNbjYkumdiGUpF2qKcc89uvNKwPq2QnUBi4NrIo4UWmx759xZCcmewFaGl4BUIlSSjCwwTycsslG2pJE_fLel6_9STFg12gXhyS8bd-s1FmvMu74hL3q21QSgQnqmIJZv_BQgtPPNlAb_u1imw0ErM2KK9jMB3X3mA5DlE7x8gOoBetJzTkDoQVjxoqINwRFppWF8XB3JdOqbV3pj1_0Twj2gTKXqjs7xEeWf2n9aPVPrSX-lg0-UiFdhSR77yPdmW1auQHjykafD6xvdq6SgHXTOsnE24uIBiHPqJHX3KjKhYJw_Q0LLp9p8dFsgA9hEJkFGJhTEp9biQZ4SSopEHbdML0CcRxbWtN0O8isSAzjo48cAiUbJFBLSfsqz65qpoOdiliBHx7DY2RhpKTSMV-OjN3NnuCcQ3pIPAMt-HZ6TxGBc_LI0=",
                            "customizations": [
                              {
                                "name": "Add Strawberry Topping",
                                "selected_options": [
                                  {
                                    "name": "Strawberry Topping",
                                    "price": 0,
                                    "quantity": 1,
                                    "option_id": "gAAAAABjG8DMnsHajy2D0a93d4ofw5KVFPudW524M9IP7SJheejkk-o58OPdAyj0vmEZ6xHmadTleYn2pQ2yTPj--zwKPqelw46-W1JMy-fGpHh7BbZPUIGUYtg1-wr7Tr-eHOJ-Jr9AIKsqncELgUH-s5r9EerP0NP9veLmJMUBLhIl0JY66-_ZJlk4MCJ7Aagu6VjD7h058NqAqLz1S1L3GH07znrnMLCQpC9a8Jjlvz_H-WvTJCw=",
                                    "customizations": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "name": "Wavy Cut French Fries",
                            "base_price": 790,
                            "image": "https://cdn-img.mealme.ai/52823d72ddc90b4efe7e85def6784947ef459ef9/68747470733a2f2f636e2d67656f312e756265722e636f6d2f696d6167652d70726f632f726573697a652f656174732f666f726d61743d776562702f77696474683d3234302f6865696768743d3139322f7175616c6974793d37302f7372636236343d6148523063484d364c79396b4d584a6862484e765a323571626d637a4e79356a624739315a475a79623235304c6d356c644338304d6a426d4d7a41344e4330784e3251304c54526a4f544574596d466b5a69316d4d4463774d6d526959574a6d5a574975616e426c5a773d3d",
                            "description": "Side of wavy cut French Fries",
                            "product_id": "gAAAAABjG8USIYa1Z_dCVTEZkQrGwouHh1Q-a53IpBVqPoCn-r1v9sh2Yh1MQUDGrfl14mcB-W6bWRja5lYhRIL-0WWPQWXCX7mb9R3zFQXfrGdNzyxft4g4Ua3hBMcDCEZVOjyv087_F1RPA8O4SlrBCnfxWVytxWqNRPKskW-RBDwnF5gY4bO_uSsyv9LDhLz6d6KNANOf8maMDsYN_kkrpcw3r4PH6h6hPvzausGZ7NZsIT6GyJqJktvA9htbjQbwO5ttS86hKLxSSgIHRhynPwxi0f7uX8UGa3hqCPQlxv40vilaS7SzqXEu6VRl3bRkUDVKBftJtAgDjS2F3JLN4KiFONFaXFs5aFhwCjW_x800HpDiccufYxYPMMjr47wsUy-_Wyn9BlJL0sFupgKAAJqcX7fYIUJ-tiNUA5ubTa7NkP6ve6B66l5sw0xaQOH7xDnSp3-Ugu4guzy4s-ubwa-VBBKv60q4BI9VvM5WzFCk-ouBJMJ25NXiVcwde1wW-vUwRY2vLo4yNDbsXXI8WJnISvY5VQW13Si21QxaBz2jdqNMuaYIOd7e9jaQnjddtwuNyGnf4umSwSgPyDoywFE4eSvm7uoUSR8pVzLyaUuZuKZlJx2_vPIHNxVPnbMyKMw9uJ44-HFcBl81dL5Y8UHCCn0OD0Lg6OqdUu9TOxlCyVLtGBsAFOqtrKk90oWaikbLTZkG4WrAtaPHNvPxYmkeSE3E_ZsBlKpR30z1qohDRjAnaRsM5CM9r6JVUqNJUYJAsf1FHqeWrCHwHnhZZTJsEVE5A80lfNH_JW3nS0t5bYQj5dc=",
                            "customizations": []
                          }
                        ],
                        "tip": 100,
                        "total_with_tip": 2817,
                        "added_fees": {
                          "flat_fee_cents": 100,
                          "percent_fee": 50,
                          "is_fee_taxable": false,
                          "total_fee_cents": 936,
                          "sales_tax_cents": 0
                        }
                      },
                      "allOf": [
                        {
                          "required": [
                            "added_fees",
                            "items",
                            "misc_fees",
                            "quote",
                            "quote_id",
                            "store",
                            "store_address",
                            "store_id",
                            "tip",
                            "total_with_tip"
                          ],
                          "properties": {
                            "store": {
                              "type": "string",
                              "description": "The name of the store where the order was placed",
                              "example": "Denny's"
                            },
                            "store_address": {
                              "type": "string",
                              "description": "The address of the store where the order was placed",
                              "example": "816 Mission St, San Francisco, CA, 94103, US"
                            },
                            "store_id": {
                              "type": "string",
                              "description": "The MealMe store ID",
                              "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
                            },
                            "quote_id": {
                              "type": "string",
                              "description": "The MealMe Quote ID",
                              "example": "gAAAAABihzvxA4pMVWefTSN3GFOL7b3CYG5yPIRnGUNnEu8oD72y0SiHcDkoloajAINb3pI4Kw6R5qR694t5fCXc8_DnvoB0_BeBlCZ_zJmelaZ4jWfcnF5ySNVt29YYobrl5PMQduRavTxgb5E2IvgZakNNbAzP9rYwyApbdaZ6n_RCwz09IlN2iOoqUlnNVL1WF8dDwqI6-XWMiA3XDI_A-k4QyVPZ0yMZDP_LuRzEnQOYIQ23CCyHHz2imKBP4ySAMNgeIKv0ynYV-a1ZfMC_MjFVyK_OHCds8KmiAM8RHZWt6-wR2m2xqMhKOg8NFWU5gWzYFVL_"
                            },
                            "quote": {
                              "description": "The final quote summary including subtotal, tax, time estimate, quote fees, etc.",
                              "allOf": [
                                {
                                  "required": [
                                    "delivery_fee_cents",
                                    "delivery_time_max",
                                    "delivery_time_min",
                                    "expected_time_of_arrival",
                                    "sales_tax_cents",
                                    "scheduled",
                                    "service_fee_cents",
                                    "small_order_fee_cents",
                                    "subtotal",
                                    "total_without_tips"
                                  ],
                                  "properties": {
                                    "subtotal": {
                                      "type": "integer",
                                      "description": "The subtotal of the cart",
                                      "example": 1770
                                    },
                                    "delivery_fee_cents": {
                                      "type": "integer",
                                      "description": "The total delivery fee, in cents",
                                      "example": 49
                                    },
                                    "service_fee_cents": {
                                      "type": "integer",
                                      "description": "The total service fee, in cents",
                                      "example": 667
                                    },
                                    "small_order_fee_cents": {
                                      "type": "integer",
                                      "description": "The total small order fee, in cents",
                                      "example": 0
                                    },
                                    "sales_tax_cents": {
                                      "type": "integer",
                                      "description": "The total sales tax, in cents",
                                      "example": 142
                                    },
                                    "delivery_time_min": {
                                      "type": "integer",
                                      "description": "The minimum delivery time estimate, in minutes",
                                      "example": 25
                                    },
                                    "delivery_time_max": {
                                      "type": "integer",
                                      "description": "The maximum delivery time estimate, in minutes",
                                      "example": 40
                                    },
                                    "total_without_tips": {
                                      "type": "integer",
                                      "description": "The order amount excluding tips, in cents",
                                      "example": 2628
                                    },
                                    "expected_time_of_arrival": {
                                      "type": "string",
                                      "description": "The expected time of arrival, in user's timezone",
                                      "example": "09:20 PM"
                                    },
                                    "scheduled": {
                                      "description": "The scheduled delivery window corresponding to input parameter `scheduled_id` passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3)",
                                      "allOf": [
                                        {
                                          "required": [
                                            "delivery_fee",
                                            "maximum",
                                            "minimum"
                                          ],
                                          "properties": {
                                            "minimum": {
                                              "type": "integer",
                                              "description": "Timestamp (seconds since 1970)"
                                            },
                                            "maximum": {
                                              "type": "integer",
                                              "description": "Timestamp (seconds since 1970)"
                                            },
                                            "delivery_fee": {
                                              "description": "",
                                              "required": [
                                                "delivery_fee_flat",
                                                "delivery_fee_percent"
                                              ],
                                              "properties": {
                                                "delivery_fee_flat": {
                                                  "type": "integer",
                                                  "description": "Delivery fee amount in cents"
                                                },
                                                "delivery_fee_percent": {
                                                  "type": "number",
                                                  "description": "Delivery fee percentage"
                                                },
                                                "delivery_fee_taxable": {
                                                  "type": "boolean",
                                                  "description": "Whether the delivery fee is taxable or not"
                                                },
                                                "threshold_fees": {
                                                  "type": "array",
                                                  "description": "Threshold Fees, if they exist",
                                                  "items": {
                                                    "required": [
                                                      "threshold_cents",
                                                      "threshold_fee_cents"
                                                    ],
                                                    "properties": {
                                                      "threshold_cents": {
                                                        "type": "integer",
                                                        "description": "Subtotal that enacts a specific fee"
                                                      },
                                                      "threshold_fee_cents": {
                                                        "type": "integer",
                                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                      }
                                                    },
                                                    "type": "object"
                                                  }
                                                }
                                              },
                                              "type": "object"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      ]
                                    },
                                    "marked_subtotal": {
                                      "type": "integer",
                                      "description": "The subtotal of the cart including any provided marked prices, in cents",
                                      "example": 2000
                                    },
                                    "marked_total_without_tips": {
                                      "type": "integer",
                                      "description": "The order amount excluding tips, and including any provided marked prices, in cents",
                                      "example": 2800
                                    }
                                  },
                                  "type": "object"
                                }
                              ]
                            },
                            "items": {
                              "type": "array",
                              "description": "List of cart items",
                              "example": [
                                {
                                  "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                                  "notes": "No whipped cream."
                                }
                              ],
                              "items": {
                                "required": [
                                  "product_id"
                                ],
                                "properties": {
                                  "product_id": {
                                    "type": "string",
                                    "description": "The product's ID."
                                  },
                                  "quantity": {
                                    "type": "integer",
                                    "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                                  },
                                  "product_marked_price": {
                                    "type": "integer",
                                    "description": "The self-provided marked price (in cents) to be used in the email receipt."
                                  },
                                  "selected_options": {
                                    "type": "array",
                                    "description": "The list of selected options for the product.",
                                    "items": {
                                      "required": [
                                        "option_id",
                                        "quantity"
                                      ],
                                      "properties": {
                                        "option_id": {
                                          "type": "string",
                                          "description": "Option ID"
                                        },
                                        "quantity": {
                                          "type": "integer",
                                          "description": "The option quantity (must be greater than 0)"
                                        },
                                        "marked_price": {
                                          "type": "integer",
                                          "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "notes": {
                                    "type": "string",
                                    "description": "The product notes for the store."
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "tip": {
                              "type": "integer",
                              "description": "The total tip amount, in cents",
                              "example": 100
                            },
                            "total_with_tip": {
                              "type": "integer",
                              "description": "The total order amount including tip, in cents",
                              "example": 40
                            },
                            "added_fees": {
                              "description": "The total added fees for the cart, computed using the input `added_fee`passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3) or [](https://docs.mealme.ai/reference/post_courier_order)",
                              "example": 200,
                              "allOf": [
                                {
                                  "required": [
                                    "flat_fee_cents",
                                    "is_fee_taxable",
                                    "percent_fee",
                                    "sales_tax_cents",
                                    "total_fee_cents"
                                  ],
                                  "properties": {
                                    "flat_fee_cents": {
                                      "type": "integer",
                                      "description": "The API client added flat fee amount, in cents",
                                      "example": 100
                                    },
                                    "percent_fee": {
                                      "type": "integer",
                                      "description": "The API client added percent fee amount, in range 1-100",
                                      "example": 50
                                    },
                                    "is_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the API client added fee is taxable",
                                      "example": false
                                    },
                                    "total_fee_cents": {
                                      "type": "integer",
                                      "description": "The API client total added fee amount, in cents",
                                      "example": 985
                                    },
                                    "sales_tax_cents": {
                                      "type": "integer",
                                      "description": "The total sales tax amount charged for the API client added fee, in cents",
                                      "example": 0
                                    }
                                  },
                                  "type": "object"
                                }
                              ]
                            },
                            "misc_fees": {
                              "type": "array",
                              "description": "The list of miscellaneous fees applied on the order.",
                              "example": [
                                {
                                  "fee_name": "Chef tip",
                                  "fee_amount": 200
                                }
                              ],
                              "items": {
                                "required": [
                                  "fee_amount",
                                  "fee_name"
                                ],
                                "properties": {
                                  "fee_name": {
                                    "type": "string",
                                    "description": "Name of the fee"
                                  },
                                  "fee_amount": {
                                    "type": "integer",
                                    "description": "The fee amount, in cents"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "marked_total_with_tip": {
                              "type": "integer",
                              "description": "The total order amount including tip, and including any provided marked prices, in cents",
                              "example": 50
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "ID of the order ready to be placed.",
                      "example": "-Mxak0IAuif3TvN9hBP7"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "406": {
            "description": "Quote Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason a quote is unavailable.",
                      "example": "Delivery is currently unavailable for this store."
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "420": {
            "description": "Product Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error",
                    "invalid_product_ids"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The product unavailable error description.",
                      "example": "Checkout Error: Invalid Products. Either product_id is invalid or product is no longer available."
                    },
                    "invalid_product_ids": {
                      "type": "array",
                      "description": "The list of invalid product IDs.",
                      "example": [
                        "ngxZD7tEA1cQGCuOYBF05Ckft2ZP3z3JY4VJbh51cudkXQBVef49AFAABAnR0x195id8kuvAiMi_n76hwel8exLfo2rW6b9P6K_4Cx6wa4hw1jMY5VERrv32nlRaV2c5p5pW9leEsX20Z6HSXjRJyfSC_xSYQeAbpuQyaCE3EgP3ZFw7MkFhGI-VlM2HvN3nDLl3U_hYBcPHP5xlXETSmieiiAdfs23yHcXTLLq2tK6RB43-IO7Xt0vAyU758RQIzCd8WHzVzUWwu_wmeDUyD7nhcljHv2AnTfOY8NCXK36o01eLodaEvWcMUAq9m5wJ8HL7l1dpiLD4XmJB4-ULh9kj2DoCVeTfgcVMYYfKcPMYGhz1llROquoWXeM4suQEmcIEq3pLBDpkwL8c09bJwMmnXxFf6m8h0_IgfAVb2Epx59d_UWZD0xsZVzbE4R1AhLwo2O0MtXx6LjuXJl4UfWMYJ6rXFOP8qDZxVPQYkQYthAHmUBkp-FEmLcw9VgL_5bZh4DDZVAYMa0V7VphsxKAfqeqaAEezoZwXYWL7xAewd1vQUWngr24ZulZdo7lOJIGurzmmfrB7aEbeZU59KGJZWOMbng3s2gnagH2vaVXtJUU9lN-DNkggz4wvFWEqfsYToAisCvUKIb2Uxnim_dZsLJGnb4lPKQU-Gsn7C5lCIvAWp8fm02ba3zPeH9EiIF7PiGU8RhFBbTqM6-47paigETk9JbJMopKgTOlioeIgzvVTK7vTpmf5ROeZ5xguj8OBRloHgUkzdmS03tvv1a5ELxmXrKF7U4ql_QIJFuDs15CI6USg_Q==",
                        "ngxZD7tEA1cQGCuOYBF05Ckft2ZP3z3JRW08zp0qtVOAmZx2N9UBmANSA16G0xh65iJ4yOHAiMzsz76iwL4oe0_Sqz2HvOVO6K3-DR6wa4hw1jMY5VERrv32nlRaV2c5p5pW9leEsX20Z6HSXjRJyfSC_xSYQeAbpediMH45EgX0Yls7MkllSI-Wyp-HvNy2A7olVPYOB5bJYpxlXETSmieiiAdfs23yHcXTLLq2tK6RB43-IO7Xt0vAyU758RQIzCd8WHzVzUWwu_wmeDUyD7nhcljHv2AnTfOY8NCXK36o01eLodaEvWcMUAq9m5wJ8HL7l1dpiLD4XmJB4-ULh9kj2DoCVeTfgcVMYYfKcPMYGhz1llROquoWXeM4suQEmcIEq3pLBDpkwL8c09bJwMmnXxFf6m8h0_IgfAVb2Epx59d_UWZD0xsZVzbE4R1AhLwo2O0MtXx6LjuXJl4UfWMYJ6rXFOP8qDZxVPQYkQYthAHmUBkp-FEmLcw9VgL_5bZh4DDZVAYMa0V7VphsxKAfqeqaAEezoZwXYWL7xAewd1vQUWngr24ZulZdo7lOJIGurzmmfrB7aEbeZU59KGJZWOMbng3s2gnagH2vaVXtJUU9lN-DNkggz4wvFWEqfsYToAisCvUKIb2Uxnim_dZsLJGnb4lPKQU-Gsn7C5lCIvAWp8fm02ba3zPeH9EiIF7PiGU8RhFBbTqM6-47paigETk9JbJMopKoSO1i6IASyfFayVaShGf3StWcg19v1JL_MxYkwGYyeknhpcn40sFYPgHT5I52RtmQwkRHeff_x9rDyH_2q30zUgJP2DaOM7UUWjNC"
                      ],
                      "items": {
                        "type": "string",
                        "description": "The product ID."
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Checkout Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason a checkout error was encountered.",
                      "example": "Checkout Error: Does not meet order minimum requirement."
                    },
                    "invalid_option_ids": {
                      "type": "array",
                      "description": "The list of invalid option IDs.",
                      "example": [
                        "n2z3o2ndeC_xNeD918jRVrgI-Oq6vUhuLkgiTnoAIhxWmZhKsqPRqcmz1joT4IvIPh1HnMC01yM070ODKJrE62x95u1IfLF1-89nJiFWkjEqUA6Gq4VKN14-MhZBc_d0gKU5AkrJYGIIpCbfzbK0pOhj3NIEhQHRkQaQr7CtID0UyQp-AxZRCobu80WU3rDACmdCMWHL3K_2ChtpMWS8eoVh_1xvqwUEEDEMio_98vLwamPyehQUTmebfgwz3RtjetNZR2fXIx3OLEUWGXbyzIlY7NGI9D3qD52PyxOSmQYEGf3lsaoXa03CIx8H1f19NrPOuGh2pnbZS-83Mf6DWKmDDjVXvq7JCCamVO1GPYxEeh5Hz9AnZsDJaLXVGGplwMu6zYRhxBMMG8nSu-UFc7UOGrBTBJlVJyC6Q3s-MlW3R8KaUA=="
                      ],
                      "items": {
                        "type": "string",
                        "description": "The option ID."
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The gateway timeout error message.",
                      "example": "Gateway Timeout"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Create Order",
        "operationId": "post_order_v3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "items",
                  "pickup",
                  "place_order",
                  "user_email",
                  "user_id",
                  "user_name",
                  "user_phone"
                ],
                "properties": {
                  "place_order": {
                    "type": "boolean",
                    "description": "Whether to actually place the order or just get the final quote",
                    "default": false,
                    "example": false
                  },
                  "order_id": {
                    "type": "string",
                    "description": "The ID of an existing order to update.",
                    "example": "-O14zT3XJbLfybkJa6cG"
                  },
                  "items": {
                    "type": "array",
                    "description": "The list of items to include in the order. All items must come from the same menu.",
                    "default": [
                      {
                        "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                        "notes": "No whipped cream."
                      }
                    ],
                    "example": [
                      {
                        "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                        "notes": "No whipped cream."
                      }
                    ],
                    "items": {
                      "required": [
                        "product_id"
                      ],
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "description": "The product's ID."
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                        },
                        "product_marked_price": {
                          "type": "integer",
                          "description": "The self-provided marked price (in cents) to be used in the email receipt."
                        },
                        "selected_options": {
                          "type": "array",
                          "description": "The list of selected options for the product.",
                          "items": {
                            "required": [
                              "option_id",
                              "quantity"
                            ],
                            "properties": {
                              "option_id": {
                                "type": "string",
                                "description": "Option ID"
                              },
                              "quantity": {
                                "type": "integer",
                                "description": "The option quantity (must be greater than 0)"
                              },
                              "marked_price": {
                                "type": "integer",
                                "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                              }
                            },
                            "type": "object"
                          }
                        },
                        "notes": {
                          "type": "string",
                          "description": "The product notes for the store."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "pickup": {
                    "type": "boolean",
                    "description": "Whether to the order fulfillment type is pickup or delivery.",
                    "default": false,
                    "example": false
                  },
                  "scheduled_id": {
                    "type": "string",
                    "description": "The ID corresponding to the desired scheduled pickup/delivery window. If not provided, the ASAP window will be chosen by default. Scheduled IDs are provided by [](https://docs.mealme.ai/reference/get_inventory_details) and [](https://docs.mealme.ai/reference/get_product_details) when `include_quote` is `true`.",
                    "example": ""
                  },
                  "driver_tip_cents": {
                    "type": "integer",
                    "description": "The tip for the driver, in cents. Note that this field can only be provided for delivery orders and when `quote.accepts_delivery_tip` is `true` from [](https://docs.mealme.ai/reference/get_inventory_details) or [](https://docs.mealme.ai/reference/get_product_details).",
                    "default": 100,
                    "example": 100
                  },
                  "pickup_tip_cents": {
                    "type": "integer",
                    "description": "The tip for the store, in cents. Note that this field can only be provided for pickup orders and when `quote.accepts_pickup_tip` is `true` from [](https://docs.mealme.ai/reference/get_inventory_details) or [](https://docs.mealme.ai/reference/get_product_details).",
                    "default": 0,
                    "example": 100
                  },
                  "user_latitude": {
                    "type": "number",
                    "description": "Latitude of the user. Not required for `pickup` orders.",
                    "default": 37.7786357,
                    "example": 37.7786357
                  },
                  "user_longitude": {
                    "type": "number",
                    "description": "Longitude of the user. Not required for `pickup` orders.",
                    "default": -122.3918135,
                    "example": -122.3918135
                  },
                  "user_street_num": {
                    "type": "string",
                    "description": "Street number of the user. Not required for `pickup` orders.",
                    "default": "188",
                    "example": "188"
                  },
                  "user_street_name": {
                    "type": "string",
                    "description": "Street name of the user. Not required for `pickup` orders.",
                    "default": "King Street",
                    "example": "King Street"
                  },
                  "user_apt_num": {
                    "type": "string",
                    "description": "Apartment number of the user. Not required for `pickup` orders.",
                    "example": "108"
                  },
                  "user_city": {
                    "type": "string",
                    "description": "City of the user. Not required for `pickup` orders.",
                    "default": "San Francisco",
                    "example": "San Francisco"
                  },
                  "user_state": {
                    "type": "string",
                    "description": "State of the user. Not required for `pickup` orders.",
                    "default": "CA",
                    "example": "CA"
                  },
                  "user_country": {
                    "type": "string",
                    "description": "Country of the user. Can either be `US` or `CA`. Not required for `pickup` orders.",
                    "default": "US",
                    "example": "US"
                  },
                  "user_zipcode": {
                    "type": "string",
                    "description": "Zipcode of the user. Not required for `pickup` orders.",
                    "default": "94107",
                    "example": "94107"
                  },
                  "user_dropoff_notes": {
                    "type": "string",
                    "description": "Dropoff delivery notes for the user. Not required for `pickup` orders.",
                    "default": "Leave in lobby",
                    "example": "Leave in lobby"
                  },
                  "user_pickup_notes": {
                    "type": "string",
                    "description": "User pickup notes for the store. Not required for `delivery` orders.  Note that this field can only be provided when `quote.accepts_pickup_note` is `true` from [](https://docs.mealme.ai/reference/get_inventory_details).",
                    "example": "This pickup order is for Steve"
                  },
                  "user_name": {
                    "type": "string",
                    "description": "User's name. This is required so that the store and/or driver know who to give the products to at dropoff. The `user_name` must consist of a first and last name that are both at least 2 alphabetic characters each, separated by one space. Optionally, the first and last name can be prefixed with any combination of alphabetic characters and spaces, followed by a leading space (i.e. 'Company ABC John Doe').",
                    "default": "Steve Jobs",
                    "example": "Steve Jobs"
                  },
                  "user_email": {
                    "type": "string",
                    "description": "User's email. Order confirmation, updates, and tracking link will be sent to the email provided here.",
                    "default": "steve@apple.com",
                    "example": "steve@apple.com"
                  },
                  "user_phone": {
                    "type": "integer",
                    "description": "User's phone number. This is required so that the store and/or driver know who to call for handling product replacements, drop-off, etc. Must include country code.",
                    "default": 14044442058,
                    "example": 14044442058
                  },
                  "user_id": {
                    "type": "string",
                    "description": "Unique User ID. This is a self-provided unique identifier for a user, which can later be supplied to [Get Orders](https://docs.mealme.ai/reference/get_account_orders) to fetch a user's order(s). The `user_id` must only consist of alphanumeric characters.",
                    "default": "7B36A9CF",
                    "example": "7B36A9CF"
                  },
                  "payment_method_id": {
                    "type": "string",
                    "description": "User's payment method ID. The ID is provided by [](https://docs.mealme.ai/reference/post_payment_create), and the corresponding payment method will be charged if `charge_user` is `true`.",
                    "default": "",
                    "example": "pm_1MZBBkEFrDExIlIksM7oTHEI"
                  },
                  "charge_user": {
                    "type": "boolean",
                    "description": "If `true`, the payment method corresponding to the supplied `payment_method_id` will be charged an amount equal to the `total_with_tip` specified in the response. This amount will also include any additional fees supplied via the `misc_fees` or `added_fees` input parameters. Any price markup(s), whether automatically applied or supplied via the `product_marked_price` and `marked_price` input parameters, will also be included in the total amount charged.",
                    "default": true,
                    "example": true
                  },
                  "include_final_quote": {
                    "type": "boolean",
                    "description": "Whether to return the final quote.",
                    "default": true,
                    "example": true
                  },
                  "disable_sms": {
                    "type": "boolean",
                    "description": "Whether to send the user order status updates via SMS. It's highly recommended to enable SMS, so that the user can receive order updates from the store and/or driver.",
                    "default": false,
                    "example": false
                  },
                  "email_receipt_specifications": {
                    "description": "Set of optional configurations used to modify email reciept",
                    "allOf": [
                      {
                        "properties": {
                          "prices_marked": {
                            "type": "boolean",
                            "description": "If `true`, the price(s) in the email receipt will reflect the amount(s) specified via the `product_marked_price` and `marked_price` input parameters. If `charge_user` is `true`, the total charged will also reflect these amount(s).",
                            "default": false,
                            "example": false
                          },
                          "added_fee": {
                            "description": "Your added service fee. Any added fees will be reflected in the email receipt and included in the total charged when `charger_user` is `true`.",
                            "allOf": [
                              {
                                "properties": {
                                  "added_fee_flat": {
                                    "type": "integer",
                                    "description": "Flat fee added by API client, in cents.",
                                    "default": 0,
                                    "example": 100
                                  },
                                  "added_fee_percent": {
                                    "type": "integer",
                                    "description": "Percent fee added by API client, range [0-100].",
                                    "default": 0,
                                    "example": 50
                                  },
                                  "is_added_fee_taxable": {
                                    "type": "boolean",
                                    "description": "Whether API client added fee is taxable.",
                                    "example": false
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "unify_service_fee": {
                            "type": "boolean",
                            "description": "Whether to combine the underlying service's service fee and your `added_fee` in one line item in the email receipt.",
                            "default": false,
                            "example": false
                          },
                          "misc_fees": {
                            "type": "array",
                            "description": "List of miscellaneous fees or discounts to display in the email receipt.",
                            "example": [
                              {
                                "fee_name": "Chef tip",
                                "fee_amount": 200
                              }
                            ],
                            "items": {
                              "required": [
                                "fee_amount",
                                "fee_name"
                              ],
                              "properties": {
                                "fee_name": {
                                  "type": "string",
                                  "description": "Name of the fee"
                                },
                                "fee_amount": {
                                  "type": "integer",
                                  "description": "The fee amount, in cents"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "disable_email": {
                            "type": "boolean",
                            "description": "Whether to send the user an email receipt.",
                            "default": false,
                            "example": false
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "sms_options": {
                    "description": "Set of optional SMS-specific configurations.",
                    "allOf": [
                      {
                        "properties": {
                          "notifications": {
                            "description": "The set of optional custom SMS messages to send to `user_phone` for each event.",
                            "allOf": [
                              {
                                "properties": {
                                  "order_placed": {
                                    "type": "string",
                                    "description": "The SMS message to send to `user_phone` upon an order being successfully placed.",
                                    "example": "Your order is confirmed, here is your tracking link https://tracking.example.com/tracking?tracking_id=<>"
                                  },
                                  "store_confirmed": {
                                    "type": "string",
                                    "description": "The SMS message to send to `user_phone` upon the store confirming the order.",
                                    "example": "McDonald's has confirmed your order."
                                  },
                                  "pickup_ready": {
                                    "type": "string",
                                    "description": "The SMS message to send to `user_phone` when the store confirms the pickup order is ready.",
                                    "example": "Your order is ready for pickup."
                                  },
                                  "driver_arriving": {
                                    "type": "string",
                                    "description": "The SMS message to send to `user_phone` when the driver is arriving to the delivery address.",
                                    "example": "You delivery driver is on the way."
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "favorited": {
                    "type": "boolean",
                    "description": "Whether to add this order as a favorited order",
                    "default": false,
                    "example": false
                  },
                  "enable_substitution": {
                    "type": "boolean",
                    "description": "Whether to automatically substitute the cart with an equivalent one at a different nearby chain location, upon encountering a checkout failure",
                    "default": false,
                    "example": false
                  },
                  "customer_order_id": {
                    "type": "string",
                    "description": "A unique ID of the order generated in your system. This will be returned in the response from [Get Orders](https://docs.mealme.ai/reference/get_account_orders) when looking up an order.",
                    "example": "ABC123"
                  },
                  "autofill_selected_options": {
                    "type": "boolean",
                    "description": "Whether to automatically select the default quantity for all options and fulfill all customization requirements.",
                    "default": false,
                    "example": false
                  },
                  "metadata": {
                    "description": "A set of key-value pairs that you can attach to an order, and later reference with '/account/orders`.",
                    "example": {
                      "Promo Code": "ABC123"
                    },
                    "allOf": [
                      {
                        "properties": {
                          "*": {
                            "type": "string",
                            "description": "Any metadata value",
                            "example": "ABC123"
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "tracking_link": {
                    "type": "string",
                    "description": "The tracking link to communicate with the customer via SMS/email. If provided, the MealMe tracking link will be replaced with this one. If the tracking link is to be composed of the MealMe order ID, use `<>` as the placedholder. For example, if the tracking link `https://tracking.example.com/tracking?tracking_id=<>` is provided, and the `order_id` in the response is `-Mxak0IAuif3TvN9hBP7`, then the final tracking link will be `https://tracking.example.com/tracking?tracking_id=-Mxak0IAuif3TvN9hBP7`",
                    "example": "https://tracking.example.com/tracking?tracking_id=<>"
                  },
                  "dropoff_window": {
                    "description": "The desired delivery drop-off window. Only applies to `delivery` orders. If `scheduled_id` is provided, `dropoff_window` will be ignored.",
                    "allOf": [
                      {
                        "required": [
                          "end_time",
                          "start_time"
                        ],
                        "properties": {
                          "start_time": {
                            "type": "number",
                            "description": "The start of the drop-off window, represented by a unix timestamp.",
                            "example": 1688772600
                          },
                          "end_time": {
                            "type": "number",
                            "description": "The end of the drop-off window, represented by a unix timestamp. Note that `end_time` must be at least 20 minutes greater than `start_time`.",
                            "example": 1688774400
                          }
                        },
                        "type": "object"
                      }
                    ]
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Order"
        ]
      }
    },
    "/order/finalize": {
      "post": {
        "responses": {
          "200": {
            "description": "Success: Order Placed",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "final_quote",
                    "is_sandbox",
                    "order_id",
                    "order_placed",
                    "tracking_link"
                  ],
                  "properties": {
                    "order_placed": {
                      "type": "boolean",
                      "description": "Whether or not the order was successfully placed.",
                      "example": true
                    },
                    "tracking_link": {
                      "type": "string",
                      "description": "Link to track the order.",
                      "example": "https://mealme.cc/tracking?tracking_id=-MpG8lp8Z0l5kU64Wzeq"
                    },
                    "final_quote": {
                      "description": "Final validated quote for the given products.",
                      "example": {
                        "store": "Denny's",
                        "store_address": "816 Mission Street, San Francisco, CA, 94103, US",
                        "store_id": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2",
                        "quote_id": "gAAAAABjG7umYvJfg_ehbOj-lSgmxf2BIbq9fgIx0p93xiGAqjpvKfn39koqrh-GFREtE6eF_9UpeHhT6RjXbAFIn1sYedSxCQCVz6J-UU7_cp8thURW5HIk9POHlOoOT8Hjg7hcywN0tdyFTBi1vOuKQCISLaA7esnZW8mdeH765ORynidGKhV4c_r695XvJ5hdLok1DbB7BCvA1MsL3SMxv1N2zr9KYOg0ZV4zFtU7l1s78cGhE5Fl91cio9ijS5RzVkMRVno-3JlSuULwThHLTPwQ4NCxDMtt_tdrDaOE1pTz26uAYezx_-Sqr3f1LTOrgaavvMX-kBpCvt2puVbHufiuYT9ytvsj9x6lOpZCe2Jgelh4a348e7bbD7DiO1d4GKS6zVF4",
                        "quote": {
                          "subtotal": 1840,
                          "delivery_fee_cents": 49,
                          "service_fee_cents": 680,
                          "small_order_fee_cents": 0,
                          "sales_tax_cents": 148,
                          "delivery_time_min": 25,
                          "delivery_time_max": 40,
                          "total_without_tips": 2717,
                          "expected_time_of_arrival": "04:31 PM",
                          "scheduled": {}
                        },
                        "items": [
                          {
                            "name": "New York Style Cheesecake",
                            "base_price": 1050,
                            "image": "https://cdn-img.mealme.ai/6244bce354dcb96f0581dc043e7912ef3c4ed7ae/68747470733a2f2f636e2d67656f312e756265722e636f6d2f696d6167652d70726f632f726573697a652f656174732f666f726d61743d776562702f77696474683d3234302f6865696768743d3139322f7175616c6974793d37302f7372636236343d6148523063484d364c79396b4d584a6862484e765a323571626d637a4e79356a624739315a475a79623235304c6d356c6443396d4f546c6a59324d325a53316a4d445a6d4c5451315a446b74596d59794e79316b4e5441344e3259794d545a684e324d75616e426c5a773d3d",
                            "description": "Plain or with strawberry topping and whipped cream.",
                            "product_id": "gAAAAABjG8USnlR2aO5GxjRKvzASB5R9v_Qa52BAwQr1uNbJUwrgLpzH_knEMYY-1LwsEhUaT5yfv8vg7STQrF-E-7H8w2tUhyFhmNIrTw74LujKsomvvjkfGpMjpeYaeyOylespcVKUbXrfruR28OM2LTC27rbo5TyIJ0hlZYnIs17dynR3frklATV1Mt1uSDJhbyrRv_7EFxSa9tGf0lrTcHd4hbF8_JIoWR_MIXgtHoqjlgjtv4_FvKML1VEFm-fPPiP8BEfQdJQgr3NHk3asIpWJfO-Lvv-z_IgAO4JCOEj9uBzDQIUbNd2_p9KMhO-CJNg_TsESjAvRbeMJO9jzKvgoplBEcmAUoUgRrcsfsfEJw9vyp_YqA35b_RdC3UXNbjYkumdiGUpF2qKcc89uvNKwPq2QnUBi4NrIo4UWmx759xZCcmewFaGl4BUIlSSjCwwTycsslG2pJE_fLel6_9STFg12gXhyS8bd-s1FmvMu74hL3q21QSgQnqmIJZv_BQgtPPNlAb_u1imw0ErM2KK9jMB3X3mA5DlE7x8gOoBetJzTkDoQVjxoqINwRFppWF8XB3JdOqbV3pj1_0Twj2gTKXqjs7xEeWf2n9aPVPrSX-lg0-UiFdhSR77yPdmW1auQHjykafD6xvdq6SgHXTOsnE24uIBiHPqJHX3KjKhYJw_Q0LLp9p8dFsgA9hEJkFGJhTEp9biQZ4SSopEHbdML0CcRxbWtN0O8isSAzjo48cAiUbJFBLSfsqz65qpoOdiliBHx7DY2RhpKTSMV-OjN3NnuCcQ3pIPAMt-HZ6TxGBc_LI0=",
                            "customizations": [
                              {
                                "name": "Add Strawberry Topping",
                                "selected_options": [
                                  {
                                    "name": "Strawberry Topping",
                                    "price": 0,
                                    "quantity": 1,
                                    "option_id": "gAAAAABjG8DMnsHajy2D0a93d4ofw5KVFPudW524M9IP7SJheejkk-o58OPdAyj0vmEZ6xHmadTleYn2pQ2yTPj--zwKPqelw46-W1JMy-fGpHh7BbZPUIGUYtg1-wr7Tr-eHOJ-Jr9AIKsqncELgUH-s5r9EerP0NP9veLmJMUBLhIl0JY66-_ZJlk4MCJ7Aagu6VjD7h058NqAqLz1S1L3GH07znrnMLCQpC9a8Jjlvz_H-WvTJCw=",
                                    "customizations": []
                                  }
                                ]
                              }
                            ]
                          },
                          {
                            "name": "Wavy Cut French Fries",
                            "base_price": 790,
                            "image": "https://cdn-img.mealme.ai/52823d72ddc90b4efe7e85def6784947ef459ef9/68747470733a2f2f636e2d67656f312e756265722e636f6d2f696d6167652d70726f632f726573697a652f656174732f666f726d61743d776562702f77696474683d3234302f6865696768743d3139322f7175616c6974793d37302f7372636236343d6148523063484d364c79396b4d584a6862484e765a323571626d637a4e79356a624739315a475a79623235304c6d356c644338304d6a426d4d7a41344e4330784e3251304c54526a4f544574596d466b5a69316d4d4463774d6d526959574a6d5a574975616e426c5a773d3d",
                            "description": "Side of wavy cut French Fries",
                            "product_id": "gAAAAABjG8USIYa1Z_dCVTEZkQrGwouHh1Q-a53IpBVqPoCn-r1v9sh2Yh1MQUDGrfl14mcB-W6bWRja5lYhRIL-0WWPQWXCX7mb9R3zFQXfrGdNzyxft4g4Ua3hBMcDCEZVOjyv087_F1RPA8O4SlrBCnfxWVytxWqNRPKskW-RBDwnF5gY4bO_uSsyv9LDhLz6d6KNANOf8maMDsYN_kkrpcw3r4PH6h6hPvzausGZ7NZsIT6GyJqJktvA9htbjQbwO5ttS86hKLxSSgIHRhynPwxi0f7uX8UGa3hqCPQlxv40vilaS7SzqXEu6VRl3bRkUDVKBftJtAgDjS2F3JLN4KiFONFaXFs5aFhwCjW_x800HpDiccufYxYPMMjr47wsUy-_Wyn9BlJL0sFupgKAAJqcX7fYIUJ-tiNUA5ubTa7NkP6ve6B66l5sw0xaQOH7xDnSp3-Ugu4guzy4s-ubwa-VBBKv60q4BI9VvM5WzFCk-ouBJMJ25NXiVcwde1wW-vUwRY2vLo4yNDbsXXI8WJnISvY5VQW13Si21QxaBz2jdqNMuaYIOd7e9jaQnjddtwuNyGnf4umSwSgPyDoywFE4eSvm7uoUSR8pVzLyaUuZuKZlJx2_vPIHNxVPnbMyKMw9uJ44-HFcBl81dL5Y8UHCCn0OD0Lg6OqdUu9TOxlCyVLtGBsAFOqtrKk90oWaikbLTZkG4WrAtaPHNvPxYmkeSE3E_ZsBlKpR30z1qohDRjAnaRsM5CM9r6JVUqNJUYJAsf1FHqeWrCHwHnhZZTJsEVE5A80lfNH_JW3nS0t5bYQj5dc=",
                            "customizations": []
                          }
                        ],
                        "tip": 100,
                        "total_with_tip": 2817,
                        "added_fees": {
                          "flat_fee_cents": 100,
                          "percent_fee": 50,
                          "is_fee_taxable": false,
                          "total_fee_cents": 936,
                          "sales_tax_cents": 0
                        }
                      },
                      "allOf": [
                        {
                          "required": [
                            "added_fees",
                            "items",
                            "misc_fees",
                            "quote",
                            "quote_id",
                            "store",
                            "store_address",
                            "store_id",
                            "tip",
                            "total_with_tip"
                          ],
                          "properties": {
                            "store": {
                              "type": "string",
                              "description": "The name of the store where the order was placed",
                              "example": "Denny's"
                            },
                            "store_address": {
                              "type": "string",
                              "description": "The address of the store where the order was placed",
                              "example": "816 Mission St, San Francisco, CA, 94103, US"
                            },
                            "store_id": {
                              "type": "string",
                              "description": "The MealMe store ID",
                              "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
                            },
                            "quote_id": {
                              "type": "string",
                              "description": "The MealMe Quote ID",
                              "example": "gAAAAABihzvxA4pMVWefTSN3GFOL7b3CYG5yPIRnGUNnEu8oD72y0SiHcDkoloajAINb3pI4Kw6R5qR694t5fCXc8_DnvoB0_BeBlCZ_zJmelaZ4jWfcnF5ySNVt29YYobrl5PMQduRavTxgb5E2IvgZakNNbAzP9rYwyApbdaZ6n_RCwz09IlN2iOoqUlnNVL1WF8dDwqI6-XWMiA3XDI_A-k4QyVPZ0yMZDP_LuRzEnQOYIQ23CCyHHz2imKBP4ySAMNgeIKv0ynYV-a1ZfMC_MjFVyK_OHCds8KmiAM8RHZWt6-wR2m2xqMhKOg8NFWU5gWzYFVL_"
                            },
                            "quote": {
                              "description": "The final quote summary including subtotal, tax, time estimate, quote fees, etc.",
                              "allOf": [
                                {
                                  "required": [
                                    "delivery_fee_cents",
                                    "delivery_time_max",
                                    "delivery_time_min",
                                    "expected_time_of_arrival",
                                    "sales_tax_cents",
                                    "scheduled",
                                    "service_fee_cents",
                                    "small_order_fee_cents",
                                    "subtotal",
                                    "total_without_tips"
                                  ],
                                  "properties": {
                                    "subtotal": {
                                      "type": "integer",
                                      "description": "The subtotal of the cart",
                                      "example": 1770
                                    },
                                    "delivery_fee_cents": {
                                      "type": "integer",
                                      "description": "The total delivery fee, in cents",
                                      "example": 49
                                    },
                                    "service_fee_cents": {
                                      "type": "integer",
                                      "description": "The total service fee, in cents",
                                      "example": 667
                                    },
                                    "small_order_fee_cents": {
                                      "type": "integer",
                                      "description": "The total small order fee, in cents",
                                      "example": 0
                                    },
                                    "sales_tax_cents": {
                                      "type": "integer",
                                      "description": "The total sales tax, in cents",
                                      "example": 142
                                    },
                                    "delivery_time_min": {
                                      "type": "integer",
                                      "description": "The minimum delivery time estimate, in minutes",
                                      "example": 25
                                    },
                                    "delivery_time_max": {
                                      "type": "integer",
                                      "description": "The maximum delivery time estimate, in minutes",
                                      "example": 40
                                    },
                                    "total_without_tips": {
                                      "type": "integer",
                                      "description": "The order amount excluding tips, in cents",
                                      "example": 2628
                                    },
                                    "expected_time_of_arrival": {
                                      "type": "string",
                                      "description": "The expected time of arrival, in user's timezone",
                                      "example": "09:20 PM"
                                    },
                                    "scheduled": {
                                      "description": "The scheduled delivery window corresponding to input parameter `scheduled_id` passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3)",
                                      "allOf": [
                                        {
                                          "required": [
                                            "delivery_fee",
                                            "maximum",
                                            "minimum"
                                          ],
                                          "properties": {
                                            "minimum": {
                                              "type": "integer",
                                              "description": "Timestamp (seconds since 1970)"
                                            },
                                            "maximum": {
                                              "type": "integer",
                                              "description": "Timestamp (seconds since 1970)"
                                            },
                                            "delivery_fee": {
                                              "description": "",
                                              "required": [
                                                "delivery_fee_flat",
                                                "delivery_fee_percent"
                                              ],
                                              "properties": {
                                                "delivery_fee_flat": {
                                                  "type": "integer",
                                                  "description": "Delivery fee amount in cents"
                                                },
                                                "delivery_fee_percent": {
                                                  "type": "number",
                                                  "description": "Delivery fee percentage"
                                                },
                                                "delivery_fee_taxable": {
                                                  "type": "boolean",
                                                  "description": "Whether the delivery fee is taxable or not"
                                                },
                                                "threshold_fees": {
                                                  "type": "array",
                                                  "description": "Threshold Fees, if they exist",
                                                  "items": {
                                                    "required": [
                                                      "threshold_cents",
                                                      "threshold_fee_cents"
                                                    ],
                                                    "properties": {
                                                      "threshold_cents": {
                                                        "type": "integer",
                                                        "description": "Subtotal that enacts a specific fee"
                                                      },
                                                      "threshold_fee_cents": {
                                                        "type": "integer",
                                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                      }
                                                    },
                                                    "type": "object"
                                                  }
                                                }
                                              },
                                              "type": "object"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      ]
                                    },
                                    "marked_subtotal": {
                                      "type": "integer",
                                      "description": "The subtotal of the cart including any provided marked prices, in cents",
                                      "example": 2000
                                    },
                                    "marked_total_without_tips": {
                                      "type": "integer",
                                      "description": "The order amount excluding tips, and including any provided marked prices, in cents",
                                      "example": 2800
                                    }
                                  },
                                  "type": "object"
                                }
                              ]
                            },
                            "items": {
                              "type": "array",
                              "description": "List of cart items",
                              "example": [
                                {
                                  "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                                  "notes": "No whipped cream."
                                }
                              ],
                              "items": {
                                "required": [
                                  "product_id"
                                ],
                                "properties": {
                                  "product_id": {
                                    "type": "string",
                                    "description": "The product's ID."
                                  },
                                  "quantity": {
                                    "type": "integer",
                                    "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                                  },
                                  "product_marked_price": {
                                    "type": "integer",
                                    "description": "The self-provided marked price (in cents) to be used in the email receipt."
                                  },
                                  "selected_options": {
                                    "type": "array",
                                    "description": "The list of selected options for the product.",
                                    "items": {
                                      "required": [
                                        "option_id",
                                        "quantity"
                                      ],
                                      "properties": {
                                        "option_id": {
                                          "type": "string",
                                          "description": "Option ID"
                                        },
                                        "quantity": {
                                          "type": "integer",
                                          "description": "The option quantity (must be greater than 0)"
                                        },
                                        "marked_price": {
                                          "type": "integer",
                                          "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "notes": {
                                    "type": "string",
                                    "description": "The product notes for the store."
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "tip": {
                              "type": "integer",
                              "description": "The total tip amount, in cents",
                              "example": 100
                            },
                            "total_with_tip": {
                              "type": "integer",
                              "description": "The total order amount including tip, in cents",
                              "example": 40
                            },
                            "added_fees": {
                              "description": "The total added fees for the cart, computed using the input `added_fee`passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3) or [](https://docs.mealme.ai/reference/post_courier_order)",
                              "example": 200,
                              "allOf": [
                                {
                                  "required": [
                                    "flat_fee_cents",
                                    "is_fee_taxable",
                                    "percent_fee",
                                    "sales_tax_cents",
                                    "total_fee_cents"
                                  ],
                                  "properties": {
                                    "flat_fee_cents": {
                                      "type": "integer",
                                      "description": "The API client added flat fee amount, in cents",
                                      "example": 100
                                    },
                                    "percent_fee": {
                                      "type": "integer",
                                      "description": "The API client added percent fee amount, in range 1-100",
                                      "example": 50
                                    },
                                    "is_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the API client added fee is taxable",
                                      "example": false
                                    },
                                    "total_fee_cents": {
                                      "type": "integer",
                                      "description": "The API client total added fee amount, in cents",
                                      "example": 985
                                    },
                                    "sales_tax_cents": {
                                      "type": "integer",
                                      "description": "The total sales tax amount charged for the API client added fee, in cents",
                                      "example": 0
                                    }
                                  },
                                  "type": "object"
                                }
                              ]
                            },
                            "misc_fees": {
                              "type": "array",
                              "description": "The list of miscellaneous fees applied on the order.",
                              "example": [
                                {
                                  "fee_name": "Chef tip",
                                  "fee_amount": 200
                                }
                              ],
                              "items": {
                                "required": [
                                  "fee_amount",
                                  "fee_name"
                                ],
                                "properties": {
                                  "fee_name": {
                                    "type": "string",
                                    "description": "Name of the fee"
                                  },
                                  "fee_amount": {
                                    "type": "integer",
                                    "description": "The fee amount, in cents"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "marked_total_with_tip": {
                              "type": "integer",
                              "description": "The total order amount including tip, and including any provided marked prices, in cents",
                              "example": 50
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "order_id": {
                      "type": "string",
                      "description": "The ID of the finalized order.",
                      "example": "-N8vZEd-UnW_gZu6c4iO"
                    },
                    "is_sandbox": {
                      "type": "boolean",
                      "description": "Whether the order is a sandbox order.",
                      "example": true
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Checkout Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason a checkout error was encountered.",
                      "example": "Checkout Error: Does not meet order minimum requirement."
                    },
                    "invalid_option_ids": {
                      "type": "array",
                      "description": "The list of invalid option IDs.",
                      "example": [
                        "n2z3o2ndeC_xNeD918jRVrgI-Oq6vUhuLkgiTnoAIhxWmZhKsqPRqcmz1joT4IvIPh1HnMC01yM070ODKJrE62x95u1IfLF1-89nJiFWkjEqUA6Gq4VKN14-MhZBc_d0gKU5AkrJYGIIpCbfzbK0pOhj3NIEhQHRkQaQr7CtID0UyQp-AxZRCobu80WU3rDACmdCMWHL3K_2ChtpMWS8eoVh_1xvqwUEEDEMio_98vLwamPyehQUTmebfgwz3RtjetNZR2fXIx3OLEUWGXbyzIlY7NGI9D3qD52PyxOSmQYEGf3lsaoXa03CIx8H1f19NrPOuGh2pnbZS-83Mf6DWKmDDjVXvq7JCCamVO1GPYxEeh5Hz9AnZsDJaLXVGGplwMu6zYRhxBMMG8nSu-UFc7UOGrBTBJlVJyC6Q3s-MlW3R8KaUA=="
                      ],
                      "items": {
                        "type": "string",
                        "description": "The option ID."
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The gateway timeout error message.",
                      "example": "Gateway Timeout"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Finalize Order",
        "operationId": "post_confirm_order",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "order_id"
                ],
                "properties": {
                  "order_id": {
                    "type": "string",
                    "description": "The ID of the order to be finalized. The order ID is provided by [Create Order](https://docs.mealme.ai/reference/post_order_v3), and can only be finalized when `place_order` is `false`. The final quote of orders finalized 10 minutes after making a request to [Create Order](https://docs.mealme.ai/reference/post_order_v3) is subject to change.",
                    "example": "-Mxak0IAuif3TvN9hBP7"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Order"
        ]
      }
    },
    "/cart/create": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "cart_id"
                  ],
                  "properties": {
                    "cart_id": {
                      "type": "string",
                      "description": "The ID of the newly created cart",
                      "example": "-N8vZEd-UnW_gZu6c4iO"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Checkout Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason a checkout error was encountered.",
                      "example": "Checkout Error: Does not meet order minimum requirement."
                    },
                    "invalid_option_ids": {
                      "type": "array",
                      "description": "The list of invalid option IDs.",
                      "example": [
                        "n2z3o2ndeC_xNeD918jRVrgI-Oq6vUhuLkgiTnoAIhxWmZhKsqPRqcmz1joT4IvIPh1HnMC01yM070ODKJrE62x95u1IfLF1-89nJiFWkjEqUA6Gq4VKN14-MhZBc_d0gKU5AkrJYGIIpCbfzbK0pOhj3NIEhQHRkQaQr7CtID0UyQp-AxZRCobu80WU3rDACmdCMWHL3K_2ChtpMWS8eoVh_1xvqwUEEDEMio_98vLwamPyehQUTmebfgwz3RtjetNZR2fXIx3OLEUWGXbyzIlY7NGI9D3qD52PyxOSmQYEGf3lsaoXa03CIx8H1f19NrPOuGh2pnbZS-83Mf6DWKmDDjVXvq7JCCamVO1GPYxEeh5Hz9AnZsDJaLXVGGplwMu6zYRhxBMMG8nSu-UFc7UOGrBTBJlVJyC6Q3s-MlW3R8KaUA=="
                      ],
                      "items": {
                        "type": "string",
                        "description": "The option ID."
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Create Cart",
        "operationId": "post_create_cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "items",
                  "pickup",
                  "user_id"
                ],
                "properties": {
                  "cart_id": {
                    "type": "string",
                    "description": "The optional ID of an existing cart to update.",
                    "default": "",
                    "example": "-N8vZEd-UnW_gZu6c4iO"
                  },
                  "items": {
                    "type": "array",
                    "description": "List of cart items.",
                    "default": [
                      {
                        "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                        "notes": "No whipped cream."
                      }
                    ],
                    "example": [
                      {
                        "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                        "notes": "No whipped cream."
                      }
                    ],
                    "items": {
                      "required": [
                        "product_id"
                      ],
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "description": "The product's ID."
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                        },
                        "product_marked_price": {
                          "type": "integer",
                          "description": "The self-provided marked price (in cents) to be used in the email receipt."
                        },
                        "selected_options": {
                          "type": "array",
                          "description": "The list of selected options for the product.",
                          "items": {
                            "required": [
                              "option_id",
                              "quantity"
                            ],
                            "properties": {
                              "option_id": {
                                "type": "string",
                                "description": "Option ID"
                              },
                              "quantity": {
                                "type": "integer",
                                "description": "The option quantity (must be greater than 0)"
                              },
                              "marked_price": {
                                "type": "integer",
                                "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                              }
                            },
                            "type": "object"
                          }
                        },
                        "notes": {
                          "type": "string",
                          "description": "The product notes for the store."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "pickup": {
                    "type": "boolean",
                    "description": "`true` for pickup quotes, `false` for delivery quotes.",
                    "default": false,
                    "example": false
                  },
                  "driver_tip_cents": {
                    "type": "integer",
                    "description": "The tip for the driver, in cents.",
                    "default": 100,
                    "example": 100
                  },
                  "user_latitude": {
                    "type": "number",
                    "description": "The latitude of the user.",
                    "default": 37.7786357,
                    "example": 37.7786357
                  },
                  "user_longitude": {
                    "type": "number",
                    "description": "The longitude of the user.",
                    "default": -122.3918135,
                    "example": -122.3918135
                  },
                  "user_street_num": {
                    "type": "string",
                    "description": "Street number of the user.",
                    "default": "188",
                    "example": "188"
                  },
                  "user_street_name": {
                    "type": "string",
                    "description": "Street name of the user.",
                    "default": "King Street",
                    "example": "King Street"
                  },
                  "user_apt_num": {
                    "type": "string",
                    "description": "Apartment number of the user",
                    "example": "108"
                  },
                  "user_city": {
                    "type": "string",
                    "description": "City of the user.",
                    "default": "San Francisco",
                    "example": "San Francisco"
                  },
                  "user_state": {
                    "type": "string",
                    "description": "State of the user.",
                    "default": "CA",
                    "example": "CA"
                  },
                  "user_country": {
                    "type": "string",
                    "description": "Country of the user. Can be `US` or `CA`.",
                    "default": "US",
                    "example": "US"
                  },
                  "user_zipcode": {
                    "type": "string",
                    "description": "Zipcode of the user.",
                    "default": "94107",
                    "example": "94107"
                  },
                  "user_dropoff_notes": {
                    "type": "string",
                    "description": "Dropoff delivery notes for the user.",
                    "default": "Leave in lobby",
                    "example": "Leave in lobby"
                  },
                  "user_name": {
                    "type": "string",
                    "description": "User's name, so the store and/or driver know who to give the food to at dropoff.",
                    "default": "Steve Jobs",
                    "example": "Steve Jobs"
                  },
                  "user_email": {
                    "type": "string",
                    "description": "User's email, for the order confirmation, updates, and tracking link.",
                    "default": "steve@apple.com",
                    "example": "steve@apple.com"
                  },
                  "user_phone": {
                    "type": "integer",
                    "description": "User's phone number, so the store and/or driver know who to call for pickup or delivery. Must include country code.",
                    "default": 14044442058,
                    "example": 14044442058
                  },
                  "user_id": {
                    "type": "string",
                    "description": "Unique User ID for the API customer's platform.",
                    "default": "7B36A9CF",
                    "example": "7B36A9CF"
                  },
                  "disable_sms": {
                    "type": "boolean",
                    "description": "Whether to send the user order status updates via SMS.",
                    "default": false,
                    "example": false
                  },
                  "email_receipt_specifications": {
                    "description": "Set of optional configurations used to modify email reciept",
                    "allOf": [
                      {
                        "properties": {
                          "prices_marked": {
                            "type": "boolean",
                            "description": "If `true`, the price(s) in the email receipt will reflect the amount(s) specified via the `product_marked_price` and `marked_price` input parameters. If `charge_user` is `true`, the total charged will also reflect these amount(s).",
                            "default": false,
                            "example": false
                          },
                          "added_fee": {
                            "description": "Your added service fee. Any added fees will be reflected in the email receipt and included in the total charged when `charger_user` is `true`.",
                            "allOf": [
                              {
                                "properties": {
                                  "added_fee_flat": {
                                    "type": "integer",
                                    "description": "Flat fee added by API client, in cents.",
                                    "default": 0,
                                    "example": 100
                                  },
                                  "added_fee_percent": {
                                    "type": "integer",
                                    "description": "Percent fee added by API client, range [0-100].",
                                    "default": 0,
                                    "example": 50
                                  },
                                  "is_added_fee_taxable": {
                                    "type": "boolean",
                                    "description": "Whether API client added fee is taxable.",
                                    "example": false
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "unify_service_fee": {
                            "type": "boolean",
                            "description": "Whether to combine the underlying service's service fee and your `added_fee` in one line item in the email receipt.",
                            "default": false,
                            "example": false
                          },
                          "misc_fees": {
                            "type": "array",
                            "description": "List of miscellaneous fees or discounts to display in the email receipt.",
                            "example": [
                              {
                                "fee_name": "Chef tip",
                                "fee_amount": 200
                              }
                            ],
                            "items": {
                              "required": [
                                "fee_amount",
                                "fee_name"
                              ],
                              "properties": {
                                "fee_name": {
                                  "type": "string",
                                  "description": "Name of the fee"
                                },
                                "fee_amount": {
                                  "type": "integer",
                                  "description": "The fee amount, in cents"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "disable_email": {
                            "type": "boolean",
                            "description": "Whether to send the user an email receipt.",
                            "default": false,
                            "example": false
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "customer_order_id": {
                    "type": "string",
                    "description": "The self provided order id to attach to this order. This will be returned in the response from [Get Orders](https://docs.mealme.ai/reference/get_account_orders) when looking up an order.",
                    "example": "ABC123"
                  },
                  "autofill_selected_options": {
                    "type": "boolean",
                    "description": "Whether to automatically select the default quantity for all options and fulfill all customization requirements.",
                    "default": false,
                    "example": false
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Cart"
        ]
      }
    },
    "/cart/add": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "cart_id",
                    "items",
                    "pickup",
                    "user_id"
                  ],
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "List of cart items.",
                      "default": [
                        {
                          "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                          "notes": "No whipped cream."
                        }
                      ],
                      "example": [
                        {
                          "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                          "notes": "No whipped cream."
                        }
                      ],
                      "items": {
                        "required": [
                          "product_id"
                        ],
                        "properties": {
                          "product_id": {
                            "type": "string",
                            "description": "The product's ID."
                          },
                          "quantity": {
                            "type": "integer",
                            "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                          },
                          "product_marked_price": {
                            "type": "integer",
                            "description": "The self-provided marked price (in cents) to be used in the email receipt."
                          },
                          "selected_options": {
                            "type": "array",
                            "description": "The list of selected options for the product.",
                            "items": {
                              "required": [
                                "option_id",
                                "quantity"
                              ],
                              "properties": {
                                "option_id": {
                                  "type": "string",
                                  "description": "Option ID"
                                },
                                "quantity": {
                                  "type": "integer",
                                  "description": "The option quantity (must be greater than 0)"
                                },
                                "marked_price": {
                                  "type": "integer",
                                  "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                                }
                              },
                              "type": "object"
                            }
                          },
                          "notes": {
                            "type": "string",
                            "description": "The product notes for the store."
                          }
                        },
                        "type": "object"
                      }
                    },
                    "pickup": {
                      "type": "boolean",
                      "description": "Whether the order is for pickup.",
                      "default": false,
                      "example": false
                    },
                    "driver_tip_cents": {
                      "type": "integer",
                      "description": "The tip for the driver, in cents.",
                      "default": 100,
                      "example": 100
                    },
                    "user_latitude": {
                      "type": "number",
                      "description": "The latitude of the user.",
                      "default": 37.7786357,
                      "example": 37.7786357
                    },
                    "user_longitude": {
                      "type": "number",
                      "description": "The longitude of the user.",
                      "default": -122.3918135,
                      "example": -122.3918135
                    },
                    "user_street_num": {
                      "type": "string",
                      "description": "Street number of the user.",
                      "default": "188",
                      "example": "188"
                    },
                    "user_street_name": {
                      "type": "string",
                      "description": "Street name of the user.",
                      "default": "King Street",
                      "example": "King Street"
                    },
                    "user_apt_num": {
                      "type": "string",
                      "description": "Apartment number of the user",
                      "example": "108"
                    },
                    "user_city": {
                      "type": "string",
                      "description": "City of the user.",
                      "default": "San Francisco",
                      "example": "San Francisco"
                    },
                    "user_state": {
                      "type": "string",
                      "description": "State of the user.",
                      "default": "CA",
                      "example": "CA"
                    },
                    "user_country": {
                      "type": "string",
                      "description": "Country of the user. Can be `US` or `CA`.",
                      "default": "US",
                      "example": "US"
                    },
                    "user_zipcode": {
                      "type": "string",
                      "description": "Zipcode of the user.",
                      "default": "94107",
                      "example": "94107"
                    },
                    "user_dropoff_notes": {
                      "type": "string",
                      "description": "Dropoff delivery notes for the user.",
                      "default": "Leave in lobby",
                      "example": "Leave in lobby"
                    },
                    "user_name": {
                      "type": "string",
                      "description": "User's name, so the store and/or driver know who to give the food to at dropoff.",
                      "default": "Steve Jobs",
                      "example": "Steve Jobs"
                    },
                    "user_email": {
                      "type": "string",
                      "description": "User's email, for the order confirmation, updates, and tracking link.",
                      "default": "steve@apple.com",
                      "example": "steve@apple.com"
                    },
                    "user_phone": {
                      "type": "integer",
                      "description": "User's phone number, so the store and/or driver know who to call for pickup or delivery. Must include country code.",
                      "default": 14044442058,
                      "example": 14044442058
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Unique User ID for the API customer's platform.",
                      "default": "7B36A9CF",
                      "example": "7B36A9CF"
                    },
                    "disable_sms": {
                      "type": "boolean",
                      "description": "Whether to send the user order status updates via SMS.",
                      "default": false,
                      "example": false
                    },
                    "email_receipt_specifications": {
                      "description": "Set of optional configurations used to modify email reciept",
                      "allOf": [
                        {
                          "properties": {
                            "prices_marked": {
                              "type": "boolean",
                              "description": "If `true`, the price(s) in the email receipt will reflect the amount(s) specified via the `product_marked_price` and `marked_price` input parameters. If `charge_user` is `true`, the total charged will also reflect these amount(s).",
                              "default": false,
                              "example": false
                            },
                            "added_fee": {
                              "description": "Your added service fee. Any added fees will be reflected in the email receipt and included in the total charged when `charger_user` is `true`.",
                              "allOf": [
                                {
                                  "properties": {
                                    "added_fee_flat": {
                                      "type": "integer",
                                      "description": "Flat fee added by API client, in cents.",
                                      "default": 0,
                                      "example": 100
                                    },
                                    "added_fee_percent": {
                                      "type": "integer",
                                      "description": "Percent fee added by API client, range [0-100].",
                                      "default": 0,
                                      "example": 50
                                    },
                                    "is_added_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether API client added fee is taxable.",
                                      "example": false
                                    }
                                  },
                                  "type": "object"
                                }
                              ]
                            },
                            "unify_service_fee": {
                              "type": "boolean",
                              "description": "Whether to combine the underlying service's service fee and your `added_fee` in one line item in the email receipt.",
                              "default": false,
                              "example": false
                            },
                            "misc_fees": {
                              "type": "array",
                              "description": "List of miscellaneous fees or discounts to display in the email receipt.",
                              "example": [
                                {
                                  "fee_name": "Chef tip",
                                  "fee_amount": 200
                                }
                              ],
                              "items": {
                                "required": [
                                  "fee_amount",
                                  "fee_name"
                                ],
                                "properties": {
                                  "fee_name": {
                                    "type": "string",
                                    "description": "Name of the fee"
                                  },
                                  "fee_amount": {
                                    "type": "integer",
                                    "description": "The fee amount, in cents"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "disable_email": {
                              "type": "boolean",
                              "description": "Whether to send the user an email receipt.",
                              "default": false,
                              "example": false
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "customer_order_id": {
                      "type": "string",
                      "description": "The self provided order id to attach to this order. This will be returned in the response from [Get Orders](https://docs.mealme.ai/reference/get_account_orders) when looking up an order.",
                      "example": "ABC123"
                    },
                    "autofill_selected_options": {
                      "type": "boolean",
                      "description": "Whether to automatically select the default quantity for all options and fulfill all customization requirements.",
                      "default": false,
                      "example": false
                    },
                    "store_id": {
                      "type": "string",
                      "description": "The ID of the cart's store.",
                      "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
                    },
                    "cart_id": {
                      "type": "string",
                      "description": "The ID of the cart.",
                      "example": "-NPBY2Msvi_c_0GgvKr8"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Checkout Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason a checkout error was encountered.",
                      "example": "Checkout Error: Does not meet order minimum requirement."
                    },
                    "invalid_option_ids": {
                      "type": "array",
                      "description": "The list of invalid option IDs.",
                      "example": [
                        "n2z3o2ndeC_xNeD918jRVrgI-Oq6vUhuLkgiTnoAIhxWmZhKsqPRqcmz1joT4IvIPh1HnMC01yM070ODKJrE62x95u1IfLF1-89nJiFWkjEqUA6Gq4VKN14-MhZBc_d0gKU5AkrJYGIIpCbfzbK0pOhj3NIEhQHRkQaQr7CtID0UyQp-AxZRCobu80WU3rDACmdCMWHL3K_2ChtpMWS8eoVh_1xvqwUEEDEMio_98vLwamPyehQUTmebfgwz3RtjetNZR2fXIx3OLEUWGXbyzIlY7NGI9D3qD52PyxOSmQYEGf3lsaoXa03CIx8H1f19NrPOuGh2pnbZS-83Mf6DWKmDDjVXvq7JCCamVO1GPYxEeh5Hz9AnZsDJaLXVGGplwMu6zYRhxBMMG8nSu-UFc7UOGrBTBJlVJyC6Q3s-MlW3R8KaUA=="
                      ],
                      "items": {
                        "type": "string",
                        "description": "The option ID."
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Add to Cart",
        "operationId": "post_add_to_cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "cart_id",
                  "items"
                ],
                "properties": {
                  "cart_id": {
                    "type": "string",
                    "description": "The ID of the cart to add item(s) to.",
                    "default": "",
                    "example": "-N8vZEd-UnW_gZu6c4iO"
                  },
                  "items": {
                    "type": "array",
                    "description": "List of items to add to a cart.",
                    "default": [
                      {
                        "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                        "notes": "No whipped cream."
                      }
                    ],
                    "example": [
                      {
                        "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                        "notes": "No whipped cream."
                      }
                    ],
                    "items": {
                      "required": [
                        "product_id"
                      ],
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "description": "The product's ID."
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                        },
                        "product_marked_price": {
                          "type": "integer",
                          "description": "The self-provided marked price (in cents) to be used in the email receipt."
                        },
                        "selected_options": {
                          "type": "array",
                          "description": "The list of selected options for the product.",
                          "items": {
                            "required": [
                              "option_id",
                              "quantity"
                            ],
                            "properties": {
                              "option_id": {
                                "type": "string",
                                "description": "Option ID"
                              },
                              "quantity": {
                                "type": "integer",
                                "description": "The option quantity (must be greater than 0)"
                              },
                              "marked_price": {
                                "type": "integer",
                                "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                              }
                            },
                            "type": "object"
                          }
                        },
                        "notes": {
                          "type": "string",
                          "description": "The product notes for the store."
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Cart"
        ]
      }
    },
    "/cart/remove": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "cart_id",
                    "items",
                    "pickup",
                    "user_id"
                  ],
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "List of cart items.",
                      "default": [
                        {
                          "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                          "notes": "No whipped cream."
                        }
                      ],
                      "example": [
                        {
                          "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                          "notes": "No whipped cream."
                        }
                      ],
                      "items": {
                        "required": [
                          "product_id"
                        ],
                        "properties": {
                          "product_id": {
                            "type": "string",
                            "description": "The product's ID."
                          },
                          "quantity": {
                            "type": "integer",
                            "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                          },
                          "product_marked_price": {
                            "type": "integer",
                            "description": "The self-provided marked price (in cents) to be used in the email receipt."
                          },
                          "selected_options": {
                            "type": "array",
                            "description": "The list of selected options for the product.",
                            "items": {
                              "required": [
                                "option_id",
                                "quantity"
                              ],
                              "properties": {
                                "option_id": {
                                  "type": "string",
                                  "description": "Option ID"
                                },
                                "quantity": {
                                  "type": "integer",
                                  "description": "The option quantity (must be greater than 0)"
                                },
                                "marked_price": {
                                  "type": "integer",
                                  "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                                }
                              },
                              "type": "object"
                            }
                          },
                          "notes": {
                            "type": "string",
                            "description": "The product notes for the store."
                          }
                        },
                        "type": "object"
                      }
                    },
                    "pickup": {
                      "type": "boolean",
                      "description": "Whether the order is for pickup.",
                      "default": false,
                      "example": false
                    },
                    "driver_tip_cents": {
                      "type": "integer",
                      "description": "The tip for the driver, in cents.",
                      "default": 100,
                      "example": 100
                    },
                    "user_latitude": {
                      "type": "number",
                      "description": "The latitude of the user.",
                      "default": 37.7786357,
                      "example": 37.7786357
                    },
                    "user_longitude": {
                      "type": "number",
                      "description": "The longitude of the user.",
                      "default": -122.3918135,
                      "example": -122.3918135
                    },
                    "user_street_num": {
                      "type": "string",
                      "description": "Street number of the user.",
                      "default": "188",
                      "example": "188"
                    },
                    "user_street_name": {
                      "type": "string",
                      "description": "Street name of the user.",
                      "default": "King Street",
                      "example": "King Street"
                    },
                    "user_apt_num": {
                      "type": "string",
                      "description": "Apartment number of the user",
                      "example": "108"
                    },
                    "user_city": {
                      "type": "string",
                      "description": "City of the user.",
                      "default": "San Francisco",
                      "example": "San Francisco"
                    },
                    "user_state": {
                      "type": "string",
                      "description": "State of the user.",
                      "default": "CA",
                      "example": "CA"
                    },
                    "user_country": {
                      "type": "string",
                      "description": "Country of the user. Can be `US` or `CA`.",
                      "default": "US",
                      "example": "US"
                    },
                    "user_zipcode": {
                      "type": "string",
                      "description": "Zipcode of the user.",
                      "default": "94107",
                      "example": "94107"
                    },
                    "user_dropoff_notes": {
                      "type": "string",
                      "description": "Dropoff delivery notes for the user.",
                      "default": "Leave in lobby",
                      "example": "Leave in lobby"
                    },
                    "user_name": {
                      "type": "string",
                      "description": "User's name, so the store and/or driver know who to give the food to at dropoff.",
                      "default": "Steve Jobs",
                      "example": "Steve Jobs"
                    },
                    "user_email": {
                      "type": "string",
                      "description": "User's email, for the order confirmation, updates, and tracking link.",
                      "default": "steve@apple.com",
                      "example": "steve@apple.com"
                    },
                    "user_phone": {
                      "type": "integer",
                      "description": "User's phone number, so the store and/or driver know who to call for pickup or delivery. Must include country code.",
                      "default": 14044442058,
                      "example": 14044442058
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Unique User ID for the API customer's platform.",
                      "default": "7B36A9CF",
                      "example": "7B36A9CF"
                    },
                    "disable_sms": {
                      "type": "boolean",
                      "description": "Whether to send the user order status updates via SMS.",
                      "default": false,
                      "example": false
                    },
                    "email_receipt_specifications": {
                      "description": "Set of optional configurations used to modify email reciept",
                      "allOf": [
                        {
                          "properties": {
                            "prices_marked": {
                              "type": "boolean",
                              "description": "If `true`, the price(s) in the email receipt will reflect the amount(s) specified via the `product_marked_price` and `marked_price` input parameters. If `charge_user` is `true`, the total charged will also reflect these amount(s).",
                              "default": false,
                              "example": false
                            },
                            "added_fee": {
                              "description": "Your added service fee. Any added fees will be reflected in the email receipt and included in the total charged when `charger_user` is `true`.",
                              "allOf": [
                                {
                                  "properties": {
                                    "added_fee_flat": {
                                      "type": "integer",
                                      "description": "Flat fee added by API client, in cents.",
                                      "default": 0,
                                      "example": 100
                                    },
                                    "added_fee_percent": {
                                      "type": "integer",
                                      "description": "Percent fee added by API client, range [0-100].",
                                      "default": 0,
                                      "example": 50
                                    },
                                    "is_added_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether API client added fee is taxable.",
                                      "example": false
                                    }
                                  },
                                  "type": "object"
                                }
                              ]
                            },
                            "unify_service_fee": {
                              "type": "boolean",
                              "description": "Whether to combine the underlying service's service fee and your `added_fee` in one line item in the email receipt.",
                              "default": false,
                              "example": false
                            },
                            "misc_fees": {
                              "type": "array",
                              "description": "List of miscellaneous fees or discounts to display in the email receipt.",
                              "example": [
                                {
                                  "fee_name": "Chef tip",
                                  "fee_amount": 200
                                }
                              ],
                              "items": {
                                "required": [
                                  "fee_amount",
                                  "fee_name"
                                ],
                                "properties": {
                                  "fee_name": {
                                    "type": "string",
                                    "description": "Name of the fee"
                                  },
                                  "fee_amount": {
                                    "type": "integer",
                                    "description": "The fee amount, in cents"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "disable_email": {
                              "type": "boolean",
                              "description": "Whether to send the user an email receipt.",
                              "default": false,
                              "example": false
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "customer_order_id": {
                      "type": "string",
                      "description": "The self provided order id to attach to this order. This will be returned in the response from [Get Orders](https://docs.mealme.ai/reference/get_account_orders) when looking up an order.",
                      "example": "ABC123"
                    },
                    "autofill_selected_options": {
                      "type": "boolean",
                      "description": "Whether to automatically select the default quantity for all options and fulfill all customization requirements.",
                      "default": false,
                      "example": false
                    },
                    "store_id": {
                      "type": "string",
                      "description": "The ID of the cart's store.",
                      "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
                    },
                    "cart_id": {
                      "type": "string",
                      "description": "The ID of the cart.",
                      "example": "-NPBY2Msvi_c_0GgvKr8"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Remove from Cart",
        "operationId": "post_remove_from_cart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "cart_id",
                  "items"
                ],
                "properties": {
                  "cart_id": {
                    "type": "string",
                    "description": "The ID of the cart to remove item(s) from.",
                    "default": "",
                    "example": "-N8vZEd-UnW_gZu6c4iO"
                  },
                  "items": {
                    "type": "array",
                    "description": "List of items to remove from a cart.",
                    "default": [
                      {
                        "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                        "notes": "No whipped cream."
                      }
                    ],
                    "example": [
                      {
                        "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                        "notes": "No whipped cream."
                      }
                    ],
                    "items": {
                      "required": [
                        "product_id"
                      ],
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "description": "The product's ID."
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                        },
                        "product_marked_price": {
                          "type": "integer",
                          "description": "The self-provided marked price (in cents) to be used in the email receipt."
                        },
                        "selected_options": {
                          "type": "array",
                          "description": "The list of selected options for the product.",
                          "items": {
                            "required": [
                              "option_id",
                              "quantity"
                            ],
                            "properties": {
                              "option_id": {
                                "type": "string",
                                "description": "Option ID"
                              },
                              "quantity": {
                                "type": "integer",
                                "description": "The option quantity (must be greater than 0)"
                              },
                              "marked_price": {
                                "type": "integer",
                                "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                              }
                            },
                            "type": "object"
                          }
                        },
                        "notes": {
                          "type": "string",
                          "description": "The product notes for the store."
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Cart"
        ]
      }
    },
    "/cart/retrieve": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "cart_id",
                    "items",
                    "pickup",
                    "user_id"
                  ],
                  "properties": {
                    "items": {
                      "type": "array",
                      "description": "List of cart items.",
                      "example": [
                        {
                          "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                          "notes": "No whipped cream."
                        }
                      ],
                      "items": {
                        "required": [
                          "product_id"
                        ],
                        "properties": {
                          "product_id": {
                            "type": "string",
                            "description": "The product's ID."
                          },
                          "quantity": {
                            "type": "integer",
                            "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                          },
                          "product_marked_price": {
                            "type": "integer",
                            "description": "The self-provided marked price (in cents) to be used in the email receipt."
                          },
                          "selected_options": {
                            "type": "array",
                            "description": "The list of selected options for the product.",
                            "items": {
                              "required": [
                                "option_id",
                                "quantity"
                              ],
                              "properties": {
                                "option_id": {
                                  "type": "string",
                                  "description": "Option ID"
                                },
                                "quantity": {
                                  "type": "integer",
                                  "description": "The option quantity (must be greater than 0)"
                                },
                                "marked_price": {
                                  "type": "integer",
                                  "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                                }
                              },
                              "type": "object"
                            }
                          },
                          "notes": {
                            "type": "string",
                            "description": "The product notes for the store."
                          }
                        },
                        "type": "object"
                      }
                    },
                    "pickup": {
                      "type": "boolean",
                      "description": "Whether the order is for pickup.",
                      "default": false,
                      "example": false
                    },
                    "driver_tip_cents": {
                      "type": "integer",
                      "description": "The tip for the driver, in cents.",
                      "default": 100,
                      "example": 100
                    },
                    "user_latitude": {
                      "type": "number",
                      "description": "The latitude of the user.",
                      "default": 37.7786357,
                      "example": 37.7786357
                    },
                    "user_longitude": {
                      "type": "number",
                      "description": "The longitude of the user.",
                      "default": -122.3918135,
                      "example": -122.3918135
                    },
                    "user_street_num": {
                      "type": "string",
                      "description": "Street number of the user.",
                      "default": "188",
                      "example": "188"
                    },
                    "user_street_name": {
                      "type": "string",
                      "description": "Street name of the user.",
                      "default": "King Street",
                      "example": "King Street"
                    },
                    "user_apt_num": {
                      "type": "string",
                      "description": "Apartment number of the user",
                      "example": "108"
                    },
                    "user_city": {
                      "type": "string",
                      "description": "City of the user.",
                      "default": "San Francisco",
                      "example": "San Francisco"
                    },
                    "user_state": {
                      "type": "string",
                      "description": "State of the user.",
                      "default": "CA",
                      "example": "CA"
                    },
                    "user_country": {
                      "type": "string",
                      "description": "Country of the user. Can be `US` or `CA`.",
                      "default": "US",
                      "example": "US"
                    },
                    "user_zipcode": {
                      "type": "string",
                      "description": "Zipcode of the user.",
                      "default": "94107",
                      "example": "94107"
                    },
                    "user_dropoff_notes": {
                      "type": "string",
                      "description": "Dropoff delivery notes for the user.",
                      "default": "Leave in lobby",
                      "example": "Leave in lobby"
                    },
                    "user_name": {
                      "type": "string",
                      "description": "User's name, so the store and/or driver know who to give the food to at dropoff.",
                      "default": "Steve Jobs",
                      "example": "Steve Jobs"
                    },
                    "user_email": {
                      "type": "string",
                      "description": "User's email, for the order confirmation, updates, and tracking link.",
                      "default": "steve@apple.com",
                      "example": "steve@apple.com"
                    },
                    "user_phone": {
                      "type": "integer",
                      "description": "User's phone number, so the store and/or driver know who to call for pickup or delivery. Must include country code.",
                      "default": 14044442058,
                      "example": 14044442058
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Unique User ID for the API customer's platform.",
                      "default": "7B36A9CF",
                      "example": "7B36A9CF"
                    },
                    "disable_sms": {
                      "type": "boolean",
                      "description": "Whether to send the user order status updates via SMS.",
                      "default": false,
                      "example": false
                    },
                    "email_receipt_specifications": {
                      "description": "Set of optional configurations used to modify email reciept",
                      "allOf": [
                        {
                          "properties": {
                            "prices_marked": {
                              "type": "boolean",
                              "description": "If `true`, the price(s) in the email receipt will reflect the amount(s) specified via the `product_marked_price` and `marked_price` input parameters. If `charge_user` is `true`, the total charged will also reflect these amount(s).",
                              "default": false,
                              "example": false
                            },
                            "added_fee": {
                              "description": "Your added service fee. Any added fees will be reflected in the email receipt and included in the total charged when `charger_user` is `true`.",
                              "allOf": [
                                {
                                  "properties": {
                                    "added_fee_flat": {
                                      "type": "integer",
                                      "description": "Flat fee added by API client, in cents.",
                                      "default": 0,
                                      "example": 100
                                    },
                                    "added_fee_percent": {
                                      "type": "integer",
                                      "description": "Percent fee added by API client, range [0-100].",
                                      "default": 0,
                                      "example": 50
                                    },
                                    "is_added_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether API client added fee is taxable.",
                                      "example": false
                                    }
                                  },
                                  "type": "object"
                                }
                              ]
                            },
                            "unify_service_fee": {
                              "type": "boolean",
                              "description": "Whether to combine the underlying service's service fee and your `added_fee` in one line item in the email receipt.",
                              "default": false,
                              "example": false
                            },
                            "misc_fees": {
                              "type": "array",
                              "description": "List of miscellaneous fees or discounts to display in the email receipt.",
                              "example": [
                                {
                                  "fee_name": "Chef tip",
                                  "fee_amount": 200
                                }
                              ],
                              "items": {
                                "required": [
                                  "fee_amount",
                                  "fee_name"
                                ],
                                "properties": {
                                  "fee_name": {
                                    "type": "string",
                                    "description": "Name of the fee"
                                  },
                                  "fee_amount": {
                                    "type": "integer",
                                    "description": "The fee amount, in cents"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "disable_email": {
                              "type": "boolean",
                              "description": "Whether to send the user an email receipt.",
                              "default": false,
                              "example": false
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "customer_order_id": {
                      "type": "string",
                      "description": "The self provided order id to attach to this order. This will be returned in the response from [Get Orders](https://docs.mealme.ai/reference/get_account_orders) when looking up an order.",
                      "example": "ABC123"
                    },
                    "autofill_selected_options": {
                      "type": "boolean",
                      "description": "Whether to automatically select the default quantity for all options and fulfill all customization requirements.",
                      "default": false,
                      "example": false
                    },
                    "store_id": {
                      "type": "string",
                      "description": "The ID of the cart's store.",
                      "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
                    },
                    "cart_id": {
                      "type": "string",
                      "description": "The ID of the cart.",
                      "example": "-NPBY2Msvi_c_0GgvKr8"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Retrieve Cart",
        "operationId": "get_retrieve_cart",
        "parameters": [
          {
            "name": "cart_id",
            "in": "query",
            "required": true,
            "description": "The ID of the cart to retrieve.",
            "schema": {
              "type": "string",
              "default": "-N8vZEd-UnW_gZu6c4iO"
            }
          }
        ],
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Cart"
        ]
      }
    },
    "/cart/list": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "carts"
                  ],
                  "properties": {
                    "carts": {
                      "type": "array",
                      "description": "List of carts.",
                      "example": [
                        {
                          "items": [
                            {
                              "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                              "selected_options": [
                                {
                                  "option_id": "gAAAAAAAAAAAvcAsFofXR7XlzNv5B6-g-rAwJFDta7zt94Yg9eLLrwjlri1BholqW5kmJdCjTdOx-onRBaLrkLH0gJyALVdHPQ3RrgwdzKixuyBDcl2pcC3Yw7WydclLYPdeZoFu7k9hzaSuKxC0RiYH9cUghhNRB6OaBmEWSRIBY_IsFT8uJ0DtFc1v9wF-K0OmBQ6QLrV1dT3fYTTtgnWNrrjZBLL2P1N3d77_CJAlvWNyvnksU2srG3rxM1GuZeN_tmvUQ0cz4NLdq8j8ZTfI8p0ILJ1dyE24krn5_rfalZvV33AylZ5TIHbh5LG6u-QY_NERjzUHK1uLUyjKYgGsq22wM4-uSGi1XTLqN7NngiGl8TQFsrh7r60XiBvB_dl0TN6sUawnDhbc3OLo6QvFWMG0-5ZhWaklnVXP59__N1WE9Jgze9jBfd30KgCNM76hxVCu5Y0seNvrLbDxAvaeW1Cqf37JNb1yxqvfVSI7Y92FnelFAa5OdPTOXdvXtSpGlH8biIvihF-ZTMUpfoGOLD2vF5tQwlImLG0V64l1TpIobps8GxoYChCknaUjGJqJ6H6lN3sHeCntpUd09hDpnlEv2yxRv1ocXmTQwuHXuI7NiZ1pmUpbrktD8iBNgmkIiOFPVqE8",
                                  "quantity": 1
                                }
                              ],
                              "notes": "No whipped cream."
                            },
                            {
                              "product_id": "gAAAAABjG7vcilemNMYoldpPlDj4EoX3i0Z2SD02sdIfwANAnRm7inPVS7qqUbRMKZSqsYk_PEbZA6fZ1ek9e50iyhN6YqwoZGL16oC942H9gZ5Kxx6D0nUQXZbiWmrvzq1bjYlu01PTWhJV_RDOF-3iSit3wKQoxDOrguqoEk7jHqRMXEd7pR7IUk01-KaIGVX2YZfELRKLwIJHmdVu1elgRu-7msIiWITDU5VmjeZLo4Zx_D6p4in9T5aecFYowlXj9hhq42J1SpFJynrl06Tw7r8uA04ClKkSBGrSRVyjeGVIHq_0OZQ1cDV5hLfdcn8CUn_duwmjZYcfI5phC_ILtEnS2-l1e9_bcyonB_WRzyQVz_nyFk5ZkUDp9QHZZeCUQb2D_8AW7F9Ly76g0-RJctvXa1SKe9dNGjDFDngvOjr20XgI6Blgr3kwl67K-R7hohZcHLJN0jw-jnUg9iaZA4rJP5NU9cZP5kAEkVMCLK8jKQ7ePxwraG20p6HFYfjZ2MYGPwACtBcpYcxSLuycbSnedWCzL0koFj7uEKfcP8fdJQq0lNa8QjmFYTnoHpQaZTYdxVpJkJBTTg8Xk5tXUYdcnfImU6kO9CXjAIFxU6KXsftphxrNc9dalLxGEBJxYOOQGhROvsrk6S2ECfFwfSIW9nCaBbnw97OOJm91orncP2F1cAprQngbFzrEnKywYeB2E_dRgPXN4KsIEvhXtivA0_DnsSZq30GlO_U6j2Fkuv4KQUHr--XPxzjjeWwYRco1oet-0zbJQwOfHKfiWD9rNxVIQpHiSCmrV4IloldnKoPPY1s=",
                              "selected_options": [],
                              "notes": ""
                            }
                          ],
                          "pickup": false,
                          "driver_tip_cents": 100,
                          "user_latitude": 37.7786357,
                          "user_longitude": -122.3918135,
                          "user_street_num": "188",
                          "user_street_name": "King Street",
                          "user_apt_num": "108",
                          "user_city": "San Francisco",
                          "user_state": "CA",
                          "user_country": "US",
                          "user_zipcode": "94107",
                          "user_dropoff_notes": "Leave in lobby",
                          "user_name": "Steve Jobs",
                          "user_email": "steve@apple.com",
                          "user_phone": 14044442058,
                          "user_id": "7B36A9CF",
                          "disable_sms": false,
                          "email_receipt_specifications": {
                            "prices_marked": false,
                            "added_fee": {
                              "added_fee_flat": 100,
                              "added_fee_percent": 50,
                              "is_added_fee_taxable": false
                            },
                            "unify_service_fee": false,
                            "misc_fees": [
                              {
                                "fee_name": "Chef tip",
                                "fee_amount": 200
                              }
                            ],
                            "disable_email": false
                          },
                          "customer_order_id": "ABC123",
                          "autofill_selected_options": false
                        }
                      ],
                      "items": {
                        "required": [
                          "cart_id",
                          "items",
                          "pickup",
                          "user_id"
                        ],
                        "properties": {
                          "items": {
                            "type": "array",
                            "description": "List of cart items.",
                            "example": [
                              {
                                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                                "notes": "No whipped cream."
                              }
                            ],
                            "items": {
                              "required": [
                                "product_id"
                              ],
                              "properties": {
                                "product_id": {
                                  "type": "string",
                                  "description": "The product's ID."
                                },
                                "quantity": {
                                  "type": "integer",
                                  "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                                },
                                "product_marked_price": {
                                  "type": "integer",
                                  "description": "The self-provided marked price (in cents) to be used in the email receipt."
                                },
                                "selected_options": {
                                  "type": "array",
                                  "description": "The list of selected options for the product.",
                                  "items": {
                                    "required": [
                                      "option_id",
                                      "quantity"
                                    ],
                                    "properties": {
                                      "option_id": {
                                        "type": "string",
                                        "description": "Option ID"
                                      },
                                      "quantity": {
                                        "type": "integer",
                                        "description": "The option quantity (must be greater than 0)"
                                      },
                                      "marked_price": {
                                        "type": "integer",
                                        "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "notes": {
                                  "type": "string",
                                  "description": "The product notes for the store."
                                }
                              },
                              "type": "object"
                            }
                          },
                          "pickup": {
                            "type": "boolean",
                            "description": "Whether the order is for pickup.",
                            "default": false,
                            "example": false
                          },
                          "driver_tip_cents": {
                            "type": "integer",
                            "description": "The tip for the driver, in cents.",
                            "default": 100,
                            "example": 100
                          },
                          "user_latitude": {
                            "type": "number",
                            "description": "The latitude of the user.",
                            "default": 37.7786357,
                            "example": 37.7786357
                          },
                          "user_longitude": {
                            "type": "number",
                            "description": "The longitude of the user.",
                            "default": -122.3918135,
                            "example": -122.3918135
                          },
                          "user_street_num": {
                            "type": "string",
                            "description": "Street number of the user.",
                            "default": "188",
                            "example": "188"
                          },
                          "user_street_name": {
                            "type": "string",
                            "description": "Street name of the user.",
                            "default": "King Street",
                            "example": "King Street"
                          },
                          "user_apt_num": {
                            "type": "string",
                            "description": "Apartment number of the user",
                            "example": "108"
                          },
                          "user_city": {
                            "type": "string",
                            "description": "City of the user.",
                            "default": "San Francisco",
                            "example": "San Francisco"
                          },
                          "user_state": {
                            "type": "string",
                            "description": "State of the user.",
                            "default": "CA",
                            "example": "CA"
                          },
                          "user_country": {
                            "type": "string",
                            "description": "Country of the user. Can be `US` or `CA`.",
                            "default": "US",
                            "example": "US"
                          },
                          "user_zipcode": {
                            "type": "string",
                            "description": "Zipcode of the user.",
                            "default": "94107",
                            "example": "94107"
                          },
                          "user_dropoff_notes": {
                            "type": "string",
                            "description": "Dropoff delivery notes for the user.",
                            "default": "Leave in lobby",
                            "example": "Leave in lobby"
                          },
                          "user_name": {
                            "type": "string",
                            "description": "User's name, so the store and/or driver know who to give the food to at dropoff.",
                            "default": "Steve Jobs",
                            "example": "Steve Jobs"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "User's email, for the order confirmation, updates, and tracking link.",
                            "default": "steve@apple.com",
                            "example": "steve@apple.com"
                          },
                          "user_phone": {
                            "type": "integer",
                            "description": "User's phone number, so the store and/or driver know who to call for pickup or delivery. Must include country code.",
                            "default": 14044442058,
                            "example": 14044442058
                          },
                          "user_id": {
                            "type": "string",
                            "description": "Unique User ID for the API customer's platform.",
                            "default": "7B36A9CF",
                            "example": "7B36A9CF"
                          },
                          "disable_sms": {
                            "type": "boolean",
                            "description": "Whether to send the user order status updates via SMS.",
                            "default": false,
                            "example": false
                          },
                          "email_receipt_specifications": {
                            "description": "Set of optional configurations used to modify email reciept",
                            "allOf": [
                              {
                                "properties": {
                                  "prices_marked": {
                                    "type": "boolean",
                                    "description": "If `true`, the price(s) in the email receipt will reflect the amount(s) specified via the `product_marked_price` and `marked_price` input parameters. If `charge_user` is `true`, the total charged will also reflect these amount(s).",
                                    "default": false,
                                    "example": false
                                  },
                                  "added_fee": {
                                    "description": "Your added service fee. Any added fees will be reflected in the email receipt and included in the total charged when `charger_user` is `true`.",
                                    "allOf": [
                                      {
                                        "properties": {
                                          "added_fee_flat": {
                                            "type": "integer",
                                            "description": "Flat fee added by API client, in cents.",
                                            "default": 0,
                                            "example": 100
                                          },
                                          "added_fee_percent": {
                                            "type": "integer",
                                            "description": "Percent fee added by API client, range [0-100].",
                                            "default": 0,
                                            "example": 50
                                          },
                                          "is_added_fee_taxable": {
                                            "type": "boolean",
                                            "description": "Whether API client added fee is taxable.",
                                            "example": false
                                          }
                                        },
                                        "type": "object"
                                      }
                                    ]
                                  },
                                  "unify_service_fee": {
                                    "type": "boolean",
                                    "description": "Whether to combine the underlying service's service fee and your `added_fee` in one line item in the email receipt.",
                                    "default": false,
                                    "example": false
                                  },
                                  "misc_fees": {
                                    "type": "array",
                                    "description": "List of miscellaneous fees or discounts to display in the email receipt.",
                                    "example": [
                                      {
                                        "fee_name": "Chef tip",
                                        "fee_amount": 200
                                      }
                                    ],
                                    "items": {
                                      "required": [
                                        "fee_amount",
                                        "fee_name"
                                      ],
                                      "properties": {
                                        "fee_name": {
                                          "type": "string",
                                          "description": "Name of the fee"
                                        },
                                        "fee_amount": {
                                          "type": "integer",
                                          "description": "The fee amount, in cents"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "disable_email": {
                                    "type": "boolean",
                                    "description": "Whether to send the user an email receipt.",
                                    "default": false,
                                    "example": false
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "customer_order_id": {
                            "type": "string",
                            "description": "The self provided order id to attach to this order. This will be returned in the response from [Get Orders](https://docs.mealme.ai/reference/get_account_orders) when looking up an order.",
                            "example": "ABC123"
                          },
                          "autofill_selected_options": {
                            "type": "boolean",
                            "description": "Whether to automatically select the default quantity for all options and fulfill all customization requirements.",
                            "default": false,
                            "example": false
                          },
                          "store_id": {
                            "type": "string",
                            "description": "The ID of the cart's store.",
                            "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
                          },
                          "cart_id": {
                            "type": "string",
                            "description": "The ID of the cart.",
                            "example": "-NPBY2Msvi_c_0GgvKr8"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "List Carts",
        "operationId": "get_list_carts",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "description": "The ID of the user whose carts will be retrieved.",
            "schema": {
              "type": "string",
              "default": "7B36A9CF"
            }
          }
        ],
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Cart"
        ]
      }
    },
    "/location/geocode/v2": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "lat",
                    "lng"
                  ],
                  "properties": {
                    "lat": {
                      "type": "number",
                      "description": "Latitude",
                      "example": 37.7595832
                    },
                    "lng": {
                      "type": "number",
                      "description": "Longitude",
                      "example": -122.4462994
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Geocode",
        "operationId": "post_geocode_address_v2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "address"
                ],
                "properties": {
                  "address": {
                    "type": "string",
                    "description": "Address",
                    "example": "1344 Clayton St, San Francisco, CA 94114"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Location"
        ]
      }
    },
    "/location/reverse_geocode/v2": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "address_components",
                    "formatted_address"
                  ],
                  "properties": {
                    "formatted_address": {
                      "type": "string",
                      "description": "Address",
                      "example": "1340 Clayton St, San Francisco, CA 94114, USA"
                    },
                    "address_components": {
                      "description": "Address broken down into its different parts (street, state, zipcode, etc.)",
                      "allOf": [
                        {
                          "required": [
                            "city",
                            "country",
                            "state",
                            "street_name",
                            "street_num",
                            "zipcode"
                          ],
                          "properties": {
                            "street_num": {
                              "type": "string",
                              "example": "1340",
                              "description": ""
                            },
                            "street_name": {
                              "type": "string",
                              "example": "Clayton Street",
                              "description": ""
                            },
                            "city": {
                              "type": "string",
                              "example": "San Francisco",
                              "description": ""
                            },
                            "zipcode": {
                              "type": "string",
                              "example": "94114",
                              "description": ""
                            },
                            "state": {
                              "type": "string",
                              "example": "CA",
                              "description": ""
                            },
                            "country": {
                              "type": "string",
                              "example": "US",
                              "description": ""
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Reverse Geocode",
        "operationId": "post_reverse_geocode_address_v2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "lat",
                  "lng"
                ],
                "properties": {
                  "lat": {
                    "type": "number",
                    "description": "Latitude",
                    "example": "37.7597036"
                  },
                  "lng": {
                    "type": "number",
                    "description": "Longitude",
                    "example": "-122.4463143"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Location"
        ]
      }
    },
    "/places/search": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "places"
                  ],
                  "properties": {
                    "places": {
                      "type": "array",
                      "description": "List of nearby places or addresses",
                      "items": {
                        "required": [
                          "place_address",
                          "place_address_components"
                        ],
                        "properties": {
                          "mealme_store_id": {
                            "type": "string",
                            "description": "MealMe ID of the place, if it exists in MealMe",
                            "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
                          },
                          "mealme_place_id": {
                            "type": "string",
                            "description": "MealMe Place ID",
                            "example": "ed23c9c7-6e3e-46f6-b7d4-54aee08c9708"
                          },
                          "google_place_id": {
                            "type": "string",
                            "description": "Google Place ID",
                            "example": "ed23c9c7-6e3e-46f6-b7d4-54aee08c9708"
                          },
                          "place_link": {
                            "type": "string",
                            "description": "Website link of the Place",
                            "example": "https://locations.dennys.com/CA/SAN-FRANCISCO/246873"
                          },
                          "place_name": {
                            "type": "string",
                            "description": "Name of the place",
                            "example": "Denny's"
                          },
                          "place_address": {
                            "type": "string",
                            "description": "Address of the place",
                            "example": "816 Mission St, San Francisco, CA 94103, US"
                          },
                          "place_address_components": {
                            "description": "Address of the place broken down into its different parts (street address, state, zipcode, etc.)",
                            "allOf": [
                              {
                                "required": [
                                  "city",
                                  "country",
                                  "state",
                                  "street_addr",
                                  "zipcode"
                                ],
                                "properties": {
                                  "street_addr": {
                                    "type": "string",
                                    "example": "816 Mission St",
                                    "description": ""
                                  },
                                  "city": {
                                    "type": "string",
                                    "example": "San Francisco",
                                    "description": ""
                                  },
                                  "state": {
                                    "type": "string",
                                    "example": "CA",
                                    "description": ""
                                  },
                                  "zipcode": {
                                    "type": "string",
                                    "example": "94103",
                                    "description": ""
                                  },
                                  "country": {
                                    "type": "string",
                                    "example": "US",
                                    "description": ""
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "place_location": {
                            "type": "array",
                            "description": "Coordinates of the place",
                            "example": [
                              37.7842287,
                              -122.4049526
                            ],
                            "items": {
                              "type": "number",
                              "description": "Latitude or Longitude of the place"
                            }
                          },
                          "place_phone": {
                            "type": "integer",
                            "description": "Phone number of the place",
                            "example": 14152438800
                          },
                          "place_hours": {
                            "type": "array",
                            "description": "Hours of the place",
                            "example": [
                              "Monday: Closed",
                              "Tuesday: Open 24 hours",
                              "Wednesday: Open 24 hours",
                              "Thursday: Open 24 hours",
                              "Friday: 11:30 AM – 2:00 PM, 5:30 – 9:30 PM",
                              "Saturday: 10:00 AM – 2:00 AM",
                              "Sunday: 5:00 AM – 11:00 PM"
                            ],
                            "items": {
                              "type": "string",
                              "description": "Hours on a given day, either \"Closed\" or \"Open 24 hours\" or a time window like \"5:00 AM – 11:00 PM\" or a range of time periods like \"11:30 AM – 2:00 PM, 5:30 – 9:30 PM\". Can also be past midnight: \"10:00 AM – 2:00 AM\""
                            }
                          },
                          "status": {
                            "type": "string",
                            "description": "The current operational status of the place. Can be `OPERATIONAL`, `CLOSED_TEMPORARILY`, or `CLOSED_PERMANENTLY`",
                            "example": "OPERATIONAL"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the place, either \"grocery\" or \"restaurant\"",
                            "example": "restaurant"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Search For A Place",
        "operationId": "get_places_search",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "required": true,
            "description": "The search term for the place or address.",
            "schema": {
              "type": "string",
              "default": "Denny's"
            }
          },
          {
            "name": "location_bias_latitude",
            "in": "query",
            "description": "Optional. The latitude of the user used to assist with the search results.",
            "schema": {
              "type": "number",
              "default": 37.7786357
            }
          },
          {
            "name": "location_bias_longitude",
            "in": "query",
            "description": "Optional. The longitude of the user used to assist with the search results. In the US, this value is negative.",
            "schema": {
              "type": "number",
              "default": -122.3918135
            }
          },
          {
            "name": "location_bias_radius",
            "in": "query",
            "description": "Optional. The radius, in meters, around the `location_bias_latitude` and `location_bias_longitude` to search. If not provided, then the location bias will be based on the IP address of the request.",
            "schema": {
              "type": "integer",
              "default": 10000
            }
          },
          {
            "name": "search_type",
            "in": "query",
            "description": "Optional. Either `\"place\"`, `\"address\"` or `\"addresses\"`: `place` is to search for a place with checkout, `address` is to search for a single customer address, and `addresses` returns multiple addresses. Defaults to `\"place\"`.",
            "schema": {
              "type": "string",
              "default": "place"
            }
          },
          {
            "name": "open_filter",
            "in": "query",
            "description": "Optional. Whether or not to return only open places. Defaults to `false`.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Places"
        ]
      }
    },
    "/utils/add_store": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "mealme_place_id",
                    "mealme_store_id",
                    "mealme_store_type"
                  ],
                  "properties": {
                    "mealme_store_id": {
                      "type": "string",
                      "description": "The MealMe Store ID (\"_id\") in the Search API for this Google Place ID",
                      "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
                    },
                    "mealme_place_id": {
                      "type": "string",
                      "description": "The MealMe Places ID (\"mealme_place_id\") in the Places API for this Google Place ID",
                      "example": "ChIJlanQUIaAhYARfCTRw_DJ2Ss"
                    },
                    "mealme_store_type": {
                      "type": "string",
                      "description": "The type of the store, such as \"restaurant\" or \"grocery\"",
                      "example": "restaurant"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Google Place ID Error",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Google Place ID error",
                      "example": "Google Place ID does not exist or is not available for ordering",
                      "enum": [
                        "Google Place ID does not exist or is not available for ordering"
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Add Google Place to MealMe",
        "operationId": "get_utils_add_store",
        "parameters": [
          {
            "name": "google_place_id",
            "in": "query",
            "description": "The Google Place ID to be added to MealMe",
            "schema": {
              "type": "string",
              "default": "ChIJlanQUIaAhYARfCTRw_DJ2Ss"
            }
          },
          {
            "name": "link",
            "in": "query",
            "description": "The link to the store's webpage",
            "schema": {
              "type": "string",
              "default": "https://www.clover.com/online-ordering/la-provence-patisserie-beverly-hills"
            }
          }
        ],
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Utilities"
        ]
      }
    },
    "/utils/store_lookup/v3": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "store"
                  ],
                  "properties": {
                    "store": {
                      "description": "The store corresponding to the provided store ID.",
                      "example": {
                        "_id": "bd409a61-c837-4146-a4ee-870c6364a172",
                        "name": "Zaika India Cuisine",
                        "phone_number": 14158729957,
                        "address": {
                          "street_addr": "737 3rd Street",
                          "city": "San Francisco",
                          "state": "CA",
                          "zipcode": "94107",
                          "country": "US",
                          "street_addr_2": "",
                          "latitude": 37.77861022,
                          "longitude": -122.39210511
                        },
                        "type": "restaurant",
                        "description": "Indian, Takeout",
                        "local_hours": {
                          "operational": {
                            "Monday": "08:00AM - 11:00PM",
                            "Tuesday": "08:00AM - 11:00PM",
                            "Wednesday": "08:00AM - 11:00PM",
                            "Thursday": "12:00AM - 02:00AM, 08:00AM - 02:00AM",
                            "Friday": "08:00AM - 02:00AM",
                            "Saturday": "08:00AM - 12:00AM",
                            "Sunday": "08:00AM - 11:00PM"
                          },
                          "delivery": {
                            "Monday": "09:45AM - 11:00PM",
                            "Tuesday": "09:45AM - 11:00PM",
                            "Wednesday": "09:45AM - 11:00PM",
                            "Thursday": "12:00AM - 02:00AM, 09:45AM - 02:00AM",
                            "Friday": "09:45AM - 12:00AM",
                            "Saturday": "Open 24 hours",
                            "Sunday": "10:15AM - 11:00PM"
                          },
                          "pickup": {
                            "Monday": "08:30AM - 11:00PM",
                            "Tuesday": "08:30AM - 11:00PM",
                            "Wednesday": "08:30AM - 11:00PM",
                            "Thursday": "12:00AM - 02:00AM, 08:30AM - 02:00AM",
                            "Friday": "08:30AM - 02:00AM",
                            "Saturday": "08:30AM - 12:00AM",
                            "Sunday": "08:30AM - 11:00PM"
                          },
                          "dine_in": {
                            "Monday": "08:00AM - 11:00PM",
                            "Tuesday": "08:00AM - 11:00PM",
                            "Wednesday": "08:00AM - 11:00PM",
                            "Thursday": "12:00AM - 02:00AM, 08:00AM - 02:00AM",
                            "Friday": "08:00AM - 02:00AM",
                            "Saturday": "08:00AM - 12:00AM",
                            "Sunday": "08:00AM - 11:00PM"
                          }
                        },
                        "cuisines": [
                          "Asian",
                          "Curry",
                          "Halal",
                          "Healthy",
                          "Indian",
                          "Indian Curry",
                          "Takeout",
                          "Vegetarian"
                        ],
                        "food_photos": [
                          "https://cdn-img.mealme.ai/e1488986c60af1c92ee6736e68f30ce9c8e29c4f/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f61725f312e302c635f6c696d69742c685f3132352c775f3132352f74686c73796c686a637a6533697a696838777a712e6a7067"
                        ],
                        "logo_photos": [
                          "https://cdn-img.mealme.ai/a31fc1bd7ccb30a52fbefb74b12a13d69f306c7b/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f76313539333038363434302f78737177747577656d6677306f6f31636275737a2e6a7067"
                        ],
                        "store_photos": [
                          "https://cdn-img.mealme.ai/04df36e38f7fa786af7ab71c170c7b75e6d21d00/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f61725f312e302c635f6c696d69742c685f3132352c775f3132352f6569637a6e6f62376e736f7a776d7a68693474792e6a7067"
                        ],
                        "dollar_signs": 2,
                        "pickup_enabled": true,
                        "delivery_enabled": true,
                        "offers_first_party_delivery": false,
                        "offers_third_party_delivery": true,
                        "weighted_rating_value": 4.3137614678899086,
                        "aggregated_rating_count": 109
                      },
                      "allOf": [
                        {
                          "required": [
                            "_id",
                            "address",
                            "aggregated_rating_count",
                            "cuisines",
                            "delivery_enabled",
                            "description",
                            "dollar_signs",
                            "food_photos",
                            "hours",
                            "local_hours",
                            "logo_photos",
                            "name",
                            "offers_first_party_delivery",
                            "offers_third_party_delivery",
                            "phone_number",
                            "pickup_enabled",
                            "store_photos",
                            "supports_upc_codes",
                            "type",
                            "weighted_rating_value"
                          ],
                          "properties": {
                            "_id": {
                              "type": "string",
                              "description": "MealMe ID of the store. Can be null in some cases.",
                              "example": "7c0360a5-20f4-470a-b8a0-124a509ad827"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of the store",
                              "example": "7-Eleven"
                            },
                            "phone_number": {
                              "type": "integer",
                              "description": "Phone number of the store",
                              "example": 14158638332
                            },
                            "address": {
                              "description": "",
                              "required": [
                                "city",
                                "country",
                                "latitude",
                                "longitude",
                                "state",
                                "street_addr",
                                "street_addr_2",
                                "zipcode"
                              ],
                              "properties": {
                                "street_addr": {
                                  "type": "string",
                                  "description": "Street Address",
                                  "example": "1390 Market Street"
                                },
                                "city": {
                                  "type": "string",
                                  "description": "City",
                                  "example": "San Francisco"
                                },
                                "state": {
                                  "type": "string",
                                  "description": "State abbreviation",
                                  "example": "CA"
                                },
                                "zipcode": {
                                  "type": "string",
                                  "description": "Zipcode",
                                  "example": "94102"
                                },
                                "country": {
                                  "type": "string",
                                  "description": "Country abbreviation",
                                  "example": "US"
                                },
                                "street_addr_2": {
                                  "type": "string",
                                  "description": "Street Address 2",
                                  "example": "Apt. 123"
                                },
                                "latitude": {
                                  "type": "number",
                                  "description": "Latitude",
                                  "example": 37.77709
                                },
                                "longitude": {
                                  "type": "number",
                                  "description": "Longitude",
                                  "example": -122.4172976
                                }
                              },
                              "type": "object"
                            },
                            "type": {
                              "type": "string",
                              "description": "Type of the store, either \"grocery\" or \"restaurant\"",
                              "example": "grocery"
                            },
                            "description": {
                              "type": "string",
                              "description": "Description of the store",
                              "example": "Local convenience store with snacks, beverages, and more."
                            },
                            "local_hours": {
                              "description": "",
                              "properties": {
                                "operational": {
                                  "description": "",
                                  "properties": {
                                    "Monday": {
                                      "type": "string",
                                      "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                      "example": "09:30AM - 01:00AM"
                                    },
                                    "Tuesday": {
                                      "type": "string",
                                      "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                      "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                    },
                                    "Wednesday": {
                                      "type": "string",
                                      "description": "If a restaurant is opens at midnight, it will show as above. ",
                                      "example": "12:00AM - 4:00PM"
                                    },
                                    "Thursday": {
                                      "type": "string",
                                      "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                      "example": "8:00AM - 4:00AM"
                                    },
                                    "Friday": {
                                      "type": "string",
                                      "description": "If a restaurant is open until midnight, it will show as above.",
                                      "example": "10:00AM - 12:00AM"
                                    },
                                    "Saturday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                      "example": "Closed"
                                    },
                                    "Sunday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                      "example": "Open 24 hours"
                                    }
                                  },
                                  "type": "object"
                                },
                                "delivery": {
                                  "description": "",
                                  "properties": {
                                    "Monday": {
                                      "type": "string",
                                      "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                      "example": "09:30AM - 01:00AM"
                                    },
                                    "Tuesday": {
                                      "type": "string",
                                      "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                      "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                    },
                                    "Wednesday": {
                                      "type": "string",
                                      "description": "If a restaurant is opens at midnight, it will show as above. ",
                                      "example": "12:00AM - 4:00PM"
                                    },
                                    "Thursday": {
                                      "type": "string",
                                      "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                      "example": "8:00AM - 4:00AM"
                                    },
                                    "Friday": {
                                      "type": "string",
                                      "description": "If a restaurant is open until midnight, it will show as above.",
                                      "example": "10:00AM - 12:00AM"
                                    },
                                    "Saturday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                      "example": "Closed"
                                    },
                                    "Sunday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                      "example": "Open 24 hours"
                                    }
                                  },
                                  "type": "object"
                                },
                                "pickup": {
                                  "description": "",
                                  "properties": {
                                    "Monday": {
                                      "type": "string",
                                      "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                      "example": "09:30AM - 01:00AM"
                                    },
                                    "Tuesday": {
                                      "type": "string",
                                      "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                      "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                    },
                                    "Wednesday": {
                                      "type": "string",
                                      "description": "If a restaurant is opens at midnight, it will show as above. ",
                                      "example": "12:00AM - 4:00PM"
                                    },
                                    "Thursday": {
                                      "type": "string",
                                      "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                      "example": "8:00AM - 4:00AM"
                                    },
                                    "Friday": {
                                      "type": "string",
                                      "description": "If a restaurant is open until midnight, it will show as above.",
                                      "example": "10:00AM - 12:00AM"
                                    },
                                    "Saturday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                      "example": "Closed"
                                    },
                                    "Sunday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                      "example": "Open 24 hours"
                                    }
                                  },
                                  "type": "object"
                                },
                                "dine_in": {
                                  "description": "",
                                  "properties": {
                                    "Monday": {
                                      "type": "string",
                                      "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                      "example": "09:30AM - 01:00AM"
                                    },
                                    "Tuesday": {
                                      "type": "string",
                                      "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                      "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                    },
                                    "Wednesday": {
                                      "type": "string",
                                      "description": "If a restaurant is opens at midnight, it will show as above. ",
                                      "example": "12:00AM - 4:00PM"
                                    },
                                    "Thursday": {
                                      "type": "string",
                                      "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                      "example": "8:00AM - 4:00AM"
                                    },
                                    "Friday": {
                                      "type": "string",
                                      "description": "If a restaurant is open until midnight, it will show as above.",
                                      "example": "10:00AM - 12:00AM"
                                    },
                                    "Saturday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                      "example": "Closed"
                                    },
                                    "Sunday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                      "example": "Open 24 hours"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "hours": {
                              "description": "A mapping of quote ID(s) to their respective local hours.",
                              "allOf": [
                                {
                                  "properties": {
                                    "*": {
                                      "description": "",
                                      "properties": {
                                        "operational": {
                                          "description": "",
                                          "properties": {
                                            "Monday": {
                                              "type": "string",
                                              "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                              "example": "09:30AM - 01:00AM"
                                            },
                                            "Tuesday": {
                                              "type": "string",
                                              "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                              "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                            },
                                            "Wednesday": {
                                              "type": "string",
                                              "description": "If a restaurant is opens at midnight, it will show as above. ",
                                              "example": "12:00AM - 4:00PM"
                                            },
                                            "Thursday": {
                                              "type": "string",
                                              "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                              "example": "8:00AM - 4:00AM"
                                            },
                                            "Friday": {
                                              "type": "string",
                                              "description": "If a restaurant is open until midnight, it will show as above.",
                                              "example": "10:00AM - 12:00AM"
                                            },
                                            "Saturday": {
                                              "type": "string",
                                              "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                              "example": "Closed"
                                            },
                                            "Sunday": {
                                              "type": "string",
                                              "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                              "example": "Open 24 hours"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "delivery": {
                                          "description": "",
                                          "properties": {
                                            "Monday": {
                                              "type": "string",
                                              "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                              "example": "09:30AM - 01:00AM"
                                            },
                                            "Tuesday": {
                                              "type": "string",
                                              "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                              "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                            },
                                            "Wednesday": {
                                              "type": "string",
                                              "description": "If a restaurant is opens at midnight, it will show as above. ",
                                              "example": "12:00AM - 4:00PM"
                                            },
                                            "Thursday": {
                                              "type": "string",
                                              "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                              "example": "8:00AM - 4:00AM"
                                            },
                                            "Friday": {
                                              "type": "string",
                                              "description": "If a restaurant is open until midnight, it will show as above.",
                                              "example": "10:00AM - 12:00AM"
                                            },
                                            "Saturday": {
                                              "type": "string",
                                              "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                              "example": "Closed"
                                            },
                                            "Sunday": {
                                              "type": "string",
                                              "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                              "example": "Open 24 hours"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "pickup": {
                                          "description": "",
                                          "properties": {
                                            "Monday": {
                                              "type": "string",
                                              "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                              "example": "09:30AM - 01:00AM"
                                            },
                                            "Tuesday": {
                                              "type": "string",
                                              "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                              "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                            },
                                            "Wednesday": {
                                              "type": "string",
                                              "description": "If a restaurant is opens at midnight, it will show as above. ",
                                              "example": "12:00AM - 4:00PM"
                                            },
                                            "Thursday": {
                                              "type": "string",
                                              "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                              "example": "8:00AM - 4:00AM"
                                            },
                                            "Friday": {
                                              "type": "string",
                                              "description": "If a restaurant is open until midnight, it will show as above.",
                                              "example": "10:00AM - 12:00AM"
                                            },
                                            "Saturday": {
                                              "type": "string",
                                              "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                              "example": "Closed"
                                            },
                                            "Sunday": {
                                              "type": "string",
                                              "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                              "example": "Open 24 hours"
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "dine_in": {
                                          "description": "",
                                          "properties": {
                                            "Monday": {
                                              "type": "string",
                                              "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                              "example": "09:30AM - 01:00AM"
                                            },
                                            "Tuesday": {
                                              "type": "string",
                                              "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                              "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                            },
                                            "Wednesday": {
                                              "type": "string",
                                              "description": "If a restaurant is opens at midnight, it will show as above. ",
                                              "example": "12:00AM - 4:00PM"
                                            },
                                            "Thursday": {
                                              "type": "string",
                                              "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                              "example": "8:00AM - 4:00AM"
                                            },
                                            "Friday": {
                                              "type": "string",
                                              "description": "If a restaurant is open until midnight, it will show as above.",
                                              "example": "10:00AM - 12:00AM"
                                            },
                                            "Saturday": {
                                              "type": "string",
                                              "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                              "example": "Closed"
                                            },
                                            "Sunday": {
                                              "type": "string",
                                              "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                              "example": "Open 24 hours"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              ]
                            },
                            "utc_hours": {
                              "description": "",
                              "properties": {
                                "operational": {
                                  "description": "",
                                  "required": [
                                    "Friday",
                                    "Monday",
                                    "Saturday",
                                    "Sunday",
                                    "Thursday",
                                    "Tuesday",
                                    "Wednesday"
                                  ],
                                  "properties": {
                                    "Monday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Monday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Tuesday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Tuesday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Wednesday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Wednesday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Thursday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Thursday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Friday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Friday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Saturday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Saturday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Sunday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Sunday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "delivery": {
                                  "description": "",
                                  "required": [
                                    "Friday",
                                    "Monday",
                                    "Saturday",
                                    "Sunday",
                                    "Thursday",
                                    "Tuesday",
                                    "Wednesday"
                                  ],
                                  "properties": {
                                    "Monday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Monday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Tuesday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Tuesday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Wednesday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Wednesday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Thursday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Thursday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Friday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Friday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Saturday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Saturday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Sunday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Sunday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "pickup": {
                                  "description": "",
                                  "required": [
                                    "Friday",
                                    "Monday",
                                    "Saturday",
                                    "Sunday",
                                    "Thursday",
                                    "Tuesday",
                                    "Wednesday"
                                  ],
                                  "properties": {
                                    "Monday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Monday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Tuesday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Tuesday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Wednesday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Wednesday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Thursday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Thursday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Friday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Friday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Saturday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Saturday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Sunday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Sunday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "dine_in": {
                                  "description": "",
                                  "required": [
                                    "Friday",
                                    "Monday",
                                    "Saturday",
                                    "Sunday",
                                    "Thursday",
                                    "Tuesday",
                                    "Wednesday"
                                  ],
                                  "properties": {
                                    "Monday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Monday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Tuesday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Tuesday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Wednesday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Wednesday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Thursday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Thursday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Friday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Friday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Saturday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Saturday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "Sunday": {
                                      "type": "array",
                                      "description": "The list of opening and closing times on Sunday.",
                                      "items": {
                                        "required": [
                                          "closed",
                                          "open"
                                        ],
                                        "properties": {
                                          "open": {
                                            "type": "string",
                                            "description": "The store opening UTC time.",
                                            "example": "01:00:00+00:00"
                                          },
                                          "closed": {
                                            "type": "string",
                                            "description": "The store closing UTC time.",
                                            "example": "17:00:00+00:00"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "cuisines": {
                              "type": "array",
                              "description": "The cuisine types",
                              "example": [
                                "Snacks",
                                "Convenience",
                                "Ice Cream"
                              ],
                              "items": {
                                "type": "string",
                                "description": "Cuisine of the store"
                              }
                            },
                            "food_photos": {
                              "type": "array",
                              "description": "Photos of the food at the store",
                              "example": [
                                "https://cdn-img.mealme.ai/f9ccb38a3d986eeb3f25e5b021d85a73c5d492ba/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f65303762376261372d663036612d346237302d383861302d3466633932656261346236322e6a706567"
                              ],
                              "items": {
                                "type": "string",
                                "description": "Photo of the store"
                              }
                            },
                            "logo_photos": {
                              "type": "array",
                              "description": "Photos of the store's logo",
                              "example": [
                                "https://cdn-img.mealme.ai/9a55bb89e411b1ef87210731a2e7f9fe850cc979/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f76313630313330373339332f656a6e376377756b74766537766e696867616b782e6a7067"
                              ],
                              "items": {
                                "type": "string",
                                "description": "Photo of the store's logo"
                              }
                            },
                            "store_photos": {
                              "type": "array",
                              "description": "Photos of the store",
                              "example": [
                                "https://cdn-img.mealme.ai/7aba9346a8f2e1d8ecf453a86fe3be1b53f98270/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f36393264376333342d626465362d343337612d616435342d3961303633656333666161642e6a706567"
                              ],
                              "items": {
                                "type": "string",
                                "description": "Photo of the store"
                              }
                            },
                            "dollar_signs": {
                              "type": "integer",
                              "description": "Estimated cost of the store, like 1 representing \"$\" or 2 representing \"$$\"",
                              "example": 1
                            },
                            "pickup_enabled": {
                              "type": "boolean",
                              "description": "Whether the store supports pickup.",
                              "example": false
                            },
                            "delivery_enabled": {
                              "type": "boolean",
                              "description": "Whether the store supports delivery.",
                              "example": true
                            },
                            "quotes": {
                              "description": "",
                              "properties": {
                                "cheapest_delivery": {
                                  "example": {
                                    "time_estimate": {
                                      "minimum": 43,
                                      "maximum": 45
                                    },
                                    "sales_tax_percent": 10.5,
                                    "delivery_fee": {
                                      "delivery_fee_flat": 0,
                                      "delivery_fee_percent": 0,
                                      "delivery_fee_taxable": false
                                    },
                                    "service_fee": {
                                      "service_fee_flat": 0,
                                      "service_fee_percent": 10,
                                      "service_fee_min": 300,
                                      "service_fee_max": 700,
                                      "service_fee_taxable": false
                                    },
                                    "small_order_fee": {
                                      "minimum_order_value": 0,
                                      "small_order_fee_flat": 0,
                                      "small_order_fee_percent": 0
                                    },
                                    "order_minimum": 1500,
                                    "threshold_fees": [],
                                    "asap_available": true
                                  },
                                  "allOf": [
                                    {
                                      "required": [
                                        "accepts_delivery_tip",
                                        "accepts_pickup_note",
                                        "accepts_pickup_tip",
                                        "asap_available",
                                        "courier_quote",
                                        "delivery_fee",
                                        "first_party_quote",
                                        "order_minimum",
                                        "sales_tax_percent",
                                        "service_fee",
                                        "small_order_fee",
                                        "third_party_quote",
                                        "time_estimate"
                                      ],
                                      "properties": {
                                        "time_estimate": {
                                          "description": "",
                                          "required": [
                                            "maximum",
                                            "minimum"
                                          ],
                                          "properties": {
                                            "minimum": {
                                              "type": "integer",
                                              "description": "Lower bound of delivery time estimate (in minutes)"
                                            },
                                            "maximum": {
                                              "type": "integer",
                                              "description": "Upper bound of delivery time estimate (in minutes)"
                                            },
                                            "scheduled": {
                                              "type": "array",
                                              "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                              "items": {
                                                "required": [
                                                  "delivery_fee",
                                                  "maximum",
                                                  "minimum"
                                                ],
                                                "properties": {
                                                  "minimum": {
                                                    "type": "integer",
                                                    "description": "Timestamp (seconds since 1970)"
                                                  },
                                                  "maximum": {
                                                    "type": "integer",
                                                    "description": "Timestamp (seconds since 1970)"
                                                  },
                                                  "delivery_fee": {
                                                    "description": "",
                                                    "required": [
                                                      "delivery_fee_flat",
                                                      "delivery_fee_percent"
                                                    ],
                                                    "properties": {
                                                      "delivery_fee_flat": {
                                                        "type": "integer",
                                                        "description": "Delivery fee amount in cents"
                                                      },
                                                      "delivery_fee_percent": {
                                                        "type": "number",
                                                        "description": "Delivery fee percentage"
                                                      },
                                                      "delivery_fee_taxable": {
                                                        "type": "boolean",
                                                        "description": "Whether the delivery fee is taxable or not"
                                                      },
                                                      "threshold_fees": {
                                                        "type": "array",
                                                        "description": "Threshold Fees, if they exist",
                                                        "items": {
                                                          "required": [
                                                            "threshold_cents",
                                                            "threshold_fee_cents"
                                                          ],
                                                          "properties": {
                                                            "threshold_cents": {
                                                              "type": "integer",
                                                              "description": "Subtotal that enacts a specific fee"
                                                            },
                                                            "threshold_fee_cents": {
                                                              "type": "integer",
                                                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                            }
                                                          },
                                                          "type": "object"
                                                        }
                                                      }
                                                    },
                                                    "type": "object"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "sales_tax_percent": {
                                          "type": "integer",
                                          "description": "Sales tax in percentage terms"
                                        },
                                        "delivery_fee": {
                                          "description": "",
                                          "required": [
                                            "delivery_fee_flat",
                                            "delivery_fee_percent"
                                          ],
                                          "properties": {
                                            "delivery_fee_flat": {
                                              "type": "integer",
                                              "description": "Delivery fee amount in cents"
                                            },
                                            "delivery_fee_percent": {
                                              "type": "number",
                                              "description": "Delivery fee percentage"
                                            },
                                            "delivery_fee_taxable": {
                                              "type": "boolean",
                                              "description": "Whether the delivery fee is taxable or not"
                                            },
                                            "threshold_fees": {
                                              "type": "array",
                                              "description": "Threshold Fees, if they exist",
                                              "items": {
                                                "required": [
                                                  "threshold_cents",
                                                  "threshold_fee_cents"
                                                ],
                                                "properties": {
                                                  "threshold_cents": {
                                                    "type": "integer",
                                                    "description": "Subtotal that enacts a specific fee"
                                                  },
                                                  "threshold_fee_cents": {
                                                    "type": "integer",
                                                    "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "service_fee": {
                                          "description": "",
                                          "required": [
                                            "service_fee_flat",
                                            "service_fee_percent"
                                          ],
                                          "properties": {
                                            "service_fee_flat": {
                                              "type": "integer",
                                              "description": "Service fee amount in cents"
                                            },
                                            "service_fee_percent": {
                                              "type": "number",
                                              "description": "Service fee percentage from 0 to 100"
                                            },
                                            "service_fee_min": {
                                              "type": "integer",
                                              "description": "Minimum service fee amount in cents"
                                            },
                                            "service_fee_max": {
                                              "type": "integer",
                                              "description": "Maximum service fee amount in cents"
                                            },
                                            "service_fee_taxable": {
                                              "type": "boolean",
                                              "description": "Whether the service fee is taxable or not"
                                            },
                                            "threshold_fees": {
                                              "type": "array",
                                              "description": "Threshold Fees, if they exist",
                                              "items": {
                                                "required": [
                                                  "threshold_cents",
                                                  "threshold_fee_cents"
                                                ],
                                                "properties": {
                                                  "threshold_cents": {
                                                    "type": "integer",
                                                    "description": "Subtotal that enacts a specific fee"
                                                  },
                                                  "threshold_fee_cents": {
                                                    "type": "integer",
                                                    "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "small_order_fee": {
                                          "description": "",
                                          "required": [
                                            "minimum_order_value",
                                            "small_order_fee_flat",
                                            "small_order_fee_percent"
                                          ],
                                          "properties": {
                                            "minimum_order_value": {
                                              "type": "integer",
                                              "description": "Minimum amount to not incur small order fee in cents",
                                              "example": 0
                                            },
                                            "small_order_fee_flat": {
                                              "type": "integer",
                                              "description": "Small order fee amount in cents",
                                              "example": 0
                                            },
                                            "small_order_fee_percent": {
                                              "type": "number",
                                              "description": "Small order fee percentage",
                                              "example": 0
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "order_minimum": {
                                          "type": "integer",
                                          "description": "Minimum order amount in cents"
                                        },
                                        "min_tip": {
                                          "type": "integer",
                                          "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                        },
                                        "asap_available": {
                                          "type": "integer",
                                          "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                        },
                                        "first_party_quote": {
                                          "type": "boolean",
                                          "description": "Whether this quote is provided by the store"
                                        },
                                        "third_party_quote": {
                                          "type": "boolean",
                                          "description": "Whether this quote is provided by a third party service"
                                        },
                                        "courier_quote": {
                                          "type": "boolean",
                                          "description": "Whether this quote is provided by a last-mile delivery service."
                                        },
                                        "accepts_delivery_tip": {
                                          "type": "boolean",
                                          "description": "Whether a delivery tip is accepted."
                                        },
                                        "accepts_pickup_tip": {
                                          "type": "boolean",
                                          "description": "Whether a pickup tip is accepted."
                                        },
                                        "accepts_pickup_note": {
                                          "type": "boolean",
                                          "description": "Whether a pickup note is accepted."
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ],
                                  "description": ""
                                },
                                "fastest_delivery": {
                                  "example": {
                                    "time_estimate": {
                                      "minimum": 15,
                                      "maximum": 30
                                    },
                                    "sales_tax_percent": 10.5,
                                    "delivery_fee": {
                                      "delivery_fee_flat": 199,
                                      "delivery_fee_percent": 0,
                                      "delivery_fee_taxable": false
                                    },
                                    "service_fee": {
                                      "service_fee_flat": 0,
                                      "service_fee_percent": 5
                                    },
                                    "small_order_fee": {
                                      "minimum_order_value": 1200,
                                      "small_order_fee_flat": 200,
                                      "small_order_fee_percent": 0
                                    },
                                    "order_minimum": 0,
                                    "threshold_fees": [
                                      {
                                        "threshold_cents": 10000,
                                        "threshold_fee_cents": 1000
                                      },
                                      {
                                        "threshold_cents": 20000,
                                        "threshold_fee_cents": 2000
                                      }
                                    ]
                                  },
                                  "allOf": [
                                    {
                                      "required": [
                                        "accepts_delivery_tip",
                                        "accepts_pickup_note",
                                        "accepts_pickup_tip",
                                        "asap_available",
                                        "courier_quote",
                                        "delivery_fee",
                                        "first_party_quote",
                                        "order_minimum",
                                        "sales_tax_percent",
                                        "service_fee",
                                        "small_order_fee",
                                        "third_party_quote",
                                        "time_estimate"
                                      ],
                                      "properties": {
                                        "time_estimate": {
                                          "description": "",
                                          "required": [
                                            "maximum",
                                            "minimum"
                                          ],
                                          "properties": {
                                            "minimum": {
                                              "type": "integer",
                                              "description": "Lower bound of delivery time estimate (in minutes)"
                                            },
                                            "maximum": {
                                              "type": "integer",
                                              "description": "Upper bound of delivery time estimate (in minutes)"
                                            },
                                            "scheduled": {
                                              "type": "array",
                                              "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                              "items": {
                                                "required": [
                                                  "delivery_fee",
                                                  "maximum",
                                                  "minimum"
                                                ],
                                                "properties": {
                                                  "minimum": {
                                                    "type": "integer",
                                                    "description": "Timestamp (seconds since 1970)"
                                                  },
                                                  "maximum": {
                                                    "type": "integer",
                                                    "description": "Timestamp (seconds since 1970)"
                                                  },
                                                  "delivery_fee": {
                                                    "description": "",
                                                    "required": [
                                                      "delivery_fee_flat",
                                                      "delivery_fee_percent"
                                                    ],
                                                    "properties": {
                                                      "delivery_fee_flat": {
                                                        "type": "integer",
                                                        "description": "Delivery fee amount in cents"
                                                      },
                                                      "delivery_fee_percent": {
                                                        "type": "number",
                                                        "description": "Delivery fee percentage"
                                                      },
                                                      "delivery_fee_taxable": {
                                                        "type": "boolean",
                                                        "description": "Whether the delivery fee is taxable or not"
                                                      },
                                                      "threshold_fees": {
                                                        "type": "array",
                                                        "description": "Threshold Fees, if they exist",
                                                        "items": {
                                                          "required": [
                                                            "threshold_cents",
                                                            "threshold_fee_cents"
                                                          ],
                                                          "properties": {
                                                            "threshold_cents": {
                                                              "type": "integer",
                                                              "description": "Subtotal that enacts a specific fee"
                                                            },
                                                            "threshold_fee_cents": {
                                                              "type": "integer",
                                                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                            }
                                                          },
                                                          "type": "object"
                                                        }
                                                      }
                                                    },
                                                    "type": "object"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "sales_tax_percent": {
                                          "type": "integer",
                                          "description": "Sales tax in percentage terms"
                                        },
                                        "delivery_fee": {
                                          "description": "",
                                          "required": [
                                            "delivery_fee_flat",
                                            "delivery_fee_percent"
                                          ],
                                          "properties": {
                                            "delivery_fee_flat": {
                                              "type": "integer",
                                              "description": "Delivery fee amount in cents"
                                            },
                                            "delivery_fee_percent": {
                                              "type": "number",
                                              "description": "Delivery fee percentage"
                                            },
                                            "delivery_fee_taxable": {
                                              "type": "boolean",
                                              "description": "Whether the delivery fee is taxable or not"
                                            },
                                            "threshold_fees": {
                                              "type": "array",
                                              "description": "Threshold Fees, if they exist",
                                              "items": {
                                                "required": [
                                                  "threshold_cents",
                                                  "threshold_fee_cents"
                                                ],
                                                "properties": {
                                                  "threshold_cents": {
                                                    "type": "integer",
                                                    "description": "Subtotal that enacts a specific fee"
                                                  },
                                                  "threshold_fee_cents": {
                                                    "type": "integer",
                                                    "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "service_fee": {
                                          "description": "",
                                          "required": [
                                            "service_fee_flat",
                                            "service_fee_percent"
                                          ],
                                          "properties": {
                                            "service_fee_flat": {
                                              "type": "integer",
                                              "description": "Service fee amount in cents"
                                            },
                                            "service_fee_percent": {
                                              "type": "number",
                                              "description": "Service fee percentage from 0 to 100"
                                            },
                                            "service_fee_min": {
                                              "type": "integer",
                                              "description": "Minimum service fee amount in cents"
                                            },
                                            "service_fee_max": {
                                              "type": "integer",
                                              "description": "Maximum service fee amount in cents"
                                            },
                                            "service_fee_taxable": {
                                              "type": "boolean",
                                              "description": "Whether the service fee is taxable or not"
                                            },
                                            "threshold_fees": {
                                              "type": "array",
                                              "description": "Threshold Fees, if they exist",
                                              "items": {
                                                "required": [
                                                  "threshold_cents",
                                                  "threshold_fee_cents"
                                                ],
                                                "properties": {
                                                  "threshold_cents": {
                                                    "type": "integer",
                                                    "description": "Subtotal that enacts a specific fee"
                                                  },
                                                  "threshold_fee_cents": {
                                                    "type": "integer",
                                                    "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "small_order_fee": {
                                          "description": "",
                                          "required": [
                                            "minimum_order_value",
                                            "small_order_fee_flat",
                                            "small_order_fee_percent"
                                          ],
                                          "properties": {
                                            "minimum_order_value": {
                                              "type": "integer",
                                              "description": "Minimum amount to not incur small order fee in cents",
                                              "example": 0
                                            },
                                            "small_order_fee_flat": {
                                              "type": "integer",
                                              "description": "Small order fee amount in cents",
                                              "example": 0
                                            },
                                            "small_order_fee_percent": {
                                              "type": "number",
                                              "description": "Small order fee percentage",
                                              "example": 0
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "order_minimum": {
                                          "type": "integer",
                                          "description": "Minimum order amount in cents"
                                        },
                                        "min_tip": {
                                          "type": "integer",
                                          "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                        },
                                        "asap_available": {
                                          "type": "integer",
                                          "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                        },
                                        "first_party_quote": {
                                          "type": "boolean",
                                          "description": "Whether this quote is provided by the store"
                                        },
                                        "third_party_quote": {
                                          "type": "boolean",
                                          "description": "Whether this quote is provided by a third party service"
                                        },
                                        "courier_quote": {
                                          "type": "boolean",
                                          "description": "Whether this quote is provided by a last-mile delivery service."
                                        },
                                        "accepts_delivery_tip": {
                                          "type": "boolean",
                                          "description": "Whether a delivery tip is accepted."
                                        },
                                        "accepts_pickup_tip": {
                                          "type": "boolean",
                                          "description": "Whether a pickup tip is accepted."
                                        },
                                        "accepts_pickup_note": {
                                          "type": "boolean",
                                          "description": "Whether a pickup note is accepted."
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ],
                                  "description": ""
                                },
                                "pickup": {
                                  "example": {
                                    "time_estimate": {
                                      "minimum": 5,
                                      "maximum": 5
                                    },
                                    "sales_tax_percent": 10.5,
                                    "delivery_fee": {
                                      "delivery_fee_flat": 0,
                                      "delivery_fee_percent": 0,
                                      "delivery_fee_taxable": false
                                    },
                                    "service_fee": {
                                      "service_fee_flat": 0,
                                      "service_fee_percent": 0
                                    },
                                    "small_order_fee": {
                                      "minimum_order_value": 1200,
                                      "small_order_fee_flat": 200,
                                      "small_order_fee_percent": 0
                                    },
                                    "order_minimum": 100,
                                    "threshold_fees": []
                                  },
                                  "allOf": [
                                    {
                                      "required": [
                                        "accepts_delivery_tip",
                                        "accepts_pickup_note",
                                        "accepts_pickup_tip",
                                        "asap_available",
                                        "courier_quote",
                                        "delivery_fee",
                                        "first_party_quote",
                                        "order_minimum",
                                        "sales_tax_percent",
                                        "service_fee",
                                        "small_order_fee",
                                        "third_party_quote",
                                        "time_estimate"
                                      ],
                                      "properties": {
                                        "time_estimate": {
                                          "description": "",
                                          "required": [
                                            "maximum",
                                            "minimum"
                                          ],
                                          "properties": {
                                            "minimum": {
                                              "type": "integer",
                                              "description": "Lower bound of delivery time estimate (in minutes)"
                                            },
                                            "maximum": {
                                              "type": "integer",
                                              "description": "Upper bound of delivery time estimate (in minutes)"
                                            },
                                            "scheduled": {
                                              "type": "array",
                                              "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                              "items": {
                                                "required": [
                                                  "delivery_fee",
                                                  "maximum",
                                                  "minimum"
                                                ],
                                                "properties": {
                                                  "minimum": {
                                                    "type": "integer",
                                                    "description": "Timestamp (seconds since 1970)"
                                                  },
                                                  "maximum": {
                                                    "type": "integer",
                                                    "description": "Timestamp (seconds since 1970)"
                                                  },
                                                  "delivery_fee": {
                                                    "description": "",
                                                    "required": [
                                                      "delivery_fee_flat",
                                                      "delivery_fee_percent"
                                                    ],
                                                    "properties": {
                                                      "delivery_fee_flat": {
                                                        "type": "integer",
                                                        "description": "Delivery fee amount in cents"
                                                      },
                                                      "delivery_fee_percent": {
                                                        "type": "number",
                                                        "description": "Delivery fee percentage"
                                                      },
                                                      "delivery_fee_taxable": {
                                                        "type": "boolean",
                                                        "description": "Whether the delivery fee is taxable or not"
                                                      },
                                                      "threshold_fees": {
                                                        "type": "array",
                                                        "description": "Threshold Fees, if they exist",
                                                        "items": {
                                                          "required": [
                                                            "threshold_cents",
                                                            "threshold_fee_cents"
                                                          ],
                                                          "properties": {
                                                            "threshold_cents": {
                                                              "type": "integer",
                                                              "description": "Subtotal that enacts a specific fee"
                                                            },
                                                            "threshold_fee_cents": {
                                                              "type": "integer",
                                                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                            }
                                                          },
                                                          "type": "object"
                                                        }
                                                      }
                                                    },
                                                    "type": "object"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "sales_tax_percent": {
                                          "type": "integer",
                                          "description": "Sales tax in percentage terms"
                                        },
                                        "delivery_fee": {
                                          "description": "",
                                          "required": [
                                            "delivery_fee_flat",
                                            "delivery_fee_percent"
                                          ],
                                          "properties": {
                                            "delivery_fee_flat": {
                                              "type": "integer",
                                              "description": "Delivery fee amount in cents"
                                            },
                                            "delivery_fee_percent": {
                                              "type": "number",
                                              "description": "Delivery fee percentage"
                                            },
                                            "delivery_fee_taxable": {
                                              "type": "boolean",
                                              "description": "Whether the delivery fee is taxable or not"
                                            },
                                            "threshold_fees": {
                                              "type": "array",
                                              "description": "Threshold Fees, if they exist",
                                              "items": {
                                                "required": [
                                                  "threshold_cents",
                                                  "threshold_fee_cents"
                                                ],
                                                "properties": {
                                                  "threshold_cents": {
                                                    "type": "integer",
                                                    "description": "Subtotal that enacts a specific fee"
                                                  },
                                                  "threshold_fee_cents": {
                                                    "type": "integer",
                                                    "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "service_fee": {
                                          "description": "",
                                          "required": [
                                            "service_fee_flat",
                                            "service_fee_percent"
                                          ],
                                          "properties": {
                                            "service_fee_flat": {
                                              "type": "integer",
                                              "description": "Service fee amount in cents"
                                            },
                                            "service_fee_percent": {
                                              "type": "number",
                                              "description": "Service fee percentage from 0 to 100"
                                            },
                                            "service_fee_min": {
                                              "type": "integer",
                                              "description": "Minimum service fee amount in cents"
                                            },
                                            "service_fee_max": {
                                              "type": "integer",
                                              "description": "Maximum service fee amount in cents"
                                            },
                                            "service_fee_taxable": {
                                              "type": "boolean",
                                              "description": "Whether the service fee is taxable or not"
                                            },
                                            "threshold_fees": {
                                              "type": "array",
                                              "description": "Threshold Fees, if they exist",
                                              "items": {
                                                "required": [
                                                  "threshold_cents",
                                                  "threshold_fee_cents"
                                                ],
                                                "properties": {
                                                  "threshold_cents": {
                                                    "type": "integer",
                                                    "description": "Subtotal that enacts a specific fee"
                                                  },
                                                  "threshold_fee_cents": {
                                                    "type": "integer",
                                                    "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "small_order_fee": {
                                          "description": "",
                                          "required": [
                                            "minimum_order_value",
                                            "small_order_fee_flat",
                                            "small_order_fee_percent"
                                          ],
                                          "properties": {
                                            "minimum_order_value": {
                                              "type": "integer",
                                              "description": "Minimum amount to not incur small order fee in cents",
                                              "example": 0
                                            },
                                            "small_order_fee_flat": {
                                              "type": "integer",
                                              "description": "Small order fee amount in cents",
                                              "example": 0
                                            },
                                            "small_order_fee_percent": {
                                              "type": "number",
                                              "description": "Small order fee percentage",
                                              "example": 0
                                            }
                                          },
                                          "type": "object"
                                        },
                                        "order_minimum": {
                                          "type": "integer",
                                          "description": "Minimum order amount in cents"
                                        },
                                        "min_tip": {
                                          "type": "integer",
                                          "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                        },
                                        "asap_available": {
                                          "type": "integer",
                                          "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                        },
                                        "first_party_quote": {
                                          "type": "boolean",
                                          "description": "Whether this quote is provided by the store"
                                        },
                                        "third_party_quote": {
                                          "type": "boolean",
                                          "description": "Whether this quote is provided by a third party service"
                                        },
                                        "courier_quote": {
                                          "type": "boolean",
                                          "description": "Whether this quote is provided by a last-mile delivery service."
                                        },
                                        "accepts_delivery_tip": {
                                          "type": "boolean",
                                          "description": "Whether a delivery tip is accepted."
                                        },
                                        "accepts_pickup_tip": {
                                          "type": "boolean",
                                          "description": "Whether a pickup tip is accepted."
                                        },
                                        "accepts_pickup_note": {
                                          "type": "boolean",
                                          "description": "Whether a pickup note is accepted."
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ],
                                  "description": ""
                                }
                              },
                              "type": "object"
                            },
                            "quote_types": {
                              "description": "",
                              "properties": {
                                "<quote id>": {
                                  "type": "array",
                                  "description": "The list of quote types available for this quote id.",
                                  "items": {
                                    "type": "string",
                                    "description": "Quote Type",
                                    "example": "pickup",
                                    "enum": [
                                      "pickup",
                                      "delivery"
                                    ]
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "offers_first_party_delivery": {
                              "type": "boolean",
                              "description": "Whether or not the store delivers directly.",
                              "example": false
                            },
                            "offers_third_party_delivery": {
                              "type": "boolean",
                              "description": "Whether or not the store delivers with third-party services.",
                              "example": false
                            },
                            "weighted_rating_value": {
                              "type": "number",
                              "description": "The weighted average rating of this store across all the websites it appears on. Floating-point from 1 to 5 (inclusive) or 0.",
                              "example": 4.83
                            },
                            "aggregated_rating_count": {
                              "type": "integer",
                              "description": "Number of total aggregated ratings for this store across all the websites it appears on. Non-negative integer.",
                              "example": 956
                            },
                            "supports_upc_codes": {
                              "type": "boolean",
                              "description": "Whether the store's inventory supports UPC codes.",
                              "example": false
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Get MealMe Store",
        "operationId": "get_store_lookup_v2",
        "parameters": [
          {
            "name": "store_ids",
            "in": "query",
            "required": true,
            "description": "The comma-delimited list of store IDs to fetch stores for. A max of 50 store IDs are permitted per request.",
            "schema": {
              "type": "string",
              "default": "c9f33d56-d138-4a49-9a4f-162f195c89b8"
            }
          },
          {
            "name": "use_new_db",
            "in": "query",
            "description": "Whether to perform the store lookup among a new database. Note that if `use_new_db` is `true`, `use_new_db` must also be `true` when making a request to [](https://docs.mealme.ai/reference/get_inventory_details) with any store `_id` returned from this request.",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Utilities"
        ]
      }
    },
    "/customer/service/initiate_chat": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "chat_id": {
                      "type": "string",
                      "description": "System generated chat id",
                      "example": "6274d3ce49db2c71cb32547f"
                    },
                    "success": {
                      "type": "boolean",
                      "description": "Indicate whether request is successful or not",
                      "example": true
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Initiate Customer Support Chat",
        "operationId": "post_chat_initiate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "message",
                  "order_id",
                  "user_id"
                ],
                "properties": {
                  "user_id": {
                    "type": "string",
                    "description": "Customer's user id",
                    "example": "cJAhoiGUtvXF8sS8o4SLvZJOATm2"
                  },
                  "order_id": {
                    "type": "string",
                    "description": "Customer's order id",
                    "example": "-N-yPvDSivF-ide2NOIr"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message to initiate the chat",
                    "example": "Hello, I cannot find my order"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer/service/send_message": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicate whether request is successful or not",
                      "example": true
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Send Customer Support Chat Message",
        "operationId": "post_send_message",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "chat_id",
                  "message",
                  "user_id"
                ],
                "properties": {
                  "user_id": {
                    "type": "string",
                    "description": "Customer's user id",
                    "example": "cJAhoiGUtvXF8sS8o4SLvZJOATm2"
                  },
                  "chat_id": {
                    "type": "string",
                    "description": "Customer's chat id",
                    "example": "6274d3ce49db2c71cb32547f"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message to initiate the chat",
                    "example": "Hello, I cannot find my order"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer/service/read_messages": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "chat": {
                      "description": "",
                      "properties": {
                        "user_id": {
                          "type": "string",
                          "description": "Customer's user id",
                          "example": "cJAhoiGUtvXF8sS8o4SLvZJOATm2"
                        },
                        "agent_id": {
                          "type": "string",
                          "description": "Agent id",
                          "example": "mj"
                        },
                        "messages": {
                          "type": "array",
                          "description": "List of messages in the chat",
                          "items": {
                            "required": [
                              "timestamp"
                            ],
                            "properties": {
                              "sender": {
                                "type": "string",
                                "description": "Sender's user id",
                                "example": "cJAhoiGUtvXF8sS8o4SLvZJOATm2"
                              },
                              "message": {
                                "type": "string",
                                "description": "Message",
                                "example": "Hello, I cannot find my order"
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "message creation timestamp",
                                "example": 1650578800.31
                              },
                              "is_customer_service_message": {
                                "type": "boolean",
                                "description": "Indicate whether message is from customer service or not",
                                "example": true
                              }
                            },
                            "type": "object"
                          }
                        },
                        "initiated_at": {
                          "type": "number",
                          "description": "Chat initiated timestamp",
                          "example": 1650578800.31
                        },
                        "details": {
                          "type": "string",
                          "description": "Details of the chat",
                          "example": "Initial message from customer"
                        },
                        "exited_at": {
                          "type": "number",
                          "description": "Chat exited timestamp",
                          "example": 1650578800.31
                        },
                        "order_id": {
                          "type": "string",
                          "description": "Order id",
                          "example": "-N-yPvDSivF-ide2NOIr"
                        },
                        "agent_claimed_at": {
                          "type": "number",
                          "description": "Agent claimed timestamp",
                          "example": 1650578800.31
                        },
                        "last_seen": {
                          "type": "number",
                          "description": "Last seen timestamp",
                          "example": 1650578800.31
                        },
                        "first_name": {
                          "type": "string",
                          "description": "First name",
                          "example": "John"
                        },
                        "last_name": {
                          "type": "string",
                          "description": "Last name",
                          "example": "Doe"
                        }
                      },
                      "type": "object"
                    },
                    "success": {
                      "type": "boolean",
                      "description": "Indicate whether request is successful or not",
                      "example": true
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Read Customer Chat Messages",
        "operationId": "post_read_message",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "chat_id"
                ],
                "properties": {
                  "chat_id": {
                    "type": "string",
                    "description": "Customer's chat id",
                    "example": "625f245f1acec81fb012b263"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer/service/exit_chat": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicate whether request is successful or not",
                      "example": true
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Exit Customer Support Chat",
        "operationId": "post_exit_chat",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "chat_id"
                ],
                "properties": {
                  "chat_id": {
                    "type": "string",
                    "description": "Chat id",
                    "example": "625f245f1acec81fb012b263"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/customer/service/fetch_chat_ids": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "active_chats": {
                      "description": "Active chats by chat id as the key",
                      "allOf": [
                        {
                          "properties": {
                            "*": {
                              "type": "object",
                              "additionalProperties": {
                                "properties": {
                                  "chat_id": {
                                    "type": "string",
                                    "description": "Chat id",
                                    "example": "625f245f1acec81fb012b263"
                                  },
                                  "order_id": {
                                    "type": "string",
                                    "description": "Order id",
                                    "example": "-N-yPvDSivF-ide2NOIr"
                                  },
                                  "timestamp": {
                                    "type": "number",
                                    "description": "Timestamp",
                                    "example": 1650578800.31
                                  }
                                },
                                "type": "object"
                              },
                              "description": ""
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "completed_chats": {
                      "description": "Completed chats by chat id as the key",
                      "allOf": [
                        {
                          "properties": {
                            "*": {
                              "type": "object",
                              "additionalProperties": {
                                "properties": {
                                  "chat_id": {
                                    "type": "string",
                                    "description": "Chat id",
                                    "example": "625f245f1acec81fb012b263"
                                  },
                                  "order_id": {
                                    "type": "string",
                                    "description": "Order id",
                                    "example": "-N-yPvDSivF-ide2NOIr"
                                  },
                                  "timestamp": {
                                    "type": "number",
                                    "description": "Timestamp",
                                    "example": 1650578800.31
                                  }
                                },
                                "type": "object"
                              },
                              "description": ""
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Fetch Customer Support Chat IDs",
        "operationId": "post_fetch_chat_ids",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "user_id": {
                    "type": "string",
                    "description": "Customer's user id",
                    "example": "cJAhoiGUtvXF8sS8o4SLvZJOATm2"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Customer"
        ]
      }
    },
    "/account/orders": {
      "get": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "orders"
                  ],
                  "properties": {
                    "orders": {
                      "type": "array",
                      "description": "List of all filtered orders",
                      "items": {
                        "required": [
                          "customer_order_id",
                          "driver_tip_cents",
                          "eta_timestamp",
                          "favorited",
                          "is_ready",
                          "items",
                          "pickup",
                          "pickup_tip_cents",
                          "realtime_tracking_available",
                          "receipt_url",
                          "refunded_amount",
                          "status",
                          "store_confirmed_timestamp",
                          "timestamp",
                          "total_with_tip",
                          "tracking",
                          "tracking_link",
                          "user_city",
                          "user_country",
                          "user_email",
                          "user_latitude",
                          "user_longitude",
                          "user_name",
                          "user_phone",
                          "user_state",
                          "user_street_name",
                          "user_street_num",
                          "user_time_zone",
                          "user_zipcode"
                        ],
                        "properties": {
                          "items": {
                            "type": "array",
                            "description": "List of cart items.",
                            "example": [
                              {
                                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                                "notes": "No whipped cream."
                              }
                            ],
                            "items": {
                              "required": [
                                "product_id"
                              ],
                              "properties": {
                                "product_id": {
                                  "type": "string",
                                  "description": "The product's ID."
                                },
                                "quantity": {
                                  "type": "integer",
                                  "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                                },
                                "product_marked_price": {
                                  "type": "integer",
                                  "description": "The self-provided marked price (in cents) to be used in the email receipt."
                                },
                                "selected_options": {
                                  "type": "array",
                                  "description": "The list of selected options for the product.",
                                  "items": {
                                    "required": [
                                      "option_id",
                                      "quantity"
                                    ],
                                    "properties": {
                                      "option_id": {
                                        "type": "string",
                                        "description": "Option ID"
                                      },
                                      "quantity": {
                                        "type": "integer",
                                        "description": "The option quantity (must be greater than 0)"
                                      },
                                      "marked_price": {
                                        "type": "integer",
                                        "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "notes": {
                                  "type": "string",
                                  "description": "The product notes for the store."
                                }
                              },
                              "type": "object"
                            }
                          },
                          "pickup": {
                            "type": "boolean",
                            "description": "`true` for pickup quotes, `false` for delivery quotes.",
                            "default": false,
                            "example": false
                          },
                          "driver_tip_cents": {
                            "type": "integer",
                            "description": "The tip for the driver, in cents.",
                            "example": 100
                          },
                          "pickup_tip_cents": {
                            "type": "integer",
                            "description": "The tip for the store, in cents.",
                            "example": 100
                          },
                          "user_latitude": {
                            "type": "number",
                            "description": "The latitude of the user.",
                            "example": 37.7786357
                          },
                          "user_longitude": {
                            "type": "number",
                            "description": "The longitude of the user.",
                            "example": -122.3918135
                          },
                          "user_street_num": {
                            "type": "string",
                            "description": "Street number of the user.",
                            "example": "188"
                          },
                          "user_street_name": {
                            "type": "string",
                            "description": "Street name of the user.",
                            "example": "King Street"
                          },
                          "user_apt_num": {
                            "type": "string",
                            "description": "Apartment number of the user.",
                            "example": ""
                          },
                          "user_city": {
                            "type": "string",
                            "description": "City of the user.",
                            "example": "San Francisco"
                          },
                          "user_state": {
                            "type": "string",
                            "description": "State of the user.",
                            "example": "CA"
                          },
                          "user_zipcode": {
                            "type": "string",
                            "description": "Zipcode of the user.",
                            "example": "94107"
                          },
                          "user_country": {
                            "type": "string",
                            "description": "Country of the user.",
                            "example": "US"
                          },
                          "user_time_zone": {
                            "type": "string",
                            "description": "Time Zone of the user.",
                            "example": "America/Los_Angeles"
                          },
                          "user_dropoff_notes": {
                            "type": "string",
                            "description": "Dropoff delivery notes for the user. Not required for pickup.",
                            "example": "Leave in lobby"
                          },
                          "user_name": {
                            "type": "string",
                            "description": "User's name, so the store and/or driver know who to give the food to at dropoff.",
                            "example": "Will Said"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "User's email, for the order confirmation, updates, and tracking link.",
                            "example": "will@mealme.ai"
                          },
                          "user_phone": {
                            "type": "integer",
                            "description": "User's phone number, so the store and/or driver know who to call for pickup or delivery.",
                            "example": 14044442058
                          },
                          "tracking_link": {
                            "type": "string",
                            "description": "Tracking link for the particular order.",
                            "example": "https://mealme.cc/tracking?tracking_id=-Mn8_a0-R1ERnHlCQUZp"
                          },
                          "total_with_tip": {
                            "type": "integer",
                            "description": "Total with tips.",
                            "example": 3380
                          },
                          "final_quote": {
                            "description": "Final validated quote for the given products.",
                            "example": {
                              "id": "gAAAAABh6hxmfTtGA3vxjN-ZfyO55tnvcrAWVF3tCnWpWuRRcn9PQiE30TvrumkQ01jRJDmtpAGEhXQMEJ8BK_2HAkBB3qzi-K7ScyWikcBKaDWv7qdgO9y1dcV638PTer1ZGIypWDzrO_Q35LmDB5mgby8b1V0T82bFljxyrbjRH48swnM7IBCjEiA6_GC0Aj6PA0IfJ4HqTFY9aEQfI7brM_az3VhLK4IIQ59EWGftEKEpf2-a4R7mvf08M2PEY8MB5Qz8Pjwbvlu926JNvIVpx4Ckj_qJ6CIjbrEMDxqQLTrJFuYGAlU=",
                              "store": "Seniore's Pizza",
                              "store_address": "456 Haight St, San Francisco, CA, 94117, US",
                              "quote": {
                                "delivery_fee_cents": 0,
                                "time_max": 30,
                                "time_min": 20,
                                "expected_time_of_arrival": "06:57 PM",
                                "sales_tax_cents": 257,
                                "service_fee_cents": 0,
                                "small_order_fee_cents": 0,
                                "subtotal": 3023,
                                "total": 3280
                              }
                            },
                            "allOf": [
                              {
                                "required": [
                                  "added_fees",
                                  "items",
                                  "misc_fees",
                                  "quote",
                                  "quote_id",
                                  "store",
                                  "store_address",
                                  "store_id",
                                  "tip",
                                  "total_with_tip"
                                ],
                                "properties": {
                                  "store": {
                                    "type": "string",
                                    "description": "The name of the store where the order was placed",
                                    "example": "Denny's"
                                  },
                                  "store_address": {
                                    "type": "string",
                                    "description": "The address of the store where the order was placed",
                                    "example": "816 Mission St, San Francisco, CA, 94103, US"
                                  },
                                  "store_id": {
                                    "type": "string",
                                    "description": "The MealMe store ID",
                                    "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
                                  },
                                  "quote_id": {
                                    "type": "string",
                                    "description": "The MealMe Quote ID",
                                    "example": "gAAAAABihzvxA4pMVWefTSN3GFOL7b3CYG5yPIRnGUNnEu8oD72y0SiHcDkoloajAINb3pI4Kw6R5qR694t5fCXc8_DnvoB0_BeBlCZ_zJmelaZ4jWfcnF5ySNVt29YYobrl5PMQduRavTxgb5E2IvgZakNNbAzP9rYwyApbdaZ6n_RCwz09IlN2iOoqUlnNVL1WF8dDwqI6-XWMiA3XDI_A-k4QyVPZ0yMZDP_LuRzEnQOYIQ23CCyHHz2imKBP4ySAMNgeIKv0ynYV-a1ZfMC_MjFVyK_OHCds8KmiAM8RHZWt6-wR2m2xqMhKOg8NFWU5gWzYFVL_"
                                  },
                                  "quote": {
                                    "description": "The final quote summary including subtotal, tax, time estimate, quote fees, etc.",
                                    "allOf": [
                                      {
                                        "required": [
                                          "delivery_fee_cents",
                                          "delivery_time_max",
                                          "delivery_time_min",
                                          "expected_time_of_arrival",
                                          "sales_tax_cents",
                                          "scheduled",
                                          "service_fee_cents",
                                          "small_order_fee_cents",
                                          "subtotal",
                                          "total_without_tips"
                                        ],
                                        "properties": {
                                          "subtotal": {
                                            "type": "integer",
                                            "description": "The subtotal of the cart",
                                            "example": 1770
                                          },
                                          "delivery_fee_cents": {
                                            "type": "integer",
                                            "description": "The total delivery fee, in cents",
                                            "example": 49
                                          },
                                          "service_fee_cents": {
                                            "type": "integer",
                                            "description": "The total service fee, in cents",
                                            "example": 667
                                          },
                                          "small_order_fee_cents": {
                                            "type": "integer",
                                            "description": "The total small order fee, in cents",
                                            "example": 0
                                          },
                                          "sales_tax_cents": {
                                            "type": "integer",
                                            "description": "The total sales tax, in cents",
                                            "example": 142
                                          },
                                          "delivery_time_min": {
                                            "type": "integer",
                                            "description": "The minimum delivery time estimate, in minutes",
                                            "example": 25
                                          },
                                          "delivery_time_max": {
                                            "type": "integer",
                                            "description": "The maximum delivery time estimate, in minutes",
                                            "example": 40
                                          },
                                          "total_without_tips": {
                                            "type": "integer",
                                            "description": "The order amount excluding tips, in cents",
                                            "example": 2628
                                          },
                                          "expected_time_of_arrival": {
                                            "type": "string",
                                            "description": "The expected time of arrival, in user's timezone",
                                            "example": "09:20 PM"
                                          },
                                          "scheduled": {
                                            "description": "The scheduled delivery window corresponding to input parameter `scheduled_id` passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3)",
                                            "allOf": [
                                              {
                                                "required": [
                                                  "delivery_fee",
                                                  "maximum",
                                                  "minimum"
                                                ],
                                                "properties": {
                                                  "minimum": {
                                                    "type": "integer",
                                                    "description": "Timestamp (seconds since 1970)"
                                                  },
                                                  "maximum": {
                                                    "type": "integer",
                                                    "description": "Timestamp (seconds since 1970)"
                                                  },
                                                  "delivery_fee": {
                                                    "description": "",
                                                    "required": [
                                                      "delivery_fee_flat",
                                                      "delivery_fee_percent"
                                                    ],
                                                    "properties": {
                                                      "delivery_fee_flat": {
                                                        "type": "integer",
                                                        "description": "Delivery fee amount in cents"
                                                      },
                                                      "delivery_fee_percent": {
                                                        "type": "number",
                                                        "description": "Delivery fee percentage"
                                                      },
                                                      "delivery_fee_taxable": {
                                                        "type": "boolean",
                                                        "description": "Whether the delivery fee is taxable or not"
                                                      },
                                                      "threshold_fees": {
                                                        "type": "array",
                                                        "description": "Threshold Fees, if they exist",
                                                        "items": {
                                                          "required": [
                                                            "threshold_cents",
                                                            "threshold_fee_cents"
                                                          ],
                                                          "properties": {
                                                            "threshold_cents": {
                                                              "type": "integer",
                                                              "description": "Subtotal that enacts a specific fee"
                                                            },
                                                            "threshold_fee_cents": {
                                                              "type": "integer",
                                                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                            }
                                                          },
                                                          "type": "object"
                                                        }
                                                      }
                                                    },
                                                    "type": "object"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            ]
                                          },
                                          "marked_subtotal": {
                                            "type": "integer",
                                            "description": "The subtotal of the cart including any provided marked prices, in cents",
                                            "example": 2000
                                          },
                                          "marked_total_without_tips": {
                                            "type": "integer",
                                            "description": "The order amount excluding tips, and including any provided marked prices, in cents",
                                            "example": 2800
                                          }
                                        },
                                        "type": "object"
                                      }
                                    ]
                                  },
                                  "items": {
                                    "type": "array",
                                    "description": "List of cart items",
                                    "example": [
                                      {
                                        "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                                        "notes": "No whipped cream."
                                      }
                                    ],
                                    "items": {
                                      "required": [
                                        "product_id"
                                      ],
                                      "properties": {
                                        "product_id": {
                                          "type": "string",
                                          "description": "The product's ID."
                                        },
                                        "quantity": {
                                          "type": "integer",
                                          "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                                        },
                                        "product_marked_price": {
                                          "type": "integer",
                                          "description": "The self-provided marked price (in cents) to be used in the email receipt."
                                        },
                                        "selected_options": {
                                          "type": "array",
                                          "description": "The list of selected options for the product.",
                                          "items": {
                                            "required": [
                                              "option_id",
                                              "quantity"
                                            ],
                                            "properties": {
                                              "option_id": {
                                                "type": "string",
                                                "description": "Option ID"
                                              },
                                              "quantity": {
                                                "type": "integer",
                                                "description": "The option quantity (must be greater than 0)"
                                              },
                                              "marked_price": {
                                                "type": "integer",
                                                "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "notes": {
                                          "type": "string",
                                          "description": "The product notes for the store."
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "tip": {
                                    "type": "integer",
                                    "description": "The total tip amount, in cents",
                                    "example": 100
                                  },
                                  "total_with_tip": {
                                    "type": "integer",
                                    "description": "The total order amount including tip, in cents",
                                    "example": 40
                                  },
                                  "added_fees": {
                                    "description": "The total added fees for the cart, computed using the input `added_fee`passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3) or [](https://docs.mealme.ai/reference/post_courier_order)",
                                    "example": 200,
                                    "allOf": [
                                      {
                                        "required": [
                                          "flat_fee_cents",
                                          "is_fee_taxable",
                                          "percent_fee",
                                          "sales_tax_cents",
                                          "total_fee_cents"
                                        ],
                                        "properties": {
                                          "flat_fee_cents": {
                                            "type": "integer",
                                            "description": "The API client added flat fee amount, in cents",
                                            "example": 100
                                          },
                                          "percent_fee": {
                                            "type": "integer",
                                            "description": "The API client added percent fee amount, in range 1-100",
                                            "example": 50
                                          },
                                          "is_fee_taxable": {
                                            "type": "boolean",
                                            "description": "Whether the API client added fee is taxable",
                                            "example": false
                                          },
                                          "total_fee_cents": {
                                            "type": "integer",
                                            "description": "The API client total added fee amount, in cents",
                                            "example": 985
                                          },
                                          "sales_tax_cents": {
                                            "type": "integer",
                                            "description": "The total sales tax amount charged for the API client added fee, in cents",
                                            "example": 0
                                          }
                                        },
                                        "type": "object"
                                      }
                                    ]
                                  },
                                  "misc_fees": {
                                    "type": "array",
                                    "description": "The list of miscellaneous fees applied on the order.",
                                    "example": [
                                      {
                                        "fee_name": "Chef tip",
                                        "fee_amount": 200
                                      }
                                    ],
                                    "items": {
                                      "required": [
                                        "fee_amount",
                                        "fee_name"
                                      ],
                                      "properties": {
                                        "fee_name": {
                                          "type": "string",
                                          "description": "Name of the fee"
                                        },
                                        "fee_amount": {
                                          "type": "integer",
                                          "description": "The fee amount, in cents"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "marked_total_with_tip": {
                                    "type": "integer",
                                    "description": "The total order amount including tip, and including any provided marked prices, in cents",
                                    "example": 50
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "eta_timestamp": {
                            "type": "number",
                            "description": "Expected time of arrival timestamp.",
                            "example": 1650578850.31
                          },
                          "timestamp": {
                            "type": "number",
                            "description": "Order creation timestamp.",
                            "example": 1650578800.31
                          },
                          "tracking": {
                            "description": "Contains map coordinates, driver details, vehicle information.",
                            "example": {
                              "driver_latitude": 37.778574400295234,
                              "driver_longitude": -122.39151731697541,
                              "course": 225.5277862548828,
                              "last_update_timestamp": 1646722410.22385,
                              "completion_timestamp": 1646763375.141831,
                              "vehicle_type": "car",
                              "driver_name": "Gustavo",
                              "driver_phone": 13124719334,
                              "driver_photo_url": "https://cdn-img.mealme.ai/347fa4c596569c42e6acb0739b9484fdf6b18501/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f67682d70726f642d647269766572732d646174612f647269766572732f31623837346135612d373034622d343638622d626139392d3062656436616439656231642e706e67",
                              "driver_rating": 0
                            },
                            "allOf": [
                              {
                                "required": [
                                  "completion_timestamp",
                                  "course",
                                  "driver_latitude",
                                  "driver_longitude",
                                  "driver_name",
                                  "driver_phone",
                                  "driver_photo_url",
                                  "driver_rating",
                                  "dropoff_photo_url",
                                  "last_update_timestamp",
                                  "vehicle",
                                  "vehicle_type"
                                ],
                                "properties": {
                                  "driver_latitude": {
                                    "type": "number",
                                    "description": "The latitude of the driver",
                                    "example": 37.778574400295234
                                  },
                                  "driver_longitude": {
                                    "type": "number",
                                    "description": "The longitude of the driver",
                                    "example": -122.39151731697541
                                  },
                                  "course": {
                                    "type": "number",
                                    "description": "The course of the driver",
                                    "example": 225.5277862548828
                                  },
                                  "last_update_timestamp": {
                                    "type": "number",
                                    "description": "The last time that tracking information was updated",
                                    "example": 1646722410.22385
                                  },
                                  "completion_timestamp": {
                                    "type": "number",
                                    "description": "The timestamp of order completion",
                                    "example": 1646763375.141831
                                  },
                                  "vehicle_type": {
                                    "type": "string",
                                    "description": "The type of vehicle of the driver",
                                    "example": "car"
                                  },
                                  "driver_name": {
                                    "type": "string",
                                    "description": "The name of the driver",
                                    "example": "Gustavo"
                                  },
                                  "driver_phone": {
                                    "type": "integer",
                                    "description": "The phone number of the driver",
                                    "example": 13124719334
                                  },
                                  "driver_photo_url": {
                                    "type": "string",
                                    "description": "The photo of the driver",
                                    "example": "https://cdn-img.mealme.ai/347fa4c596569c42e6acb0739b9484fdf6b18501/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f67682d70726f642d647269766572732d646174612f647269766572732f31623837346135612d373034622d343638622d626139392d3062656436616439656231642e706e67"
                                  },
                                  "driver_rating": {
                                    "type": "integer",
                                    "description": "The rating of the driver, range [1-5)",
                                    "example": 5
                                  },
                                  "dropoff_photo_url": {
                                    "type": "string",
                                    "description": "The dropoff photo provided by the driver",
                                    "example": "https://cdn-img.mealme.ai/7a58ee7d0dbf011ab4c723d105ae97d601aadccd/68747470733a2f2f636e2d67656f312e756265722e636f6d2f696d6167652d70726f632f726573697a652f656174732f666f726d61743d776562702f77696474683d313038302f6865696768743d302f7175616c6974793d39302f7372636236343d6148523063484d364c793930596e4d746333526864476c6a4c6e56695a584975593239744c334279623251765a6d6c735a5331316347787659575176645842736232466b6379396a62335679615756794c32786c59585a6c4c5746304c575276623349764d6d51325a44466b5a6d55744e445577595330304f57497a4c5749785a574d744e7a55335a544a6a4d5745344e6a67354c6d70775a7a39516232787059336b395a586c4b56475248526a4261567a4673596d3552615539736444644a62457073597a49354d574e74546d784a616d3970595568534d474e4954545a4d65546b775757354e64474d7a556d686b5232787154473557615670595358565a4d6a6c3054444e436557497955585a616257787a576c4d784d574e4865485a5a563146325a46684363324979526d746a65546c71596a4e5765574658566e6c4d4d6e68735756686162457858526a424d56314a32596a4e4a646b317455544a6152455a72576d3156644535455658645a557a41775431644a656b78585358686156303130546e70564d317055536d704e56305530546d706e4e5578746348646165556c7a5357744f646d4a74556e426b52327832596d6c4a4e6d5635536b565a57464a7356456457656d4d78556d395a567a52705432357a615646575a46525061315a33596a4a4f62315a486248526155306b325456526a654535365454524f52466c3454544d784f575a574d546b6d55326c6e626d463064584a6c5057707a5933524364454654593156505a484e4355586c71526e5a4e62444a7351565a754e55317a4e544a6a55544e584d466c524e6a465655326c34626c646e52444e4d4d6c42696444686f5648354c5556427063446b32556c70464d487042536e4e7564476c4f513045345a47567951326845517a4232626a644759336b3262326c494d554e70534467326158566a5758564a6148553064444974536a5a6b5430356c5332644d5a6b464353486b304f574d34636a46764e485a59627a64515256684a534538774e464a51596d677762556f784c584978563151785633424e513246426355743464464e75515852355356677a64453877576e46795a47745951554e4756455935516d3830556c647a576c45334e5538744e314174616b465262574a584e453958656d4a695447557851566779666c64355958593562307856526d354a56587033576b316d64474e7364566b77666b5a7651305255645578724d585a4861554a2b5a46425459575131565331734c57786a6155467a51324a344f544533636a68554e464e51636a52325546466f596e46564f4770725754524959793152564552344c5659314e30563055306f78614664515348356d4f45704462326858576b5179515639664a6b746c6553315159576c794c556c6b505546515330464b4d304a4d565668485531564556454e4c556b7052"
                                  },
                                  "vehicle": {
                                    "type": "string",
                                    "description": "The driver's vehicle details",
                                    "example": "Honda Accord"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the order.",
                            "example": "in_progress"
                          },
                          "favorited": {
                            "type": "boolean",
                            "description": "Whether the order is favorited.",
                            "default": false,
                            "example": false
                          },
                          "is_ready": {
                            "type": "boolean",
                            "description": "Whether the order is ready for pickup.",
                            "default": false,
                            "example": false
                          },
                          "customer_order_id": {
                            "type": "string",
                            "description": "The external order ID provided to [Create Order](https://docs.mealme.ai/reference/post_order_v3).",
                            "example": "ABC123"
                          },
                          "realtime_tracking_available": {
                            "type": "boolean",
                            "description": "Whether realtime tracking is available for this order.",
                            "default": false,
                            "example": false
                          },
                          "profit": {
                            "type": "integer",
                            "description": "The total profit from this order, including any markup and/or additional fees applied, in cents.",
                            "example": 1000
                          },
                          "promotion": {
                            "description": "All promotions related info for the order",
                            "example": {
                              "code": "GRUB7OFF",
                              "description": "$7 OFF",
                              "discount_flat": 700,
                              "discount_percent": 0,
                              "discount_total": 700
                            },
                            "allOf": [
                              {
                                "required": [
                                  "code",
                                  "description",
                                  "discount_flat",
                                  "discount_percent",
                                  "discount_total"
                                ],
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "description": "The promo code applied on the order.",
                                    "example": "GRUB7OFF"
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The promotion's description.",
                                    "example": "$7 off first order"
                                  },
                                  "discount_flat": {
                                    "type": "integer",
                                    "description": "The promotion's flat discounted amount, in cents.",
                                    "example": 700
                                  },
                                  "discount_percent": {
                                    "type": "integer",
                                    "description": "The promotion's percent discounted amount, with range [0-100].",
                                    "example": 10
                                  },
                                  "discount_total": {
                                    "type": "integer",
                                    "description": "The total discounted amount, in cents. If the order value is $10 with the a 10 percent discount, the discount total would 100 ($1).",
                                    "example": 100
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "receipt_url": {
                            "type": "string",
                            "description": "The order receipt URl. This will only be available if MealMe processed the payment for the order.",
                            "example": "https://pay.stripe.com/receipts/payment/123456789"
                          },
                          "refunded_amount": {
                            "type": "integer",
                            "description": "The total amount refunded, in cents.",
                            "example": 500
                          },
                          "store_confirmed_timestamp": {
                            "type": "number",
                            "description": "The time the store confirmed the order, represented by a unix timestamp.",
                            "example": 1650578800.31
                          },
                          "pickup_instructions": {
                            "type": "string",
                            "description": "The pickup instructions for pickup orders.",
                            "example": "Ask for the pickup order for Steve Jobs."
                          },
                          "pickup_order_number": {
                            "type": "string",
                            "description": "The pickup order number. The availability of this property varies across different stores.",
                            "example": "3456"
                          },
                          "metadata": {
                            "description": "The set of key-value pairs provided when creating the order with '/order/order`.",
                            "example": {
                              "Promo Code": "ABC123"
                            },
                            "allOf": [
                              {
                                "properties": {
                                  "*": {
                                    "type": "string",
                                    "description": "Any metadata value",
                                    "example": "ABC123"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          }
                        },
                        "type": "object"
                      }
                    },
                    "order_count": {
                      "type": "integer",
                      "description": "The total order count across all pages."
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The encountered rate limit description.",
                      "example": "10 per 1 second(s)!"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Get Orders",
        "operationId": "get_account_orders",
        "parameters": [
          {
            "name": "order_id",
            "in": "query",
            "description": "The order_id for the order to fetch, this takes precedence over all filters below",
            "schema": {
              "type": "string",
              "default": "-N03tAvlIinAWhlIYPyj"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "The start date (MM/DD/YYYY) to fetch orders for, starting from 12:00am UTC, inclusive",
            "schema": {
              "type": "string",
              "default": "03/01/2022"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "The end date (MM/DD/YYYY) to fetch orders for, ending at 11:59pm UTC, inclusive",
            "schema": {
              "type": "string",
              "default": "03/06/2022"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The comma-delimited list of statuses filter by. Can include `unplaced`, `awaiting_confirmation`, `in_progress`, `canceled`, or `completed`. For example, `status` can be `awaiting_confirmation,in_progress`",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "favorited",
            "in": "query",
            "description": "Whether to return orders that are favorited or not favorited. Note: unplaced orders that are not favorited will never be returned to prevent overload.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The user ID to filter by",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "include_order_count",
            "in": "query",
            "description": "Whether to include the total order count `order_count`. This flag will be ignored if `order_id` is provided.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page to retrieve of orders to retrieve. Note that each page will include at most 100 orders.",
            "schema": {
              "type": "integer",
              "default": 0
            }
          }
        ],
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/account/tracking/add_webhook": {
      "post": {
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Description of whether adding/updating tracking webhook was successful",
                      "example": "Current tracking webhook attached to account: https://mealme.ai/tracking_webhook"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Input Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The description of the incorrect input value.",
                      "example": "Missing/Invalid required input parameter: <parameter>"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Missing Authorization",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "error"
                  ],
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "The reason authentication failed.",
                      "example": "Incorrect API key"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Add Tracking Webhook",
        "operationId": "post_account_tracking_add_webhook",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "endpoint"
                ],
                "properties": {
                  "endpoint": {
                    "type": "string",
                    "description": "The endpoint to receive tracking updates for",
                    "example": "https://mealme.ai/tracking_webhook"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "apikey": []
          }
        ],
        "tags": [
          "Account"
        ]
      }
    }
  },
  "info": {
    "title": "The MealMe API",
    "version": "1.0",
    "description": "# Self-Serve API for out-of-the-box checkout from millions of stores for delivery & pickup.\n## About MealMe\n- Download the MealMe app as a live demonstration of what The Food API can power: https://apps.apple.com/us/app/mealme/id1460140965\n- MealMe was started in 2018. The Food API has powered the MealMe app in 2021 to earn millions in sales, ranking as one of the Top 50 Food & Drink apps for the entire year and getting featured as App of The Day.\n## API Features\n### Search the largest selection of restaurants & grocery stores\n- Our search engine includes the majority of grocery stores & restaurants & convenience stores in the US\n- MealMe's Checkout API aggregates the realtime updates of individual webpages for the most up-to-date information, unlike crowdsourced data APIs like Yelp.\n### Browse real-time restaurant menus & grocery inventory\n- Every menu item & grocery product returned includes real-time ordering availability, prices, and even item customizations and modifiers.\n- This means we have a more detailed, more accurate, and more actionable selection of restaurant menus, grocery inventory, and food products than any other food API in the US.\n\n### Get the cheapest & fastest delivery quotes\n- Our delivery selection in the USA includes dozens of third-party delivery services and courier services as well as over 100,000 stores with their own drivers.\n- This means we have cheaper and faster delivery quotes than any other food API in the US.\n### Order anything\n- Right out of the box, our API allows sending an order to 1M+ stores and 100M+ products for pickup or delivery.\n- This means that we have a larger ordering selection than any other API in the US. \n## API Endpoints\n* **`/restaurants`**: The Restaurant API \n     * **`/search`**: The Restaurant Search API \n         * **`/cart`**: The Restaurant Cart Search API \n         * **`/item`**: The Restaurant Menu Item Search API \n         * **`/store`**: The Restaurant Store Search API \n     * **`/details`**: The Restaurant Details API \n         * **`/item`**: The Restaurant Menu Item API \n         * **`/menu`**: The Restaurant Menu API \n         * **`/quotes`**: The Restaurant Delivery & Pickup API \n* **`/groceries`**: The Grocery API \n     * **`/search`**: The Grocery Search API \n         * **`/cart/v2`**: The Grocery Cart Search API \n         * **`/product/v2`**: The Grocery Product Search API \n         * **`/store`**: The Grocery Store Search API \n     * **`/details`**: The Grocery Details API \n         * **`/product`**: The Grocery Product API \n         * **`/products`**: The Grocery Store Inventory API \n         * **`/quotes`**: The Grocery Delivery & Pickup API \n* **`/order`**: The Food Ordering API \n     * **`/add_payment_method`**: The Add Payment Method API \n     * **`/finalize`**: The Delivery and Pickup Ordering API \n     * **`/order`**: The Delivery and Pickup Ordering API \n* **`/courier`**: The Courier Ordering API \n     * **`/cancel`**: The Courier Order Cancel API \n     * **`/order`**: The Last-Mile Ordering API \n     * **`/quote`**: The Courier Quote API \n* **`/account`**: The Client Account Stats API \n     * **`/billing`**: The Client Account Billing API \n         * **`/fees`**: The Client Account Endpoint Fees API \n         * **`/orders`**: The Client Account Completed Orders API \n     * **`/orders`**: The Client Account Orders Listing API \n     * **`/requests`**: The Client Account Endpoint Requests Listing API \n* **`/customer`**: The Customer Service API \n     * **`/service`**: The Customer Service API \n         * **`/exit_chat`**: The Customer Service Chat Exit API \n         * **`/fetch_chat_ids`**: The Customer Service Chat Fetching API \n         * **`/initiate_chat`**: The Customer Service Initiating Chat API \n         * **`/read_messages`**: The Customer Service Read Chat API \n         * **`/send_message`**: The Customer Service Messaging API \n* **`/location`**: The Location Geocoding API \n     * **`/geocode`**: The Address to Coordinates API \n     * **`/reverse_geocode`**: The Coordinates to Address API \n* **`/places`**: The Places API \n     * **`/search`**: The Places Search API \n     * **`/inventory`**: The Places Inventory API \n     * **`/checkout`**: The Places Checkout API \n* **`/utilities`**: The Utilities API \n     * **`/add_store`**: The Adding Store By Google Place ID API \n     * **`/grocery_store_lookup`**: The Grocery Store Lookup API \n     * **`/restaurant_store_lookup`**: The Restaurant Lookup API \n\n## API Tutorial for Python\nWant a tutorial for another language? Reach out to api@mealme.ai!\n\n### 0. Get your API Key \n- **In this sandbox website**: enter your API Key into the green \"Authorize\" lock button on the right \n- **In your code**: pass the API Key into the `id_token` HTTP Header \n\n### 1. Navigate this sandbox\n1. First, choose to focus on the **Groceries API** or **Restaurants API** (`/groceries` or `/restaurants`) \n2. Try out the **Store Search API** (`/search/store`)\n   - At this point, test that your API Key works!\n   - To get started, try the example San Francisco search query by hitting the \"Try it out\" button then the blue \"Execute\" button.\n3. Take a `quote_id` from a store and pass it into the **Quote API** (`/details/quotes`) or **Menu API** (`/details/menu` or `/details/inventory`) \n\n### 2. Integrate the API with one line of code\nOpen terminal and type these commands to set up your environment. Ensure you already have python3 installed.\n```\npip3 install requests\npython3\nimport requests \n```\nYour terminal is now showing a shell to execute python3 commands. Execute the API request command:\n```\nprint(requests.get(f\"https://mealme-4.mealme.ai/restaurants/search/store?query=pizza&latitude=37.7786357&longitude=-122.3918135\", headers={\"Id-Token\": \"API:KEY\"}).json()) \n```\nBe sure you replaced \"API:KEY\" with your actual API Key! You'll see a JSON of pizza stores nearby.\n\n### 3. Run Sample Project\nThe sample code prints out the first available menu at a pizza store nearby. Download the sample project here: https://drive.google.com/file/d/1pk_fIEYr4Qf0coAphm4UZ975dQVYtTKM/view?usp=sharing \n\n## FAQ \n- Why aren't response times always fast?\n    - The sandbox website is slow to load massive JSON responses, especially for the Search API, so use Postman instead for API requests to speed it up by several seconds. In fact, really big responses get the error \"RangeError: Maximum call stack size exceeded.\"\n    - The sandbox server is much, much less performance-optimized than the production servers.\n- Should I request the `/details/item` or `/details/product` API if customizations were returned from the `/details/menu` or `/details/products` API?\n    - No. Do not call the item or product details endpoint if menu or inventory API returns `should_fetch_customizations: false` in its response.\n        - If the menu or products API returns `should_fetch_customizations: false`, then the product customizations are returned in the menu response.\n    - Even if the \"customizations\" key is empty, that's fine. That means there's no customizations for that item.\n- Why does the blue \"Execute\" button sometimes do nothing when I click it?\n    - This means your input data is invalid, such as an invalid JSON for a POST request.\n\n## API Status Codes \nWe get alerted of anything that's not a 200. If it's urgent, do not hesitate to email api@mealme.ai - we will get back to you ASAP! These are the general guidelines for the API status codes. See individual routes for specific status codes. \n\n`200 OK` - Response to a successful request.\n\n`400 Bad Request` - Malformed request; request body validation errors.\n\n`401 Unauthorized` - When no or invalid authentication details are provided.\n\n`403 Forbidden` - When authentication succeeded but authenticated user doesn't have access to the resource.\n\n`404 Not Found` - When a non-existent endpoint is requested.\n\n`406 Unavailable` -  When a delivery or pickup service or store is unavailable right now.\n\n`422 Unprocessable Entity` - The request was well-formed but was unable to be not acceptable.\n\n`500 Server Error` - The server encountered an unexpected condition which prevented it from completing the request.\n\n`501 Not Implemented` - The HTTP method is not supported by the server and cannot be handled.\n\n`502 Bad Gateway` - The server got an invalid response while working as a gateway to get a response needed to handle the request.\n\n`503 Service Unavailable` - The server is not ready to handle the request.\n\n`504 Gateway Timeout` - The server is acting as a gateway and cannot get a response in time for a request.\n\n"
  },
  "tags": [
    {
      "name": "Search",
      "description": "Universal Search API"
    },
    {
      "name": "Inventory",
      "description": "Universal Inventory API"
    },
    {
      "name": "Order",
      "description": "Universal Food Ordering API"
    },
    {
      "name": "Courier",
      "description": "Universal Courier Ordering API"
    },
    {
      "name": "Cart",
      "description": "Cart API"
    },
    {
      "name": "Account",
      "description": "Client Account"
    },
    {
      "name": "Payment",
      "description": "Payment API"
    },
    {
      "name": "Customer",
      "description": "Customer Service API"
    },
    {
      "name": "Location",
      "description": "Location Geocoding API"
    },
    {
      "name": "Places",
      "description": "Search, Inventory, and Checkout API for millions of places, right out-of-the-box"
    },
    {
      "name": "Utilities",
      "description": "API Utility Functions"
    }
  ],
  "servers": [
    {
      "url": "https://api.mealme.ai"
    }
  ],
  "components": {
    "responses": {
      "ParseError": {
        "description": "When a mask can't be parsed"
      },
      "MaskError": {
        "description": "When any error occurs on mask"
      }
    },
    "securitySchemes": {
      "apikey": {
        "type": "apiKey",
        "in": "header",
        "name": "Id-Token"
      }
    },
    "schemas": {
      "Store": {
        "required": [
          "_id",
          "address",
          "aggregated_rating_count",
          "cuisines",
          "delivery_enabled",
          "description",
          "dollar_signs",
          "food_photos",
          "hours",
          "is_open",
          "local_hours",
          "logo_photos",
          "miles",
          "name",
          "offers_first_party_delivery",
          "offers_third_party_delivery",
          "phone_number",
          "pickup_enabled",
          "store_photos",
          "supports_upc_codes",
          "type",
          "weighted_rating_value"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "MealMe ID of the store. Can be null in some cases.",
            "example": "7c0360a5-20f4-470a-b8a0-124a509ad827"
          },
          "name": {
            "type": "string",
            "description": "Name of the store",
            "example": "7-Eleven"
          },
          "phone_number": {
            "type": "integer",
            "description": "Phone number of the store",
            "example": 14158638332
          },
          "address": {
            "description": "",
            "required": [
              "city",
              "country",
              "latitude",
              "longitude",
              "state",
              "street_addr",
              "street_addr_2",
              "zipcode"
            ],
            "properties": {
              "street_addr": {
                "type": "string",
                "description": "Street Address",
                "example": "1390 Market Street"
              },
              "city": {
                "type": "string",
                "description": "City",
                "example": "San Francisco"
              },
              "state": {
                "type": "string",
                "description": "State abbreviation",
                "example": "CA"
              },
              "zipcode": {
                "type": "string",
                "description": "Zipcode",
                "example": "94102"
              },
              "country": {
                "type": "string",
                "description": "Country abbreviation",
                "example": "US"
              },
              "street_addr_2": {
                "type": "string",
                "description": "Street Address 2",
                "example": "Apt. 123"
              },
              "latitude": {
                "type": "number",
                "description": "Latitude",
                "example": 37.77709
              },
              "longitude": {
                "type": "number",
                "description": "Longitude",
                "example": -122.4172976
              }
            },
            "type": "object"
          },
          "type": {
            "type": "string",
            "description": "Type of the store, either \"grocery\" or \"restaurant\"",
            "example": "grocery"
          },
          "description": {
            "type": "string",
            "description": "Description of the store",
            "example": "Local convenience store with snacks, beverages, and more."
          },
          "local_hours": {
            "description": "",
            "properties": {
              "operational": {
                "description": "",
                "properties": {
                  "Monday": {
                    "type": "string",
                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                    "example": "09:30AM - 01:00AM"
                  },
                  "Tuesday": {
                    "type": "string",
                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                  },
                  "Wednesday": {
                    "type": "string",
                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                    "example": "12:00AM - 4:00PM"
                  },
                  "Thursday": {
                    "type": "string",
                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                    "example": "8:00AM - 4:00AM"
                  },
                  "Friday": {
                    "type": "string",
                    "description": "If a restaurant is open until midnight, it will show as above.",
                    "example": "10:00AM - 12:00AM"
                  },
                  "Saturday": {
                    "type": "string",
                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                    "example": "Closed"
                  },
                  "Sunday": {
                    "type": "string",
                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                    "example": "Open 24 hours"
                  }
                },
                "type": "object"
              },
              "delivery": {
                "description": "",
                "properties": {
                  "Monday": {
                    "type": "string",
                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                    "example": "09:30AM - 01:00AM"
                  },
                  "Tuesday": {
                    "type": "string",
                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                  },
                  "Wednesday": {
                    "type": "string",
                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                    "example": "12:00AM - 4:00PM"
                  },
                  "Thursday": {
                    "type": "string",
                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                    "example": "8:00AM - 4:00AM"
                  },
                  "Friday": {
                    "type": "string",
                    "description": "If a restaurant is open until midnight, it will show as above.",
                    "example": "10:00AM - 12:00AM"
                  },
                  "Saturday": {
                    "type": "string",
                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                    "example": "Closed"
                  },
                  "Sunday": {
                    "type": "string",
                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                    "example": "Open 24 hours"
                  }
                },
                "type": "object"
              },
              "pickup": {
                "description": "",
                "properties": {
                  "Monday": {
                    "type": "string",
                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                    "example": "09:30AM - 01:00AM"
                  },
                  "Tuesday": {
                    "type": "string",
                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                  },
                  "Wednesday": {
                    "type": "string",
                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                    "example": "12:00AM - 4:00PM"
                  },
                  "Thursday": {
                    "type": "string",
                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                    "example": "8:00AM - 4:00AM"
                  },
                  "Friday": {
                    "type": "string",
                    "description": "If a restaurant is open until midnight, it will show as above.",
                    "example": "10:00AM - 12:00AM"
                  },
                  "Saturday": {
                    "type": "string",
                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                    "example": "Closed"
                  },
                  "Sunday": {
                    "type": "string",
                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                    "example": "Open 24 hours"
                  }
                },
                "type": "object"
              },
              "dine_in": {
                "description": "",
                "properties": {
                  "Monday": {
                    "type": "string",
                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                    "example": "09:30AM - 01:00AM"
                  },
                  "Tuesday": {
                    "type": "string",
                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                  },
                  "Wednesday": {
                    "type": "string",
                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                    "example": "12:00AM - 4:00PM"
                  },
                  "Thursday": {
                    "type": "string",
                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                    "example": "8:00AM - 4:00AM"
                  },
                  "Friday": {
                    "type": "string",
                    "description": "If a restaurant is open until midnight, it will show as above.",
                    "example": "10:00AM - 12:00AM"
                  },
                  "Saturday": {
                    "type": "string",
                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                    "example": "Closed"
                  },
                  "Sunday": {
                    "type": "string",
                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                    "example": "Open 24 hours"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "hours": {
            "description": "A mapping of quote ID(s) to their respective local hours.",
            "allOf": [
              {
                "properties": {
                  "*": {
                    "description": "",
                    "properties": {
                      "operational": {
                        "description": "",
                        "properties": {
                          "Monday": {
                            "type": "string",
                            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                            "example": "09:30AM - 01:00AM"
                          },
                          "Tuesday": {
                            "type": "string",
                            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                          },
                          "Wednesday": {
                            "type": "string",
                            "description": "If a restaurant is opens at midnight, it will show as above. ",
                            "example": "12:00AM - 4:00PM"
                          },
                          "Thursday": {
                            "type": "string",
                            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                            "example": "8:00AM - 4:00AM"
                          },
                          "Friday": {
                            "type": "string",
                            "description": "If a restaurant is open until midnight, it will show as above.",
                            "example": "10:00AM - 12:00AM"
                          },
                          "Saturday": {
                            "type": "string",
                            "description": "If a restaurant shows “Closed“, it is closed for that day.",
                            "example": "Closed"
                          },
                          "Sunday": {
                            "type": "string",
                            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                            "example": "Open 24 hours"
                          }
                        },
                        "type": "object"
                      },
                      "delivery": {
                        "description": "",
                        "properties": {
                          "Monday": {
                            "type": "string",
                            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                            "example": "09:30AM - 01:00AM"
                          },
                          "Tuesday": {
                            "type": "string",
                            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                          },
                          "Wednesday": {
                            "type": "string",
                            "description": "If a restaurant is opens at midnight, it will show as above. ",
                            "example": "12:00AM - 4:00PM"
                          },
                          "Thursday": {
                            "type": "string",
                            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                            "example": "8:00AM - 4:00AM"
                          },
                          "Friday": {
                            "type": "string",
                            "description": "If a restaurant is open until midnight, it will show as above.",
                            "example": "10:00AM - 12:00AM"
                          },
                          "Saturday": {
                            "type": "string",
                            "description": "If a restaurant shows “Closed“, it is closed for that day.",
                            "example": "Closed"
                          },
                          "Sunday": {
                            "type": "string",
                            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                            "example": "Open 24 hours"
                          }
                        },
                        "type": "object"
                      },
                      "pickup": {
                        "description": "",
                        "properties": {
                          "Monday": {
                            "type": "string",
                            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                            "example": "09:30AM - 01:00AM"
                          },
                          "Tuesday": {
                            "type": "string",
                            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                          },
                          "Wednesday": {
                            "type": "string",
                            "description": "If a restaurant is opens at midnight, it will show as above. ",
                            "example": "12:00AM - 4:00PM"
                          },
                          "Thursday": {
                            "type": "string",
                            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                            "example": "8:00AM - 4:00AM"
                          },
                          "Friday": {
                            "type": "string",
                            "description": "If a restaurant is open until midnight, it will show as above.",
                            "example": "10:00AM - 12:00AM"
                          },
                          "Saturday": {
                            "type": "string",
                            "description": "If a restaurant shows “Closed“, it is closed for that day.",
                            "example": "Closed"
                          },
                          "Sunday": {
                            "type": "string",
                            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                            "example": "Open 24 hours"
                          }
                        },
                        "type": "object"
                      },
                      "dine_in": {
                        "description": "",
                        "properties": {
                          "Monday": {
                            "type": "string",
                            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                            "example": "09:30AM - 01:00AM"
                          },
                          "Tuesday": {
                            "type": "string",
                            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                          },
                          "Wednesday": {
                            "type": "string",
                            "description": "If a restaurant is opens at midnight, it will show as above. ",
                            "example": "12:00AM - 4:00PM"
                          },
                          "Thursday": {
                            "type": "string",
                            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                            "example": "8:00AM - 4:00AM"
                          },
                          "Friday": {
                            "type": "string",
                            "description": "If a restaurant is open until midnight, it will show as above.",
                            "example": "10:00AM - 12:00AM"
                          },
                          "Saturday": {
                            "type": "string",
                            "description": "If a restaurant shows “Closed“, it is closed for that day.",
                            "example": "Closed"
                          },
                          "Sunday": {
                            "type": "string",
                            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                            "example": "Open 24 hours"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            ]
          },
          "utc_hours": {
            "description": "",
            "properties": {
              "operational": {
                "description": "",
                "required": [
                  "Friday",
                  "Monday",
                  "Saturday",
                  "Sunday",
                  "Thursday",
                  "Tuesday",
                  "Wednesday"
                ],
                "properties": {
                  "Monday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Monday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Tuesday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Tuesday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Wednesday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Wednesday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Thursday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Thursday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Friday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Friday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Saturday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Saturday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Sunday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Sunday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "type": "object"
              },
              "delivery": {
                "description": "",
                "required": [
                  "Friday",
                  "Monday",
                  "Saturday",
                  "Sunday",
                  "Thursday",
                  "Tuesday",
                  "Wednesday"
                ],
                "properties": {
                  "Monday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Monday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Tuesday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Tuesday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Wednesday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Wednesday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Thursday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Thursday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Friday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Friday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Saturday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Saturday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Sunday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Sunday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "type": "object"
              },
              "pickup": {
                "description": "",
                "required": [
                  "Friday",
                  "Monday",
                  "Saturday",
                  "Sunday",
                  "Thursday",
                  "Tuesday",
                  "Wednesday"
                ],
                "properties": {
                  "Monday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Monday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Tuesday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Tuesday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Wednesday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Wednesday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Thursday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Thursday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Friday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Friday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Saturday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Saturday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Sunday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Sunday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "type": "object"
              },
              "dine_in": {
                "description": "",
                "required": [
                  "Friday",
                  "Monday",
                  "Saturday",
                  "Sunday",
                  "Thursday",
                  "Tuesday",
                  "Wednesday"
                ],
                "properties": {
                  "Monday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Monday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Tuesday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Tuesday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Wednesday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Wednesday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Thursday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Thursday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Friday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Friday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Saturday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Saturday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Sunday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Sunday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "cuisines": {
            "type": "array",
            "description": "The cuisine types",
            "example": [
              "Snacks",
              "Convenience",
              "Ice Cream"
            ],
            "items": {
              "type": "string",
              "description": "Cuisine of the store"
            }
          },
          "food_photos": {
            "type": "array",
            "description": "Photos of the food at the store",
            "example": [
              "https://cdn-img.mealme.ai/f9ccb38a3d986eeb3f25e5b021d85a73c5d492ba/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f65303762376261372d663036612d346237302d383861302d3466633932656261346236322e6a706567"
            ],
            "items": {
              "type": "string",
              "description": "Photo of the store"
            }
          },
          "logo_photos": {
            "type": "array",
            "description": "Photos of the store's logo",
            "example": [
              "https://cdn-img.mealme.ai/9a55bb89e411b1ef87210731a2e7f9fe850cc979/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f76313630313330373339332f656a6e376377756b74766537766e696867616b782e6a7067"
            ],
            "items": {
              "type": "string",
              "description": "Photo of the store's logo"
            }
          },
          "store_photos": {
            "type": "array",
            "description": "Photos of the store",
            "example": [
              "https://cdn-img.mealme.ai/7aba9346a8f2e1d8ecf453a86fe3be1b53f98270/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f36393264376333342d626465362d343337612d616435342d3961303633656333666161642e6a706567"
            ],
            "items": {
              "type": "string",
              "description": "Photo of the store"
            }
          },
          "dollar_signs": {
            "type": "integer",
            "description": "Estimated cost of the store, like 1 representing \"$\" or 2 representing \"$$\"",
            "example": 1
          },
          "pickup_enabled": {
            "type": "boolean",
            "description": "Whether the store supports pickup.",
            "example": false
          },
          "delivery_enabled": {
            "type": "boolean",
            "description": "Whether the store supports delivery.",
            "example": true
          },
          "is_open": {
            "type": "boolean",
            "description": "Whether the store is open. If null, then there is no data available on whether the store is open.",
            "example": true
          },
          "quotes": {
            "description": "",
            "properties": {
              "cheapest_delivery": {
                "example": {
                  "time_estimate": {
                    "minimum": 43,
                    "maximum": 45
                  },
                  "sales_tax_percent": 10.5,
                  "delivery_fee": {
                    "delivery_fee_flat": 0,
                    "delivery_fee_percent": 0,
                    "delivery_fee_taxable": false
                  },
                  "service_fee": {
                    "service_fee_flat": 0,
                    "service_fee_percent": 10,
                    "service_fee_min": 300,
                    "service_fee_max": 700,
                    "service_fee_taxable": false
                  },
                  "small_order_fee": {
                    "minimum_order_value": 0,
                    "small_order_fee_flat": 0,
                    "small_order_fee_percent": 0
                  },
                  "order_minimum": 1500,
                  "threshold_fees": [],
                  "asap_available": true
                },
                "allOf": [
                  {
                    "required": [
                      "accepts_delivery_tip",
                      "accepts_pickup_note",
                      "accepts_pickup_tip",
                      "asap_available",
                      "courier_quote",
                      "delivery_fee",
                      "first_party_quote",
                      "order_minimum",
                      "sales_tax_percent",
                      "service_fee",
                      "small_order_fee",
                      "third_party_quote",
                      "time_estimate"
                    ],
                    "properties": {
                      "time_estimate": {
                        "description": "",
                        "required": [
                          "maximum",
                          "minimum"
                        ],
                        "properties": {
                          "minimum": {
                            "type": "integer",
                            "description": "Lower bound of delivery time estimate (in minutes)"
                          },
                          "maximum": {
                            "type": "integer",
                            "description": "Upper bound of delivery time estimate (in minutes)"
                          },
                          "scheduled": {
                            "type": "array",
                            "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                            "items": {
                              "required": [
                                "delivery_fee",
                                "maximum",
                                "minimum"
                              ],
                              "properties": {
                                "minimum": {
                                  "type": "integer",
                                  "description": "Timestamp (seconds since 1970)"
                                },
                                "maximum": {
                                  "type": "integer",
                                  "description": "Timestamp (seconds since 1970)"
                                },
                                "delivery_fee": {
                                  "description": "",
                                  "required": [
                                    "delivery_fee_flat",
                                    "delivery_fee_percent"
                                  ],
                                  "properties": {
                                    "delivery_fee_flat": {
                                      "type": "integer",
                                      "description": "Delivery fee amount in cents"
                                    },
                                    "delivery_fee_percent": {
                                      "type": "number",
                                      "description": "Delivery fee percentage"
                                    },
                                    "delivery_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the delivery fee is taxable or not"
                                    },
                                    "threshold_fees": {
                                      "type": "array",
                                      "description": "Threshold Fees, if they exist",
                                      "items": {
                                        "required": [
                                          "threshold_cents",
                                          "threshold_fee_cents"
                                        ],
                                        "properties": {
                                          "threshold_cents": {
                                            "type": "integer",
                                            "description": "Subtotal that enacts a specific fee"
                                          },
                                          "threshold_fee_cents": {
                                            "type": "integer",
                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "sales_tax_percent": {
                        "type": "integer",
                        "description": "Sales tax in percentage terms"
                      },
                      "delivery_fee": {
                        "description": "",
                        "required": [
                          "delivery_fee_flat",
                          "delivery_fee_percent"
                        ],
                        "properties": {
                          "delivery_fee_flat": {
                            "type": "integer",
                            "description": "Delivery fee amount in cents"
                          },
                          "delivery_fee_percent": {
                            "type": "number",
                            "description": "Delivery fee percentage"
                          },
                          "delivery_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether the delivery fee is taxable or not"
                          },
                          "threshold_fees": {
                            "type": "array",
                            "description": "Threshold Fees, if they exist",
                            "items": {
                              "required": [
                                "threshold_cents",
                                "threshold_fee_cents"
                              ],
                              "properties": {
                                "threshold_cents": {
                                  "type": "integer",
                                  "description": "Subtotal that enacts a specific fee"
                                },
                                "threshold_fee_cents": {
                                  "type": "integer",
                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "service_fee": {
                        "description": "",
                        "required": [
                          "service_fee_flat",
                          "service_fee_percent"
                        ],
                        "properties": {
                          "service_fee_flat": {
                            "type": "integer",
                            "description": "Service fee amount in cents"
                          },
                          "service_fee_percent": {
                            "type": "number",
                            "description": "Service fee percentage from 0 to 100"
                          },
                          "service_fee_min": {
                            "type": "integer",
                            "description": "Minimum service fee amount in cents"
                          },
                          "service_fee_max": {
                            "type": "integer",
                            "description": "Maximum service fee amount in cents"
                          },
                          "service_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether the service fee is taxable or not"
                          },
                          "threshold_fees": {
                            "type": "array",
                            "description": "Threshold Fees, if they exist",
                            "items": {
                              "required": [
                                "threshold_cents",
                                "threshold_fee_cents"
                              ],
                              "properties": {
                                "threshold_cents": {
                                  "type": "integer",
                                  "description": "Subtotal that enacts a specific fee"
                                },
                                "threshold_fee_cents": {
                                  "type": "integer",
                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "small_order_fee": {
                        "description": "",
                        "required": [
                          "minimum_order_value",
                          "small_order_fee_flat",
                          "small_order_fee_percent"
                        ],
                        "properties": {
                          "minimum_order_value": {
                            "type": "integer",
                            "description": "Minimum amount to not incur small order fee in cents",
                            "example": 0
                          },
                          "small_order_fee_flat": {
                            "type": "integer",
                            "description": "Small order fee amount in cents",
                            "example": 0
                          },
                          "small_order_fee_percent": {
                            "type": "number",
                            "description": "Small order fee percentage",
                            "example": 0
                          }
                        },
                        "type": "object"
                      },
                      "order_minimum": {
                        "type": "integer",
                        "description": "Minimum order amount in cents"
                      },
                      "min_tip": {
                        "type": "integer",
                        "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                      },
                      "asap_available": {
                        "type": "integer",
                        "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                      },
                      "first_party_quote": {
                        "type": "boolean",
                        "description": "Whether this quote is provided by the store"
                      },
                      "third_party_quote": {
                        "type": "boolean",
                        "description": "Whether this quote is provided by a third party service"
                      },
                      "courier_quote": {
                        "type": "boolean",
                        "description": "Whether this quote is provided by a last-mile delivery service."
                      },
                      "accepts_delivery_tip": {
                        "type": "boolean",
                        "description": "Whether a delivery tip is accepted."
                      },
                      "accepts_pickup_tip": {
                        "type": "boolean",
                        "description": "Whether a pickup tip is accepted."
                      },
                      "accepts_pickup_note": {
                        "type": "boolean",
                        "description": "Whether a pickup note is accepted."
                      }
                    },
                    "type": "object"
                  }
                ],
                "description": ""
              },
              "fastest_delivery": {
                "example": {
                  "time_estimate": {
                    "minimum": 15,
                    "maximum": 30
                  },
                  "sales_tax_percent": 10.5,
                  "delivery_fee": {
                    "delivery_fee_flat": 199,
                    "delivery_fee_percent": 0,
                    "delivery_fee_taxable": false
                  },
                  "service_fee": {
                    "service_fee_flat": 0,
                    "service_fee_percent": 5
                  },
                  "small_order_fee": {
                    "minimum_order_value": 1200,
                    "small_order_fee_flat": 200,
                    "small_order_fee_percent": 0
                  },
                  "order_minimum": 0,
                  "threshold_fees": [
                    {
                      "threshold_cents": 10000,
                      "threshold_fee_cents": 1000
                    },
                    {
                      "threshold_cents": 20000,
                      "threshold_fee_cents": 2000
                    }
                  ]
                },
                "allOf": [
                  {
                    "required": [
                      "accepts_delivery_tip",
                      "accepts_pickup_note",
                      "accepts_pickup_tip",
                      "asap_available",
                      "courier_quote",
                      "delivery_fee",
                      "first_party_quote",
                      "order_minimum",
                      "sales_tax_percent",
                      "service_fee",
                      "small_order_fee",
                      "third_party_quote",
                      "time_estimate"
                    ],
                    "properties": {
                      "time_estimate": {
                        "description": "",
                        "required": [
                          "maximum",
                          "minimum"
                        ],
                        "properties": {
                          "minimum": {
                            "type": "integer",
                            "description": "Lower bound of delivery time estimate (in minutes)"
                          },
                          "maximum": {
                            "type": "integer",
                            "description": "Upper bound of delivery time estimate (in minutes)"
                          },
                          "scheduled": {
                            "type": "array",
                            "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                            "items": {
                              "required": [
                                "delivery_fee",
                                "maximum",
                                "minimum"
                              ],
                              "properties": {
                                "minimum": {
                                  "type": "integer",
                                  "description": "Timestamp (seconds since 1970)"
                                },
                                "maximum": {
                                  "type": "integer",
                                  "description": "Timestamp (seconds since 1970)"
                                },
                                "delivery_fee": {
                                  "description": "",
                                  "required": [
                                    "delivery_fee_flat",
                                    "delivery_fee_percent"
                                  ],
                                  "properties": {
                                    "delivery_fee_flat": {
                                      "type": "integer",
                                      "description": "Delivery fee amount in cents"
                                    },
                                    "delivery_fee_percent": {
                                      "type": "number",
                                      "description": "Delivery fee percentage"
                                    },
                                    "delivery_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the delivery fee is taxable or not"
                                    },
                                    "threshold_fees": {
                                      "type": "array",
                                      "description": "Threshold Fees, if they exist",
                                      "items": {
                                        "required": [
                                          "threshold_cents",
                                          "threshold_fee_cents"
                                        ],
                                        "properties": {
                                          "threshold_cents": {
                                            "type": "integer",
                                            "description": "Subtotal that enacts a specific fee"
                                          },
                                          "threshold_fee_cents": {
                                            "type": "integer",
                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "sales_tax_percent": {
                        "type": "integer",
                        "description": "Sales tax in percentage terms"
                      },
                      "delivery_fee": {
                        "description": "",
                        "required": [
                          "delivery_fee_flat",
                          "delivery_fee_percent"
                        ],
                        "properties": {
                          "delivery_fee_flat": {
                            "type": "integer",
                            "description": "Delivery fee amount in cents"
                          },
                          "delivery_fee_percent": {
                            "type": "number",
                            "description": "Delivery fee percentage"
                          },
                          "delivery_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether the delivery fee is taxable or not"
                          },
                          "threshold_fees": {
                            "type": "array",
                            "description": "Threshold Fees, if they exist",
                            "items": {
                              "required": [
                                "threshold_cents",
                                "threshold_fee_cents"
                              ],
                              "properties": {
                                "threshold_cents": {
                                  "type": "integer",
                                  "description": "Subtotal that enacts a specific fee"
                                },
                                "threshold_fee_cents": {
                                  "type": "integer",
                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "service_fee": {
                        "description": "",
                        "required": [
                          "service_fee_flat",
                          "service_fee_percent"
                        ],
                        "properties": {
                          "service_fee_flat": {
                            "type": "integer",
                            "description": "Service fee amount in cents"
                          },
                          "service_fee_percent": {
                            "type": "number",
                            "description": "Service fee percentage from 0 to 100"
                          },
                          "service_fee_min": {
                            "type": "integer",
                            "description": "Minimum service fee amount in cents"
                          },
                          "service_fee_max": {
                            "type": "integer",
                            "description": "Maximum service fee amount in cents"
                          },
                          "service_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether the service fee is taxable or not"
                          },
                          "threshold_fees": {
                            "type": "array",
                            "description": "Threshold Fees, if they exist",
                            "items": {
                              "required": [
                                "threshold_cents",
                                "threshold_fee_cents"
                              ],
                              "properties": {
                                "threshold_cents": {
                                  "type": "integer",
                                  "description": "Subtotal that enacts a specific fee"
                                },
                                "threshold_fee_cents": {
                                  "type": "integer",
                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "small_order_fee": {
                        "description": "",
                        "required": [
                          "minimum_order_value",
                          "small_order_fee_flat",
                          "small_order_fee_percent"
                        ],
                        "properties": {
                          "minimum_order_value": {
                            "type": "integer",
                            "description": "Minimum amount to not incur small order fee in cents",
                            "example": 0
                          },
                          "small_order_fee_flat": {
                            "type": "integer",
                            "description": "Small order fee amount in cents",
                            "example": 0
                          },
                          "small_order_fee_percent": {
                            "type": "number",
                            "description": "Small order fee percentage",
                            "example": 0
                          }
                        },
                        "type": "object"
                      },
                      "order_minimum": {
                        "type": "integer",
                        "description": "Minimum order amount in cents"
                      },
                      "min_tip": {
                        "type": "integer",
                        "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                      },
                      "asap_available": {
                        "type": "integer",
                        "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                      },
                      "first_party_quote": {
                        "type": "boolean",
                        "description": "Whether this quote is provided by the store"
                      },
                      "third_party_quote": {
                        "type": "boolean",
                        "description": "Whether this quote is provided by a third party service"
                      },
                      "courier_quote": {
                        "type": "boolean",
                        "description": "Whether this quote is provided by a last-mile delivery service."
                      },
                      "accepts_delivery_tip": {
                        "type": "boolean",
                        "description": "Whether a delivery tip is accepted."
                      },
                      "accepts_pickup_tip": {
                        "type": "boolean",
                        "description": "Whether a pickup tip is accepted."
                      },
                      "accepts_pickup_note": {
                        "type": "boolean",
                        "description": "Whether a pickup note is accepted."
                      }
                    },
                    "type": "object"
                  }
                ],
                "description": ""
              },
              "pickup": {
                "example": {
                  "time_estimate": {
                    "minimum": 5,
                    "maximum": 5
                  },
                  "sales_tax_percent": 10.5,
                  "delivery_fee": {
                    "delivery_fee_flat": 0,
                    "delivery_fee_percent": 0,
                    "delivery_fee_taxable": false
                  },
                  "service_fee": {
                    "service_fee_flat": 0,
                    "service_fee_percent": 0
                  },
                  "small_order_fee": {
                    "minimum_order_value": 1200,
                    "small_order_fee_flat": 200,
                    "small_order_fee_percent": 0
                  },
                  "order_minimum": 100,
                  "threshold_fees": []
                },
                "allOf": [
                  {
                    "required": [
                      "accepts_delivery_tip",
                      "accepts_pickup_note",
                      "accepts_pickup_tip",
                      "asap_available",
                      "courier_quote",
                      "delivery_fee",
                      "first_party_quote",
                      "order_minimum",
                      "sales_tax_percent",
                      "service_fee",
                      "small_order_fee",
                      "third_party_quote",
                      "time_estimate"
                    ],
                    "properties": {
                      "time_estimate": {
                        "description": "",
                        "required": [
                          "maximum",
                          "minimum"
                        ],
                        "properties": {
                          "minimum": {
                            "type": "integer",
                            "description": "Lower bound of delivery time estimate (in minutes)"
                          },
                          "maximum": {
                            "type": "integer",
                            "description": "Upper bound of delivery time estimate (in minutes)"
                          },
                          "scheduled": {
                            "type": "array",
                            "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                            "items": {
                              "required": [
                                "delivery_fee",
                                "maximum",
                                "minimum"
                              ],
                              "properties": {
                                "minimum": {
                                  "type": "integer",
                                  "description": "Timestamp (seconds since 1970)"
                                },
                                "maximum": {
                                  "type": "integer",
                                  "description": "Timestamp (seconds since 1970)"
                                },
                                "delivery_fee": {
                                  "description": "",
                                  "required": [
                                    "delivery_fee_flat",
                                    "delivery_fee_percent"
                                  ],
                                  "properties": {
                                    "delivery_fee_flat": {
                                      "type": "integer",
                                      "description": "Delivery fee amount in cents"
                                    },
                                    "delivery_fee_percent": {
                                      "type": "number",
                                      "description": "Delivery fee percentage"
                                    },
                                    "delivery_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the delivery fee is taxable or not"
                                    },
                                    "threshold_fees": {
                                      "type": "array",
                                      "description": "Threshold Fees, if they exist",
                                      "items": {
                                        "required": [
                                          "threshold_cents",
                                          "threshold_fee_cents"
                                        ],
                                        "properties": {
                                          "threshold_cents": {
                                            "type": "integer",
                                            "description": "Subtotal that enacts a specific fee"
                                          },
                                          "threshold_fee_cents": {
                                            "type": "integer",
                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "sales_tax_percent": {
                        "type": "integer",
                        "description": "Sales tax in percentage terms"
                      },
                      "delivery_fee": {
                        "description": "",
                        "required": [
                          "delivery_fee_flat",
                          "delivery_fee_percent"
                        ],
                        "properties": {
                          "delivery_fee_flat": {
                            "type": "integer",
                            "description": "Delivery fee amount in cents"
                          },
                          "delivery_fee_percent": {
                            "type": "number",
                            "description": "Delivery fee percentage"
                          },
                          "delivery_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether the delivery fee is taxable or not"
                          },
                          "threshold_fees": {
                            "type": "array",
                            "description": "Threshold Fees, if they exist",
                            "items": {
                              "required": [
                                "threshold_cents",
                                "threshold_fee_cents"
                              ],
                              "properties": {
                                "threshold_cents": {
                                  "type": "integer",
                                  "description": "Subtotal that enacts a specific fee"
                                },
                                "threshold_fee_cents": {
                                  "type": "integer",
                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "service_fee": {
                        "description": "",
                        "required": [
                          "service_fee_flat",
                          "service_fee_percent"
                        ],
                        "properties": {
                          "service_fee_flat": {
                            "type": "integer",
                            "description": "Service fee amount in cents"
                          },
                          "service_fee_percent": {
                            "type": "number",
                            "description": "Service fee percentage from 0 to 100"
                          },
                          "service_fee_min": {
                            "type": "integer",
                            "description": "Minimum service fee amount in cents"
                          },
                          "service_fee_max": {
                            "type": "integer",
                            "description": "Maximum service fee amount in cents"
                          },
                          "service_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether the service fee is taxable or not"
                          },
                          "threshold_fees": {
                            "type": "array",
                            "description": "Threshold Fees, if they exist",
                            "items": {
                              "required": [
                                "threshold_cents",
                                "threshold_fee_cents"
                              ],
                              "properties": {
                                "threshold_cents": {
                                  "type": "integer",
                                  "description": "Subtotal that enacts a specific fee"
                                },
                                "threshold_fee_cents": {
                                  "type": "integer",
                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "small_order_fee": {
                        "description": "",
                        "required": [
                          "minimum_order_value",
                          "small_order_fee_flat",
                          "small_order_fee_percent"
                        ],
                        "properties": {
                          "minimum_order_value": {
                            "type": "integer",
                            "description": "Minimum amount to not incur small order fee in cents",
                            "example": 0
                          },
                          "small_order_fee_flat": {
                            "type": "integer",
                            "description": "Small order fee amount in cents",
                            "example": 0
                          },
                          "small_order_fee_percent": {
                            "type": "number",
                            "description": "Small order fee percentage",
                            "example": 0
                          }
                        },
                        "type": "object"
                      },
                      "order_minimum": {
                        "type": "integer",
                        "description": "Minimum order amount in cents"
                      },
                      "min_tip": {
                        "type": "integer",
                        "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                      },
                      "asap_available": {
                        "type": "integer",
                        "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                      },
                      "first_party_quote": {
                        "type": "boolean",
                        "description": "Whether this quote is provided by the store"
                      },
                      "third_party_quote": {
                        "type": "boolean",
                        "description": "Whether this quote is provided by a third party service"
                      },
                      "courier_quote": {
                        "type": "boolean",
                        "description": "Whether this quote is provided by a last-mile delivery service."
                      },
                      "accepts_delivery_tip": {
                        "type": "boolean",
                        "description": "Whether a delivery tip is accepted."
                      },
                      "accepts_pickup_tip": {
                        "type": "boolean",
                        "description": "Whether a pickup tip is accepted."
                      },
                      "accepts_pickup_note": {
                        "type": "boolean",
                        "description": "Whether a pickup note is accepted."
                      }
                    },
                    "type": "object"
                  }
                ],
                "description": ""
              }
            },
            "type": "object"
          },
          "quote_types": {
            "description": "",
            "properties": {
              "<quote id>": {
                "type": "array",
                "description": "The list of quote types available for this quote id.",
                "items": {
                  "type": "string",
                  "description": "Quote Type",
                  "example": "pickup",
                  "enum": [
                    "pickup",
                    "delivery"
                  ]
                }
              }
            },
            "type": "object"
          },
          "offers_first_party_delivery": {
            "type": "boolean",
            "description": "Whether or not the store delivers directly.",
            "example": false
          },
          "offers_third_party_delivery": {
            "type": "boolean",
            "description": "Whether or not the store delivers with third-party services.",
            "example": false
          },
          "miles": {
            "type": "number",
            "description": "Miles from the user to the store",
            "example": 0.23
          },
          "weighted_rating_value": {
            "type": "number",
            "description": "The weighted average rating of this store across all the websites it appears on. Floating-point from 1 to 5 (inclusive) or 0.",
            "example": 4.83
          },
          "aggregated_rating_count": {
            "type": "integer",
            "description": "Number of total aggregated ratings for this store across all the websites it appears on. Non-negative integer.",
            "example": 956
          },
          "supports_upc_codes": {
            "type": "boolean",
            "description": "Whether the store's inventory supports UPC codes.",
            "example": false
          }
        },
        "type": "object"
      },
      "Address": {
        "required": [
          "city",
          "country",
          "latitude",
          "longitude",
          "state",
          "street_addr",
          "street_addr_2",
          "zipcode"
        ],
        "properties": {
          "street_addr": {
            "type": "string",
            "description": "Street Address",
            "example": "1390 Market Street"
          },
          "city": {
            "type": "string",
            "description": "City",
            "example": "San Francisco"
          },
          "state": {
            "type": "string",
            "description": "State abbreviation",
            "example": "CA"
          },
          "zipcode": {
            "type": "string",
            "description": "Zipcode",
            "example": "94102"
          },
          "country": {
            "type": "string",
            "description": "Country abbreviation",
            "example": "US"
          },
          "street_addr_2": {
            "type": "string",
            "description": "Street Address 2",
            "example": "Apt. 123"
          },
          "latitude": {
            "type": "number",
            "description": "Latitude",
            "example": 37.77709
          },
          "longitude": {
            "type": "number",
            "description": "Longitude",
            "example": -122.4172976
          }
        },
        "type": "object"
      },
      "Product": {
        "required": [
          "attributes",
          "category",
          "description",
          "formatted_price",
          "grand_total",
          "image",
          "item_name",
          "menu_id",
          "original_price",
          "price",
          "product_id",
          "should_fetch_customizations",
          "store",
          "unit_of_measurement",
          "unit_size"
        ],
        "properties": {
          "product_id": {
            "type": "string",
            "description": "The MealMe Product ID",
            "example": "gAAAAABisq4zaclbhj_pOLJMMtsoUeXun4JmapdfWpLqz9fhel7ZMl7tTllTGm5X2it5sIZpV7mj2S0aEfnWNBXBK3jDgZa4p--8vIjQx1lHZZC6S6k1FOqhMfLs297PoA_uJoUZ-E7igoEubdjyNkER0YXjGogmhkdBiFyVVGLVONl_UW0PjHGVv1DzVxSLtNJn7INvtvH4YXi4_cgvIU8AVBMbuoJyOqvDgQRz6AWfnFzfOdF5fJEjesmcJitEcVZ_cvLRN8yourkHE8p08Y6DpsjrGLs23XA-_T-U5u9HMbmjjG9_IME-9Kvq8ZA5WQzS43dpT47pHgCG2KY5MnGxYg-ZYGUUC5im3UACmY0I6yzkR8iNGMf5KovQtTDbGLgKe_a6oHZdh6Y6I_8gi5Zj-1VligOu1rCAlVsb8WPxvs469p3ns72T-1J_t5KE1KHJ1iqgkTTX_G0ec5rREABOzMo0D8NpCaPdTjdb04mxHpvxcarQrQhu8qkz6vRlEWZEk5QOaano99_fJtFIodU6ymSbCFLyucNj3XA8EUyco-fjZfaUvzs="
          },
          "item_name": {
            "type": "string",
            "description": "The item's name",
            "example": "Iced Black Coffee"
          },
          "image": {
            "type": "string",
            "description": "Image of the item, if it exists",
            "example": "https://cdn-img.mealme.ai/502b9e3a38d1395352faccd16d6daa2f667268d2/68747470733a2f2f64326c6e72356d6861376279636a2e636c6f756466726f6e742e6e65742f70726f647563742d696d6167652f66696c652f6c617267655f64356163336130302d386566392d343461662d396537632d3436383163386632316239662e706e67"
          },
          "description": {
            "type": "string",
            "description": "The item's description",
            "example": "Our Classic Beverage!"
          },
          "category": {
            "type": "string",
            "description": "The item's category",
            "example": "Cold Coffees"
          },
          "price": {
            "type": "integer",
            "description": "The item's base price in cents",
            "example": 500
          },
          "formatted_price": {
            "type": "string",
            "description": "This product's price formatted in the store's accepted currency",
            "example": "$5.00"
          },
          "original_price": {
            "type": "integer",
            "description": "The product's original price. This will only be available if the product is currently on sale.",
            "example": 700
          },
          "upc_codes": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "The list of upc codes for this product",
              "example": [
                "1234"
              ]
            },
            "description": ""
          },
          "unit_size": {
            "type": "number",
            "description": "The unit size for this product",
            "example": 12
          },
          "unit_of_measurement": {
            "type": "string",
            "description": "The unit of measurement used to measure the product's size (i.e. oz, lb, L, gal)",
            "example": "oz"
          },
          "should_fetch_customizations": {
            "type": "boolean",
            "description": "Whether a request should be made to `/restaurants/details/product` to fetch customizations",
            "example": true
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "The list of dietary preferences for this product.",
              "example": [
                "Lactose-Free"
              ]
            },
            "description": ""
          },
          "menu_id": {
            "type": "string",
            "description": "The product's menu ID",
            "example": "gAAAAABisq4zjEh2BFV35vfjge4ZVQDyoBFZN-QvjUdpvEqBG5d4YSAwfBZ2oY3yQFdS3K7WyLnxuVPPhd5RlKwMGlQD3YpKCf9gzsBe6YcvzUD2mGoFR7Ucg8DT8OT1MkV_NkBKqPQ2YCFCGhGECsWfSatARHatM8XmN3oeTO7vNRQxoePbZxt0J_WMg7n24-kvMERLbtVpimIARjqu6AwVZ5yjr98TUWzP0rvQYQIUqCKHXPuxqW8NhEi0nPp2B_g10hCAkzPB6yYDvUTf-cp9VM9LXPXn6rtF3JherT-kBHwOE_Zh9ZAzZlqvnxl890Z-InD5h8Rw"
          },
          "grand_total": {
            "type": "integer",
            "description": "The grand total in cents for this product, including any fees if `fetch_quotes=true`",
            "example": 500
          },
          "quote": {
            "description": "",
            "required": [
              "accepts_delivery_tip",
              "accepts_pickup_note",
              "accepts_pickup_tip",
              "asap_available",
              "courier_quote",
              "delivery_fee",
              "first_party_quote",
              "order_minimum",
              "sales_tax_percent",
              "service_fee",
              "small_order_fee",
              "third_party_quote",
              "time_estimate"
            ],
            "properties": {
              "time_estimate": {
                "description": "",
                "required": [
                  "maximum",
                  "minimum"
                ],
                "properties": {
                  "minimum": {
                    "type": "integer",
                    "description": "Lower bound of delivery time estimate (in minutes)"
                  },
                  "maximum": {
                    "type": "integer",
                    "description": "Upper bound of delivery time estimate (in minutes)"
                  },
                  "scheduled": {
                    "type": "array",
                    "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                    "items": {
                      "required": [
                        "delivery_fee",
                        "maximum",
                        "minimum"
                      ],
                      "properties": {
                        "minimum": {
                          "type": "integer",
                          "description": "Timestamp (seconds since 1970)"
                        },
                        "maximum": {
                          "type": "integer",
                          "description": "Timestamp (seconds since 1970)"
                        },
                        "delivery_fee": {
                          "description": "",
                          "required": [
                            "delivery_fee_flat",
                            "delivery_fee_percent"
                          ],
                          "properties": {
                            "delivery_fee_flat": {
                              "type": "integer",
                              "description": "Delivery fee amount in cents"
                            },
                            "delivery_fee_percent": {
                              "type": "number",
                              "description": "Delivery fee percentage"
                            },
                            "delivery_fee_taxable": {
                              "type": "boolean",
                              "description": "Whether the delivery fee is taxable or not"
                            },
                            "threshold_fees": {
                              "type": "array",
                              "description": "Threshold Fees, if they exist",
                              "items": {
                                "required": [
                                  "threshold_cents",
                                  "threshold_fee_cents"
                                ],
                                "properties": {
                                  "threshold_cents": {
                                    "type": "integer",
                                    "description": "Subtotal that enacts a specific fee"
                                  },
                                  "threshold_fee_cents": {
                                    "type": "integer",
                                    "description": "Flat delivery fee that will be charged for this threshold_cents"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "type": "object"
              },
              "sales_tax_percent": {
                "type": "integer",
                "description": "Sales tax in percentage terms"
              },
              "delivery_fee": {
                "description": "",
                "required": [
                  "delivery_fee_flat",
                  "delivery_fee_percent"
                ],
                "properties": {
                  "delivery_fee_flat": {
                    "type": "integer",
                    "description": "Delivery fee amount in cents"
                  },
                  "delivery_fee_percent": {
                    "type": "number",
                    "description": "Delivery fee percentage"
                  },
                  "delivery_fee_taxable": {
                    "type": "boolean",
                    "description": "Whether the delivery fee is taxable or not"
                  },
                  "threshold_fees": {
                    "type": "array",
                    "description": "Threshold Fees, if they exist",
                    "items": {
                      "required": [
                        "threshold_cents",
                        "threshold_fee_cents"
                      ],
                      "properties": {
                        "threshold_cents": {
                          "type": "integer",
                          "description": "Subtotal that enacts a specific fee"
                        },
                        "threshold_fee_cents": {
                          "type": "integer",
                          "description": "Flat delivery fee that will be charged for this threshold_cents"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "type": "object"
              },
              "service_fee": {
                "description": "",
                "required": [
                  "service_fee_flat",
                  "service_fee_percent"
                ],
                "properties": {
                  "service_fee_flat": {
                    "type": "integer",
                    "description": "Service fee amount in cents"
                  },
                  "service_fee_percent": {
                    "type": "number",
                    "description": "Service fee percentage from 0 to 100"
                  },
                  "service_fee_min": {
                    "type": "integer",
                    "description": "Minimum service fee amount in cents"
                  },
                  "service_fee_max": {
                    "type": "integer",
                    "description": "Maximum service fee amount in cents"
                  },
                  "service_fee_taxable": {
                    "type": "boolean",
                    "description": "Whether the service fee is taxable or not"
                  },
                  "threshold_fees": {
                    "type": "array",
                    "description": "Threshold Fees, if they exist",
                    "items": {
                      "required": [
                        "threshold_cents",
                        "threshold_fee_cents"
                      ],
                      "properties": {
                        "threshold_cents": {
                          "type": "integer",
                          "description": "Subtotal that enacts a specific fee"
                        },
                        "threshold_fee_cents": {
                          "type": "integer",
                          "description": "Flat delivery fee that will be charged for this threshold_cents"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "type": "object"
              },
              "small_order_fee": {
                "description": "",
                "required": [
                  "minimum_order_value",
                  "small_order_fee_flat",
                  "small_order_fee_percent"
                ],
                "properties": {
                  "minimum_order_value": {
                    "type": "integer",
                    "description": "Minimum amount to not incur small order fee in cents",
                    "example": 0
                  },
                  "small_order_fee_flat": {
                    "type": "integer",
                    "description": "Small order fee amount in cents",
                    "example": 0
                  },
                  "small_order_fee_percent": {
                    "type": "number",
                    "description": "Small order fee percentage",
                    "example": 0
                  }
                },
                "type": "object"
              },
              "order_minimum": {
                "type": "integer",
                "description": "Minimum order amount in cents"
              },
              "min_tip": {
                "type": "integer",
                "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
              },
              "asap_available": {
                "type": "integer",
                "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
              },
              "first_party_quote": {
                "type": "boolean",
                "description": "Whether this quote is provided by the store"
              },
              "third_party_quote": {
                "type": "boolean",
                "description": "Whether this quote is provided by a third party service"
              },
              "courier_quote": {
                "type": "boolean",
                "description": "Whether this quote is provided by a last-mile delivery service."
              },
              "accepts_delivery_tip": {
                "type": "boolean",
                "description": "Whether a delivery tip is accepted."
              },
              "accepts_pickup_tip": {
                "type": "boolean",
                "description": "Whether a pickup tip is accepted."
              },
              "accepts_pickup_note": {
                "type": "boolean",
                "description": "Whether a pickup note is accepted."
              }
            },
            "type": "object"
          },
          "store": {
            "required": [
              "_id",
              "address",
              "aggregated_rating_count",
              "cuisines",
              "delivery_enabled",
              "description",
              "dollar_signs",
              "food_photos",
              "hours",
              "is_open",
              "local_hours",
              "logo_photos",
              "miles",
              "name",
              "offers_first_party_delivery",
              "offers_third_party_delivery",
              "phone_number",
              "pickup_enabled",
              "store_photos",
              "supports_upc_codes",
              "type",
              "weighted_rating_value"
            ],
            "properties": {
              "_id": {
                "type": "string",
                "description": "MealMe ID of the store. Can be null in some cases.",
                "example": "7c0360a5-20f4-470a-b8a0-124a509ad827"
              },
              "name": {
                "type": "string",
                "description": "Name of the store",
                "example": "7-Eleven"
              },
              "phone_number": {
                "type": "integer",
                "description": "Phone number of the store",
                "example": 14158638332
              },
              "address": {
                "description": "",
                "required": [
                  "city",
                  "country",
                  "latitude",
                  "longitude",
                  "state",
                  "street_addr",
                  "street_addr_2",
                  "zipcode"
                ],
                "properties": {
                  "street_addr": {
                    "type": "string",
                    "description": "Street Address",
                    "example": "1390 Market Street"
                  },
                  "city": {
                    "type": "string",
                    "description": "City",
                    "example": "San Francisco"
                  },
                  "state": {
                    "type": "string",
                    "description": "State abbreviation",
                    "example": "CA"
                  },
                  "zipcode": {
                    "type": "string",
                    "description": "Zipcode",
                    "example": "94102"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country abbreviation",
                    "example": "US"
                  },
                  "street_addr_2": {
                    "type": "string",
                    "description": "Street Address 2",
                    "example": "Apt. 123"
                  },
                  "latitude": {
                    "type": "number",
                    "description": "Latitude",
                    "example": 37.77709
                  },
                  "longitude": {
                    "type": "number",
                    "description": "Longitude",
                    "example": -122.4172976
                  }
                },
                "type": "object"
              },
              "type": {
                "type": "string",
                "description": "Type of the store, either \"grocery\" or \"restaurant\"",
                "example": "grocery"
              },
              "description": {
                "type": "string",
                "description": "Description of the store",
                "example": "Local convenience store with snacks, beverages, and more."
              },
              "local_hours": {
                "description": "",
                "properties": {
                  "operational": {
                    "description": "",
                    "properties": {
                      "Monday": {
                        "type": "string",
                        "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                        "example": "09:30AM - 01:00AM"
                      },
                      "Tuesday": {
                        "type": "string",
                        "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                        "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                      },
                      "Wednesday": {
                        "type": "string",
                        "description": "If a restaurant is opens at midnight, it will show as above. ",
                        "example": "12:00AM - 4:00PM"
                      },
                      "Thursday": {
                        "type": "string",
                        "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                        "example": "8:00AM - 4:00AM"
                      },
                      "Friday": {
                        "type": "string",
                        "description": "If a restaurant is open until midnight, it will show as above.",
                        "example": "10:00AM - 12:00AM"
                      },
                      "Saturday": {
                        "type": "string",
                        "description": "If a restaurant shows “Closed“, it is closed for that day.",
                        "example": "Closed"
                      },
                      "Sunday": {
                        "type": "string",
                        "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                        "example": "Open 24 hours"
                      }
                    },
                    "type": "object"
                  },
                  "delivery": {
                    "description": "",
                    "properties": {
                      "Monday": {
                        "type": "string",
                        "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                        "example": "09:30AM - 01:00AM"
                      },
                      "Tuesday": {
                        "type": "string",
                        "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                        "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                      },
                      "Wednesday": {
                        "type": "string",
                        "description": "If a restaurant is opens at midnight, it will show as above. ",
                        "example": "12:00AM - 4:00PM"
                      },
                      "Thursday": {
                        "type": "string",
                        "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                        "example": "8:00AM - 4:00AM"
                      },
                      "Friday": {
                        "type": "string",
                        "description": "If a restaurant is open until midnight, it will show as above.",
                        "example": "10:00AM - 12:00AM"
                      },
                      "Saturday": {
                        "type": "string",
                        "description": "If a restaurant shows “Closed“, it is closed for that day.",
                        "example": "Closed"
                      },
                      "Sunday": {
                        "type": "string",
                        "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                        "example": "Open 24 hours"
                      }
                    },
                    "type": "object"
                  },
                  "pickup": {
                    "description": "",
                    "properties": {
                      "Monday": {
                        "type": "string",
                        "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                        "example": "09:30AM - 01:00AM"
                      },
                      "Tuesday": {
                        "type": "string",
                        "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                        "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                      },
                      "Wednesday": {
                        "type": "string",
                        "description": "If a restaurant is opens at midnight, it will show as above. ",
                        "example": "12:00AM - 4:00PM"
                      },
                      "Thursday": {
                        "type": "string",
                        "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                        "example": "8:00AM - 4:00AM"
                      },
                      "Friday": {
                        "type": "string",
                        "description": "If a restaurant is open until midnight, it will show as above.",
                        "example": "10:00AM - 12:00AM"
                      },
                      "Saturday": {
                        "type": "string",
                        "description": "If a restaurant shows “Closed“, it is closed for that day.",
                        "example": "Closed"
                      },
                      "Sunday": {
                        "type": "string",
                        "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                        "example": "Open 24 hours"
                      }
                    },
                    "type": "object"
                  },
                  "dine_in": {
                    "description": "",
                    "properties": {
                      "Monday": {
                        "type": "string",
                        "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                        "example": "09:30AM - 01:00AM"
                      },
                      "Tuesday": {
                        "type": "string",
                        "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                        "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                      },
                      "Wednesday": {
                        "type": "string",
                        "description": "If a restaurant is opens at midnight, it will show as above. ",
                        "example": "12:00AM - 4:00PM"
                      },
                      "Thursday": {
                        "type": "string",
                        "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                        "example": "8:00AM - 4:00AM"
                      },
                      "Friday": {
                        "type": "string",
                        "description": "If a restaurant is open until midnight, it will show as above.",
                        "example": "10:00AM - 12:00AM"
                      },
                      "Saturday": {
                        "type": "string",
                        "description": "If a restaurant shows “Closed“, it is closed for that day.",
                        "example": "Closed"
                      },
                      "Sunday": {
                        "type": "string",
                        "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                        "example": "Open 24 hours"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "hours": {
                "description": "A mapping of quote ID(s) to their respective local hours.",
                "allOf": [
                  {
                    "properties": {
                      "*": {
                        "description": "",
                        "properties": {
                          "operational": {
                            "description": "",
                            "properties": {
                              "Monday": {
                                "type": "string",
                                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                "example": "09:30AM - 01:00AM"
                              },
                              "Tuesday": {
                                "type": "string",
                                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                              },
                              "Wednesday": {
                                "type": "string",
                                "description": "If a restaurant is opens at midnight, it will show as above. ",
                                "example": "12:00AM - 4:00PM"
                              },
                              "Thursday": {
                                "type": "string",
                                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                "example": "8:00AM - 4:00AM"
                              },
                              "Friday": {
                                "type": "string",
                                "description": "If a restaurant is open until midnight, it will show as above.",
                                "example": "10:00AM - 12:00AM"
                              },
                              "Saturday": {
                                "type": "string",
                                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                "example": "Closed"
                              },
                              "Sunday": {
                                "type": "string",
                                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                "example": "Open 24 hours"
                              }
                            },
                            "type": "object"
                          },
                          "delivery": {
                            "description": "",
                            "properties": {
                              "Monday": {
                                "type": "string",
                                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                "example": "09:30AM - 01:00AM"
                              },
                              "Tuesday": {
                                "type": "string",
                                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                              },
                              "Wednesday": {
                                "type": "string",
                                "description": "If a restaurant is opens at midnight, it will show as above. ",
                                "example": "12:00AM - 4:00PM"
                              },
                              "Thursday": {
                                "type": "string",
                                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                "example": "8:00AM - 4:00AM"
                              },
                              "Friday": {
                                "type": "string",
                                "description": "If a restaurant is open until midnight, it will show as above.",
                                "example": "10:00AM - 12:00AM"
                              },
                              "Saturday": {
                                "type": "string",
                                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                "example": "Closed"
                              },
                              "Sunday": {
                                "type": "string",
                                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                "example": "Open 24 hours"
                              }
                            },
                            "type": "object"
                          },
                          "pickup": {
                            "description": "",
                            "properties": {
                              "Monday": {
                                "type": "string",
                                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                "example": "09:30AM - 01:00AM"
                              },
                              "Tuesday": {
                                "type": "string",
                                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                              },
                              "Wednesday": {
                                "type": "string",
                                "description": "If a restaurant is opens at midnight, it will show as above. ",
                                "example": "12:00AM - 4:00PM"
                              },
                              "Thursday": {
                                "type": "string",
                                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                "example": "8:00AM - 4:00AM"
                              },
                              "Friday": {
                                "type": "string",
                                "description": "If a restaurant is open until midnight, it will show as above.",
                                "example": "10:00AM - 12:00AM"
                              },
                              "Saturday": {
                                "type": "string",
                                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                "example": "Closed"
                              },
                              "Sunday": {
                                "type": "string",
                                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                "example": "Open 24 hours"
                              }
                            },
                            "type": "object"
                          },
                          "dine_in": {
                            "description": "",
                            "properties": {
                              "Monday": {
                                "type": "string",
                                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                "example": "09:30AM - 01:00AM"
                              },
                              "Tuesday": {
                                "type": "string",
                                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                              },
                              "Wednesday": {
                                "type": "string",
                                "description": "If a restaurant is opens at midnight, it will show as above. ",
                                "example": "12:00AM - 4:00PM"
                              },
                              "Thursday": {
                                "type": "string",
                                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                "example": "8:00AM - 4:00AM"
                              },
                              "Friday": {
                                "type": "string",
                                "description": "If a restaurant is open until midnight, it will show as above.",
                                "example": "10:00AM - 12:00AM"
                              },
                              "Saturday": {
                                "type": "string",
                                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                "example": "Closed"
                              },
                              "Sunday": {
                                "type": "string",
                                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                "example": "Open 24 hours"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                ]
              },
              "utc_hours": {
                "description": "",
                "properties": {
                  "operational": {
                    "description": "",
                    "required": [
                      "Friday",
                      "Monday",
                      "Saturday",
                      "Sunday",
                      "Thursday",
                      "Tuesday",
                      "Wednesday"
                    ],
                    "properties": {
                      "Monday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Monday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Tuesday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Tuesday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Wednesday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Wednesday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Thursday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Thursday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Friday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Friday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Saturday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Saturday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Sunday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Sunday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "delivery": {
                    "description": "",
                    "required": [
                      "Friday",
                      "Monday",
                      "Saturday",
                      "Sunday",
                      "Thursday",
                      "Tuesday",
                      "Wednesday"
                    ],
                    "properties": {
                      "Monday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Monday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Tuesday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Tuesday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Wednesday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Wednesday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Thursday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Thursday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Friday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Friday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Saturday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Saturday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Sunday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Sunday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "pickup": {
                    "description": "",
                    "required": [
                      "Friday",
                      "Monday",
                      "Saturday",
                      "Sunday",
                      "Thursday",
                      "Tuesday",
                      "Wednesday"
                    ],
                    "properties": {
                      "Monday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Monday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Tuesday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Tuesday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Wednesday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Wednesday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Thursday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Thursday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Friday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Friday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Saturday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Saturday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Sunday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Sunday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "dine_in": {
                    "description": "",
                    "required": [
                      "Friday",
                      "Monday",
                      "Saturday",
                      "Sunday",
                      "Thursday",
                      "Tuesday",
                      "Wednesday"
                    ],
                    "properties": {
                      "Monday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Monday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Tuesday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Tuesday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Wednesday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Wednesday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Thursday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Thursday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Friday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Friday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Saturday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Saturday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Sunday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Sunday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "cuisines": {
                "type": "array",
                "description": "The cuisine types",
                "example": [
                  "Snacks",
                  "Convenience",
                  "Ice Cream"
                ],
                "items": {
                  "type": "string",
                  "description": "Cuisine of the store"
                }
              },
              "food_photos": {
                "type": "array",
                "description": "Photos of the food at the store",
                "example": [
                  "https://cdn-img.mealme.ai/f9ccb38a3d986eeb3f25e5b021d85a73c5d492ba/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f65303762376261372d663036612d346237302d383861302d3466633932656261346236322e6a706567"
                ],
                "items": {
                  "type": "string",
                  "description": "Photo of the store"
                }
              },
              "logo_photos": {
                "type": "array",
                "description": "Photos of the store's logo",
                "example": [
                  "https://cdn-img.mealme.ai/9a55bb89e411b1ef87210731a2e7f9fe850cc979/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f76313630313330373339332f656a6e376377756b74766537766e696867616b782e6a7067"
                ],
                "items": {
                  "type": "string",
                  "description": "Photo of the store's logo"
                }
              },
              "store_photos": {
                "type": "array",
                "description": "Photos of the store",
                "example": [
                  "https://cdn-img.mealme.ai/7aba9346a8f2e1d8ecf453a86fe3be1b53f98270/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f36393264376333342d626465362d343337612d616435342d3961303633656333666161642e6a706567"
                ],
                "items": {
                  "type": "string",
                  "description": "Photo of the store"
                }
              },
              "dollar_signs": {
                "type": "integer",
                "description": "Estimated cost of the store, like 1 representing \"$\" or 2 representing \"$$\"",
                "example": 1
              },
              "pickup_enabled": {
                "type": "boolean",
                "description": "Whether the store supports pickup.",
                "example": false
              },
              "delivery_enabled": {
                "type": "boolean",
                "description": "Whether the store supports delivery.",
                "example": true
              },
              "is_open": {
                "type": "boolean",
                "description": "Whether the store is open. If null, then there is no data available on whether the store is open.",
                "example": true
              },
              "quotes": {
                "description": "",
                "properties": {
                  "cheapest_delivery": {
                    "example": {
                      "time_estimate": {
                        "minimum": 43,
                        "maximum": 45
                      },
                      "sales_tax_percent": 10.5,
                      "delivery_fee": {
                        "delivery_fee_flat": 0,
                        "delivery_fee_percent": 0,
                        "delivery_fee_taxable": false
                      },
                      "service_fee": {
                        "service_fee_flat": 0,
                        "service_fee_percent": 10,
                        "service_fee_min": 300,
                        "service_fee_max": 700,
                        "service_fee_taxable": false
                      },
                      "small_order_fee": {
                        "minimum_order_value": 0,
                        "small_order_fee_flat": 0,
                        "small_order_fee_percent": 0
                      },
                      "order_minimum": 1500,
                      "threshold_fees": [],
                      "asap_available": true
                    },
                    "allOf": [
                      {
                        "required": [
                          "accepts_delivery_tip",
                          "accepts_pickup_note",
                          "accepts_pickup_tip",
                          "asap_available",
                          "courier_quote",
                          "delivery_fee",
                          "first_party_quote",
                          "order_minimum",
                          "sales_tax_percent",
                          "service_fee",
                          "small_order_fee",
                          "third_party_quote",
                          "time_estimate"
                        ],
                        "properties": {
                          "time_estimate": {
                            "description": "",
                            "required": [
                              "maximum",
                              "minimum"
                            ],
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "description": "Lower bound of delivery time estimate (in minutes)"
                              },
                              "maximum": {
                                "type": "integer",
                                "description": "Upper bound of delivery time estimate (in minutes)"
                              },
                              "scheduled": {
                                "type": "array",
                                "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                "items": {
                                  "required": [
                                    "delivery_fee",
                                    "maximum",
                                    "minimum"
                                  ],
                                  "properties": {
                                    "minimum": {
                                      "type": "integer",
                                      "description": "Timestamp (seconds since 1970)"
                                    },
                                    "maximum": {
                                      "type": "integer",
                                      "description": "Timestamp (seconds since 1970)"
                                    },
                                    "delivery_fee": {
                                      "description": "",
                                      "required": [
                                        "delivery_fee_flat",
                                        "delivery_fee_percent"
                                      ],
                                      "properties": {
                                        "delivery_fee_flat": {
                                          "type": "integer",
                                          "description": "Delivery fee amount in cents"
                                        },
                                        "delivery_fee_percent": {
                                          "type": "number",
                                          "description": "Delivery fee percentage"
                                        },
                                        "delivery_fee_taxable": {
                                          "type": "boolean",
                                          "description": "Whether the delivery fee is taxable or not"
                                        },
                                        "threshold_fees": {
                                          "type": "array",
                                          "description": "Threshold Fees, if they exist",
                                          "items": {
                                            "required": [
                                              "threshold_cents",
                                              "threshold_fee_cents"
                                            ],
                                            "properties": {
                                              "threshold_cents": {
                                                "type": "integer",
                                                "description": "Subtotal that enacts a specific fee"
                                              },
                                              "threshold_fee_cents": {
                                                "type": "integer",
                                                "description": "Flat delivery fee that will be charged for this threshold_cents"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "sales_tax_percent": {
                            "type": "integer",
                            "description": "Sales tax in percentage terms"
                          },
                          "delivery_fee": {
                            "description": "",
                            "required": [
                              "delivery_fee_flat",
                              "delivery_fee_percent"
                            ],
                            "properties": {
                              "delivery_fee_flat": {
                                "type": "integer",
                                "description": "Delivery fee amount in cents"
                              },
                              "delivery_fee_percent": {
                                "type": "number",
                                "description": "Delivery fee percentage"
                              },
                              "delivery_fee_taxable": {
                                "type": "boolean",
                                "description": "Whether the delivery fee is taxable or not"
                              },
                              "threshold_fees": {
                                "type": "array",
                                "description": "Threshold Fees, if they exist",
                                "items": {
                                  "required": [
                                    "threshold_cents",
                                    "threshold_fee_cents"
                                  ],
                                  "properties": {
                                    "threshold_cents": {
                                      "type": "integer",
                                      "description": "Subtotal that enacts a specific fee"
                                    },
                                    "threshold_fee_cents": {
                                      "type": "integer",
                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "service_fee": {
                            "description": "",
                            "required": [
                              "service_fee_flat",
                              "service_fee_percent"
                            ],
                            "properties": {
                              "service_fee_flat": {
                                "type": "integer",
                                "description": "Service fee amount in cents"
                              },
                              "service_fee_percent": {
                                "type": "number",
                                "description": "Service fee percentage from 0 to 100"
                              },
                              "service_fee_min": {
                                "type": "integer",
                                "description": "Minimum service fee amount in cents"
                              },
                              "service_fee_max": {
                                "type": "integer",
                                "description": "Maximum service fee amount in cents"
                              },
                              "service_fee_taxable": {
                                "type": "boolean",
                                "description": "Whether the service fee is taxable or not"
                              },
                              "threshold_fees": {
                                "type": "array",
                                "description": "Threshold Fees, if they exist",
                                "items": {
                                  "required": [
                                    "threshold_cents",
                                    "threshold_fee_cents"
                                  ],
                                  "properties": {
                                    "threshold_cents": {
                                      "type": "integer",
                                      "description": "Subtotal that enacts a specific fee"
                                    },
                                    "threshold_fee_cents": {
                                      "type": "integer",
                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "small_order_fee": {
                            "description": "",
                            "required": [
                              "minimum_order_value",
                              "small_order_fee_flat",
                              "small_order_fee_percent"
                            ],
                            "properties": {
                              "minimum_order_value": {
                                "type": "integer",
                                "description": "Minimum amount to not incur small order fee in cents",
                                "example": 0
                              },
                              "small_order_fee_flat": {
                                "type": "integer",
                                "description": "Small order fee amount in cents",
                                "example": 0
                              },
                              "small_order_fee_percent": {
                                "type": "number",
                                "description": "Small order fee percentage",
                                "example": 0
                              }
                            },
                            "type": "object"
                          },
                          "order_minimum": {
                            "type": "integer",
                            "description": "Minimum order amount in cents"
                          },
                          "min_tip": {
                            "type": "integer",
                            "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                          },
                          "asap_available": {
                            "type": "integer",
                            "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                          },
                          "first_party_quote": {
                            "type": "boolean",
                            "description": "Whether this quote is provided by the store"
                          },
                          "third_party_quote": {
                            "type": "boolean",
                            "description": "Whether this quote is provided by a third party service"
                          },
                          "courier_quote": {
                            "type": "boolean",
                            "description": "Whether this quote is provided by a last-mile delivery service."
                          },
                          "accepts_delivery_tip": {
                            "type": "boolean",
                            "description": "Whether a delivery tip is accepted."
                          },
                          "accepts_pickup_tip": {
                            "type": "boolean",
                            "description": "Whether a pickup tip is accepted."
                          },
                          "accepts_pickup_note": {
                            "type": "boolean",
                            "description": "Whether a pickup note is accepted."
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "description": ""
                  },
                  "fastest_delivery": {
                    "example": {
                      "time_estimate": {
                        "minimum": 15,
                        "maximum": 30
                      },
                      "sales_tax_percent": 10.5,
                      "delivery_fee": {
                        "delivery_fee_flat": 199,
                        "delivery_fee_percent": 0,
                        "delivery_fee_taxable": false
                      },
                      "service_fee": {
                        "service_fee_flat": 0,
                        "service_fee_percent": 5
                      },
                      "small_order_fee": {
                        "minimum_order_value": 1200,
                        "small_order_fee_flat": 200,
                        "small_order_fee_percent": 0
                      },
                      "order_minimum": 0,
                      "threshold_fees": [
                        {
                          "threshold_cents": 10000,
                          "threshold_fee_cents": 1000
                        },
                        {
                          "threshold_cents": 20000,
                          "threshold_fee_cents": 2000
                        }
                      ]
                    },
                    "allOf": [
                      {
                        "required": [
                          "accepts_delivery_tip",
                          "accepts_pickup_note",
                          "accepts_pickup_tip",
                          "asap_available",
                          "courier_quote",
                          "delivery_fee",
                          "first_party_quote",
                          "order_minimum",
                          "sales_tax_percent",
                          "service_fee",
                          "small_order_fee",
                          "third_party_quote",
                          "time_estimate"
                        ],
                        "properties": {
                          "time_estimate": {
                            "description": "",
                            "required": [
                              "maximum",
                              "minimum"
                            ],
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "description": "Lower bound of delivery time estimate (in minutes)"
                              },
                              "maximum": {
                                "type": "integer",
                                "description": "Upper bound of delivery time estimate (in minutes)"
                              },
                              "scheduled": {
                                "type": "array",
                                "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                "items": {
                                  "required": [
                                    "delivery_fee",
                                    "maximum",
                                    "minimum"
                                  ],
                                  "properties": {
                                    "minimum": {
                                      "type": "integer",
                                      "description": "Timestamp (seconds since 1970)"
                                    },
                                    "maximum": {
                                      "type": "integer",
                                      "description": "Timestamp (seconds since 1970)"
                                    },
                                    "delivery_fee": {
                                      "description": "",
                                      "required": [
                                        "delivery_fee_flat",
                                        "delivery_fee_percent"
                                      ],
                                      "properties": {
                                        "delivery_fee_flat": {
                                          "type": "integer",
                                          "description": "Delivery fee amount in cents"
                                        },
                                        "delivery_fee_percent": {
                                          "type": "number",
                                          "description": "Delivery fee percentage"
                                        },
                                        "delivery_fee_taxable": {
                                          "type": "boolean",
                                          "description": "Whether the delivery fee is taxable or not"
                                        },
                                        "threshold_fees": {
                                          "type": "array",
                                          "description": "Threshold Fees, if they exist",
                                          "items": {
                                            "required": [
                                              "threshold_cents",
                                              "threshold_fee_cents"
                                            ],
                                            "properties": {
                                              "threshold_cents": {
                                                "type": "integer",
                                                "description": "Subtotal that enacts a specific fee"
                                              },
                                              "threshold_fee_cents": {
                                                "type": "integer",
                                                "description": "Flat delivery fee that will be charged for this threshold_cents"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "sales_tax_percent": {
                            "type": "integer",
                            "description": "Sales tax in percentage terms"
                          },
                          "delivery_fee": {
                            "description": "",
                            "required": [
                              "delivery_fee_flat",
                              "delivery_fee_percent"
                            ],
                            "properties": {
                              "delivery_fee_flat": {
                                "type": "integer",
                                "description": "Delivery fee amount in cents"
                              },
                              "delivery_fee_percent": {
                                "type": "number",
                                "description": "Delivery fee percentage"
                              },
                              "delivery_fee_taxable": {
                                "type": "boolean",
                                "description": "Whether the delivery fee is taxable or not"
                              },
                              "threshold_fees": {
                                "type": "array",
                                "description": "Threshold Fees, if they exist",
                                "items": {
                                  "required": [
                                    "threshold_cents",
                                    "threshold_fee_cents"
                                  ],
                                  "properties": {
                                    "threshold_cents": {
                                      "type": "integer",
                                      "description": "Subtotal that enacts a specific fee"
                                    },
                                    "threshold_fee_cents": {
                                      "type": "integer",
                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "service_fee": {
                            "description": "",
                            "required": [
                              "service_fee_flat",
                              "service_fee_percent"
                            ],
                            "properties": {
                              "service_fee_flat": {
                                "type": "integer",
                                "description": "Service fee amount in cents"
                              },
                              "service_fee_percent": {
                                "type": "number",
                                "description": "Service fee percentage from 0 to 100"
                              },
                              "service_fee_min": {
                                "type": "integer",
                                "description": "Minimum service fee amount in cents"
                              },
                              "service_fee_max": {
                                "type": "integer",
                                "description": "Maximum service fee amount in cents"
                              },
                              "service_fee_taxable": {
                                "type": "boolean",
                                "description": "Whether the service fee is taxable or not"
                              },
                              "threshold_fees": {
                                "type": "array",
                                "description": "Threshold Fees, if they exist",
                                "items": {
                                  "required": [
                                    "threshold_cents",
                                    "threshold_fee_cents"
                                  ],
                                  "properties": {
                                    "threshold_cents": {
                                      "type": "integer",
                                      "description": "Subtotal that enacts a specific fee"
                                    },
                                    "threshold_fee_cents": {
                                      "type": "integer",
                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "small_order_fee": {
                            "description": "",
                            "required": [
                              "minimum_order_value",
                              "small_order_fee_flat",
                              "small_order_fee_percent"
                            ],
                            "properties": {
                              "minimum_order_value": {
                                "type": "integer",
                                "description": "Minimum amount to not incur small order fee in cents",
                                "example": 0
                              },
                              "small_order_fee_flat": {
                                "type": "integer",
                                "description": "Small order fee amount in cents",
                                "example": 0
                              },
                              "small_order_fee_percent": {
                                "type": "number",
                                "description": "Small order fee percentage",
                                "example": 0
                              }
                            },
                            "type": "object"
                          },
                          "order_minimum": {
                            "type": "integer",
                            "description": "Minimum order amount in cents"
                          },
                          "min_tip": {
                            "type": "integer",
                            "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                          },
                          "asap_available": {
                            "type": "integer",
                            "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                          },
                          "first_party_quote": {
                            "type": "boolean",
                            "description": "Whether this quote is provided by the store"
                          },
                          "third_party_quote": {
                            "type": "boolean",
                            "description": "Whether this quote is provided by a third party service"
                          },
                          "courier_quote": {
                            "type": "boolean",
                            "description": "Whether this quote is provided by a last-mile delivery service."
                          },
                          "accepts_delivery_tip": {
                            "type": "boolean",
                            "description": "Whether a delivery tip is accepted."
                          },
                          "accepts_pickup_tip": {
                            "type": "boolean",
                            "description": "Whether a pickup tip is accepted."
                          },
                          "accepts_pickup_note": {
                            "type": "boolean",
                            "description": "Whether a pickup note is accepted."
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "description": ""
                  },
                  "pickup": {
                    "example": {
                      "time_estimate": {
                        "minimum": 5,
                        "maximum": 5
                      },
                      "sales_tax_percent": 10.5,
                      "delivery_fee": {
                        "delivery_fee_flat": 0,
                        "delivery_fee_percent": 0,
                        "delivery_fee_taxable": false
                      },
                      "service_fee": {
                        "service_fee_flat": 0,
                        "service_fee_percent": 0
                      },
                      "small_order_fee": {
                        "minimum_order_value": 1200,
                        "small_order_fee_flat": 200,
                        "small_order_fee_percent": 0
                      },
                      "order_minimum": 100,
                      "threshold_fees": []
                    },
                    "allOf": [
                      {
                        "required": [
                          "accepts_delivery_tip",
                          "accepts_pickup_note",
                          "accepts_pickup_tip",
                          "asap_available",
                          "courier_quote",
                          "delivery_fee",
                          "first_party_quote",
                          "order_minimum",
                          "sales_tax_percent",
                          "service_fee",
                          "small_order_fee",
                          "third_party_quote",
                          "time_estimate"
                        ],
                        "properties": {
                          "time_estimate": {
                            "description": "",
                            "required": [
                              "maximum",
                              "minimum"
                            ],
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "description": "Lower bound of delivery time estimate (in minutes)"
                              },
                              "maximum": {
                                "type": "integer",
                                "description": "Upper bound of delivery time estimate (in minutes)"
                              },
                              "scheduled": {
                                "type": "array",
                                "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                "items": {
                                  "required": [
                                    "delivery_fee",
                                    "maximum",
                                    "minimum"
                                  ],
                                  "properties": {
                                    "minimum": {
                                      "type": "integer",
                                      "description": "Timestamp (seconds since 1970)"
                                    },
                                    "maximum": {
                                      "type": "integer",
                                      "description": "Timestamp (seconds since 1970)"
                                    },
                                    "delivery_fee": {
                                      "description": "",
                                      "required": [
                                        "delivery_fee_flat",
                                        "delivery_fee_percent"
                                      ],
                                      "properties": {
                                        "delivery_fee_flat": {
                                          "type": "integer",
                                          "description": "Delivery fee amount in cents"
                                        },
                                        "delivery_fee_percent": {
                                          "type": "number",
                                          "description": "Delivery fee percentage"
                                        },
                                        "delivery_fee_taxable": {
                                          "type": "boolean",
                                          "description": "Whether the delivery fee is taxable or not"
                                        },
                                        "threshold_fees": {
                                          "type": "array",
                                          "description": "Threshold Fees, if they exist",
                                          "items": {
                                            "required": [
                                              "threshold_cents",
                                              "threshold_fee_cents"
                                            ],
                                            "properties": {
                                              "threshold_cents": {
                                                "type": "integer",
                                                "description": "Subtotal that enacts a specific fee"
                                              },
                                              "threshold_fee_cents": {
                                                "type": "integer",
                                                "description": "Flat delivery fee that will be charged for this threshold_cents"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "sales_tax_percent": {
                            "type": "integer",
                            "description": "Sales tax in percentage terms"
                          },
                          "delivery_fee": {
                            "description": "",
                            "required": [
                              "delivery_fee_flat",
                              "delivery_fee_percent"
                            ],
                            "properties": {
                              "delivery_fee_flat": {
                                "type": "integer",
                                "description": "Delivery fee amount in cents"
                              },
                              "delivery_fee_percent": {
                                "type": "number",
                                "description": "Delivery fee percentage"
                              },
                              "delivery_fee_taxable": {
                                "type": "boolean",
                                "description": "Whether the delivery fee is taxable or not"
                              },
                              "threshold_fees": {
                                "type": "array",
                                "description": "Threshold Fees, if they exist",
                                "items": {
                                  "required": [
                                    "threshold_cents",
                                    "threshold_fee_cents"
                                  ],
                                  "properties": {
                                    "threshold_cents": {
                                      "type": "integer",
                                      "description": "Subtotal that enacts a specific fee"
                                    },
                                    "threshold_fee_cents": {
                                      "type": "integer",
                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "service_fee": {
                            "description": "",
                            "required": [
                              "service_fee_flat",
                              "service_fee_percent"
                            ],
                            "properties": {
                              "service_fee_flat": {
                                "type": "integer",
                                "description": "Service fee amount in cents"
                              },
                              "service_fee_percent": {
                                "type": "number",
                                "description": "Service fee percentage from 0 to 100"
                              },
                              "service_fee_min": {
                                "type": "integer",
                                "description": "Minimum service fee amount in cents"
                              },
                              "service_fee_max": {
                                "type": "integer",
                                "description": "Maximum service fee amount in cents"
                              },
                              "service_fee_taxable": {
                                "type": "boolean",
                                "description": "Whether the service fee is taxable or not"
                              },
                              "threshold_fees": {
                                "type": "array",
                                "description": "Threshold Fees, if they exist",
                                "items": {
                                  "required": [
                                    "threshold_cents",
                                    "threshold_fee_cents"
                                  ],
                                  "properties": {
                                    "threshold_cents": {
                                      "type": "integer",
                                      "description": "Subtotal that enacts a specific fee"
                                    },
                                    "threshold_fee_cents": {
                                      "type": "integer",
                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "small_order_fee": {
                            "description": "",
                            "required": [
                              "minimum_order_value",
                              "small_order_fee_flat",
                              "small_order_fee_percent"
                            ],
                            "properties": {
                              "minimum_order_value": {
                                "type": "integer",
                                "description": "Minimum amount to not incur small order fee in cents",
                                "example": 0
                              },
                              "small_order_fee_flat": {
                                "type": "integer",
                                "description": "Small order fee amount in cents",
                                "example": 0
                              },
                              "small_order_fee_percent": {
                                "type": "number",
                                "description": "Small order fee percentage",
                                "example": 0
                              }
                            },
                            "type": "object"
                          },
                          "order_minimum": {
                            "type": "integer",
                            "description": "Minimum order amount in cents"
                          },
                          "min_tip": {
                            "type": "integer",
                            "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                          },
                          "asap_available": {
                            "type": "integer",
                            "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                          },
                          "first_party_quote": {
                            "type": "boolean",
                            "description": "Whether this quote is provided by the store"
                          },
                          "third_party_quote": {
                            "type": "boolean",
                            "description": "Whether this quote is provided by a third party service"
                          },
                          "courier_quote": {
                            "type": "boolean",
                            "description": "Whether this quote is provided by a last-mile delivery service."
                          },
                          "accepts_delivery_tip": {
                            "type": "boolean",
                            "description": "Whether a delivery tip is accepted."
                          },
                          "accepts_pickup_tip": {
                            "type": "boolean",
                            "description": "Whether a pickup tip is accepted."
                          },
                          "accepts_pickup_note": {
                            "type": "boolean",
                            "description": "Whether a pickup note is accepted."
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "description": ""
                  }
                },
                "type": "object"
              },
              "quote_types": {
                "description": "",
                "properties": {
                  "<quote id>": {
                    "type": "array",
                    "description": "The list of quote types available for this quote id.",
                    "items": {
                      "type": "string",
                      "description": "Quote Type",
                      "example": "pickup",
                      "enum": [
                        "pickup",
                        "delivery"
                      ]
                    }
                  }
                },
                "type": "object"
              },
              "offers_first_party_delivery": {
                "type": "boolean",
                "description": "Whether or not the store delivers directly.",
                "example": false
              },
              "offers_third_party_delivery": {
                "type": "boolean",
                "description": "Whether or not the store delivers with third-party services.",
                "example": false
              },
              "miles": {
                "type": "number",
                "description": "Miles from the user to the store",
                "example": 0.23
              },
              "weighted_rating_value": {
                "type": "number",
                "description": "The weighted average rating of this store across all the websites it appears on. Floating-point from 1 to 5 (inclusive) or 0.",
                "example": 4.83
              },
              "aggregated_rating_count": {
                "type": "integer",
                "description": "Number of total aggregated ratings for this store across all the websites it appears on. Non-negative integer.",
                "example": 956
              },
              "supports_upc_codes": {
                "type": "boolean",
                "description": "Whether the store's inventory supports UPC codes.",
                "example": false
              }
            },
            "type": "object",
            "description": ""
          }
        },
        "type": "object"
      },
      "Quote": {
        "required": [
          "accepts_delivery_tip",
          "accepts_pickup_note",
          "accepts_pickup_tip",
          "asap_available",
          "courier_quote",
          "delivery_fee",
          "first_party_quote",
          "order_minimum",
          "sales_tax_percent",
          "service_fee",
          "small_order_fee",
          "third_party_quote",
          "time_estimate"
        ],
        "properties": {
          "time_estimate": {
            "description": "",
            "required": [
              "maximum",
              "minimum"
            ],
            "properties": {
              "minimum": {
                "type": "integer",
                "description": "Lower bound of delivery time estimate (in minutes)"
              },
              "maximum": {
                "type": "integer",
                "description": "Upper bound of delivery time estimate (in minutes)"
              },
              "scheduled": {
                "type": "array",
                "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                "items": {
                  "required": [
                    "delivery_fee",
                    "maximum",
                    "minimum"
                  ],
                  "properties": {
                    "minimum": {
                      "type": "integer",
                      "description": "Timestamp (seconds since 1970)"
                    },
                    "maximum": {
                      "type": "integer",
                      "description": "Timestamp (seconds since 1970)"
                    },
                    "delivery_fee": {
                      "description": "",
                      "required": [
                        "delivery_fee_flat",
                        "delivery_fee_percent"
                      ],
                      "properties": {
                        "delivery_fee_flat": {
                          "type": "integer",
                          "description": "Delivery fee amount in cents"
                        },
                        "delivery_fee_percent": {
                          "type": "number",
                          "description": "Delivery fee percentage"
                        },
                        "delivery_fee_taxable": {
                          "type": "boolean",
                          "description": "Whether the delivery fee is taxable or not"
                        },
                        "threshold_fees": {
                          "type": "array",
                          "description": "Threshold Fees, if they exist",
                          "items": {
                            "required": [
                              "threshold_cents",
                              "threshold_fee_cents"
                            ],
                            "properties": {
                              "threshold_cents": {
                                "type": "integer",
                                "description": "Subtotal that enacts a specific fee"
                              },
                              "threshold_fee_cents": {
                                "type": "integer",
                                "description": "Flat delivery fee that will be charged for this threshold_cents"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          },
          "sales_tax_percent": {
            "type": "integer",
            "description": "Sales tax in percentage terms"
          },
          "delivery_fee": {
            "description": "",
            "required": [
              "delivery_fee_flat",
              "delivery_fee_percent"
            ],
            "properties": {
              "delivery_fee_flat": {
                "type": "integer",
                "description": "Delivery fee amount in cents"
              },
              "delivery_fee_percent": {
                "type": "number",
                "description": "Delivery fee percentage"
              },
              "delivery_fee_taxable": {
                "type": "boolean",
                "description": "Whether the delivery fee is taxable or not"
              },
              "threshold_fees": {
                "type": "array",
                "description": "Threshold Fees, if they exist",
                "items": {
                  "required": [
                    "threshold_cents",
                    "threshold_fee_cents"
                  ],
                  "properties": {
                    "threshold_cents": {
                      "type": "integer",
                      "description": "Subtotal that enacts a specific fee"
                    },
                    "threshold_fee_cents": {
                      "type": "integer",
                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          },
          "service_fee": {
            "description": "",
            "required": [
              "service_fee_flat",
              "service_fee_percent"
            ],
            "properties": {
              "service_fee_flat": {
                "type": "integer",
                "description": "Service fee amount in cents"
              },
              "service_fee_percent": {
                "type": "number",
                "description": "Service fee percentage from 0 to 100"
              },
              "service_fee_min": {
                "type": "integer",
                "description": "Minimum service fee amount in cents"
              },
              "service_fee_max": {
                "type": "integer",
                "description": "Maximum service fee amount in cents"
              },
              "service_fee_taxable": {
                "type": "boolean",
                "description": "Whether the service fee is taxable or not"
              },
              "threshold_fees": {
                "type": "array",
                "description": "Threshold Fees, if they exist",
                "items": {
                  "required": [
                    "threshold_cents",
                    "threshold_fee_cents"
                  ],
                  "properties": {
                    "threshold_cents": {
                      "type": "integer",
                      "description": "Subtotal that enacts a specific fee"
                    },
                    "threshold_fee_cents": {
                      "type": "integer",
                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          },
          "small_order_fee": {
            "description": "",
            "required": [
              "minimum_order_value",
              "small_order_fee_flat",
              "small_order_fee_percent"
            ],
            "properties": {
              "minimum_order_value": {
                "type": "integer",
                "description": "Minimum amount to not incur small order fee in cents",
                "example": 0
              },
              "small_order_fee_flat": {
                "type": "integer",
                "description": "Small order fee amount in cents",
                "example": 0
              },
              "small_order_fee_percent": {
                "type": "number",
                "description": "Small order fee percentage",
                "example": 0
              }
            },
            "type": "object"
          },
          "order_minimum": {
            "type": "integer",
            "description": "Minimum order amount in cents"
          },
          "min_tip": {
            "type": "integer",
            "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
          },
          "asap_available": {
            "type": "integer",
            "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
          },
          "first_party_quote": {
            "type": "boolean",
            "description": "Whether this quote is provided by the store"
          },
          "third_party_quote": {
            "type": "boolean",
            "description": "Whether this quote is provided by a third party service"
          },
          "courier_quote": {
            "type": "boolean",
            "description": "Whether this quote is provided by a last-mile delivery service."
          },
          "accepts_delivery_tip": {
            "type": "boolean",
            "description": "Whether a delivery tip is accepted."
          },
          "accepts_pickup_tip": {
            "type": "boolean",
            "description": "Whether a pickup tip is accepted."
          },
          "accepts_pickup_note": {
            "type": "boolean",
            "description": "Whether a pickup note is accepted."
          }
        },
        "type": "object"
      },
      "Category": {
        "required": [
          "menu_item_list",
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The category's name (eg. Beverages)",
            "example": "Coffee"
          },
          "subcategory_id": {
            "type": "string",
            "description": "The optional Subcategory ID, needed to fetch the next layer of subcategories or products if there are no further subcategories.",
            "example": "gAAAAABiQmehnAId3aB5e_-ViDOrhJGgX7EOwkjuRPt_9TCw_atbHwRy3wqlULcwE5s0UhjQIgaz0O8fhnfHLmmDQS1YgUwvpTS1xTAJTLOgUGaRe11Kaig="
          },
          "menu_item_list": {
            "type": "array",
            "description": "List of products in this category",
            "items": {
              "required": [
                "attributes",
                "description",
                "formatted_price",
                "image",
                "is_alcoholic",
                "is_available",
                "min_price",
                "name",
                "original_price",
                "price",
                "product_id",
                "qty_available",
                "should_fetch_customizations",
                "supports_image_scaling",
                "unit_of_measurement",
                "unit_size",
                "upc_code"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The item's name (eg. Grande Stacker)",
                  "example": "Iced Black Coffee"
                },
                "price": {
                  "type": "integer",
                  "description": "The item's base price in cents",
                  "example": 500
                },
                "min_price": {
                  "type": "integer",
                  "description": "The item's minimum price in cents",
                  "example": 500
                },
                "original_price": {
                  "type": "integer",
                  "description": "The product's original price. This will only be available if the product is currently on sale.",
                  "example": 700
                },
                "qty_available": {
                  "type": "integer",
                  "description": "The remaining amount available. If null, unlimited is available."
                },
                "unit_size": {
                  "type": "number",
                  "description": "The unit size for this product",
                  "example": 12
                },
                "unit_of_measurement": {
                  "type": "string",
                  "description": "The unit of measurement used to measure the product's size (i.e. oz, lb, L, gal)",
                  "example": "oz"
                },
                "description": {
                  "type": "string",
                  "description": "The item's description (eg. Melted cheese, double the seasoned beef, and nacho cheese sauce stacked up in a flour tortilla.",
                  "example": "Our Classic Beverage!"
                },
                "image": {
                  "type": "string",
                  "description": "Image of the item, if it exists",
                  "example": "https://cdn-img.mealme.ai/502b9e3a38d1395352faccd16d6daa2f667268d2/68747470733a2f2f64326c6e72356d6861376279636a2e636c6f756466726f6e742e6e65742f70726f647563742d696d6167652f66696c652f6c617267655f64356163336130302d386566392d343461662d396537632d3436383163386632316239662e706e67"
                },
                "formatted_price": {
                  "type": "string",
                  "description": "This item's price formatted in the restaurant's accepted currency",
                  "example": "$5.00"
                },
                "product_id": {
                  "type": "string",
                  "description": "The MealMe Product ID",
                  "example": "gAAAAABi6IJKDsJDuCdfEF3zQ2cBogEYyvlZhUq3Pn1G15uFl6l4khyg3_hdTJKh96-kYp2lFDJj_Dd3CNKrhw4u5wW3gCU9BQ9I9dIzr9UHhzE5XBZ4jszXNOUd8hp7ojMF6mYz6DinNeobtFYQF-dW5TvvDT7pYRm7lHleFK8JxPkgbzOGPFz_BRWER0KIKnRrULFVhYANYwxgxRW8lvygPDgwClOeq-0YgE3Un1DV9ZWZjpem1-XWaWnWGdPA_3f8OOslR7KF8SvUwKxx3M5AFiZSAPz-2zZljA__qC-S_ZlK3Ys5_xsJUz4tStmLLlEf5TVVsBLsjTKmkkK4Kd9k_K0UXYxkHMlJrit3z4NA0djr2vJNUqDzQ_XP4ZDZZF2qW2kCKPF1cIwZuVID-23OJdoHrO7HcSXNAFmCOA2g-ASQ_xn99MnjFI1Q1V64QHXdhORzQdH6Jj8J1tn2grXkav1j6y5KAxKCqZz6dkuEKKTvYdffYQ_-ACT0ef2kU-7eEajJY7tHf9BSO7ZQHDJTTmWxMY6qpmK8Hrzs31qWWLgF7Q1Vvaqki7N6u5hDxJu6REppgcQ_TSPVpgjr5FKYfQhSOMkC3D0w_NVvWgrnjfwwvuf9ED3AHsNLpGb0hkyc64dA0JI82nU-GmZ7gKPWWwBlIAWMtEGUyWblrhlf1izB0wbGm74="
                },
                "customizations": {
                  "type": "array",
                  "description": "List of customizations for this item",
                  "items": {
                    "required": [
                      "charge_threshold",
                      "customization_id",
                      "max_choice_options",
                      "min_choice_options",
                      "name",
                      "options"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The customization's name (eg. Choose your Meat)",
                        "example": "Extra Ice?"
                      },
                      "min_choice_options": {
                        "type": "integer",
                        "description": "The minimum number of options that must be selected for this customization",
                        "example": 0
                      },
                      "max_choice_options": {
                        "type": "integer",
                        "description": "The maximum number of options that must be selected for this customization",
                        "example": 1
                      },
                      "charge_threshold": {
                        "type": "integer",
                        "description": "The maximum option quantity that comes at no extra cost. For example, if `charge_threshold=2` the product's base price won't increase if any two unique or non-unique options are selected.",
                        "example": 1
                      },
                      "options": {
                        "type": "array",
                        "description": "List of options for this customization",
                        "items": {
                          "required": [
                            "charge_threshold",
                            "conditional_price",
                            "default_qty",
                            "formatted_price",
                            "is_available",
                            "is_required",
                            "max_qty",
                            "min_qty",
                            "name",
                            "option_id",
                            "price"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "This option's name (eg. Chicken).",
                              "example": true
                            },
                            "price": {
                              "type": "integer",
                              "description": "This option's additional price in cents.",
                              "example": 0
                            },
                            "customizations": {
                              "type": "array",
                              "description": "List of customizations for this option.",
                              "example": [],
                              "items": {
                                "properties": {},
                                "type": "object"
                              }
                            },
                            "default_qty": {
                              "type": "integer",
                              "description": "The default quantity automatically selected for this option.",
                              "example": 0
                            },
                            "min_qty": {
                              "type": "integer",
                              "description": "The minimum quantity required for this option, if selected.",
                              "example": 0
                            },
                            "max_qty": {
                              "type": "integer",
                              "description": "The maximum quantity for this option.",
                              "example": 1
                            },
                            "is_required": {
                              "type": "boolean",
                              "description": "Whether this option must be selected. If `is_required` is `true`, then a quantity of atleast `min_qty` must be selected.",
                              "example": 0
                            },
                            "charge_threshold": {
                              "type": "integer",
                              "description": "The maximum option quantity that comes at no extra cost. For example, if `charge_threshold=2` the product's base price should only increase by the option's price if a quantity greater than 2 is selected.",
                              "example": 1
                            },
                            "formatted_price": {
                              "type": "string",
                              "description": "This option's additional price formatted in the store's accepted currency.",
                              "example": "$0.00"
                            },
                            "option_id": {
                              "type": "integer",
                              "description": "This option's UUID.",
                              "example": "gAAAAABi2J7G1dSgi_qhOEcmKI7dE5DSubG-_6ujtGfDtkuWJLKo_4Vy63k9I7bbjIhNH2K-n-7_8oKJs2fE3f_mJInhbbrSBAqmH7e0g4HlLS9gStkv1Rst0WCFQFah_QzyrhyfiG1jIlmGvGYmiVEV_aG1aTPwpANudL2GMmAWTRlG_4J7snU="
                            },
                            "conditional_price": {
                              "description": "A mapping of option ID to price in cents. If this property exists for an option, then its price is dependent on the selected option of another customization. This property defines the conditional pricing.",
                              "allOf": [
                                {
                                  "required": [
                                    "*"
                                  ],
                                  "properties": {
                                    "*": {
                                      "type": "integer",
                                      "description": "The option's price in cents if the option corresponding to the key is also selected",
                                      "example": 200
                                    }
                                  },
                                  "type": "object"
                                }
                              ]
                            },
                            "is_available": {
                              "type": "boolean",
                              "description": "Whether the option is currently available.",
                              "example": true
                            }
                          },
                          "type": "object"
                        }
                      },
                      "customization_id": {
                        "type": "string",
                        "description": "The uuid for the customization",
                        "example": "gAAAAABi2GRjalyt5qpvx650sKGop-NgTUE1BBRpm7oasAAjNS_w9SGeNsPSzzwkRvl3WEj3zsYqtjQUBfVIUtsmnzyZktN8ZLWOuyfvpBkO_OQzIf5gvvP2wuOSHIoc0w-k_j726owyBwBF3rmS6e9C8QA7O7JY-wlB5Bcy94S7EtLw1VLTTWlIe-DpCDJp81L4JFA-yQRN9jErerBlqDii9515XaTvmMhKwywT4uAF-vRY4688N9k="
                      }
                    },
                    "type": "object"
                  }
                },
                "attributes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The list of dietary preferences for this product.",
                    "example": [
                      "Diary-Free",
                      "Lactose-Free"
                    ]
                  },
                  "description": ""
                },
                "is_alcoholic": {
                  "type": "boolean",
                  "description": "Whether the product contains alcohol.",
                  "example": true
                },
                "upc_code": {
                  "type": "string",
                  "description": "The upc code of the product",
                  "example": "021000604647"
                },
                "should_fetch_customizations": {
                  "type": "boolean",
                  "description": "Whether a request should be made to to fetch customizations",
                  "example": true
                },
                "supports_image_scaling": {
                  "type": "boolean",
                  "description": "Whether the product's image can be scaled with the `image_height` and `image_weight` input parameters",
                  "example": true
                },
                "is_available": {
                  "type": "boolean",
                  "description": "Whether the product is currently available.",
                  "example": true
                },
                "next_available": {
                  "description": "The next time period that the product will be available. Note that this may only be existent when `is_available` is `false`.",
                  "allOf": [
                    {
                      "required": [
                        "close",
                        "day",
                        "next_close_timestamp",
                        "next_open_timestamp",
                        "open"
                      ],
                      "properties": {
                        "day": {
                          "type": "string",
                          "description": "The week day of the start time of this period.",
                          "example": "Friday"
                        },
                        "open": {
                          "type": "string",
                          "description": "The human-readable start time of this period.",
                          "example": 36000
                        },
                        "close": {
                          "type": "string",
                          "description": "The human-readable end time of this period.",
                          "example": 64799
                        },
                        "next_open_timestamp": {
                          "type": "number",
                          "description": "The UTC start timestamp of this period.",
                          "example": 1687626000
                        },
                        "next_close_timestamp": {
                          "type": "number",
                          "description": "The UTC end timestamp of this period.",
                          "example": 1687654799
                        }
                      },
                      "type": "object"
                    }
                  ]
                },
                "max_qty": {
                  "type": "integer",
                  "description": "The maximum quantity that can be selected.",
                  "example": 10
                }
              },
              "type": "object"
            }
          },
          "menu_name": {
            "type": "string",
            "description": "The name of the menu the category falls under (eg. Breakfast).",
            "example": "Breakfast"
          }
        },
        "type": "object"
      },
      "Customization": {
        "required": [
          "charge_threshold",
          "customization_id",
          "max_choice_options",
          "min_choice_options",
          "name",
          "options"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The customization's name (eg. Choose your Meat)",
            "example": "Extra Ice?"
          },
          "min_choice_options": {
            "type": "integer",
            "description": "The minimum number of options that must be selected for this customization",
            "example": 0
          },
          "max_choice_options": {
            "type": "integer",
            "description": "The maximum number of options that must be selected for this customization",
            "example": 1
          },
          "charge_threshold": {
            "type": "integer",
            "description": "The maximum option quantity that comes at no extra cost. For example, if `charge_threshold=2` the product's base price won't increase if any two unique or non-unique options are selected.",
            "example": 1
          },
          "options": {
            "type": "array",
            "description": "List of options for this customization",
            "items": {
              "required": [
                "charge_threshold",
                "conditional_price",
                "default_qty",
                "formatted_price",
                "is_available",
                "is_required",
                "max_qty",
                "min_qty",
                "name",
                "option_id",
                "price"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "This option's name (eg. Chicken).",
                  "example": true
                },
                "price": {
                  "type": "integer",
                  "description": "This option's additional price in cents.",
                  "example": 0
                },
                "customizations": {
                  "type": "array",
                  "description": "List of customizations for this option.",
                  "example": [],
                  "items": {
                    "properties": {},
                    "type": "object"
                  }
                },
                "default_qty": {
                  "type": "integer",
                  "description": "The default quantity automatically selected for this option.",
                  "example": 0
                },
                "min_qty": {
                  "type": "integer",
                  "description": "The minimum quantity required for this option, if selected.",
                  "example": 0
                },
                "max_qty": {
                  "type": "integer",
                  "description": "The maximum quantity for this option.",
                  "example": 1
                },
                "is_required": {
                  "type": "boolean",
                  "description": "Whether this option must be selected. If `is_required` is `true`, then a quantity of atleast `min_qty` must be selected.",
                  "example": 0
                },
                "charge_threshold": {
                  "type": "integer",
                  "description": "The maximum option quantity that comes at no extra cost. For example, if `charge_threshold=2` the product's base price should only increase by the option's price if a quantity greater than 2 is selected.",
                  "example": 1
                },
                "formatted_price": {
                  "type": "string",
                  "description": "This option's additional price formatted in the store's accepted currency.",
                  "example": "$0.00"
                },
                "option_id": {
                  "type": "integer",
                  "description": "This option's UUID.",
                  "example": "gAAAAABi2J7G1dSgi_qhOEcmKI7dE5DSubG-_6ujtGfDtkuWJLKo_4Vy63k9I7bbjIhNH2K-n-7_8oKJs2fE3f_mJInhbbrSBAqmH7e0g4HlLS9gStkv1Rst0WCFQFah_QzyrhyfiG1jIlmGvGYmiVEV_aG1aTPwpANudL2GMmAWTRlG_4J7snU="
                },
                "conditional_price": {
                  "description": "A mapping of option ID to price in cents. If this property exists for an option, then its price is dependent on the selected option of another customization. This property defines the conditional pricing.",
                  "allOf": [
                    {
                      "required": [
                        "*"
                      ],
                      "properties": {
                        "*": {
                          "type": "integer",
                          "description": "The option's price in cents if the option corresponding to the key is also selected",
                          "example": 200
                        }
                      },
                      "type": "object"
                    }
                  ]
                },
                "is_available": {
                  "type": "boolean",
                  "description": "Whether the option is currently available.",
                  "example": true
                }
              },
              "type": "object"
            }
          },
          "customization_id": {
            "type": "string",
            "description": "The uuid for the customization",
            "example": "gAAAAABi2GRjalyt5qpvx650sKGop-NgTUE1BBRpm7oasAAjNS_w9SGeNsPSzzwkRvl3WEj3zsYqtjQUBfVIUtsmnzyZktN8ZLWOuyfvpBkO_OQzIf5gvvP2wuOSHIoc0w-k_j726owyBwBF3rmS6e9C8QA7O7JY-wlB5Bcy94S7EtLw1VLTTWlIe-DpCDJp81L4JFA-yQRN9jErerBlqDii9515XaTvmMhKwywT4uAF-vRY4688N9k="
          }
        },
        "type": "object"
      },
      "Notifications": {
        "properties": {
          "order_placed": {
            "type": "string",
            "description": "The SMS message to send to `user_phone` upon an order being successfully placed.",
            "example": "Your order is confirmed, here is your tracking link https://tracking.example.com/tracking?tracking_id=<>"
          },
          "store_confirmed": {
            "type": "string",
            "description": "The SMS message to send to `user_phone` upon the store confirming the order.",
            "example": "McDonald's has confirmed your order."
          },
          "pickup_ready": {
            "type": "string",
            "description": "The SMS message to send to `user_phone` when the store confirms the pickup order is ready.",
            "example": "Your order is ready for pickup."
          },
          "driver_arriving": {
            "type": "string",
            "description": "The SMS message to send to `user_phone` when the driver is arriving to the delivery address.",
            "example": "You delivery driver is on the way."
          }
        },
        "type": "object"
      },
      "Metadata": {
        "properties": {
          "*": {
            "type": "string",
            "description": "Any metadata value",
            "example": "ABC123"
          }
        },
        "type": "object"
      },
      "Orders": {
        "required": [
          "orders"
        ],
        "properties": {
          "orders": {
            "type": "array",
            "description": "List of all filtered orders",
            "items": {
              "required": [
                "customer_order_id",
                "driver_tip_cents",
                "eta_timestamp",
                "favorited",
                "is_ready",
                "items",
                "pickup",
                "pickup_tip_cents",
                "realtime_tracking_available",
                "receipt_url",
                "refunded_amount",
                "status",
                "store_confirmed_timestamp",
                "timestamp",
                "total_with_tip",
                "tracking",
                "tracking_link",
                "user_city",
                "user_country",
                "user_email",
                "user_latitude",
                "user_longitude",
                "user_name",
                "user_phone",
                "user_state",
                "user_street_name",
                "user_street_num",
                "user_time_zone",
                "user_zipcode"
              ],
              "properties": {
                "items": {
                  "type": "array",
                  "description": "List of cart items.",
                  "example": [
                    {
                      "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                      "notes": "No whipped cream."
                    }
                  ],
                  "items": {
                    "required": [
                      "product_id"
                    ],
                    "properties": {
                      "product_id": {
                        "type": "string",
                        "description": "The product's ID."
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                      },
                      "product_marked_price": {
                        "type": "integer",
                        "description": "The self-provided marked price (in cents) to be used in the email receipt."
                      },
                      "selected_options": {
                        "type": "array",
                        "description": "The list of selected options for the product.",
                        "items": {
                          "required": [
                            "option_id",
                            "quantity"
                          ],
                          "properties": {
                            "option_id": {
                              "type": "string",
                              "description": "Option ID"
                            },
                            "quantity": {
                              "type": "integer",
                              "description": "The option quantity (must be greater than 0)"
                            },
                            "marked_price": {
                              "type": "integer",
                              "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                            }
                          },
                          "type": "object"
                        }
                      },
                      "notes": {
                        "type": "string",
                        "description": "The product notes for the store."
                      }
                    },
                    "type": "object"
                  }
                },
                "pickup": {
                  "type": "boolean",
                  "description": "`true` for pickup quotes, `false` for delivery quotes.",
                  "default": false,
                  "example": false
                },
                "driver_tip_cents": {
                  "type": "integer",
                  "description": "The tip for the driver, in cents.",
                  "example": 100
                },
                "pickup_tip_cents": {
                  "type": "integer",
                  "description": "The tip for the store, in cents.",
                  "example": 100
                },
                "user_latitude": {
                  "type": "number",
                  "description": "The latitude of the user.",
                  "example": 37.7786357
                },
                "user_longitude": {
                  "type": "number",
                  "description": "The longitude of the user.",
                  "example": -122.3918135
                },
                "user_street_num": {
                  "type": "string",
                  "description": "Street number of the user.",
                  "example": "188"
                },
                "user_street_name": {
                  "type": "string",
                  "description": "Street name of the user.",
                  "example": "King Street"
                },
                "user_apt_num": {
                  "type": "string",
                  "description": "Apartment number of the user.",
                  "example": ""
                },
                "user_city": {
                  "type": "string",
                  "description": "City of the user.",
                  "example": "San Francisco"
                },
                "user_state": {
                  "type": "string",
                  "description": "State of the user.",
                  "example": "CA"
                },
                "user_zipcode": {
                  "type": "string",
                  "description": "Zipcode of the user.",
                  "example": "94107"
                },
                "user_country": {
                  "type": "string",
                  "description": "Country of the user.",
                  "example": "US"
                },
                "user_time_zone": {
                  "type": "string",
                  "description": "Time Zone of the user.",
                  "example": "America/Los_Angeles"
                },
                "user_dropoff_notes": {
                  "type": "string",
                  "description": "Dropoff delivery notes for the user. Not required for pickup.",
                  "example": "Leave in lobby"
                },
                "user_name": {
                  "type": "string",
                  "description": "User's name, so the store and/or driver know who to give the food to at dropoff.",
                  "example": "Will Said"
                },
                "user_email": {
                  "type": "string",
                  "description": "User's email, for the order confirmation, updates, and tracking link.",
                  "example": "will@mealme.ai"
                },
                "user_phone": {
                  "type": "integer",
                  "description": "User's phone number, so the store and/or driver know who to call for pickup or delivery.",
                  "example": 14044442058
                },
                "tracking_link": {
                  "type": "string",
                  "description": "Tracking link for the particular order.",
                  "example": "https://mealme.cc/tracking?tracking_id=-Mn8_a0-R1ERnHlCQUZp"
                },
                "total_with_tip": {
                  "type": "integer",
                  "description": "Total with tips.",
                  "example": 3380
                },
                "final_quote": {
                  "description": "Final validated quote for the given products.",
                  "example": {
                    "id": "gAAAAABh6hxmfTtGA3vxjN-ZfyO55tnvcrAWVF3tCnWpWuRRcn9PQiE30TvrumkQ01jRJDmtpAGEhXQMEJ8BK_2HAkBB3qzi-K7ScyWikcBKaDWv7qdgO9y1dcV638PTer1ZGIypWDzrO_Q35LmDB5mgby8b1V0T82bFljxyrbjRH48swnM7IBCjEiA6_GC0Aj6PA0IfJ4HqTFY9aEQfI7brM_az3VhLK4IIQ59EWGftEKEpf2-a4R7mvf08M2PEY8MB5Qz8Pjwbvlu926JNvIVpx4Ckj_qJ6CIjbrEMDxqQLTrJFuYGAlU=",
                    "store": "Seniore's Pizza",
                    "store_address": "456 Haight St, San Francisco, CA, 94117, US",
                    "quote": {
                      "delivery_fee_cents": 0,
                      "time_max": 30,
                      "time_min": 20,
                      "expected_time_of_arrival": "06:57 PM",
                      "sales_tax_cents": 257,
                      "service_fee_cents": 0,
                      "small_order_fee_cents": 0,
                      "subtotal": 3023,
                      "total": 3280
                    }
                  },
                  "allOf": [
                    {
                      "required": [
                        "added_fees",
                        "items",
                        "misc_fees",
                        "quote",
                        "quote_id",
                        "store",
                        "store_address",
                        "store_id",
                        "tip",
                        "total_with_tip"
                      ],
                      "properties": {
                        "store": {
                          "type": "string",
                          "description": "The name of the store where the order was placed",
                          "example": "Denny's"
                        },
                        "store_address": {
                          "type": "string",
                          "description": "The address of the store where the order was placed",
                          "example": "816 Mission St, San Francisco, CA, 94103, US"
                        },
                        "store_id": {
                          "type": "string",
                          "description": "The MealMe store ID",
                          "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
                        },
                        "quote_id": {
                          "type": "string",
                          "description": "The MealMe Quote ID",
                          "example": "gAAAAABihzvxA4pMVWefTSN3GFOL7b3CYG5yPIRnGUNnEu8oD72y0SiHcDkoloajAINb3pI4Kw6R5qR694t5fCXc8_DnvoB0_BeBlCZ_zJmelaZ4jWfcnF5ySNVt29YYobrl5PMQduRavTxgb5E2IvgZakNNbAzP9rYwyApbdaZ6n_RCwz09IlN2iOoqUlnNVL1WF8dDwqI6-XWMiA3XDI_A-k4QyVPZ0yMZDP_LuRzEnQOYIQ23CCyHHz2imKBP4ySAMNgeIKv0ynYV-a1ZfMC_MjFVyK_OHCds8KmiAM8RHZWt6-wR2m2xqMhKOg8NFWU5gWzYFVL_"
                        },
                        "quote": {
                          "description": "The final quote summary including subtotal, tax, time estimate, quote fees, etc.",
                          "allOf": [
                            {
                              "required": [
                                "delivery_fee_cents",
                                "delivery_time_max",
                                "delivery_time_min",
                                "expected_time_of_arrival",
                                "sales_tax_cents",
                                "scheduled",
                                "service_fee_cents",
                                "small_order_fee_cents",
                                "subtotal",
                                "total_without_tips"
                              ],
                              "properties": {
                                "subtotal": {
                                  "type": "integer",
                                  "description": "The subtotal of the cart",
                                  "example": 1770
                                },
                                "delivery_fee_cents": {
                                  "type": "integer",
                                  "description": "The total delivery fee, in cents",
                                  "example": 49
                                },
                                "service_fee_cents": {
                                  "type": "integer",
                                  "description": "The total service fee, in cents",
                                  "example": 667
                                },
                                "small_order_fee_cents": {
                                  "type": "integer",
                                  "description": "The total small order fee, in cents",
                                  "example": 0
                                },
                                "sales_tax_cents": {
                                  "type": "integer",
                                  "description": "The total sales tax, in cents",
                                  "example": 142
                                },
                                "delivery_time_min": {
                                  "type": "integer",
                                  "description": "The minimum delivery time estimate, in minutes",
                                  "example": 25
                                },
                                "delivery_time_max": {
                                  "type": "integer",
                                  "description": "The maximum delivery time estimate, in minutes",
                                  "example": 40
                                },
                                "total_without_tips": {
                                  "type": "integer",
                                  "description": "The order amount excluding tips, in cents",
                                  "example": 2628
                                },
                                "expected_time_of_arrival": {
                                  "type": "string",
                                  "description": "The expected time of arrival, in user's timezone",
                                  "example": "09:20 PM"
                                },
                                "scheduled": {
                                  "description": "The scheduled delivery window corresponding to input parameter `scheduled_id` passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3)",
                                  "allOf": [
                                    {
                                      "required": [
                                        "delivery_fee",
                                        "maximum",
                                        "minimum"
                                      ],
                                      "properties": {
                                        "minimum": {
                                          "type": "integer",
                                          "description": "Timestamp (seconds since 1970)"
                                        },
                                        "maximum": {
                                          "type": "integer",
                                          "description": "Timestamp (seconds since 1970)"
                                        },
                                        "delivery_fee": {
                                          "description": "",
                                          "required": [
                                            "delivery_fee_flat",
                                            "delivery_fee_percent"
                                          ],
                                          "properties": {
                                            "delivery_fee_flat": {
                                              "type": "integer",
                                              "description": "Delivery fee amount in cents"
                                            },
                                            "delivery_fee_percent": {
                                              "type": "number",
                                              "description": "Delivery fee percentage"
                                            },
                                            "delivery_fee_taxable": {
                                              "type": "boolean",
                                              "description": "Whether the delivery fee is taxable or not"
                                            },
                                            "threshold_fees": {
                                              "type": "array",
                                              "description": "Threshold Fees, if they exist",
                                              "items": {
                                                "required": [
                                                  "threshold_cents",
                                                  "threshold_fee_cents"
                                                ],
                                                "properties": {
                                                  "threshold_cents": {
                                                    "type": "integer",
                                                    "description": "Subtotal that enacts a specific fee"
                                                  },
                                                  "threshold_fee_cents": {
                                                    "type": "integer",
                                                    "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ]
                                },
                                "marked_subtotal": {
                                  "type": "integer",
                                  "description": "The subtotal of the cart including any provided marked prices, in cents",
                                  "example": 2000
                                },
                                "marked_total_without_tips": {
                                  "type": "integer",
                                  "description": "The order amount excluding tips, and including any provided marked prices, in cents",
                                  "example": 2800
                                }
                              },
                              "type": "object"
                            }
                          ]
                        },
                        "items": {
                          "type": "array",
                          "description": "List of cart items",
                          "example": [
                            {
                              "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                              "notes": "No whipped cream."
                            }
                          ],
                          "items": {
                            "required": [
                              "product_id"
                            ],
                            "properties": {
                              "product_id": {
                                "type": "string",
                                "description": "The product's ID."
                              },
                              "quantity": {
                                "type": "integer",
                                "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                              },
                              "product_marked_price": {
                                "type": "integer",
                                "description": "The self-provided marked price (in cents) to be used in the email receipt."
                              },
                              "selected_options": {
                                "type": "array",
                                "description": "The list of selected options for the product.",
                                "items": {
                                  "required": [
                                    "option_id",
                                    "quantity"
                                  ],
                                  "properties": {
                                    "option_id": {
                                      "type": "string",
                                      "description": "Option ID"
                                    },
                                    "quantity": {
                                      "type": "integer",
                                      "description": "The option quantity (must be greater than 0)"
                                    },
                                    "marked_price": {
                                      "type": "integer",
                                      "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "notes": {
                                "type": "string",
                                "description": "The product notes for the store."
                              }
                            },
                            "type": "object"
                          }
                        },
                        "tip": {
                          "type": "integer",
                          "description": "The total tip amount, in cents",
                          "example": 100
                        },
                        "total_with_tip": {
                          "type": "integer",
                          "description": "The total order amount including tip, in cents",
                          "example": 40
                        },
                        "added_fees": {
                          "description": "The total added fees for the cart, computed using the input `added_fee`passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3) or [](https://docs.mealme.ai/reference/post_courier_order)",
                          "example": 200,
                          "allOf": [
                            {
                              "required": [
                                "flat_fee_cents",
                                "is_fee_taxable",
                                "percent_fee",
                                "sales_tax_cents",
                                "total_fee_cents"
                              ],
                              "properties": {
                                "flat_fee_cents": {
                                  "type": "integer",
                                  "description": "The API client added flat fee amount, in cents",
                                  "example": 100
                                },
                                "percent_fee": {
                                  "type": "integer",
                                  "description": "The API client added percent fee amount, in range 1-100",
                                  "example": 50
                                },
                                "is_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether the API client added fee is taxable",
                                  "example": false
                                },
                                "total_fee_cents": {
                                  "type": "integer",
                                  "description": "The API client total added fee amount, in cents",
                                  "example": 985
                                },
                                "sales_tax_cents": {
                                  "type": "integer",
                                  "description": "The total sales tax amount charged for the API client added fee, in cents",
                                  "example": 0
                                }
                              },
                              "type": "object"
                            }
                          ]
                        },
                        "misc_fees": {
                          "type": "array",
                          "description": "The list of miscellaneous fees applied on the order.",
                          "example": [
                            {
                              "fee_name": "Chef tip",
                              "fee_amount": 200
                            }
                          ],
                          "items": {
                            "required": [
                              "fee_amount",
                              "fee_name"
                            ],
                            "properties": {
                              "fee_name": {
                                "type": "string",
                                "description": "Name of the fee"
                              },
                              "fee_amount": {
                                "type": "integer",
                                "description": "The fee amount, in cents"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "marked_total_with_tip": {
                          "type": "integer",
                          "description": "The total order amount including tip, and including any provided marked prices, in cents",
                          "example": 50
                        }
                      },
                      "type": "object"
                    }
                  ]
                },
                "eta_timestamp": {
                  "type": "number",
                  "description": "Expected time of arrival timestamp.",
                  "example": 1650578850.31
                },
                "timestamp": {
                  "type": "number",
                  "description": "Order creation timestamp.",
                  "example": 1650578800.31
                },
                "tracking": {
                  "description": "Contains map coordinates, driver details, vehicle information.",
                  "example": {
                    "driver_latitude": 37.778574400295234,
                    "driver_longitude": -122.39151731697541,
                    "course": 225.5277862548828,
                    "last_update_timestamp": 1646722410.22385,
                    "completion_timestamp": 1646763375.141831,
                    "vehicle_type": "car",
                    "driver_name": "Gustavo",
                    "driver_phone": 13124719334,
                    "driver_photo_url": "https://cdn-img.mealme.ai/347fa4c596569c42e6acb0739b9484fdf6b18501/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f67682d70726f642d647269766572732d646174612f647269766572732f31623837346135612d373034622d343638622d626139392d3062656436616439656231642e706e67",
                    "driver_rating": 0
                  },
                  "allOf": [
                    {
                      "required": [
                        "completion_timestamp",
                        "course",
                        "driver_latitude",
                        "driver_longitude",
                        "driver_name",
                        "driver_phone",
                        "driver_photo_url",
                        "driver_rating",
                        "dropoff_photo_url",
                        "last_update_timestamp",
                        "vehicle",
                        "vehicle_type"
                      ],
                      "properties": {
                        "driver_latitude": {
                          "type": "number",
                          "description": "The latitude of the driver",
                          "example": 37.778574400295234
                        },
                        "driver_longitude": {
                          "type": "number",
                          "description": "The longitude of the driver",
                          "example": -122.39151731697541
                        },
                        "course": {
                          "type": "number",
                          "description": "The course of the driver",
                          "example": 225.5277862548828
                        },
                        "last_update_timestamp": {
                          "type": "number",
                          "description": "The last time that tracking information was updated",
                          "example": 1646722410.22385
                        },
                        "completion_timestamp": {
                          "type": "number",
                          "description": "The timestamp of order completion",
                          "example": 1646763375.141831
                        },
                        "vehicle_type": {
                          "type": "string",
                          "description": "The type of vehicle of the driver",
                          "example": "car"
                        },
                        "driver_name": {
                          "type": "string",
                          "description": "The name of the driver",
                          "example": "Gustavo"
                        },
                        "driver_phone": {
                          "type": "integer",
                          "description": "The phone number of the driver",
                          "example": 13124719334
                        },
                        "driver_photo_url": {
                          "type": "string",
                          "description": "The photo of the driver",
                          "example": "https://cdn-img.mealme.ai/347fa4c596569c42e6acb0739b9484fdf6b18501/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f67682d70726f642d647269766572732d646174612f647269766572732f31623837346135612d373034622d343638622d626139392d3062656436616439656231642e706e67"
                        },
                        "driver_rating": {
                          "type": "integer",
                          "description": "The rating of the driver, range [1-5)",
                          "example": 5
                        },
                        "dropoff_photo_url": {
                          "type": "string",
                          "description": "The dropoff photo provided by the driver",
                          "example": "https://cdn-img.mealme.ai/7a58ee7d0dbf011ab4c723d105ae97d601aadccd/68747470733a2f2f636e2d67656f312e756265722e636f6d2f696d6167652d70726f632f726573697a652f656174732f666f726d61743d776562702f77696474683d313038302f6865696768743d302f7175616c6974793d39302f7372636236343d6148523063484d364c793930596e4d746333526864476c6a4c6e56695a584975593239744c334279623251765a6d6c735a5331316347787659575176645842736232466b6379396a62335679615756794c32786c59585a6c4c5746304c575276623349764d6d51325a44466b5a6d55744e445577595330304f57497a4c5749785a574d744e7a55335a544a6a4d5745344e6a67354c6d70775a7a39516232787059336b395a586c4b56475248526a4261567a4673596d3552615539736444644a62457073597a49354d574e74546d784a616d3970595568534d474e4954545a4d65546b775757354e64474d7a556d686b5232787154473557615670595358565a4d6a6c3054444e436557497955585a616257787a576c4d784d574e4865485a5a563146325a46684363324979526d746a65546c71596a4e5765574658566e6c4d4d6e68735756686162457858526a424d56314a32596a4e4a646b317455544a6152455a72576d3156644535455658645a557a41775431644a656b78585358686156303130546e70564d317055536d704e56305530546d706e4e5578746348646165556c7a5357744f646d4a74556e426b52327832596d6c4a4e6d5635536b565a57464a7356456457656d4d78556d395a567a52705432357a615646575a46525061315a33596a4a4f62315a486248526155306b325456526a654535365454524f52466c3454544d784f575a574d546b6d55326c6e626d463064584a6c5057707a5933524364454654593156505a484e4355586c71526e5a4e62444a7351565a754e55317a4e544a6a55544e584d466c524e6a465655326c34626c646e52444e4d4d6c42696444686f5648354c5556427063446b32556c70464d487042536e4e7564476c4f513045345a47567951326845517a4232626a644759336b3262326c494d554e70534467326158566a5758564a6148553064444974536a5a6b5430356c5332644d5a6b464353486b304f574d34636a46764e485a59627a64515256684a534538774e464a51596d677762556f784c584978563151785633424e513246426355743464464e75515852355356677a64453877576e46795a47745951554e4756455935516d3830556c647a576c45334e5538744e314174616b465262574a584e453958656d4a695447557851566779666c64355958593562307856526d354a56587033576b316d64474e7364566b77666b5a7651305255645578724d585a4861554a2b5a46425459575131565331734c57786a6155467a51324a344f544533636a68554e464e51636a52325546466f596e46564f4770725754524959793152564552344c5659314e30563055306f78614664515348356d4f45704462326858576b5179515639664a6b746c6553315159576c794c556c6b505546515330464b4d304a4d565668485531564556454e4c556b7052"
                        },
                        "vehicle": {
                          "type": "string",
                          "description": "The driver's vehicle details",
                          "example": "Honda Accord"
                        }
                      },
                      "type": "object"
                    }
                  ]
                },
                "status": {
                  "type": "string",
                  "description": "Status of the order.",
                  "example": "in_progress"
                },
                "favorited": {
                  "type": "boolean",
                  "description": "Whether the order is favorited.",
                  "default": false,
                  "example": false
                },
                "is_ready": {
                  "type": "boolean",
                  "description": "Whether the order is ready for pickup.",
                  "default": false,
                  "example": false
                },
                "customer_order_id": {
                  "type": "string",
                  "description": "The external order ID provided to [Create Order](https://docs.mealme.ai/reference/post_order_v3).",
                  "example": "ABC123"
                },
                "realtime_tracking_available": {
                  "type": "boolean",
                  "description": "Whether realtime tracking is available for this order.",
                  "default": false,
                  "example": false
                },
                "profit": {
                  "type": "integer",
                  "description": "The total profit from this order, including any markup and/or additional fees applied, in cents.",
                  "example": 1000
                },
                "promotion": {
                  "description": "All promotions related info for the order",
                  "example": {
                    "code": "GRUB7OFF",
                    "description": "$7 OFF",
                    "discount_flat": 700,
                    "discount_percent": 0,
                    "discount_total": 700
                  },
                  "allOf": [
                    {
                      "required": [
                        "code",
                        "description",
                        "discount_flat",
                        "discount_percent",
                        "discount_total"
                      ],
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The promo code applied on the order.",
                          "example": "GRUB7OFF"
                        },
                        "description": {
                          "type": "string",
                          "description": "The promotion's description.",
                          "example": "$7 off first order"
                        },
                        "discount_flat": {
                          "type": "integer",
                          "description": "The promotion's flat discounted amount, in cents.",
                          "example": 700
                        },
                        "discount_percent": {
                          "type": "integer",
                          "description": "The promotion's percent discounted amount, with range [0-100].",
                          "example": 10
                        },
                        "discount_total": {
                          "type": "integer",
                          "description": "The total discounted amount, in cents. If the order value is $10 with the a 10 percent discount, the discount total would 100 ($1).",
                          "example": 100
                        }
                      },
                      "type": "object"
                    }
                  ]
                },
                "receipt_url": {
                  "type": "string",
                  "description": "The order receipt URl. This will only be available if MealMe processed the payment for the order.",
                  "example": "https://pay.stripe.com/receipts/payment/123456789"
                },
                "refunded_amount": {
                  "type": "integer",
                  "description": "The total amount refunded, in cents.",
                  "example": 500
                },
                "store_confirmed_timestamp": {
                  "type": "number",
                  "description": "The time the store confirmed the order, represented by a unix timestamp.",
                  "example": 1650578800.31
                },
                "pickup_instructions": {
                  "type": "string",
                  "description": "The pickup instructions for pickup orders.",
                  "example": "Ask for the pickup order for Steve Jobs."
                },
                "pickup_order_number": {
                  "type": "string",
                  "description": "The pickup order number. The availability of this property varies across different stores.",
                  "example": "3456"
                },
                "metadata": {
                  "description": "The set of key-value pairs provided when creating the order with '/order/order`.",
                  "example": {
                    "Promo Code": "ABC123"
                  },
                  "allOf": [
                    {
                      "properties": {
                        "*": {
                          "type": "string",
                          "description": "Any metadata value",
                          "example": "ABC123"
                        }
                      },
                      "type": "object"
                    }
                  ]
                }
              },
              "type": "object"
            }
          },
          "order_count": {
            "type": "integer",
            "description": "The total order count across all pages."
          }
        },
        "type": "object"
      },
      "Promotion": {
        "required": [
          "code",
          "description",
          "discount_flat",
          "discount_percent",
          "discount_total"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "The promo code applied on the order.",
            "example": "GRUB7OFF"
          },
          "description": {
            "type": "string",
            "description": "The promotion's description.",
            "example": "$7 off first order"
          },
          "discount_flat": {
            "type": "integer",
            "description": "The promotion's flat discounted amount, in cents.",
            "example": 700
          },
          "discount_percent": {
            "type": "integer",
            "description": "The promotion's percent discounted amount, with range [0-100].",
            "example": 10
          },
          "discount_total": {
            "type": "integer",
            "description": "The total discounted amount, in cents. If the order value is $10 with the a 10 percent discount, the discount total would 100 ($1).",
            "example": 100
          }
        },
        "type": "object"
      },
      "Documents": {
        "properties": {
          "*": {
            "type": "object",
            "additionalProperties": {
              "properties": {
                "chat_id": {
                  "type": "string",
                  "description": "Chat id",
                  "example": "625f245f1acec81fb012b263"
                },
                "order_id": {
                  "type": "string",
                  "description": "Order id",
                  "example": "-N-yPvDSivF-ide2NOIr"
                },
                "timestamp": {
                  "type": "number",
                  "description": "Timestamp",
                  "example": 1650578800.31
                }
              },
              "type": "object"
            },
            "description": ""
          }
        },
        "type": "object"
      },
      "Error_-_Unauthorized": {
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "The reason authentication failed.",
            "example": "Incorrect API key"
          }
        },
        "type": "object"
      },
      "Error_-_Input_Validation": {
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "The description of the incorrect input value.",
            "example": "Missing/Invalid required input parameter: <parameter>"
          }
        },
        "type": "object"
      },
      "Store_Search_Output": {
        "required": [
          "stores"
        ],
        "properties": {
          "stores": {
            "type": "array",
            "description": "List of stores",
            "example": [
              {
                "_id": "7c0360a5-20f4-470a-b8a0-124a509ad827",
                "name": "Starbucks (Fox Plaza)",
                "phone_number": 14158638332,
                "address": {
                  "street_addr": "1390 Market Street",
                  "city": "San Francisco",
                  "state": "CA",
                  "zipcode": "94102",
                  "country": "US",
                  "street_addr_2": "",
                  "latitude": 37.77709,
                  "longitude": -122.4172976
                },
                "type": "restaurant",
                "description": "Breakfast, Cafe, Coffee And Tea, Dinner, Lunch",
                "local_hours": {
                  "operational": {
                    "Monday": "09:30AM - 01:00AM",
                    "Tuesday": "09:00AM - 2:00PM, 5:00PM - 9:30PM",
                    "Wednesday": "12:00AM - 4:00PM",
                    "Thursday": "8:00AM - 4:00AM",
                    "Friday": "10:00AM - 12:00AM",
                    "Saturday": "Closed",
                    "Sunday": "Open 24 hours"
                  },
                  "delivery": {
                    "Monday": "09:30AM - 01:00AM",
                    "Tuesday": "09:00AM - 2:00PM, 5:00PM - 9:30PM",
                    "Wednesday": "12:00AM - 4:00PM",
                    "Thursday": "8:00AM - 4:00AM",
                    "Friday": "10:00AM - 12:00AM",
                    "Saturday": "Closed",
                    "Sunday": "Open 24 hours"
                  },
                  "pickup": {
                    "Monday": "09:30AM - 01:00AM",
                    "Tuesday": "09:00AM - 2:00PM, 5:00PM - 9:30PM",
                    "Wednesday": "12:00AM - 4:00PM",
                    "Thursday": "8:00AM - 4:00AM",
                    "Friday": "10:00AM - 12:00AM",
                    "Saturday": "Closed",
                    "Sunday": "Open 24 hours"
                  },
                  "dine_in": {
                    "Monday": "09:30AM - 01:00AM",
                    "Tuesday": "09:00AM - 2:00PM, 5:00PM - 9:30PM",
                    "Wednesday": "12:00AM - 4:00PM",
                    "Thursday": "8:00AM - 4:00AM",
                    "Friday": "10:00AM - 12:00AM",
                    "Saturday": "Closed",
                    "Sunday": "Open 24 hours"
                  }
                },
                "utc_hours": {
                  "operational": {
                    "Monday": [
                      {
                        "open": "02:30:00+00:00",
                        "close": "18:00:00+00:00"
                      }
                    ],
                    "Tuesday": [
                      {
                        "open": "02:00:00+00:00",
                        "close": "07:00:00+00:00"
                      },
                      {
                        "open": "10:00:00+00:00",
                        "close": "14:30:00+00:00"
                      }
                    ],
                    "Wednesday": [
                      {
                        "open": "17:00:00+00:00",
                        "close": "09:00:00+00:00"
                      }
                    ],
                    "Thursday": [
                      {
                        "open": "01:00:00+00:00",
                        "close": "21:00:00+00:00"
                      }
                    ],
                    "Friday": [
                      {
                        "open": "03:00:00+00:00",
                        "close": "17:00:00+00:00"
                      }
                    ],
                    "Saturday": [
                      {
                        "open": "Closed",
                        "close": "Closed"
                      }
                    ],
                    "Sunday": [
                      {
                        "open": "Open 24 hours",
                        "close": "Open 24 hours"
                      }
                    ]
                  },
                  "delivery": {
                    "Monday": [
                      {
                        "open": "02:30:00+00:00",
                        "close": "18:00:00+00:00"
                      }
                    ],
                    "Tuesday": [
                      {
                        "open": "02:00:00+00:00",
                        "close": "07:00:00+00:00"
                      },
                      {
                        "open": "10:00:00+00:00",
                        "close": "14:30:00+00:00"
                      }
                    ],
                    "Wednesday": [
                      {
                        "open": "17:00:00+00:00",
                        "close": "09:00:00+00:00"
                      }
                    ],
                    "Thursday": [
                      {
                        "open": "01:00:00+00:00",
                        "close": "21:00:00+00:00"
                      }
                    ],
                    "Friday": [
                      {
                        "open": "03:00:00+00:00",
                        "close": "17:00:00+00:00"
                      }
                    ],
                    "Saturday": [
                      {
                        "open": "Closed",
                        "close": "Closed"
                      }
                    ],
                    "Sunday": [
                      {
                        "open": "Open 24 hours",
                        "close": "Open 24 hours"
                      }
                    ]
                  },
                  "pickup": {
                    "Monday": [
                      {
                        "open": "02:30:00+00:00",
                        "close": "18:00:00+00:00"
                      }
                    ],
                    "Tuesday": [
                      {
                        "open": "02:00:00+00:00",
                        "close": "07:00:00+00:00"
                      },
                      {
                        "open": "10:00:00+00:00",
                        "close": "14:30:00+00:00"
                      }
                    ],
                    "Wednesday": [
                      {
                        "open": "17:00:00+00:00",
                        "close": "09:00:00+00:00"
                      }
                    ],
                    "Thursday": [
                      {
                        "open": "01:00:00+00:00",
                        "close": "21:00:00+00:00"
                      }
                    ],
                    "Friday": [
                      {
                        "open": "03:00:00+00:00",
                        "close": "17:00:00+00:00"
                      }
                    ],
                    "Saturday": [
                      {
                        "open": "Closed",
                        "close": "Closed"
                      }
                    ],
                    "Sunday": [
                      {
                        "open": "Open 24 hours",
                        "close": "Open 24 hours"
                      }
                    ]
                  },
                  "dine_in": {
                    "Monday": [
                      {
                        "open": "02:30:00+00:00",
                        "close": "18:00:00+00:00"
                      }
                    ],
                    "Tuesday": [
                      {
                        "open": "02:00:00+00:00",
                        "close": "07:00:00+00:00"
                      },
                      {
                        "open": "10:00:00+00:00",
                        "close": "14:30:00+00:00"
                      }
                    ],
                    "Wednesday": [
                      {
                        "open": "17:00:00+00:00",
                        "close": "09:00:00+00:00"
                      }
                    ],
                    "Thursday": [
                      {
                        "open": "01:00:00+00:00",
                        "close": "21:00:00+00:00"
                      }
                    ],
                    "Friday": [
                      {
                        "open": "03:00:00+00:00",
                        "close": "17:00:00+00:00"
                      }
                    ],
                    "Saturday": [
                      {
                        "open": "Closed",
                        "close": "Closed"
                      }
                    ],
                    "Sunday": [
                      {
                        "open": "Open 24 hours",
                        "close": "Open 24 hours"
                      }
                    ]
                  }
                },
                "cuisines": [
                  "Asian",
                  "Breakfast",
                  "Cafe",
                  "Cafes",
                  "Coffee And Tea",
                  "Dinner",
                  "Lunch",
                  "Lunch Specials",
                  "Mongolian",
                  "Pickup",
                  "Salads",
                  "Sandwich",
                  "Takeout"
                ],
                "food_photos": [
                  "https://cdn-img.mealme.ai/22c383e6c3ac5cc90f462fca90ea7b884cb0ed5f/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f33383366313134322d313639312d343066612d393930382d6435346136653034613263652e6a706567"
                ],
                "logo_photos": [
                  "https://cdn-img.mealme.ai/b62450ab6b423becd18850a760f19e0c33034d9b/68747470733a2f2f7777772e737461726275636b732e636f6d2f6e6578745f7374617469632f69636f6e732f7077612d69636f6e2d3139322e706e67"
                ],
                "store_photos": [
                  "https://cdn-img.mealme.ai/787e4f9ac2ea5277b4a385be3d3fae6732e2aeb3/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f34363765646230622d636665372d343764642d613961632d6566383531666662626561382e6a706567"
                ],
                "dollar_signs": 1,
                "pickup_enabled": false,
                "delivery_enabled": true,
                "is_open": true,
                "quotes": {
                  "cheapest_delivery": {
                    "time_estimate": {
                      "minimum": 25,
                      "maximum": 35
                    },
                    "sales_tax_percent": 7.73,
                    "order_minimum": 0,
                    "delivery_fee": {
                      "delivery_fee_flat": 299,
                      "delivery_fee_percent": 0,
                      "delivery_fee_taxable": true,
                      "threshold_fees": []
                    },
                    "service_fee": {
                      "service_fee_flat": 250,
                      "service_fee_percent": 9.09,
                      "service_fee_min": 100,
                      "service_fee_taxable": true
                    },
                    "small_order_fee": {
                      "minimum_order_value": 1100,
                      "small_order_fee_flat": 200,
                      "small_order_fee_percent": 0
                    }
                  },
                  "fastest_delivery": {
                    "time_estimate": {
                      "minimum": 25,
                      "maximum": 35
                    },
                    "sales_tax_percent": 7.73,
                    "order_minimum": 0,
                    "delivery_fee": {
                      "delivery_fee_flat": 299,
                      "delivery_fee_percent": 0,
                      "delivery_fee_taxable": true,
                      "threshold_fees": []
                    },
                    "service_fee": {
                      "service_fee_flat": 250,
                      "service_fee_percent": 9.09,
                      "service_fee_min": 100,
                      "service_fee_taxable": true
                    },
                    "small_order_fee": {
                      "minimum_order_value": 1100,
                      "small_order_fee_flat": 200,
                      "small_order_fee_percent": 0
                    }
                  }
                },
                "offers_first_party_delivery": false,
                "offers_third_party_delivery": true,
                "miles": 0.23,
                "weighted_rating_value": 4.83,
                "aggregated_rating_count": 956,
                "supports_upc_codes": false
              }
            ],
            "items": {
              "required": [
                "_id",
                "address",
                "aggregated_rating_count",
                "cuisines",
                "delivery_enabled",
                "description",
                "dollar_signs",
                "food_photos",
                "hours",
                "is_open",
                "local_hours",
                "logo_photos",
                "miles",
                "name",
                "offers_first_party_delivery",
                "offers_third_party_delivery",
                "phone_number",
                "pickup_enabled",
                "store_photos",
                "supports_upc_codes",
                "type",
                "weighted_rating_value"
              ],
              "properties": {
                "_id": {
                  "type": "string",
                  "description": "MealMe ID of the store. Can be null in some cases.",
                  "example": "7c0360a5-20f4-470a-b8a0-124a509ad827"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the store",
                  "example": "7-Eleven"
                },
                "phone_number": {
                  "type": "integer",
                  "description": "Phone number of the store",
                  "example": 14158638332
                },
                "address": {
                  "description": "",
                  "required": [
                    "city",
                    "country",
                    "latitude",
                    "longitude",
                    "state",
                    "street_addr",
                    "street_addr_2",
                    "zipcode"
                  ],
                  "properties": {
                    "street_addr": {
                      "type": "string",
                      "description": "Street Address",
                      "example": "1390 Market Street"
                    },
                    "city": {
                      "type": "string",
                      "description": "City",
                      "example": "San Francisco"
                    },
                    "state": {
                      "type": "string",
                      "description": "State abbreviation",
                      "example": "CA"
                    },
                    "zipcode": {
                      "type": "string",
                      "description": "Zipcode",
                      "example": "94102"
                    },
                    "country": {
                      "type": "string",
                      "description": "Country abbreviation",
                      "example": "US"
                    },
                    "street_addr_2": {
                      "type": "string",
                      "description": "Street Address 2",
                      "example": "Apt. 123"
                    },
                    "latitude": {
                      "type": "number",
                      "description": "Latitude",
                      "example": 37.77709
                    },
                    "longitude": {
                      "type": "number",
                      "description": "Longitude",
                      "example": -122.4172976
                    }
                  },
                  "type": "object"
                },
                "type": {
                  "type": "string",
                  "description": "Type of the store, either \"grocery\" or \"restaurant\"",
                  "example": "grocery"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the store",
                  "example": "Local convenience store with snacks, beverages, and more."
                },
                "local_hours": {
                  "description": "",
                  "properties": {
                    "operational": {
                      "description": "",
                      "properties": {
                        "Monday": {
                          "type": "string",
                          "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                          "example": "09:30AM - 01:00AM"
                        },
                        "Tuesday": {
                          "type": "string",
                          "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                          "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                        },
                        "Wednesday": {
                          "type": "string",
                          "description": "If a restaurant is opens at midnight, it will show as above. ",
                          "example": "12:00AM - 4:00PM"
                        },
                        "Thursday": {
                          "type": "string",
                          "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                          "example": "8:00AM - 4:00AM"
                        },
                        "Friday": {
                          "type": "string",
                          "description": "If a restaurant is open until midnight, it will show as above.",
                          "example": "10:00AM - 12:00AM"
                        },
                        "Saturday": {
                          "type": "string",
                          "description": "If a restaurant shows “Closed“, it is closed for that day.",
                          "example": "Closed"
                        },
                        "Sunday": {
                          "type": "string",
                          "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                          "example": "Open 24 hours"
                        }
                      },
                      "type": "object"
                    },
                    "delivery": {
                      "description": "",
                      "properties": {
                        "Monday": {
                          "type": "string",
                          "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                          "example": "09:30AM - 01:00AM"
                        },
                        "Tuesday": {
                          "type": "string",
                          "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                          "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                        },
                        "Wednesday": {
                          "type": "string",
                          "description": "If a restaurant is opens at midnight, it will show as above. ",
                          "example": "12:00AM - 4:00PM"
                        },
                        "Thursday": {
                          "type": "string",
                          "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                          "example": "8:00AM - 4:00AM"
                        },
                        "Friday": {
                          "type": "string",
                          "description": "If a restaurant is open until midnight, it will show as above.",
                          "example": "10:00AM - 12:00AM"
                        },
                        "Saturday": {
                          "type": "string",
                          "description": "If a restaurant shows “Closed“, it is closed for that day.",
                          "example": "Closed"
                        },
                        "Sunday": {
                          "type": "string",
                          "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                          "example": "Open 24 hours"
                        }
                      },
                      "type": "object"
                    },
                    "pickup": {
                      "description": "",
                      "properties": {
                        "Monday": {
                          "type": "string",
                          "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                          "example": "09:30AM - 01:00AM"
                        },
                        "Tuesday": {
                          "type": "string",
                          "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                          "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                        },
                        "Wednesday": {
                          "type": "string",
                          "description": "If a restaurant is opens at midnight, it will show as above. ",
                          "example": "12:00AM - 4:00PM"
                        },
                        "Thursday": {
                          "type": "string",
                          "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                          "example": "8:00AM - 4:00AM"
                        },
                        "Friday": {
                          "type": "string",
                          "description": "If a restaurant is open until midnight, it will show as above.",
                          "example": "10:00AM - 12:00AM"
                        },
                        "Saturday": {
                          "type": "string",
                          "description": "If a restaurant shows “Closed“, it is closed for that day.",
                          "example": "Closed"
                        },
                        "Sunday": {
                          "type": "string",
                          "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                          "example": "Open 24 hours"
                        }
                      },
                      "type": "object"
                    },
                    "dine_in": {
                      "description": "",
                      "properties": {
                        "Monday": {
                          "type": "string",
                          "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                          "example": "09:30AM - 01:00AM"
                        },
                        "Tuesday": {
                          "type": "string",
                          "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                          "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                        },
                        "Wednesday": {
                          "type": "string",
                          "description": "If a restaurant is opens at midnight, it will show as above. ",
                          "example": "12:00AM - 4:00PM"
                        },
                        "Thursday": {
                          "type": "string",
                          "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                          "example": "8:00AM - 4:00AM"
                        },
                        "Friday": {
                          "type": "string",
                          "description": "If a restaurant is open until midnight, it will show as above.",
                          "example": "10:00AM - 12:00AM"
                        },
                        "Saturday": {
                          "type": "string",
                          "description": "If a restaurant shows “Closed“, it is closed for that day.",
                          "example": "Closed"
                        },
                        "Sunday": {
                          "type": "string",
                          "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                          "example": "Open 24 hours"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "hours": {
                  "description": "A mapping of quote ID(s) to their respective local hours.",
                  "allOf": [
                    {
                      "properties": {
                        "*": {
                          "description": "",
                          "properties": {
                            "operational": {
                              "description": "",
                              "properties": {
                                "Monday": {
                                  "type": "string",
                                  "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                  "example": "09:30AM - 01:00AM"
                                },
                                "Tuesday": {
                                  "type": "string",
                                  "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                  "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                },
                                "Wednesday": {
                                  "type": "string",
                                  "description": "If a restaurant is opens at midnight, it will show as above. ",
                                  "example": "12:00AM - 4:00PM"
                                },
                                "Thursday": {
                                  "type": "string",
                                  "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                  "example": "8:00AM - 4:00AM"
                                },
                                "Friday": {
                                  "type": "string",
                                  "description": "If a restaurant is open until midnight, it will show as above.",
                                  "example": "10:00AM - 12:00AM"
                                },
                                "Saturday": {
                                  "type": "string",
                                  "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                  "example": "Closed"
                                },
                                "Sunday": {
                                  "type": "string",
                                  "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                  "example": "Open 24 hours"
                                }
                              },
                              "type": "object"
                            },
                            "delivery": {
                              "description": "",
                              "properties": {
                                "Monday": {
                                  "type": "string",
                                  "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                  "example": "09:30AM - 01:00AM"
                                },
                                "Tuesday": {
                                  "type": "string",
                                  "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                  "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                },
                                "Wednesday": {
                                  "type": "string",
                                  "description": "If a restaurant is opens at midnight, it will show as above. ",
                                  "example": "12:00AM - 4:00PM"
                                },
                                "Thursday": {
                                  "type": "string",
                                  "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                  "example": "8:00AM - 4:00AM"
                                },
                                "Friday": {
                                  "type": "string",
                                  "description": "If a restaurant is open until midnight, it will show as above.",
                                  "example": "10:00AM - 12:00AM"
                                },
                                "Saturday": {
                                  "type": "string",
                                  "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                  "example": "Closed"
                                },
                                "Sunday": {
                                  "type": "string",
                                  "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                  "example": "Open 24 hours"
                                }
                              },
                              "type": "object"
                            },
                            "pickup": {
                              "description": "",
                              "properties": {
                                "Monday": {
                                  "type": "string",
                                  "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                  "example": "09:30AM - 01:00AM"
                                },
                                "Tuesday": {
                                  "type": "string",
                                  "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                  "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                },
                                "Wednesday": {
                                  "type": "string",
                                  "description": "If a restaurant is opens at midnight, it will show as above. ",
                                  "example": "12:00AM - 4:00PM"
                                },
                                "Thursday": {
                                  "type": "string",
                                  "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                  "example": "8:00AM - 4:00AM"
                                },
                                "Friday": {
                                  "type": "string",
                                  "description": "If a restaurant is open until midnight, it will show as above.",
                                  "example": "10:00AM - 12:00AM"
                                },
                                "Saturday": {
                                  "type": "string",
                                  "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                  "example": "Closed"
                                },
                                "Sunday": {
                                  "type": "string",
                                  "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                  "example": "Open 24 hours"
                                }
                              },
                              "type": "object"
                            },
                            "dine_in": {
                              "description": "",
                              "properties": {
                                "Monday": {
                                  "type": "string",
                                  "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                  "example": "09:30AM - 01:00AM"
                                },
                                "Tuesday": {
                                  "type": "string",
                                  "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                  "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                },
                                "Wednesday": {
                                  "type": "string",
                                  "description": "If a restaurant is opens at midnight, it will show as above. ",
                                  "example": "12:00AM - 4:00PM"
                                },
                                "Thursday": {
                                  "type": "string",
                                  "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                  "example": "8:00AM - 4:00AM"
                                },
                                "Friday": {
                                  "type": "string",
                                  "description": "If a restaurant is open until midnight, it will show as above.",
                                  "example": "10:00AM - 12:00AM"
                                },
                                "Saturday": {
                                  "type": "string",
                                  "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                  "example": "Closed"
                                },
                                "Sunday": {
                                  "type": "string",
                                  "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                  "example": "Open 24 hours"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ]
                },
                "utc_hours": {
                  "description": "",
                  "properties": {
                    "operational": {
                      "description": "",
                      "required": [
                        "Friday",
                        "Monday",
                        "Saturday",
                        "Sunday",
                        "Thursday",
                        "Tuesday",
                        "Wednesday"
                      ],
                      "properties": {
                        "Monday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Monday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Tuesday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Tuesday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Wednesday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Wednesday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Thursday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Thursday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Friday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Friday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Saturday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Saturday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Sunday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Sunday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "delivery": {
                      "description": "",
                      "required": [
                        "Friday",
                        "Monday",
                        "Saturday",
                        "Sunday",
                        "Thursday",
                        "Tuesday",
                        "Wednesday"
                      ],
                      "properties": {
                        "Monday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Monday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Tuesday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Tuesday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Wednesday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Wednesday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Thursday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Thursday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Friday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Friday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Saturday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Saturday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Sunday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Sunday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "pickup": {
                      "description": "",
                      "required": [
                        "Friday",
                        "Monday",
                        "Saturday",
                        "Sunday",
                        "Thursday",
                        "Tuesday",
                        "Wednesday"
                      ],
                      "properties": {
                        "Monday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Monday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Tuesday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Tuesday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Wednesday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Wednesday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Thursday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Thursday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Friday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Friday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Saturday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Saturday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Sunday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Sunday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "dine_in": {
                      "description": "",
                      "required": [
                        "Friday",
                        "Monday",
                        "Saturday",
                        "Sunday",
                        "Thursday",
                        "Tuesday",
                        "Wednesday"
                      ],
                      "properties": {
                        "Monday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Monday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Tuesday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Tuesday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Wednesday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Wednesday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Thursday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Thursday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Friday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Friday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Saturday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Saturday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "Sunday": {
                          "type": "array",
                          "description": "The list of opening and closing times on Sunday.",
                          "items": {
                            "required": [
                              "closed",
                              "open"
                            ],
                            "properties": {
                              "open": {
                                "type": "string",
                                "description": "The store opening UTC time.",
                                "example": "01:00:00+00:00"
                              },
                              "closed": {
                                "type": "string",
                                "description": "The store closing UTC time.",
                                "example": "17:00:00+00:00"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "cuisines": {
                  "type": "array",
                  "description": "The cuisine types",
                  "example": [
                    "Snacks",
                    "Convenience",
                    "Ice Cream"
                  ],
                  "items": {
                    "type": "string",
                    "description": "Cuisine of the store"
                  }
                },
                "food_photos": {
                  "type": "array",
                  "description": "Photos of the food at the store",
                  "example": [
                    "https://cdn-img.mealme.ai/f9ccb38a3d986eeb3f25e5b021d85a73c5d492ba/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f65303762376261372d663036612d346237302d383861302d3466633932656261346236322e6a706567"
                  ],
                  "items": {
                    "type": "string",
                    "description": "Photo of the store"
                  }
                },
                "logo_photos": {
                  "type": "array",
                  "description": "Photos of the store's logo",
                  "example": [
                    "https://cdn-img.mealme.ai/9a55bb89e411b1ef87210731a2e7f9fe850cc979/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f76313630313330373339332f656a6e376377756b74766537766e696867616b782e6a7067"
                  ],
                  "items": {
                    "type": "string",
                    "description": "Photo of the store's logo"
                  }
                },
                "store_photos": {
                  "type": "array",
                  "description": "Photos of the store",
                  "example": [
                    "https://cdn-img.mealme.ai/7aba9346a8f2e1d8ecf453a86fe3be1b53f98270/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f36393264376333342d626465362d343337612d616435342d3961303633656333666161642e6a706567"
                  ],
                  "items": {
                    "type": "string",
                    "description": "Photo of the store"
                  }
                },
                "dollar_signs": {
                  "type": "integer",
                  "description": "Estimated cost of the store, like 1 representing \"$\" or 2 representing \"$$\"",
                  "example": 1
                },
                "pickup_enabled": {
                  "type": "boolean",
                  "description": "Whether the store supports pickup.",
                  "example": false
                },
                "delivery_enabled": {
                  "type": "boolean",
                  "description": "Whether the store supports delivery.",
                  "example": true
                },
                "is_open": {
                  "type": "boolean",
                  "description": "Whether the store is open. If null, then there is no data available on whether the store is open.",
                  "example": true
                },
                "quotes": {
                  "description": "",
                  "properties": {
                    "cheapest_delivery": {
                      "example": {
                        "time_estimate": {
                          "minimum": 43,
                          "maximum": 45
                        },
                        "sales_tax_percent": 10.5,
                        "delivery_fee": {
                          "delivery_fee_flat": 0,
                          "delivery_fee_percent": 0,
                          "delivery_fee_taxable": false
                        },
                        "service_fee": {
                          "service_fee_flat": 0,
                          "service_fee_percent": 10,
                          "service_fee_min": 300,
                          "service_fee_max": 700,
                          "service_fee_taxable": false
                        },
                        "small_order_fee": {
                          "minimum_order_value": 0,
                          "small_order_fee_flat": 0,
                          "small_order_fee_percent": 0
                        },
                        "order_minimum": 1500,
                        "threshold_fees": [],
                        "asap_available": true
                      },
                      "allOf": [
                        {
                          "required": [
                            "accepts_delivery_tip",
                            "accepts_pickup_note",
                            "accepts_pickup_tip",
                            "asap_available",
                            "courier_quote",
                            "delivery_fee",
                            "first_party_quote",
                            "order_minimum",
                            "sales_tax_percent",
                            "service_fee",
                            "small_order_fee",
                            "third_party_quote",
                            "time_estimate"
                          ],
                          "properties": {
                            "time_estimate": {
                              "description": "",
                              "required": [
                                "maximum",
                                "minimum"
                              ],
                              "properties": {
                                "minimum": {
                                  "type": "integer",
                                  "description": "Lower bound of delivery time estimate (in minutes)"
                                },
                                "maximum": {
                                  "type": "integer",
                                  "description": "Upper bound of delivery time estimate (in minutes)"
                                },
                                "scheduled": {
                                  "type": "array",
                                  "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                  "items": {
                                    "required": [
                                      "delivery_fee",
                                      "maximum",
                                      "minimum"
                                    ],
                                    "properties": {
                                      "minimum": {
                                        "type": "integer",
                                        "description": "Timestamp (seconds since 1970)"
                                      },
                                      "maximum": {
                                        "type": "integer",
                                        "description": "Timestamp (seconds since 1970)"
                                      },
                                      "delivery_fee": {
                                        "description": "",
                                        "required": [
                                          "delivery_fee_flat",
                                          "delivery_fee_percent"
                                        ],
                                        "properties": {
                                          "delivery_fee_flat": {
                                            "type": "integer",
                                            "description": "Delivery fee amount in cents"
                                          },
                                          "delivery_fee_percent": {
                                            "type": "number",
                                            "description": "Delivery fee percentage"
                                          },
                                          "delivery_fee_taxable": {
                                            "type": "boolean",
                                            "description": "Whether the delivery fee is taxable or not"
                                          },
                                          "threshold_fees": {
                                            "type": "array",
                                            "description": "Threshold Fees, if they exist",
                                            "items": {
                                              "required": [
                                                "threshold_cents",
                                                "threshold_fee_cents"
                                              ],
                                              "properties": {
                                                "threshold_cents": {
                                                  "type": "integer",
                                                  "description": "Subtotal that enacts a specific fee"
                                                },
                                                "threshold_fee_cents": {
                                                  "type": "integer",
                                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "sales_tax_percent": {
                              "type": "integer",
                              "description": "Sales tax in percentage terms"
                            },
                            "delivery_fee": {
                              "description": "",
                              "required": [
                                "delivery_fee_flat",
                                "delivery_fee_percent"
                              ],
                              "properties": {
                                "delivery_fee_flat": {
                                  "type": "integer",
                                  "description": "Delivery fee amount in cents"
                                },
                                "delivery_fee_percent": {
                                  "type": "number",
                                  "description": "Delivery fee percentage"
                                },
                                "delivery_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether the delivery fee is taxable or not"
                                },
                                "threshold_fees": {
                                  "type": "array",
                                  "description": "Threshold Fees, if they exist",
                                  "items": {
                                    "required": [
                                      "threshold_cents",
                                      "threshold_fee_cents"
                                    ],
                                    "properties": {
                                      "threshold_cents": {
                                        "type": "integer",
                                        "description": "Subtotal that enacts a specific fee"
                                      },
                                      "threshold_fee_cents": {
                                        "type": "integer",
                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "service_fee": {
                              "description": "",
                              "required": [
                                "service_fee_flat",
                                "service_fee_percent"
                              ],
                              "properties": {
                                "service_fee_flat": {
                                  "type": "integer",
                                  "description": "Service fee amount in cents"
                                },
                                "service_fee_percent": {
                                  "type": "number",
                                  "description": "Service fee percentage from 0 to 100"
                                },
                                "service_fee_min": {
                                  "type": "integer",
                                  "description": "Minimum service fee amount in cents"
                                },
                                "service_fee_max": {
                                  "type": "integer",
                                  "description": "Maximum service fee amount in cents"
                                },
                                "service_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether the service fee is taxable or not"
                                },
                                "threshold_fees": {
                                  "type": "array",
                                  "description": "Threshold Fees, if they exist",
                                  "items": {
                                    "required": [
                                      "threshold_cents",
                                      "threshold_fee_cents"
                                    ],
                                    "properties": {
                                      "threshold_cents": {
                                        "type": "integer",
                                        "description": "Subtotal that enacts a specific fee"
                                      },
                                      "threshold_fee_cents": {
                                        "type": "integer",
                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "small_order_fee": {
                              "description": "",
                              "required": [
                                "minimum_order_value",
                                "small_order_fee_flat",
                                "small_order_fee_percent"
                              ],
                              "properties": {
                                "minimum_order_value": {
                                  "type": "integer",
                                  "description": "Minimum amount to not incur small order fee in cents",
                                  "example": 0
                                },
                                "small_order_fee_flat": {
                                  "type": "integer",
                                  "description": "Small order fee amount in cents",
                                  "example": 0
                                },
                                "small_order_fee_percent": {
                                  "type": "number",
                                  "description": "Small order fee percentage",
                                  "example": 0
                                }
                              },
                              "type": "object"
                            },
                            "order_minimum": {
                              "type": "integer",
                              "description": "Minimum order amount in cents"
                            },
                            "min_tip": {
                              "type": "integer",
                              "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                            },
                            "asap_available": {
                              "type": "integer",
                              "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                            },
                            "first_party_quote": {
                              "type": "boolean",
                              "description": "Whether this quote is provided by the store"
                            },
                            "third_party_quote": {
                              "type": "boolean",
                              "description": "Whether this quote is provided by a third party service"
                            },
                            "courier_quote": {
                              "type": "boolean",
                              "description": "Whether this quote is provided by a last-mile delivery service."
                            },
                            "accepts_delivery_tip": {
                              "type": "boolean",
                              "description": "Whether a delivery tip is accepted."
                            },
                            "accepts_pickup_tip": {
                              "type": "boolean",
                              "description": "Whether a pickup tip is accepted."
                            },
                            "accepts_pickup_note": {
                              "type": "boolean",
                              "description": "Whether a pickup note is accepted."
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "description": ""
                    },
                    "fastest_delivery": {
                      "example": {
                        "time_estimate": {
                          "minimum": 15,
                          "maximum": 30
                        },
                        "sales_tax_percent": 10.5,
                        "delivery_fee": {
                          "delivery_fee_flat": 199,
                          "delivery_fee_percent": 0,
                          "delivery_fee_taxable": false
                        },
                        "service_fee": {
                          "service_fee_flat": 0,
                          "service_fee_percent": 5
                        },
                        "small_order_fee": {
                          "minimum_order_value": 1200,
                          "small_order_fee_flat": 200,
                          "small_order_fee_percent": 0
                        },
                        "order_minimum": 0,
                        "threshold_fees": [
                          {
                            "threshold_cents": 10000,
                            "threshold_fee_cents": 1000
                          },
                          {
                            "threshold_cents": 20000,
                            "threshold_fee_cents": 2000
                          }
                        ]
                      },
                      "allOf": [
                        {
                          "required": [
                            "accepts_delivery_tip",
                            "accepts_pickup_note",
                            "accepts_pickup_tip",
                            "asap_available",
                            "courier_quote",
                            "delivery_fee",
                            "first_party_quote",
                            "order_minimum",
                            "sales_tax_percent",
                            "service_fee",
                            "small_order_fee",
                            "third_party_quote",
                            "time_estimate"
                          ],
                          "properties": {
                            "time_estimate": {
                              "description": "",
                              "required": [
                                "maximum",
                                "minimum"
                              ],
                              "properties": {
                                "minimum": {
                                  "type": "integer",
                                  "description": "Lower bound of delivery time estimate (in minutes)"
                                },
                                "maximum": {
                                  "type": "integer",
                                  "description": "Upper bound of delivery time estimate (in minutes)"
                                },
                                "scheduled": {
                                  "type": "array",
                                  "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                  "items": {
                                    "required": [
                                      "delivery_fee",
                                      "maximum",
                                      "minimum"
                                    ],
                                    "properties": {
                                      "minimum": {
                                        "type": "integer",
                                        "description": "Timestamp (seconds since 1970)"
                                      },
                                      "maximum": {
                                        "type": "integer",
                                        "description": "Timestamp (seconds since 1970)"
                                      },
                                      "delivery_fee": {
                                        "description": "",
                                        "required": [
                                          "delivery_fee_flat",
                                          "delivery_fee_percent"
                                        ],
                                        "properties": {
                                          "delivery_fee_flat": {
                                            "type": "integer",
                                            "description": "Delivery fee amount in cents"
                                          },
                                          "delivery_fee_percent": {
                                            "type": "number",
                                            "description": "Delivery fee percentage"
                                          },
                                          "delivery_fee_taxable": {
                                            "type": "boolean",
                                            "description": "Whether the delivery fee is taxable or not"
                                          },
                                          "threshold_fees": {
                                            "type": "array",
                                            "description": "Threshold Fees, if they exist",
                                            "items": {
                                              "required": [
                                                "threshold_cents",
                                                "threshold_fee_cents"
                                              ],
                                              "properties": {
                                                "threshold_cents": {
                                                  "type": "integer",
                                                  "description": "Subtotal that enacts a specific fee"
                                                },
                                                "threshold_fee_cents": {
                                                  "type": "integer",
                                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "sales_tax_percent": {
                              "type": "integer",
                              "description": "Sales tax in percentage terms"
                            },
                            "delivery_fee": {
                              "description": "",
                              "required": [
                                "delivery_fee_flat",
                                "delivery_fee_percent"
                              ],
                              "properties": {
                                "delivery_fee_flat": {
                                  "type": "integer",
                                  "description": "Delivery fee amount in cents"
                                },
                                "delivery_fee_percent": {
                                  "type": "number",
                                  "description": "Delivery fee percentage"
                                },
                                "delivery_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether the delivery fee is taxable or not"
                                },
                                "threshold_fees": {
                                  "type": "array",
                                  "description": "Threshold Fees, if they exist",
                                  "items": {
                                    "required": [
                                      "threshold_cents",
                                      "threshold_fee_cents"
                                    ],
                                    "properties": {
                                      "threshold_cents": {
                                        "type": "integer",
                                        "description": "Subtotal that enacts a specific fee"
                                      },
                                      "threshold_fee_cents": {
                                        "type": "integer",
                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "service_fee": {
                              "description": "",
                              "required": [
                                "service_fee_flat",
                                "service_fee_percent"
                              ],
                              "properties": {
                                "service_fee_flat": {
                                  "type": "integer",
                                  "description": "Service fee amount in cents"
                                },
                                "service_fee_percent": {
                                  "type": "number",
                                  "description": "Service fee percentage from 0 to 100"
                                },
                                "service_fee_min": {
                                  "type": "integer",
                                  "description": "Minimum service fee amount in cents"
                                },
                                "service_fee_max": {
                                  "type": "integer",
                                  "description": "Maximum service fee amount in cents"
                                },
                                "service_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether the service fee is taxable or not"
                                },
                                "threshold_fees": {
                                  "type": "array",
                                  "description": "Threshold Fees, if they exist",
                                  "items": {
                                    "required": [
                                      "threshold_cents",
                                      "threshold_fee_cents"
                                    ],
                                    "properties": {
                                      "threshold_cents": {
                                        "type": "integer",
                                        "description": "Subtotal that enacts a specific fee"
                                      },
                                      "threshold_fee_cents": {
                                        "type": "integer",
                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "small_order_fee": {
                              "description": "",
                              "required": [
                                "minimum_order_value",
                                "small_order_fee_flat",
                                "small_order_fee_percent"
                              ],
                              "properties": {
                                "minimum_order_value": {
                                  "type": "integer",
                                  "description": "Minimum amount to not incur small order fee in cents",
                                  "example": 0
                                },
                                "small_order_fee_flat": {
                                  "type": "integer",
                                  "description": "Small order fee amount in cents",
                                  "example": 0
                                },
                                "small_order_fee_percent": {
                                  "type": "number",
                                  "description": "Small order fee percentage",
                                  "example": 0
                                }
                              },
                              "type": "object"
                            },
                            "order_minimum": {
                              "type": "integer",
                              "description": "Minimum order amount in cents"
                            },
                            "min_tip": {
                              "type": "integer",
                              "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                            },
                            "asap_available": {
                              "type": "integer",
                              "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                            },
                            "first_party_quote": {
                              "type": "boolean",
                              "description": "Whether this quote is provided by the store"
                            },
                            "third_party_quote": {
                              "type": "boolean",
                              "description": "Whether this quote is provided by a third party service"
                            },
                            "courier_quote": {
                              "type": "boolean",
                              "description": "Whether this quote is provided by a last-mile delivery service."
                            },
                            "accepts_delivery_tip": {
                              "type": "boolean",
                              "description": "Whether a delivery tip is accepted."
                            },
                            "accepts_pickup_tip": {
                              "type": "boolean",
                              "description": "Whether a pickup tip is accepted."
                            },
                            "accepts_pickup_note": {
                              "type": "boolean",
                              "description": "Whether a pickup note is accepted."
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "description": ""
                    },
                    "pickup": {
                      "example": {
                        "time_estimate": {
                          "minimum": 5,
                          "maximum": 5
                        },
                        "sales_tax_percent": 10.5,
                        "delivery_fee": {
                          "delivery_fee_flat": 0,
                          "delivery_fee_percent": 0,
                          "delivery_fee_taxable": false
                        },
                        "service_fee": {
                          "service_fee_flat": 0,
                          "service_fee_percent": 0
                        },
                        "small_order_fee": {
                          "minimum_order_value": 1200,
                          "small_order_fee_flat": 200,
                          "small_order_fee_percent": 0
                        },
                        "order_minimum": 100,
                        "threshold_fees": []
                      },
                      "allOf": [
                        {
                          "required": [
                            "accepts_delivery_tip",
                            "accepts_pickup_note",
                            "accepts_pickup_tip",
                            "asap_available",
                            "courier_quote",
                            "delivery_fee",
                            "first_party_quote",
                            "order_minimum",
                            "sales_tax_percent",
                            "service_fee",
                            "small_order_fee",
                            "third_party_quote",
                            "time_estimate"
                          ],
                          "properties": {
                            "time_estimate": {
                              "description": "",
                              "required": [
                                "maximum",
                                "minimum"
                              ],
                              "properties": {
                                "minimum": {
                                  "type": "integer",
                                  "description": "Lower bound of delivery time estimate (in minutes)"
                                },
                                "maximum": {
                                  "type": "integer",
                                  "description": "Upper bound of delivery time estimate (in minutes)"
                                },
                                "scheduled": {
                                  "type": "array",
                                  "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                  "items": {
                                    "required": [
                                      "delivery_fee",
                                      "maximum",
                                      "minimum"
                                    ],
                                    "properties": {
                                      "minimum": {
                                        "type": "integer",
                                        "description": "Timestamp (seconds since 1970)"
                                      },
                                      "maximum": {
                                        "type": "integer",
                                        "description": "Timestamp (seconds since 1970)"
                                      },
                                      "delivery_fee": {
                                        "description": "",
                                        "required": [
                                          "delivery_fee_flat",
                                          "delivery_fee_percent"
                                        ],
                                        "properties": {
                                          "delivery_fee_flat": {
                                            "type": "integer",
                                            "description": "Delivery fee amount in cents"
                                          },
                                          "delivery_fee_percent": {
                                            "type": "number",
                                            "description": "Delivery fee percentage"
                                          },
                                          "delivery_fee_taxable": {
                                            "type": "boolean",
                                            "description": "Whether the delivery fee is taxable or not"
                                          },
                                          "threshold_fees": {
                                            "type": "array",
                                            "description": "Threshold Fees, if they exist",
                                            "items": {
                                              "required": [
                                                "threshold_cents",
                                                "threshold_fee_cents"
                                              ],
                                              "properties": {
                                                "threshold_cents": {
                                                  "type": "integer",
                                                  "description": "Subtotal that enacts a specific fee"
                                                },
                                                "threshold_fee_cents": {
                                                  "type": "integer",
                                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "sales_tax_percent": {
                              "type": "integer",
                              "description": "Sales tax in percentage terms"
                            },
                            "delivery_fee": {
                              "description": "",
                              "required": [
                                "delivery_fee_flat",
                                "delivery_fee_percent"
                              ],
                              "properties": {
                                "delivery_fee_flat": {
                                  "type": "integer",
                                  "description": "Delivery fee amount in cents"
                                },
                                "delivery_fee_percent": {
                                  "type": "number",
                                  "description": "Delivery fee percentage"
                                },
                                "delivery_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether the delivery fee is taxable or not"
                                },
                                "threshold_fees": {
                                  "type": "array",
                                  "description": "Threshold Fees, if they exist",
                                  "items": {
                                    "required": [
                                      "threshold_cents",
                                      "threshold_fee_cents"
                                    ],
                                    "properties": {
                                      "threshold_cents": {
                                        "type": "integer",
                                        "description": "Subtotal that enacts a specific fee"
                                      },
                                      "threshold_fee_cents": {
                                        "type": "integer",
                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "service_fee": {
                              "description": "",
                              "required": [
                                "service_fee_flat",
                                "service_fee_percent"
                              ],
                              "properties": {
                                "service_fee_flat": {
                                  "type": "integer",
                                  "description": "Service fee amount in cents"
                                },
                                "service_fee_percent": {
                                  "type": "number",
                                  "description": "Service fee percentage from 0 to 100"
                                },
                                "service_fee_min": {
                                  "type": "integer",
                                  "description": "Minimum service fee amount in cents"
                                },
                                "service_fee_max": {
                                  "type": "integer",
                                  "description": "Maximum service fee amount in cents"
                                },
                                "service_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether the service fee is taxable or not"
                                },
                                "threshold_fees": {
                                  "type": "array",
                                  "description": "Threshold Fees, if they exist",
                                  "items": {
                                    "required": [
                                      "threshold_cents",
                                      "threshold_fee_cents"
                                    ],
                                    "properties": {
                                      "threshold_cents": {
                                        "type": "integer",
                                        "description": "Subtotal that enacts a specific fee"
                                      },
                                      "threshold_fee_cents": {
                                        "type": "integer",
                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            },
                            "small_order_fee": {
                              "description": "",
                              "required": [
                                "minimum_order_value",
                                "small_order_fee_flat",
                                "small_order_fee_percent"
                              ],
                              "properties": {
                                "minimum_order_value": {
                                  "type": "integer",
                                  "description": "Minimum amount to not incur small order fee in cents",
                                  "example": 0
                                },
                                "small_order_fee_flat": {
                                  "type": "integer",
                                  "description": "Small order fee amount in cents",
                                  "example": 0
                                },
                                "small_order_fee_percent": {
                                  "type": "number",
                                  "description": "Small order fee percentage",
                                  "example": 0
                                }
                              },
                              "type": "object"
                            },
                            "order_minimum": {
                              "type": "integer",
                              "description": "Minimum order amount in cents"
                            },
                            "min_tip": {
                              "type": "integer",
                              "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                            },
                            "asap_available": {
                              "type": "integer",
                              "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                            },
                            "first_party_quote": {
                              "type": "boolean",
                              "description": "Whether this quote is provided by the store"
                            },
                            "third_party_quote": {
                              "type": "boolean",
                              "description": "Whether this quote is provided by a third party service"
                            },
                            "courier_quote": {
                              "type": "boolean",
                              "description": "Whether this quote is provided by a last-mile delivery service."
                            },
                            "accepts_delivery_tip": {
                              "type": "boolean",
                              "description": "Whether a delivery tip is accepted."
                            },
                            "accepts_pickup_tip": {
                              "type": "boolean",
                              "description": "Whether a pickup tip is accepted."
                            },
                            "accepts_pickup_note": {
                              "type": "boolean",
                              "description": "Whether a pickup note is accepted."
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "description": ""
                    }
                  },
                  "type": "object"
                },
                "quote_types": {
                  "description": "",
                  "properties": {
                    "<quote id>": {
                      "type": "array",
                      "description": "The list of quote types available for this quote id.",
                      "items": {
                        "type": "string",
                        "description": "Quote Type",
                        "example": "pickup",
                        "enum": [
                          "pickup",
                          "delivery"
                        ]
                      }
                    }
                  },
                  "type": "object"
                },
                "offers_first_party_delivery": {
                  "type": "boolean",
                  "description": "Whether or not the store delivers directly.",
                  "example": false
                },
                "offers_third_party_delivery": {
                  "type": "boolean",
                  "description": "Whether or not the store delivers with third-party services.",
                  "example": false
                },
                "miles": {
                  "type": "number",
                  "description": "Miles from the user to the store",
                  "example": 0.23
                },
                "weighted_rating_value": {
                  "type": "number",
                  "description": "The weighted average rating of this store across all the websites it appears on. Floating-point from 1 to 5 (inclusive) or 0.",
                  "example": 4.83
                },
                "aggregated_rating_count": {
                  "type": "integer",
                  "description": "Number of total aggregated ratings for this store across all the websites it appears on. Non-negative integer.",
                  "example": 956
                },
                "supports_upc_codes": {
                  "type": "boolean",
                  "description": "Whether the store's inventory supports UPC codes.",
                  "example": false
                }
              },
              "type": "object"
            }
          },
          "next_page": {
            "type": "integer",
            "description": "The next page number to pass to the `page` parameter for more results",
            "example": 1
          }
        },
        "type": "object"
      },
      "Store_Local_Hours": {
        "properties": {
          "operational": {
            "description": "",
            "properties": {
              "Monday": {
                "type": "string",
                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                "example": "09:30AM - 01:00AM"
              },
              "Tuesday": {
                "type": "string",
                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
              },
              "Wednesday": {
                "type": "string",
                "description": "If a restaurant is opens at midnight, it will show as above. ",
                "example": "12:00AM - 4:00PM"
              },
              "Thursday": {
                "type": "string",
                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                "example": "8:00AM - 4:00AM"
              },
              "Friday": {
                "type": "string",
                "description": "If a restaurant is open until midnight, it will show as above.",
                "example": "10:00AM - 12:00AM"
              },
              "Saturday": {
                "type": "string",
                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                "example": "Closed"
              },
              "Sunday": {
                "type": "string",
                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                "example": "Open 24 hours"
              }
            },
            "type": "object"
          },
          "delivery": {
            "description": "",
            "properties": {
              "Monday": {
                "type": "string",
                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                "example": "09:30AM - 01:00AM"
              },
              "Tuesday": {
                "type": "string",
                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
              },
              "Wednesday": {
                "type": "string",
                "description": "If a restaurant is opens at midnight, it will show as above. ",
                "example": "12:00AM - 4:00PM"
              },
              "Thursday": {
                "type": "string",
                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                "example": "8:00AM - 4:00AM"
              },
              "Friday": {
                "type": "string",
                "description": "If a restaurant is open until midnight, it will show as above.",
                "example": "10:00AM - 12:00AM"
              },
              "Saturday": {
                "type": "string",
                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                "example": "Closed"
              },
              "Sunday": {
                "type": "string",
                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                "example": "Open 24 hours"
              }
            },
            "type": "object"
          },
          "pickup": {
            "description": "",
            "properties": {
              "Monday": {
                "type": "string",
                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                "example": "09:30AM - 01:00AM"
              },
              "Tuesday": {
                "type": "string",
                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
              },
              "Wednesday": {
                "type": "string",
                "description": "If a restaurant is opens at midnight, it will show as above. ",
                "example": "12:00AM - 4:00PM"
              },
              "Thursday": {
                "type": "string",
                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                "example": "8:00AM - 4:00AM"
              },
              "Friday": {
                "type": "string",
                "description": "If a restaurant is open until midnight, it will show as above.",
                "example": "10:00AM - 12:00AM"
              },
              "Saturday": {
                "type": "string",
                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                "example": "Closed"
              },
              "Sunday": {
                "type": "string",
                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                "example": "Open 24 hours"
              }
            },
            "type": "object"
          },
          "dine_in": {
            "description": "",
            "properties": {
              "Monday": {
                "type": "string",
                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                "example": "09:30AM - 01:00AM"
              },
              "Tuesday": {
                "type": "string",
                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
              },
              "Wednesday": {
                "type": "string",
                "description": "If a restaurant is opens at midnight, it will show as above. ",
                "example": "12:00AM - 4:00PM"
              },
              "Thursday": {
                "type": "string",
                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                "example": "8:00AM - 4:00AM"
              },
              "Friday": {
                "type": "string",
                "description": "If a restaurant is open until midnight, it will show as above.",
                "example": "10:00AM - 12:00AM"
              },
              "Saturday": {
                "type": "string",
                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                "example": "Closed"
              },
              "Sunday": {
                "type": "string",
                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                "example": "Open 24 hours"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Store_Operational_Hours": {
        "properties": {
          "Monday": {
            "type": "string",
            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
            "example": "09:30AM - 01:00AM"
          },
          "Tuesday": {
            "type": "string",
            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
          },
          "Wednesday": {
            "type": "string",
            "description": "If a restaurant is opens at midnight, it will show as above. ",
            "example": "12:00AM - 4:00PM"
          },
          "Thursday": {
            "type": "string",
            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
            "example": "8:00AM - 4:00AM"
          },
          "Friday": {
            "type": "string",
            "description": "If a restaurant is open until midnight, it will show as above.",
            "example": "10:00AM - 12:00AM"
          },
          "Saturday": {
            "type": "string",
            "description": "If a restaurant shows “Closed“, it is closed for that day.",
            "example": "Closed"
          },
          "Sunday": {
            "type": "string",
            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
            "example": "Open 24 hours"
          }
        },
        "type": "object"
      },
      "Store_Delivery_Hours": {
        "properties": {
          "Monday": {
            "type": "string",
            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
            "example": "09:30AM - 01:00AM"
          },
          "Tuesday": {
            "type": "string",
            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
          },
          "Wednesday": {
            "type": "string",
            "description": "If a restaurant is opens at midnight, it will show as above. ",
            "example": "12:00AM - 4:00PM"
          },
          "Thursday": {
            "type": "string",
            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
            "example": "8:00AM - 4:00AM"
          },
          "Friday": {
            "type": "string",
            "description": "If a restaurant is open until midnight, it will show as above.",
            "example": "10:00AM - 12:00AM"
          },
          "Saturday": {
            "type": "string",
            "description": "If a restaurant shows “Closed“, it is closed for that day.",
            "example": "Closed"
          },
          "Sunday": {
            "type": "string",
            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
            "example": "Open 24 hours"
          }
        },
        "type": "object"
      },
      "Store_Pickup_Hours": {
        "properties": {
          "Monday": {
            "type": "string",
            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
            "example": "09:30AM - 01:00AM"
          },
          "Tuesday": {
            "type": "string",
            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
          },
          "Wednesday": {
            "type": "string",
            "description": "If a restaurant is opens at midnight, it will show as above. ",
            "example": "12:00AM - 4:00PM"
          },
          "Thursday": {
            "type": "string",
            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
            "example": "8:00AM - 4:00AM"
          },
          "Friday": {
            "type": "string",
            "description": "If a restaurant is open until midnight, it will show as above.",
            "example": "10:00AM - 12:00AM"
          },
          "Saturday": {
            "type": "string",
            "description": "If a restaurant shows “Closed“, it is closed for that day.",
            "example": "Closed"
          },
          "Sunday": {
            "type": "string",
            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
            "example": "Open 24 hours"
          }
        },
        "type": "object"
      },
      "Store_Dine-in_Hours": {
        "properties": {
          "Monday": {
            "type": "string",
            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
            "example": "09:30AM - 01:00AM"
          },
          "Tuesday": {
            "type": "string",
            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
          },
          "Wednesday": {
            "type": "string",
            "description": "If a restaurant is opens at midnight, it will show as above. ",
            "example": "12:00AM - 4:00PM"
          },
          "Thursday": {
            "type": "string",
            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
            "example": "8:00AM - 4:00AM"
          },
          "Friday": {
            "type": "string",
            "description": "If a restaurant is open until midnight, it will show as above.",
            "example": "10:00AM - 12:00AM"
          },
          "Saturday": {
            "type": "string",
            "description": "If a restaurant shows “Closed“, it is closed for that day.",
            "example": "Closed"
          },
          "Sunday": {
            "type": "string",
            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
            "example": "Open 24 hours"
          }
        },
        "type": "object"
      },
      "Store_Hours": {
        "properties": {
          "*": {
            "description": "",
            "properties": {
              "operational": {
                "description": "",
                "properties": {
                  "Monday": {
                    "type": "string",
                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                    "example": "09:30AM - 01:00AM"
                  },
                  "Tuesday": {
                    "type": "string",
                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                  },
                  "Wednesday": {
                    "type": "string",
                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                    "example": "12:00AM - 4:00PM"
                  },
                  "Thursday": {
                    "type": "string",
                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                    "example": "8:00AM - 4:00AM"
                  },
                  "Friday": {
                    "type": "string",
                    "description": "If a restaurant is open until midnight, it will show as above.",
                    "example": "10:00AM - 12:00AM"
                  },
                  "Saturday": {
                    "type": "string",
                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                    "example": "Closed"
                  },
                  "Sunday": {
                    "type": "string",
                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                    "example": "Open 24 hours"
                  }
                },
                "type": "object"
              },
              "delivery": {
                "description": "",
                "properties": {
                  "Monday": {
                    "type": "string",
                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                    "example": "09:30AM - 01:00AM"
                  },
                  "Tuesday": {
                    "type": "string",
                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                  },
                  "Wednesday": {
                    "type": "string",
                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                    "example": "12:00AM - 4:00PM"
                  },
                  "Thursday": {
                    "type": "string",
                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                    "example": "8:00AM - 4:00AM"
                  },
                  "Friday": {
                    "type": "string",
                    "description": "If a restaurant is open until midnight, it will show as above.",
                    "example": "10:00AM - 12:00AM"
                  },
                  "Saturday": {
                    "type": "string",
                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                    "example": "Closed"
                  },
                  "Sunday": {
                    "type": "string",
                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                    "example": "Open 24 hours"
                  }
                },
                "type": "object"
              },
              "pickup": {
                "description": "",
                "properties": {
                  "Monday": {
                    "type": "string",
                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                    "example": "09:30AM - 01:00AM"
                  },
                  "Tuesday": {
                    "type": "string",
                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                  },
                  "Wednesday": {
                    "type": "string",
                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                    "example": "12:00AM - 4:00PM"
                  },
                  "Thursday": {
                    "type": "string",
                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                    "example": "8:00AM - 4:00AM"
                  },
                  "Friday": {
                    "type": "string",
                    "description": "If a restaurant is open until midnight, it will show as above.",
                    "example": "10:00AM - 12:00AM"
                  },
                  "Saturday": {
                    "type": "string",
                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                    "example": "Closed"
                  },
                  "Sunday": {
                    "type": "string",
                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                    "example": "Open 24 hours"
                  }
                },
                "type": "object"
              },
              "dine_in": {
                "description": "",
                "properties": {
                  "Monday": {
                    "type": "string",
                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                    "example": "09:30AM - 01:00AM"
                  },
                  "Tuesday": {
                    "type": "string",
                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                  },
                  "Wednesday": {
                    "type": "string",
                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                    "example": "12:00AM - 4:00PM"
                  },
                  "Thursday": {
                    "type": "string",
                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                    "example": "8:00AM - 4:00AM"
                  },
                  "Friday": {
                    "type": "string",
                    "description": "If a restaurant is open until midnight, it will show as above.",
                    "example": "10:00AM - 12:00AM"
                  },
                  "Saturday": {
                    "type": "string",
                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                    "example": "Closed"
                  },
                  "Sunday": {
                    "type": "string",
                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                    "example": "Open 24 hours"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Store_UTC_Hours": {
        "properties": {
          "operational": {
            "description": "",
            "required": [
              "Friday",
              "Monday",
              "Saturday",
              "Sunday",
              "Thursday",
              "Tuesday",
              "Wednesday"
            ],
            "properties": {
              "Monday": {
                "type": "array",
                "description": "The list of opening and closing times on Monday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Tuesday": {
                "type": "array",
                "description": "The list of opening and closing times on Tuesday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Wednesday": {
                "type": "array",
                "description": "The list of opening and closing times on Wednesday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Thursday": {
                "type": "array",
                "description": "The list of opening and closing times on Thursday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Friday": {
                "type": "array",
                "description": "The list of opening and closing times on Friday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Saturday": {
                "type": "array",
                "description": "The list of opening and closing times on Saturday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Sunday": {
                "type": "array",
                "description": "The list of opening and closing times on Sunday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          },
          "delivery": {
            "description": "",
            "required": [
              "Friday",
              "Monday",
              "Saturday",
              "Sunday",
              "Thursday",
              "Tuesday",
              "Wednesday"
            ],
            "properties": {
              "Monday": {
                "type": "array",
                "description": "The list of opening and closing times on Monday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Tuesday": {
                "type": "array",
                "description": "The list of opening and closing times on Tuesday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Wednesday": {
                "type": "array",
                "description": "The list of opening and closing times on Wednesday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Thursday": {
                "type": "array",
                "description": "The list of opening and closing times on Thursday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Friday": {
                "type": "array",
                "description": "The list of opening and closing times on Friday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Saturday": {
                "type": "array",
                "description": "The list of opening and closing times on Saturday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Sunday": {
                "type": "array",
                "description": "The list of opening and closing times on Sunday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          },
          "pickup": {
            "description": "",
            "required": [
              "Friday",
              "Monday",
              "Saturday",
              "Sunday",
              "Thursday",
              "Tuesday",
              "Wednesday"
            ],
            "properties": {
              "Monday": {
                "type": "array",
                "description": "The list of opening and closing times on Monday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Tuesday": {
                "type": "array",
                "description": "The list of opening and closing times on Tuesday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Wednesday": {
                "type": "array",
                "description": "The list of opening and closing times on Wednesday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Thursday": {
                "type": "array",
                "description": "The list of opening and closing times on Thursday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Friday": {
                "type": "array",
                "description": "The list of opening and closing times on Friday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Saturday": {
                "type": "array",
                "description": "The list of opening and closing times on Saturday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Sunday": {
                "type": "array",
                "description": "The list of opening and closing times on Sunday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          },
          "dine_in": {
            "description": "",
            "required": [
              "Friday",
              "Monday",
              "Saturday",
              "Sunday",
              "Thursday",
              "Tuesday",
              "Wednesday"
            ],
            "properties": {
              "Monday": {
                "type": "array",
                "description": "The list of opening and closing times on Monday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Tuesday": {
                "type": "array",
                "description": "The list of opening and closing times on Tuesday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Wednesday": {
                "type": "array",
                "description": "The list of opening and closing times on Wednesday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Thursday": {
                "type": "array",
                "description": "The list of opening and closing times on Thursday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Friday": {
                "type": "array",
                "description": "The list of opening and closing times on Friday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Saturday": {
                "type": "array",
                "description": "The list of opening and closing times on Saturday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              },
              "Sunday": {
                "type": "array",
                "description": "The list of opening and closing times on Sunday.",
                "items": {
                  "required": [
                    "closed",
                    "open"
                  ],
                  "properties": {
                    "open": {
                      "type": "string",
                      "description": "The store opening UTC time.",
                      "example": "01:00:00+00:00"
                    },
                    "closed": {
                      "type": "string",
                      "description": "The store closing UTC time.",
                      "example": "17:00:00+00:00"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Store_Operational_UTC_Hours": {
        "required": [
          "Friday",
          "Monday",
          "Saturday",
          "Sunday",
          "Thursday",
          "Tuesday",
          "Wednesday"
        ],
        "properties": {
          "Monday": {
            "type": "array",
            "description": "The list of opening and closing times on Monday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Tuesday": {
            "type": "array",
            "description": "The list of opening and closing times on Tuesday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Wednesday": {
            "type": "array",
            "description": "The list of opening and closing times on Wednesday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Thursday": {
            "type": "array",
            "description": "The list of opening and closing times on Thursday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Friday": {
            "type": "array",
            "description": "The list of opening and closing times on Friday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Saturday": {
            "type": "array",
            "description": "The list of opening and closing times on Saturday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Sunday": {
            "type": "array",
            "description": "The list of opening and closing times on Sunday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Open_Hours_Window": {
        "required": [
          "closed",
          "open"
        ],
        "properties": {
          "open": {
            "type": "string",
            "description": "The store opening UTC time.",
            "example": "01:00:00+00:00"
          },
          "closed": {
            "type": "string",
            "description": "The store closing UTC time.",
            "example": "17:00:00+00:00"
          }
        },
        "type": "object"
      },
      "Store_Delivery_UTC_Hours": {
        "required": [
          "Friday",
          "Monday",
          "Saturday",
          "Sunday",
          "Thursday",
          "Tuesday",
          "Wednesday"
        ],
        "properties": {
          "Monday": {
            "type": "array",
            "description": "The list of opening and closing times on Monday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Tuesday": {
            "type": "array",
            "description": "The list of opening and closing times on Tuesday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Wednesday": {
            "type": "array",
            "description": "The list of opening and closing times on Wednesday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Thursday": {
            "type": "array",
            "description": "The list of opening and closing times on Thursday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Friday": {
            "type": "array",
            "description": "The list of opening and closing times on Friday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Saturday": {
            "type": "array",
            "description": "The list of opening and closing times on Saturday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Sunday": {
            "type": "array",
            "description": "The list of opening and closing times on Sunday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Store_Pickup_UTC_Hours": {
        "required": [
          "Friday",
          "Monday",
          "Saturday",
          "Sunday",
          "Thursday",
          "Tuesday",
          "Wednesday"
        ],
        "properties": {
          "Monday": {
            "type": "array",
            "description": "The list of opening and closing times on Monday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Tuesday": {
            "type": "array",
            "description": "The list of opening and closing times on Tuesday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Wednesday": {
            "type": "array",
            "description": "The list of opening and closing times on Wednesday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Thursday": {
            "type": "array",
            "description": "The list of opening and closing times on Thursday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Friday": {
            "type": "array",
            "description": "The list of opening and closing times on Friday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Saturday": {
            "type": "array",
            "description": "The list of opening and closing times on Saturday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Sunday": {
            "type": "array",
            "description": "The list of opening and closing times on Sunday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Store_Dine-in_UTC_Hours": {
        "required": [
          "Friday",
          "Monday",
          "Saturday",
          "Sunday",
          "Thursday",
          "Tuesday",
          "Wednesday"
        ],
        "properties": {
          "Monday": {
            "type": "array",
            "description": "The list of opening and closing times on Monday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Tuesday": {
            "type": "array",
            "description": "The list of opening and closing times on Tuesday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Wednesday": {
            "type": "array",
            "description": "The list of opening and closing times on Wednesday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Thursday": {
            "type": "array",
            "description": "The list of opening and closing times on Thursday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Friday": {
            "type": "array",
            "description": "The list of opening and closing times on Friday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Saturday": {
            "type": "array",
            "description": "The list of opening and closing times on Saturday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          },
          "Sunday": {
            "type": "array",
            "description": "The list of opening and closing times on Sunday.",
            "items": {
              "required": [
                "closed",
                "open"
              ],
              "properties": {
                "open": {
                  "type": "string",
                  "description": "The store opening UTC time.",
                  "example": "01:00:00+00:00"
                },
                "closed": {
                  "type": "string",
                  "description": "The store closing UTC time.",
                  "example": "17:00:00+00:00"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Store_Quotes": {
        "properties": {
          "cheapest_delivery": {
            "example": {
              "time_estimate": {
                "minimum": 43,
                "maximum": 45
              },
              "sales_tax_percent": 10.5,
              "delivery_fee": {
                "delivery_fee_flat": 0,
                "delivery_fee_percent": 0,
                "delivery_fee_taxable": false
              },
              "service_fee": {
                "service_fee_flat": 0,
                "service_fee_percent": 10,
                "service_fee_min": 300,
                "service_fee_max": 700,
                "service_fee_taxable": false
              },
              "small_order_fee": {
                "minimum_order_value": 0,
                "small_order_fee_flat": 0,
                "small_order_fee_percent": 0
              },
              "order_minimum": 1500,
              "threshold_fees": [],
              "asap_available": true
            },
            "allOf": [
              {
                "required": [
                  "accepts_delivery_tip",
                  "accepts_pickup_note",
                  "accepts_pickup_tip",
                  "asap_available",
                  "courier_quote",
                  "delivery_fee",
                  "first_party_quote",
                  "order_minimum",
                  "sales_tax_percent",
                  "service_fee",
                  "small_order_fee",
                  "third_party_quote",
                  "time_estimate"
                ],
                "properties": {
                  "time_estimate": {
                    "description": "",
                    "required": [
                      "maximum",
                      "minimum"
                    ],
                    "properties": {
                      "minimum": {
                        "type": "integer",
                        "description": "Lower bound of delivery time estimate (in minutes)"
                      },
                      "maximum": {
                        "type": "integer",
                        "description": "Upper bound of delivery time estimate (in minutes)"
                      },
                      "scheduled": {
                        "type": "array",
                        "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                        "items": {
                          "required": [
                            "delivery_fee",
                            "maximum",
                            "minimum"
                          ],
                          "properties": {
                            "minimum": {
                              "type": "integer",
                              "description": "Timestamp (seconds since 1970)"
                            },
                            "maximum": {
                              "type": "integer",
                              "description": "Timestamp (seconds since 1970)"
                            },
                            "delivery_fee": {
                              "description": "",
                              "required": [
                                "delivery_fee_flat",
                                "delivery_fee_percent"
                              ],
                              "properties": {
                                "delivery_fee_flat": {
                                  "type": "integer",
                                  "description": "Delivery fee amount in cents"
                                },
                                "delivery_fee_percent": {
                                  "type": "number",
                                  "description": "Delivery fee percentage"
                                },
                                "delivery_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether the delivery fee is taxable or not"
                                },
                                "threshold_fees": {
                                  "type": "array",
                                  "description": "Threshold Fees, if they exist",
                                  "items": {
                                    "required": [
                                      "threshold_cents",
                                      "threshold_fee_cents"
                                    ],
                                    "properties": {
                                      "threshold_cents": {
                                        "type": "integer",
                                        "description": "Subtotal that enacts a specific fee"
                                      },
                                      "threshold_fee_cents": {
                                        "type": "integer",
                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "sales_tax_percent": {
                    "type": "integer",
                    "description": "Sales tax in percentage terms"
                  },
                  "delivery_fee": {
                    "description": "",
                    "required": [
                      "delivery_fee_flat",
                      "delivery_fee_percent"
                    ],
                    "properties": {
                      "delivery_fee_flat": {
                        "type": "integer",
                        "description": "Delivery fee amount in cents"
                      },
                      "delivery_fee_percent": {
                        "type": "number",
                        "description": "Delivery fee percentage"
                      },
                      "delivery_fee_taxable": {
                        "type": "boolean",
                        "description": "Whether the delivery fee is taxable or not"
                      },
                      "threshold_fees": {
                        "type": "array",
                        "description": "Threshold Fees, if they exist",
                        "items": {
                          "required": [
                            "threshold_cents",
                            "threshold_fee_cents"
                          ],
                          "properties": {
                            "threshold_cents": {
                              "type": "integer",
                              "description": "Subtotal that enacts a specific fee"
                            },
                            "threshold_fee_cents": {
                              "type": "integer",
                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "service_fee": {
                    "description": "",
                    "required": [
                      "service_fee_flat",
                      "service_fee_percent"
                    ],
                    "properties": {
                      "service_fee_flat": {
                        "type": "integer",
                        "description": "Service fee amount in cents"
                      },
                      "service_fee_percent": {
                        "type": "number",
                        "description": "Service fee percentage from 0 to 100"
                      },
                      "service_fee_min": {
                        "type": "integer",
                        "description": "Minimum service fee amount in cents"
                      },
                      "service_fee_max": {
                        "type": "integer",
                        "description": "Maximum service fee amount in cents"
                      },
                      "service_fee_taxable": {
                        "type": "boolean",
                        "description": "Whether the service fee is taxable or not"
                      },
                      "threshold_fees": {
                        "type": "array",
                        "description": "Threshold Fees, if they exist",
                        "items": {
                          "required": [
                            "threshold_cents",
                            "threshold_fee_cents"
                          ],
                          "properties": {
                            "threshold_cents": {
                              "type": "integer",
                              "description": "Subtotal that enacts a specific fee"
                            },
                            "threshold_fee_cents": {
                              "type": "integer",
                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "small_order_fee": {
                    "description": "",
                    "required": [
                      "minimum_order_value",
                      "small_order_fee_flat",
                      "small_order_fee_percent"
                    ],
                    "properties": {
                      "minimum_order_value": {
                        "type": "integer",
                        "description": "Minimum amount to not incur small order fee in cents",
                        "example": 0
                      },
                      "small_order_fee_flat": {
                        "type": "integer",
                        "description": "Small order fee amount in cents",
                        "example": 0
                      },
                      "small_order_fee_percent": {
                        "type": "number",
                        "description": "Small order fee percentage",
                        "example": 0
                      }
                    },
                    "type": "object"
                  },
                  "order_minimum": {
                    "type": "integer",
                    "description": "Minimum order amount in cents"
                  },
                  "min_tip": {
                    "type": "integer",
                    "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                  },
                  "asap_available": {
                    "type": "integer",
                    "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                  },
                  "first_party_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by the store"
                  },
                  "third_party_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by a third party service"
                  },
                  "courier_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by a last-mile delivery service."
                  },
                  "accepts_delivery_tip": {
                    "type": "boolean",
                    "description": "Whether a delivery tip is accepted."
                  },
                  "accepts_pickup_tip": {
                    "type": "boolean",
                    "description": "Whether a pickup tip is accepted."
                  },
                  "accepts_pickup_note": {
                    "type": "boolean",
                    "description": "Whether a pickup note is accepted."
                  }
                },
                "type": "object"
              }
            ],
            "description": ""
          },
          "fastest_delivery": {
            "example": {
              "time_estimate": {
                "minimum": 15,
                "maximum": 30
              },
              "sales_tax_percent": 10.5,
              "delivery_fee": {
                "delivery_fee_flat": 199,
                "delivery_fee_percent": 0,
                "delivery_fee_taxable": false
              },
              "service_fee": {
                "service_fee_flat": 0,
                "service_fee_percent": 5
              },
              "small_order_fee": {
                "minimum_order_value": 1200,
                "small_order_fee_flat": 200,
                "small_order_fee_percent": 0
              },
              "order_minimum": 0,
              "threshold_fees": [
                {
                  "threshold_cents": 10000,
                  "threshold_fee_cents": 1000
                },
                {
                  "threshold_cents": 20000,
                  "threshold_fee_cents": 2000
                }
              ]
            },
            "allOf": [
              {
                "required": [
                  "accepts_delivery_tip",
                  "accepts_pickup_note",
                  "accepts_pickup_tip",
                  "asap_available",
                  "courier_quote",
                  "delivery_fee",
                  "first_party_quote",
                  "order_minimum",
                  "sales_tax_percent",
                  "service_fee",
                  "small_order_fee",
                  "third_party_quote",
                  "time_estimate"
                ],
                "properties": {
                  "time_estimate": {
                    "description": "",
                    "required": [
                      "maximum",
                      "minimum"
                    ],
                    "properties": {
                      "minimum": {
                        "type": "integer",
                        "description": "Lower bound of delivery time estimate (in minutes)"
                      },
                      "maximum": {
                        "type": "integer",
                        "description": "Upper bound of delivery time estimate (in minutes)"
                      },
                      "scheduled": {
                        "type": "array",
                        "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                        "items": {
                          "required": [
                            "delivery_fee",
                            "maximum",
                            "minimum"
                          ],
                          "properties": {
                            "minimum": {
                              "type": "integer",
                              "description": "Timestamp (seconds since 1970)"
                            },
                            "maximum": {
                              "type": "integer",
                              "description": "Timestamp (seconds since 1970)"
                            },
                            "delivery_fee": {
                              "description": "",
                              "required": [
                                "delivery_fee_flat",
                                "delivery_fee_percent"
                              ],
                              "properties": {
                                "delivery_fee_flat": {
                                  "type": "integer",
                                  "description": "Delivery fee amount in cents"
                                },
                                "delivery_fee_percent": {
                                  "type": "number",
                                  "description": "Delivery fee percentage"
                                },
                                "delivery_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether the delivery fee is taxable or not"
                                },
                                "threshold_fees": {
                                  "type": "array",
                                  "description": "Threshold Fees, if they exist",
                                  "items": {
                                    "required": [
                                      "threshold_cents",
                                      "threshold_fee_cents"
                                    ],
                                    "properties": {
                                      "threshold_cents": {
                                        "type": "integer",
                                        "description": "Subtotal that enacts a specific fee"
                                      },
                                      "threshold_fee_cents": {
                                        "type": "integer",
                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "sales_tax_percent": {
                    "type": "integer",
                    "description": "Sales tax in percentage terms"
                  },
                  "delivery_fee": {
                    "description": "",
                    "required": [
                      "delivery_fee_flat",
                      "delivery_fee_percent"
                    ],
                    "properties": {
                      "delivery_fee_flat": {
                        "type": "integer",
                        "description": "Delivery fee amount in cents"
                      },
                      "delivery_fee_percent": {
                        "type": "number",
                        "description": "Delivery fee percentage"
                      },
                      "delivery_fee_taxable": {
                        "type": "boolean",
                        "description": "Whether the delivery fee is taxable or not"
                      },
                      "threshold_fees": {
                        "type": "array",
                        "description": "Threshold Fees, if they exist",
                        "items": {
                          "required": [
                            "threshold_cents",
                            "threshold_fee_cents"
                          ],
                          "properties": {
                            "threshold_cents": {
                              "type": "integer",
                              "description": "Subtotal that enacts a specific fee"
                            },
                            "threshold_fee_cents": {
                              "type": "integer",
                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "service_fee": {
                    "description": "",
                    "required": [
                      "service_fee_flat",
                      "service_fee_percent"
                    ],
                    "properties": {
                      "service_fee_flat": {
                        "type": "integer",
                        "description": "Service fee amount in cents"
                      },
                      "service_fee_percent": {
                        "type": "number",
                        "description": "Service fee percentage from 0 to 100"
                      },
                      "service_fee_min": {
                        "type": "integer",
                        "description": "Minimum service fee amount in cents"
                      },
                      "service_fee_max": {
                        "type": "integer",
                        "description": "Maximum service fee amount in cents"
                      },
                      "service_fee_taxable": {
                        "type": "boolean",
                        "description": "Whether the service fee is taxable or not"
                      },
                      "threshold_fees": {
                        "type": "array",
                        "description": "Threshold Fees, if they exist",
                        "items": {
                          "required": [
                            "threshold_cents",
                            "threshold_fee_cents"
                          ],
                          "properties": {
                            "threshold_cents": {
                              "type": "integer",
                              "description": "Subtotal that enacts a specific fee"
                            },
                            "threshold_fee_cents": {
                              "type": "integer",
                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "small_order_fee": {
                    "description": "",
                    "required": [
                      "minimum_order_value",
                      "small_order_fee_flat",
                      "small_order_fee_percent"
                    ],
                    "properties": {
                      "minimum_order_value": {
                        "type": "integer",
                        "description": "Minimum amount to not incur small order fee in cents",
                        "example": 0
                      },
                      "small_order_fee_flat": {
                        "type": "integer",
                        "description": "Small order fee amount in cents",
                        "example": 0
                      },
                      "small_order_fee_percent": {
                        "type": "number",
                        "description": "Small order fee percentage",
                        "example": 0
                      }
                    },
                    "type": "object"
                  },
                  "order_minimum": {
                    "type": "integer",
                    "description": "Minimum order amount in cents"
                  },
                  "min_tip": {
                    "type": "integer",
                    "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                  },
                  "asap_available": {
                    "type": "integer",
                    "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                  },
                  "first_party_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by the store"
                  },
                  "third_party_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by a third party service"
                  },
                  "courier_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by a last-mile delivery service."
                  },
                  "accepts_delivery_tip": {
                    "type": "boolean",
                    "description": "Whether a delivery tip is accepted."
                  },
                  "accepts_pickup_tip": {
                    "type": "boolean",
                    "description": "Whether a pickup tip is accepted."
                  },
                  "accepts_pickup_note": {
                    "type": "boolean",
                    "description": "Whether a pickup note is accepted."
                  }
                },
                "type": "object"
              }
            ],
            "description": ""
          },
          "pickup": {
            "example": {
              "time_estimate": {
                "minimum": 5,
                "maximum": 5
              },
              "sales_tax_percent": 10.5,
              "delivery_fee": {
                "delivery_fee_flat": 0,
                "delivery_fee_percent": 0,
                "delivery_fee_taxable": false
              },
              "service_fee": {
                "service_fee_flat": 0,
                "service_fee_percent": 0
              },
              "small_order_fee": {
                "minimum_order_value": 1200,
                "small_order_fee_flat": 200,
                "small_order_fee_percent": 0
              },
              "order_minimum": 100,
              "threshold_fees": []
            },
            "allOf": [
              {
                "required": [
                  "accepts_delivery_tip",
                  "accepts_pickup_note",
                  "accepts_pickup_tip",
                  "asap_available",
                  "courier_quote",
                  "delivery_fee",
                  "first_party_quote",
                  "order_minimum",
                  "sales_tax_percent",
                  "service_fee",
                  "small_order_fee",
                  "third_party_quote",
                  "time_estimate"
                ],
                "properties": {
                  "time_estimate": {
                    "description": "",
                    "required": [
                      "maximum",
                      "minimum"
                    ],
                    "properties": {
                      "minimum": {
                        "type": "integer",
                        "description": "Lower bound of delivery time estimate (in minutes)"
                      },
                      "maximum": {
                        "type": "integer",
                        "description": "Upper bound of delivery time estimate (in minutes)"
                      },
                      "scheduled": {
                        "type": "array",
                        "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                        "items": {
                          "required": [
                            "delivery_fee",
                            "maximum",
                            "minimum"
                          ],
                          "properties": {
                            "minimum": {
                              "type": "integer",
                              "description": "Timestamp (seconds since 1970)"
                            },
                            "maximum": {
                              "type": "integer",
                              "description": "Timestamp (seconds since 1970)"
                            },
                            "delivery_fee": {
                              "description": "",
                              "required": [
                                "delivery_fee_flat",
                                "delivery_fee_percent"
                              ],
                              "properties": {
                                "delivery_fee_flat": {
                                  "type": "integer",
                                  "description": "Delivery fee amount in cents"
                                },
                                "delivery_fee_percent": {
                                  "type": "number",
                                  "description": "Delivery fee percentage"
                                },
                                "delivery_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether the delivery fee is taxable or not"
                                },
                                "threshold_fees": {
                                  "type": "array",
                                  "description": "Threshold Fees, if they exist",
                                  "items": {
                                    "required": [
                                      "threshold_cents",
                                      "threshold_fee_cents"
                                    ],
                                    "properties": {
                                      "threshold_cents": {
                                        "type": "integer",
                                        "description": "Subtotal that enacts a specific fee"
                                      },
                                      "threshold_fee_cents": {
                                        "type": "integer",
                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "sales_tax_percent": {
                    "type": "integer",
                    "description": "Sales tax in percentage terms"
                  },
                  "delivery_fee": {
                    "description": "",
                    "required": [
                      "delivery_fee_flat",
                      "delivery_fee_percent"
                    ],
                    "properties": {
                      "delivery_fee_flat": {
                        "type": "integer",
                        "description": "Delivery fee amount in cents"
                      },
                      "delivery_fee_percent": {
                        "type": "number",
                        "description": "Delivery fee percentage"
                      },
                      "delivery_fee_taxable": {
                        "type": "boolean",
                        "description": "Whether the delivery fee is taxable or not"
                      },
                      "threshold_fees": {
                        "type": "array",
                        "description": "Threshold Fees, if they exist",
                        "items": {
                          "required": [
                            "threshold_cents",
                            "threshold_fee_cents"
                          ],
                          "properties": {
                            "threshold_cents": {
                              "type": "integer",
                              "description": "Subtotal that enacts a specific fee"
                            },
                            "threshold_fee_cents": {
                              "type": "integer",
                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "service_fee": {
                    "description": "",
                    "required": [
                      "service_fee_flat",
                      "service_fee_percent"
                    ],
                    "properties": {
                      "service_fee_flat": {
                        "type": "integer",
                        "description": "Service fee amount in cents"
                      },
                      "service_fee_percent": {
                        "type": "number",
                        "description": "Service fee percentage from 0 to 100"
                      },
                      "service_fee_min": {
                        "type": "integer",
                        "description": "Minimum service fee amount in cents"
                      },
                      "service_fee_max": {
                        "type": "integer",
                        "description": "Maximum service fee amount in cents"
                      },
                      "service_fee_taxable": {
                        "type": "boolean",
                        "description": "Whether the service fee is taxable or not"
                      },
                      "threshold_fees": {
                        "type": "array",
                        "description": "Threshold Fees, if they exist",
                        "items": {
                          "required": [
                            "threshold_cents",
                            "threshold_fee_cents"
                          ],
                          "properties": {
                            "threshold_cents": {
                              "type": "integer",
                              "description": "Subtotal that enacts a specific fee"
                            },
                            "threshold_fee_cents": {
                              "type": "integer",
                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "small_order_fee": {
                    "description": "",
                    "required": [
                      "minimum_order_value",
                      "small_order_fee_flat",
                      "small_order_fee_percent"
                    ],
                    "properties": {
                      "minimum_order_value": {
                        "type": "integer",
                        "description": "Minimum amount to not incur small order fee in cents",
                        "example": 0
                      },
                      "small_order_fee_flat": {
                        "type": "integer",
                        "description": "Small order fee amount in cents",
                        "example": 0
                      },
                      "small_order_fee_percent": {
                        "type": "number",
                        "description": "Small order fee percentage",
                        "example": 0
                      }
                    },
                    "type": "object"
                  },
                  "order_minimum": {
                    "type": "integer",
                    "description": "Minimum order amount in cents"
                  },
                  "min_tip": {
                    "type": "integer",
                    "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                  },
                  "asap_available": {
                    "type": "integer",
                    "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                  },
                  "first_party_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by the store"
                  },
                  "third_party_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by a third party service"
                  },
                  "courier_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by a last-mile delivery service."
                  },
                  "accepts_delivery_tip": {
                    "type": "boolean",
                    "description": "Whether a delivery tip is accepted."
                  },
                  "accepts_pickup_tip": {
                    "type": "boolean",
                    "description": "Whether a pickup tip is accepted."
                  },
                  "accepts_pickup_note": {
                    "type": "boolean",
                    "description": "Whether a pickup note is accepted."
                  }
                },
                "type": "object"
              }
            ],
            "description": ""
          }
        },
        "type": "object"
      },
      "Cheapest_Store_Quote": {
        "required": [
          "accepts_delivery_tip",
          "accepts_pickup_note",
          "accepts_pickup_tip",
          "asap_available",
          "courier_quote",
          "delivery_fee",
          "first_party_quote",
          "order_minimum",
          "sales_tax_percent",
          "service_fee",
          "small_order_fee",
          "third_party_quote",
          "time_estimate"
        ],
        "properties": {
          "time_estimate": {
            "description": "",
            "required": [
              "maximum",
              "minimum"
            ],
            "properties": {
              "minimum": {
                "type": "integer",
                "description": "Lower bound of delivery time estimate (in minutes)"
              },
              "maximum": {
                "type": "integer",
                "description": "Upper bound of delivery time estimate (in minutes)"
              },
              "scheduled": {
                "type": "array",
                "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                "items": {
                  "required": [
                    "delivery_fee",
                    "maximum",
                    "minimum"
                  ],
                  "properties": {
                    "minimum": {
                      "type": "integer",
                      "description": "Timestamp (seconds since 1970)"
                    },
                    "maximum": {
                      "type": "integer",
                      "description": "Timestamp (seconds since 1970)"
                    },
                    "delivery_fee": {
                      "description": "",
                      "required": [
                        "delivery_fee_flat",
                        "delivery_fee_percent"
                      ],
                      "properties": {
                        "delivery_fee_flat": {
                          "type": "integer",
                          "description": "Delivery fee amount in cents"
                        },
                        "delivery_fee_percent": {
                          "type": "number",
                          "description": "Delivery fee percentage"
                        },
                        "delivery_fee_taxable": {
                          "type": "boolean",
                          "description": "Whether the delivery fee is taxable or not"
                        },
                        "threshold_fees": {
                          "type": "array",
                          "description": "Threshold Fees, if they exist",
                          "items": {
                            "required": [
                              "threshold_cents",
                              "threshold_fee_cents"
                            ],
                            "properties": {
                              "threshold_cents": {
                                "type": "integer",
                                "description": "Subtotal that enacts a specific fee"
                              },
                              "threshold_fee_cents": {
                                "type": "integer",
                                "description": "Flat delivery fee that will be charged for this threshold_cents"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          },
          "sales_tax_percent": {
            "type": "integer",
            "description": "Sales tax in percentage terms"
          },
          "delivery_fee": {
            "description": "",
            "required": [
              "delivery_fee_flat",
              "delivery_fee_percent"
            ],
            "properties": {
              "delivery_fee_flat": {
                "type": "integer",
                "description": "Delivery fee amount in cents"
              },
              "delivery_fee_percent": {
                "type": "number",
                "description": "Delivery fee percentage"
              },
              "delivery_fee_taxable": {
                "type": "boolean",
                "description": "Whether the delivery fee is taxable or not"
              },
              "threshold_fees": {
                "type": "array",
                "description": "Threshold Fees, if they exist",
                "items": {
                  "required": [
                    "threshold_cents",
                    "threshold_fee_cents"
                  ],
                  "properties": {
                    "threshold_cents": {
                      "type": "integer",
                      "description": "Subtotal that enacts a specific fee"
                    },
                    "threshold_fee_cents": {
                      "type": "integer",
                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          },
          "service_fee": {
            "description": "",
            "required": [
              "service_fee_flat",
              "service_fee_percent"
            ],
            "properties": {
              "service_fee_flat": {
                "type": "integer",
                "description": "Service fee amount in cents"
              },
              "service_fee_percent": {
                "type": "number",
                "description": "Service fee percentage from 0 to 100"
              },
              "service_fee_min": {
                "type": "integer",
                "description": "Minimum service fee amount in cents"
              },
              "service_fee_max": {
                "type": "integer",
                "description": "Maximum service fee amount in cents"
              },
              "service_fee_taxable": {
                "type": "boolean",
                "description": "Whether the service fee is taxable or not"
              },
              "threshold_fees": {
                "type": "array",
                "description": "Threshold Fees, if they exist",
                "items": {
                  "required": [
                    "threshold_cents",
                    "threshold_fee_cents"
                  ],
                  "properties": {
                    "threshold_cents": {
                      "type": "integer",
                      "description": "Subtotal that enacts a specific fee"
                    },
                    "threshold_fee_cents": {
                      "type": "integer",
                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          },
          "small_order_fee": {
            "description": "",
            "required": [
              "minimum_order_value",
              "small_order_fee_flat",
              "small_order_fee_percent"
            ],
            "properties": {
              "minimum_order_value": {
                "type": "integer",
                "description": "Minimum amount to not incur small order fee in cents",
                "example": 0
              },
              "small_order_fee_flat": {
                "type": "integer",
                "description": "Small order fee amount in cents",
                "example": 0
              },
              "small_order_fee_percent": {
                "type": "number",
                "description": "Small order fee percentage",
                "example": 0
              }
            },
            "type": "object"
          },
          "order_minimum": {
            "type": "integer",
            "description": "Minimum order amount in cents"
          },
          "min_tip": {
            "type": "integer",
            "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
          },
          "asap_available": {
            "type": "integer",
            "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
          },
          "first_party_quote": {
            "type": "boolean",
            "description": "Whether this quote is provided by the store"
          },
          "third_party_quote": {
            "type": "boolean",
            "description": "Whether this quote is provided by a third party service"
          },
          "courier_quote": {
            "type": "boolean",
            "description": "Whether this quote is provided by a last-mile delivery service."
          },
          "accepts_delivery_tip": {
            "type": "boolean",
            "description": "Whether a delivery tip is accepted."
          },
          "accepts_pickup_tip": {
            "type": "boolean",
            "description": "Whether a pickup tip is accepted."
          },
          "accepts_pickup_note": {
            "type": "boolean",
            "description": "Whether a pickup note is accepted."
          }
        },
        "type": "object"
      },
      "Time_Estimate": {
        "required": [
          "maximum",
          "minimum"
        ],
        "properties": {
          "minimum": {
            "type": "integer",
            "description": "Lower bound of delivery time estimate (in minutes)"
          },
          "maximum": {
            "type": "integer",
            "description": "Upper bound of delivery time estimate (in minutes)"
          },
          "scheduled": {
            "type": "array",
            "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
            "items": {
              "required": [
                "delivery_fee",
                "maximum",
                "minimum"
              ],
              "properties": {
                "minimum": {
                  "type": "integer",
                  "description": "Timestamp (seconds since 1970)"
                },
                "maximum": {
                  "type": "integer",
                  "description": "Timestamp (seconds since 1970)"
                },
                "delivery_fee": {
                  "description": "",
                  "required": [
                    "delivery_fee_flat",
                    "delivery_fee_percent"
                  ],
                  "properties": {
                    "delivery_fee_flat": {
                      "type": "integer",
                      "description": "Delivery fee amount in cents"
                    },
                    "delivery_fee_percent": {
                      "type": "number",
                      "description": "Delivery fee percentage"
                    },
                    "delivery_fee_taxable": {
                      "type": "boolean",
                      "description": "Whether the delivery fee is taxable or not"
                    },
                    "threshold_fees": {
                      "type": "array",
                      "description": "Threshold Fees, if they exist",
                      "items": {
                        "required": [
                          "threshold_cents",
                          "threshold_fee_cents"
                        ],
                        "properties": {
                          "threshold_cents": {
                            "type": "integer",
                            "description": "Subtotal that enacts a specific fee"
                          },
                          "threshold_fee_cents": {
                            "type": "integer",
                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Scheduled_Time": {
        "required": [
          "delivery_fee",
          "maximum",
          "minimum"
        ],
        "properties": {
          "minimum": {
            "type": "integer",
            "description": "Timestamp (seconds since 1970)"
          },
          "maximum": {
            "type": "integer",
            "description": "Timestamp (seconds since 1970)"
          },
          "delivery_fee": {
            "description": "",
            "required": [
              "delivery_fee_flat",
              "delivery_fee_percent"
            ],
            "properties": {
              "delivery_fee_flat": {
                "type": "integer",
                "description": "Delivery fee amount in cents"
              },
              "delivery_fee_percent": {
                "type": "number",
                "description": "Delivery fee percentage"
              },
              "delivery_fee_taxable": {
                "type": "boolean",
                "description": "Whether the delivery fee is taxable or not"
              },
              "threshold_fees": {
                "type": "array",
                "description": "Threshold Fees, if they exist",
                "items": {
                  "required": [
                    "threshold_cents",
                    "threshold_fee_cents"
                  ],
                  "properties": {
                    "threshold_cents": {
                      "type": "integer",
                      "description": "Subtotal that enacts a specific fee"
                    },
                    "threshold_fee_cents": {
                      "type": "integer",
                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Delivery_Fee_Estimate": {
        "required": [
          "delivery_fee_flat",
          "delivery_fee_percent"
        ],
        "properties": {
          "delivery_fee_flat": {
            "type": "integer",
            "description": "Delivery fee amount in cents"
          },
          "delivery_fee_percent": {
            "type": "number",
            "description": "Delivery fee percentage"
          },
          "delivery_fee_taxable": {
            "type": "boolean",
            "description": "Whether the delivery fee is taxable or not"
          },
          "threshold_fees": {
            "type": "array",
            "description": "Threshold Fees, if they exist",
            "items": {
              "required": [
                "threshold_cents",
                "threshold_fee_cents"
              ],
              "properties": {
                "threshold_cents": {
                  "type": "integer",
                  "description": "Subtotal that enacts a specific fee"
                },
                "threshold_fee_cents": {
                  "type": "integer",
                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Threshold_Fee": {
        "required": [
          "threshold_cents",
          "threshold_fee_cents"
        ],
        "properties": {
          "threshold_cents": {
            "type": "integer",
            "description": "Subtotal that enacts a specific fee"
          },
          "threshold_fee_cents": {
            "type": "integer",
            "description": "Flat delivery fee that will be charged for this threshold_cents"
          }
        },
        "type": "object"
      },
      "Service_Fee_Estimate": {
        "required": [
          "service_fee_flat",
          "service_fee_percent"
        ],
        "properties": {
          "service_fee_flat": {
            "type": "integer",
            "description": "Service fee amount in cents"
          },
          "service_fee_percent": {
            "type": "number",
            "description": "Service fee percentage from 0 to 100"
          },
          "service_fee_min": {
            "type": "integer",
            "description": "Minimum service fee amount in cents"
          },
          "service_fee_max": {
            "type": "integer",
            "description": "Maximum service fee amount in cents"
          },
          "service_fee_taxable": {
            "type": "boolean",
            "description": "Whether the service fee is taxable or not"
          },
          "threshold_fees": {
            "type": "array",
            "description": "Threshold Fees, if they exist",
            "items": {
              "required": [
                "threshold_cents",
                "threshold_fee_cents"
              ],
              "properties": {
                "threshold_cents": {
                  "type": "integer",
                  "description": "Subtotal that enacts a specific fee"
                },
                "threshold_fee_cents": {
                  "type": "integer",
                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Small_Order_Fee_Estimate": {
        "required": [
          "minimum_order_value",
          "small_order_fee_flat",
          "small_order_fee_percent"
        ],
        "properties": {
          "minimum_order_value": {
            "type": "integer",
            "description": "Minimum amount to not incur small order fee in cents",
            "example": 0
          },
          "small_order_fee_flat": {
            "type": "integer",
            "description": "Small order fee amount in cents",
            "example": 0
          },
          "small_order_fee_percent": {
            "type": "number",
            "description": "Small order fee percentage",
            "example": 0
          }
        },
        "type": "object"
      },
      "Fastest_Store_Quote": {
        "required": [
          "accepts_delivery_tip",
          "accepts_pickup_note",
          "accepts_pickup_tip",
          "asap_available",
          "courier_quote",
          "delivery_fee",
          "first_party_quote",
          "order_minimum",
          "sales_tax_percent",
          "service_fee",
          "small_order_fee",
          "third_party_quote",
          "time_estimate"
        ],
        "properties": {
          "time_estimate": {
            "description": "",
            "required": [
              "maximum",
              "minimum"
            ],
            "properties": {
              "minimum": {
                "type": "integer",
                "description": "Lower bound of delivery time estimate (in minutes)"
              },
              "maximum": {
                "type": "integer",
                "description": "Upper bound of delivery time estimate (in minutes)"
              },
              "scheduled": {
                "type": "array",
                "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                "items": {
                  "required": [
                    "delivery_fee",
                    "maximum",
                    "minimum"
                  ],
                  "properties": {
                    "minimum": {
                      "type": "integer",
                      "description": "Timestamp (seconds since 1970)"
                    },
                    "maximum": {
                      "type": "integer",
                      "description": "Timestamp (seconds since 1970)"
                    },
                    "delivery_fee": {
                      "description": "",
                      "required": [
                        "delivery_fee_flat",
                        "delivery_fee_percent"
                      ],
                      "properties": {
                        "delivery_fee_flat": {
                          "type": "integer",
                          "description": "Delivery fee amount in cents"
                        },
                        "delivery_fee_percent": {
                          "type": "number",
                          "description": "Delivery fee percentage"
                        },
                        "delivery_fee_taxable": {
                          "type": "boolean",
                          "description": "Whether the delivery fee is taxable or not"
                        },
                        "threshold_fees": {
                          "type": "array",
                          "description": "Threshold Fees, if they exist",
                          "items": {
                            "required": [
                              "threshold_cents",
                              "threshold_fee_cents"
                            ],
                            "properties": {
                              "threshold_cents": {
                                "type": "integer",
                                "description": "Subtotal that enacts a specific fee"
                              },
                              "threshold_fee_cents": {
                                "type": "integer",
                                "description": "Flat delivery fee that will be charged for this threshold_cents"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          },
          "sales_tax_percent": {
            "type": "integer",
            "description": "Sales tax in percentage terms"
          },
          "delivery_fee": {
            "description": "",
            "required": [
              "delivery_fee_flat",
              "delivery_fee_percent"
            ],
            "properties": {
              "delivery_fee_flat": {
                "type": "integer",
                "description": "Delivery fee amount in cents"
              },
              "delivery_fee_percent": {
                "type": "number",
                "description": "Delivery fee percentage"
              },
              "delivery_fee_taxable": {
                "type": "boolean",
                "description": "Whether the delivery fee is taxable or not"
              },
              "threshold_fees": {
                "type": "array",
                "description": "Threshold Fees, if they exist",
                "items": {
                  "required": [
                    "threshold_cents",
                    "threshold_fee_cents"
                  ],
                  "properties": {
                    "threshold_cents": {
                      "type": "integer",
                      "description": "Subtotal that enacts a specific fee"
                    },
                    "threshold_fee_cents": {
                      "type": "integer",
                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          },
          "service_fee": {
            "description": "",
            "required": [
              "service_fee_flat",
              "service_fee_percent"
            ],
            "properties": {
              "service_fee_flat": {
                "type": "integer",
                "description": "Service fee amount in cents"
              },
              "service_fee_percent": {
                "type": "number",
                "description": "Service fee percentage from 0 to 100"
              },
              "service_fee_min": {
                "type": "integer",
                "description": "Minimum service fee amount in cents"
              },
              "service_fee_max": {
                "type": "integer",
                "description": "Maximum service fee amount in cents"
              },
              "service_fee_taxable": {
                "type": "boolean",
                "description": "Whether the service fee is taxable or not"
              },
              "threshold_fees": {
                "type": "array",
                "description": "Threshold Fees, if they exist",
                "items": {
                  "required": [
                    "threshold_cents",
                    "threshold_fee_cents"
                  ],
                  "properties": {
                    "threshold_cents": {
                      "type": "integer",
                      "description": "Subtotal that enacts a specific fee"
                    },
                    "threshold_fee_cents": {
                      "type": "integer",
                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          },
          "small_order_fee": {
            "description": "",
            "required": [
              "minimum_order_value",
              "small_order_fee_flat",
              "small_order_fee_percent"
            ],
            "properties": {
              "minimum_order_value": {
                "type": "integer",
                "description": "Minimum amount to not incur small order fee in cents",
                "example": 0
              },
              "small_order_fee_flat": {
                "type": "integer",
                "description": "Small order fee amount in cents",
                "example": 0
              },
              "small_order_fee_percent": {
                "type": "number",
                "description": "Small order fee percentage",
                "example": 0
              }
            },
            "type": "object"
          },
          "order_minimum": {
            "type": "integer",
            "description": "Minimum order amount in cents"
          },
          "min_tip": {
            "type": "integer",
            "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
          },
          "asap_available": {
            "type": "integer",
            "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
          },
          "first_party_quote": {
            "type": "boolean",
            "description": "Whether this quote is provided by the store"
          },
          "third_party_quote": {
            "type": "boolean",
            "description": "Whether this quote is provided by a third party service"
          },
          "courier_quote": {
            "type": "boolean",
            "description": "Whether this quote is provided by a last-mile delivery service."
          },
          "accepts_delivery_tip": {
            "type": "boolean",
            "description": "Whether a delivery tip is accepted."
          },
          "accepts_pickup_tip": {
            "type": "boolean",
            "description": "Whether a pickup tip is accepted."
          },
          "accepts_pickup_note": {
            "type": "boolean",
            "description": "Whether a pickup note is accepted."
          }
        },
        "type": "object"
      },
      "Pickup_Store": {
        "required": [
          "accepts_delivery_tip",
          "accepts_pickup_note",
          "accepts_pickup_tip",
          "asap_available",
          "courier_quote",
          "delivery_fee",
          "first_party_quote",
          "order_minimum",
          "sales_tax_percent",
          "service_fee",
          "small_order_fee",
          "third_party_quote",
          "time_estimate"
        ],
        "properties": {
          "time_estimate": {
            "description": "",
            "required": [
              "maximum",
              "minimum"
            ],
            "properties": {
              "minimum": {
                "type": "integer",
                "description": "Lower bound of delivery time estimate (in minutes)"
              },
              "maximum": {
                "type": "integer",
                "description": "Upper bound of delivery time estimate (in minutes)"
              },
              "scheduled": {
                "type": "array",
                "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                "items": {
                  "required": [
                    "delivery_fee",
                    "maximum",
                    "minimum"
                  ],
                  "properties": {
                    "minimum": {
                      "type": "integer",
                      "description": "Timestamp (seconds since 1970)"
                    },
                    "maximum": {
                      "type": "integer",
                      "description": "Timestamp (seconds since 1970)"
                    },
                    "delivery_fee": {
                      "description": "",
                      "required": [
                        "delivery_fee_flat",
                        "delivery_fee_percent"
                      ],
                      "properties": {
                        "delivery_fee_flat": {
                          "type": "integer",
                          "description": "Delivery fee amount in cents"
                        },
                        "delivery_fee_percent": {
                          "type": "number",
                          "description": "Delivery fee percentage"
                        },
                        "delivery_fee_taxable": {
                          "type": "boolean",
                          "description": "Whether the delivery fee is taxable or not"
                        },
                        "threshold_fees": {
                          "type": "array",
                          "description": "Threshold Fees, if they exist",
                          "items": {
                            "required": [
                              "threshold_cents",
                              "threshold_fee_cents"
                            ],
                            "properties": {
                              "threshold_cents": {
                                "type": "integer",
                                "description": "Subtotal that enacts a specific fee"
                              },
                              "threshold_fee_cents": {
                                "type": "integer",
                                "description": "Flat delivery fee that will be charged for this threshold_cents"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          },
          "sales_tax_percent": {
            "type": "integer",
            "description": "Sales tax in percentage terms"
          },
          "delivery_fee": {
            "description": "",
            "required": [
              "delivery_fee_flat",
              "delivery_fee_percent"
            ],
            "properties": {
              "delivery_fee_flat": {
                "type": "integer",
                "description": "Delivery fee amount in cents"
              },
              "delivery_fee_percent": {
                "type": "number",
                "description": "Delivery fee percentage"
              },
              "delivery_fee_taxable": {
                "type": "boolean",
                "description": "Whether the delivery fee is taxable or not"
              },
              "threshold_fees": {
                "type": "array",
                "description": "Threshold Fees, if they exist",
                "items": {
                  "required": [
                    "threshold_cents",
                    "threshold_fee_cents"
                  ],
                  "properties": {
                    "threshold_cents": {
                      "type": "integer",
                      "description": "Subtotal that enacts a specific fee"
                    },
                    "threshold_fee_cents": {
                      "type": "integer",
                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          },
          "service_fee": {
            "description": "",
            "required": [
              "service_fee_flat",
              "service_fee_percent"
            ],
            "properties": {
              "service_fee_flat": {
                "type": "integer",
                "description": "Service fee amount in cents"
              },
              "service_fee_percent": {
                "type": "number",
                "description": "Service fee percentage from 0 to 100"
              },
              "service_fee_min": {
                "type": "integer",
                "description": "Minimum service fee amount in cents"
              },
              "service_fee_max": {
                "type": "integer",
                "description": "Maximum service fee amount in cents"
              },
              "service_fee_taxable": {
                "type": "boolean",
                "description": "Whether the service fee is taxable or not"
              },
              "threshold_fees": {
                "type": "array",
                "description": "Threshold Fees, if they exist",
                "items": {
                  "required": [
                    "threshold_cents",
                    "threshold_fee_cents"
                  ],
                  "properties": {
                    "threshold_cents": {
                      "type": "integer",
                      "description": "Subtotal that enacts a specific fee"
                    },
                    "threshold_fee_cents": {
                      "type": "integer",
                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          },
          "small_order_fee": {
            "description": "",
            "required": [
              "minimum_order_value",
              "small_order_fee_flat",
              "small_order_fee_percent"
            ],
            "properties": {
              "minimum_order_value": {
                "type": "integer",
                "description": "Minimum amount to not incur small order fee in cents",
                "example": 0
              },
              "small_order_fee_flat": {
                "type": "integer",
                "description": "Small order fee amount in cents",
                "example": 0
              },
              "small_order_fee_percent": {
                "type": "number",
                "description": "Small order fee percentage",
                "example": 0
              }
            },
            "type": "object"
          },
          "order_minimum": {
            "type": "integer",
            "description": "Minimum order amount in cents"
          },
          "min_tip": {
            "type": "integer",
            "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
          },
          "asap_available": {
            "type": "integer",
            "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
          },
          "first_party_quote": {
            "type": "boolean",
            "description": "Whether this quote is provided by the store"
          },
          "third_party_quote": {
            "type": "boolean",
            "description": "Whether this quote is provided by a third party service"
          },
          "courier_quote": {
            "type": "boolean",
            "description": "Whether this quote is provided by a last-mile delivery service."
          },
          "accepts_delivery_tip": {
            "type": "boolean",
            "description": "Whether a delivery tip is accepted."
          },
          "accepts_pickup_tip": {
            "type": "boolean",
            "description": "Whether a pickup tip is accepted."
          },
          "accepts_pickup_note": {
            "type": "boolean",
            "description": "Whether a pickup note is accepted."
          }
        },
        "type": "object"
      },
      "Store_Quote_Types": {
        "properties": {
          "<quote id>": {
            "type": "array",
            "description": "The list of quote types available for this quote id.",
            "items": {
              "type": "string",
              "description": "Quote Type",
              "example": "pickup",
              "enum": [
                "pickup",
                "delivery"
              ]
            }
          }
        },
        "type": "object"
      },
      "Too_Many_Requests": {
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "The encountered rate limit description.",
            "example": "10 per 1 second(s)!"
          }
        },
        "type": "object"
      },
      "Product_Search_Output": {
        "required": [
          "products"
        ],
        "properties": {
          "products": {
            "type": "array",
            "description": "List of products search results.",
            "example": [
              {
                "product_id": "gAAAAABjD4hRaWDKhhS8okjGe6IaTgyAQv0XOlKhc96dV4qi-4pOrDD35WaT6sTUCVM6OrOpZTb2sOSt5QREX1WT_KoAqbZiJ-4ZAAdUV6_95pkhth9eysrJizKARzmY53wE8k9UI3Otp5xaAIU_YS45dxKXgZuRDjnf5vW-1UM4puerH4hqKCajZHK4plg8n_WQitF8om0RCKfghwRxOb6GOgh7bfs4LI0kQ_BGFwFUh6QY8704S1z6G3yoA8p_eL3Ac7QMCRFqTKCHIgYmLFzPsuv091nQ19yQy5tCpW6kRU5Mh9MKGqRiSzO7TgYa-f5MZmsM1-oCX-jLqej3nWeR9hYEyR4y_4T5qgEiE6qJGadIaAgNayPRiLh2nwTSl5JhD7ifd3zg_Rryxwk06wkLsWGrJqkc6i5GDUS-qlUVH4DiCKhYMFw2PtbxdBiRVOBPmycm7Iry7bk6FK2b_xAJZ4ibkX1GrHtNvGF-U-8qNrCrKBDGmmT-Iu6ZrXpypV-TV5SAofkbopOOf9wWHNo1QL2SOSivmtkgUNY5iBs1VvQn9Ngv70gk-skTfjb8aemXDCAuEGf8v5sV54NFm6GQ-kgoDJ-YENIAMNCURSFRXoe3zbNvtZdHZdSan7AA0d88UVIsXbVMVC6JB8wqjKjptoSHuYfbSBNX6EyVQwJDXKjybAkNvmf1XROEU1K48oRmqM6W7ur0PimzbzdpNcIAztNzCYQlGP0_ka7jsy0IsIQpEG18HIT-Cb_JujHGEAdwKzLGAoKRV6oQlDtzPN9udT9AJA9K4MZIC-DNTmdt85iIIKAQJvpFKoi4jm0sZGGqEd5zj1sYvDVApH2p9ji86Lt4-Zfp9i_EWtroORr9pXWbAU7wvPXKyY7IWr8GGHA8ubVJgWZYOGX04EbtGBCRWKT95I-Wr4rv-Tk-eBOv9W5373vetz2V0zXG_PYuSq7bPRmxzuHzV6B6nGr-jvMsAdKgjo0Izi5u3hYtKGt21kgoRoatS4krvoV1mp9fY9rC8XlXImrEYw68GzBl1ud0rB8XKHL4uQ==",
                "item_name": "Iced Coffee",
                "image": "https://cdn-img.mealme.ai/ebae3c8ec46eddc4606601fd1b99df9ca83a489e/68747470733a2f2f636e2d67656f312e756265722e636f6d2f696d6167652d70726f632f726573697a652f656174732f666f726d61743d776562702f77696474683d3234302f6865696768743d3139322f7175616c6974793d37302f7372636236343d6148523063484d364c79396b4d584a6862484e765a323571626d637a4e79356a624739315a475a79623235304c6d356c644338334f44526d5a6d45354d6930304d474e6d4c54526b5a6a49744f4468694f4330334f54526c597a46694e4467345a545175616e426c5a773d3d",
                "description": "Freshly brewed Starbucks® Iced Coffee Blend served chilled and sweetened over ice. An absolutely, seriously, refreshingly lift to any day.",
                "category": "Cold Coffees",
                "price": 520,
                "formatted_price": "$5.20",
                "upc_codes": [],
                "unit_size": "16",
                "unit_of_measurement": "oz",
                "attributes": [
                  "Lactose-Free"
                ],
                "should_fetch_customizations": true,
                "menu_id": "gAAAAABjD4hRxqPQieZ3Gc8e4wx0prYJ3vESaBWuS4hQI3tjbvlHzqMV8lwllOiZ_MDJzG6HW7Qf_afnFR_onCrrgU8aNLuR9tI-O3O_qYoTeplDs4ZG1J67U41sTwrpV_7AUxS6o7CXOj5gWm8NTK23jZQ7hSfdrq4BZD3qWrvwsmvGoHegs7pOTExzAL0okJIyGPUtmII8S3_YcGbf66P8rwh4d8AmqJuyZR3mmaCfcJvq7xD6hRQAolyeJclgQmL84-Yles_XNFjPxi-Za5EM1V9OjkqaZ0P-V8uuaivXvLR3dcKCHRl8g-mFOnwpAULLn0zsyFn2MkChPGIvLFHucSdn2eUP2nk90SY1diWqE0DB7y90It8CrUQFSL0SLX8TgORqkl6J6ErzhSl8yAx7KSwKC9vPqA==",
                "grand_total": 1201,
                "quote": {
                  "time_estimate": {
                    "minimum": 20,
                    "maximum": 35
                  },
                  "sales_tax_percent": 8.02,
                  "order_minimum": 0,
                  "delivery_fee": {
                    "delivery_fee_flat": 199,
                    "delivery_fee_percent": 0,
                    "delivery_fee_taxable": false,
                    "threshold_fees": []
                  },
                  "service_fee": {
                    "service_fee_flat": 345,
                    "service_fee_percent": 18.18,
                    "service_fee_min": 286,
                    "service_fee_max": 900,
                    "service_fee_taxable": false
                  },
                  "small_order_fee": {
                    "minimum_order_value": 0,
                    "small_order_fee_flat": 0,
                    "small_order_fee_percent": 0
                  },
                  "address": {
                    "street_num": "2727",
                    "street_name": "Mariposa St",
                    "city": "San Francisco",
                    "zipcode": "94110",
                    "state": "CA",
                    "country": "US"
                  }
                },
                "store": {
                  "_id": "41a7fdd5-b766-5a0a-8562-9006ab6df957",
                  "name": "Starbucks",
                  "phone_number": 14155522649,
                  "address": {
                    "street_addr": "2727 Mariposa St",
                    "city": "San Francisco",
                    "state": "CA",
                    "zipcode": "94110",
                    "country": "US",
                    "street_addr_2": "",
                    "latitude": 37.7628973,
                    "longitude": -122.4104542
                  },
                  "type": "restaurant",
                  "description": "Freshly brewed Starbucks® Iced Coffee Blend served chilled and sweetened over ice. An absolutely, seriously, refreshingly lift to any day.",
                  "local_hours": {
                    "operational": {
                      "Monday": "06:00AM - 05:00PM",
                      "Tuesday": "04:00AM - 09:00PM",
                      "Wednesday": "04:00AM - 09:00PM",
                      "Thursday": "04:00AM - 09:00PM",
                      "Friday": "04:00AM - 09:00PM",
                      "Saturday": "05:00AM - 09:00PM",
                      "Sunday": "05:00AM - 09:00PM"
                    },
                    "delivery": {
                      "Monday": "06:00AM - 05:00PM",
                      "Tuesday": "04:00AM - 09:00PM",
                      "Wednesday": "04:00AM - 09:00PM",
                      "Thursday": "04:00AM - 09:00PM",
                      "Friday": "04:00AM - 09:00PM",
                      "Saturday": "05:00AM - 09:00PM",
                      "Sunday": "05:00AM - 09:00PM"
                    },
                    "pickup": {
                      "Monday": "Closed",
                      "Tuesday": "Closed",
                      "Wednesday": "Closed",
                      "Thursday": "Closed",
                      "Friday": "Closed",
                      "Saturday": "Closed",
                      "Sunday": "Closed"
                    },
                    "dine_in": {
                      "Monday": "06:00AM - 05:00PM",
                      "Tuesday": "04:00AM - 09:00PM",
                      "Wednesday": "04:00AM - 09:00PM",
                      "Thursday": "04:00AM - 09:00PM",
                      "Friday": "04:00AM - 09:00PM",
                      "Saturday": "05:00AM - 09:00PM",
                      "Sunday": "05:00AM - 09:00PM"
                    }
                  },
                  "dollar_signs": 1,
                  "pickup_enabled": false,
                  "delivery_enabled": true,
                  "is_open": true,
                  "offers_first_party_delivery": false,
                  "offers_third_party_delivery": false,
                  "miles": 1.4900872190894556,
                  "weighted_rating_value": 4.7,
                  "aggregated_rating_count": 100
                }
              }
            ],
            "items": {
              "required": [
                "attributes",
                "category",
                "description",
                "formatted_price",
                "grand_total",
                "image",
                "item_name",
                "menu_id",
                "original_price",
                "price",
                "product_id",
                "should_fetch_customizations",
                "store",
                "unit_of_measurement",
                "unit_size"
              ],
              "properties": {
                "product_id": {
                  "type": "string",
                  "description": "The MealMe Product ID",
                  "example": "gAAAAABisq4zaclbhj_pOLJMMtsoUeXun4JmapdfWpLqz9fhel7ZMl7tTllTGm5X2it5sIZpV7mj2S0aEfnWNBXBK3jDgZa4p--8vIjQx1lHZZC6S6k1FOqhMfLs297PoA_uJoUZ-E7igoEubdjyNkER0YXjGogmhkdBiFyVVGLVONl_UW0PjHGVv1DzVxSLtNJn7INvtvH4YXi4_cgvIU8AVBMbuoJyOqvDgQRz6AWfnFzfOdF5fJEjesmcJitEcVZ_cvLRN8yourkHE8p08Y6DpsjrGLs23XA-_T-U5u9HMbmjjG9_IME-9Kvq8ZA5WQzS43dpT47pHgCG2KY5MnGxYg-ZYGUUC5im3UACmY0I6yzkR8iNGMf5KovQtTDbGLgKe_a6oHZdh6Y6I_8gi5Zj-1VligOu1rCAlVsb8WPxvs469p3ns72T-1J_t5KE1KHJ1iqgkTTX_G0ec5rREABOzMo0D8NpCaPdTjdb04mxHpvxcarQrQhu8qkz6vRlEWZEk5QOaano99_fJtFIodU6ymSbCFLyucNj3XA8EUyco-fjZfaUvzs="
                },
                "item_name": {
                  "type": "string",
                  "description": "The item's name",
                  "example": "Iced Black Coffee"
                },
                "image": {
                  "type": "string",
                  "description": "Image of the item, if it exists",
                  "example": "https://cdn-img.mealme.ai/502b9e3a38d1395352faccd16d6daa2f667268d2/68747470733a2f2f64326c6e72356d6861376279636a2e636c6f756466726f6e742e6e65742f70726f647563742d696d6167652f66696c652f6c617267655f64356163336130302d386566392d343461662d396537632d3436383163386632316239662e706e67"
                },
                "description": {
                  "type": "string",
                  "description": "The item's description",
                  "example": "Our Classic Beverage!"
                },
                "category": {
                  "type": "string",
                  "description": "The item's category",
                  "example": "Cold Coffees"
                },
                "price": {
                  "type": "integer",
                  "description": "The item's base price in cents",
                  "example": 500
                },
                "formatted_price": {
                  "type": "string",
                  "description": "This product's price formatted in the store's accepted currency",
                  "example": "$5.00"
                },
                "original_price": {
                  "type": "integer",
                  "description": "The product's original price. This will only be available if the product is currently on sale.",
                  "example": 700
                },
                "upc_codes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The list of upc codes for this product",
                    "example": [
                      "1234"
                    ]
                  },
                  "description": ""
                },
                "unit_size": {
                  "type": "number",
                  "description": "The unit size for this product",
                  "example": 12
                },
                "unit_of_measurement": {
                  "type": "string",
                  "description": "The unit of measurement used to measure the product's size (i.e. oz, lb, L, gal)",
                  "example": "oz"
                },
                "should_fetch_customizations": {
                  "type": "boolean",
                  "description": "Whether a request should be made to `/restaurants/details/product` to fetch customizations",
                  "example": true
                },
                "attributes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The list of dietary preferences for this product.",
                    "example": [
                      "Lactose-Free"
                    ]
                  },
                  "description": ""
                },
                "menu_id": {
                  "type": "string",
                  "description": "The product's menu ID",
                  "example": "gAAAAABisq4zjEh2BFV35vfjge4ZVQDyoBFZN-QvjUdpvEqBG5d4YSAwfBZ2oY3yQFdS3K7WyLnxuVPPhd5RlKwMGlQD3YpKCf9gzsBe6YcvzUD2mGoFR7Ucg8DT8OT1MkV_NkBKqPQ2YCFCGhGECsWfSatARHatM8XmN3oeTO7vNRQxoePbZxt0J_WMg7n24-kvMERLbtVpimIARjqu6AwVZ5yjr98TUWzP0rvQYQIUqCKHXPuxqW8NhEi0nPp2B_g10hCAkzPB6yYDvUTf-cp9VM9LXPXn6rtF3JherT-kBHwOE_Zh9ZAzZlqvnxl890Z-InD5h8Rw"
                },
                "grand_total": {
                  "type": "integer",
                  "description": "The grand total in cents for this product, including any fees if `fetch_quotes=true`",
                  "example": 500
                },
                "quote": {
                  "description": "",
                  "required": [
                    "accepts_delivery_tip",
                    "accepts_pickup_note",
                    "accepts_pickup_tip",
                    "asap_available",
                    "courier_quote",
                    "delivery_fee",
                    "first_party_quote",
                    "order_minimum",
                    "sales_tax_percent",
                    "service_fee",
                    "small_order_fee",
                    "third_party_quote",
                    "time_estimate"
                  ],
                  "properties": {
                    "time_estimate": {
                      "description": "",
                      "required": [
                        "maximum",
                        "minimum"
                      ],
                      "properties": {
                        "minimum": {
                          "type": "integer",
                          "description": "Lower bound of delivery time estimate (in minutes)"
                        },
                        "maximum": {
                          "type": "integer",
                          "description": "Upper bound of delivery time estimate (in minutes)"
                        },
                        "scheduled": {
                          "type": "array",
                          "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                          "items": {
                            "required": [
                              "delivery_fee",
                              "maximum",
                              "minimum"
                            ],
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "description": "Timestamp (seconds since 1970)"
                              },
                              "maximum": {
                                "type": "integer",
                                "description": "Timestamp (seconds since 1970)"
                              },
                              "delivery_fee": {
                                "description": "",
                                "required": [
                                  "delivery_fee_flat",
                                  "delivery_fee_percent"
                                ],
                                "properties": {
                                  "delivery_fee_flat": {
                                    "type": "integer",
                                    "description": "Delivery fee amount in cents"
                                  },
                                  "delivery_fee_percent": {
                                    "type": "number",
                                    "description": "Delivery fee percentage"
                                  },
                                  "delivery_fee_taxable": {
                                    "type": "boolean",
                                    "description": "Whether the delivery fee is taxable or not"
                                  },
                                  "threshold_fees": {
                                    "type": "array",
                                    "description": "Threshold Fees, if they exist",
                                    "items": {
                                      "required": [
                                        "threshold_cents",
                                        "threshold_fee_cents"
                                      ],
                                      "properties": {
                                        "threshold_cents": {
                                          "type": "integer",
                                          "description": "Subtotal that enacts a specific fee"
                                        },
                                        "threshold_fee_cents": {
                                          "type": "integer",
                                          "description": "Flat delivery fee that will be charged for this threshold_cents"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "sales_tax_percent": {
                      "type": "integer",
                      "description": "Sales tax in percentage terms"
                    },
                    "delivery_fee": {
                      "description": "",
                      "required": [
                        "delivery_fee_flat",
                        "delivery_fee_percent"
                      ],
                      "properties": {
                        "delivery_fee_flat": {
                          "type": "integer",
                          "description": "Delivery fee amount in cents"
                        },
                        "delivery_fee_percent": {
                          "type": "number",
                          "description": "Delivery fee percentage"
                        },
                        "delivery_fee_taxable": {
                          "type": "boolean",
                          "description": "Whether the delivery fee is taxable or not"
                        },
                        "threshold_fees": {
                          "type": "array",
                          "description": "Threshold Fees, if they exist",
                          "items": {
                            "required": [
                              "threshold_cents",
                              "threshold_fee_cents"
                            ],
                            "properties": {
                              "threshold_cents": {
                                "type": "integer",
                                "description": "Subtotal that enacts a specific fee"
                              },
                              "threshold_fee_cents": {
                                "type": "integer",
                                "description": "Flat delivery fee that will be charged for this threshold_cents"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "service_fee": {
                      "description": "",
                      "required": [
                        "service_fee_flat",
                        "service_fee_percent"
                      ],
                      "properties": {
                        "service_fee_flat": {
                          "type": "integer",
                          "description": "Service fee amount in cents"
                        },
                        "service_fee_percent": {
                          "type": "number",
                          "description": "Service fee percentage from 0 to 100"
                        },
                        "service_fee_min": {
                          "type": "integer",
                          "description": "Minimum service fee amount in cents"
                        },
                        "service_fee_max": {
                          "type": "integer",
                          "description": "Maximum service fee amount in cents"
                        },
                        "service_fee_taxable": {
                          "type": "boolean",
                          "description": "Whether the service fee is taxable or not"
                        },
                        "threshold_fees": {
                          "type": "array",
                          "description": "Threshold Fees, if they exist",
                          "items": {
                            "required": [
                              "threshold_cents",
                              "threshold_fee_cents"
                            ],
                            "properties": {
                              "threshold_cents": {
                                "type": "integer",
                                "description": "Subtotal that enacts a specific fee"
                              },
                              "threshold_fee_cents": {
                                "type": "integer",
                                "description": "Flat delivery fee that will be charged for this threshold_cents"
                              }
                            },
                            "type": "object"
                          }
                        }
                      },
                      "type": "object"
                    },
                    "small_order_fee": {
                      "description": "",
                      "required": [
                        "minimum_order_value",
                        "small_order_fee_flat",
                        "small_order_fee_percent"
                      ],
                      "properties": {
                        "minimum_order_value": {
                          "type": "integer",
                          "description": "Minimum amount to not incur small order fee in cents",
                          "example": 0
                        },
                        "small_order_fee_flat": {
                          "type": "integer",
                          "description": "Small order fee amount in cents",
                          "example": 0
                        },
                        "small_order_fee_percent": {
                          "type": "number",
                          "description": "Small order fee percentage",
                          "example": 0
                        }
                      },
                      "type": "object"
                    },
                    "order_minimum": {
                      "type": "integer",
                      "description": "Minimum order amount in cents"
                    },
                    "min_tip": {
                      "type": "integer",
                      "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                    },
                    "asap_available": {
                      "type": "integer",
                      "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                    },
                    "first_party_quote": {
                      "type": "boolean",
                      "description": "Whether this quote is provided by the store"
                    },
                    "third_party_quote": {
                      "type": "boolean",
                      "description": "Whether this quote is provided by a third party service"
                    },
                    "courier_quote": {
                      "type": "boolean",
                      "description": "Whether this quote is provided by a last-mile delivery service."
                    },
                    "accepts_delivery_tip": {
                      "type": "boolean",
                      "description": "Whether a delivery tip is accepted."
                    },
                    "accepts_pickup_tip": {
                      "type": "boolean",
                      "description": "Whether a pickup tip is accepted."
                    },
                    "accepts_pickup_note": {
                      "type": "boolean",
                      "description": "Whether a pickup note is accepted."
                    }
                  },
                  "type": "object"
                },
                "store": {
                  "required": [
                    "_id",
                    "address",
                    "aggregated_rating_count",
                    "cuisines",
                    "delivery_enabled",
                    "description",
                    "dollar_signs",
                    "food_photos",
                    "hours",
                    "is_open",
                    "local_hours",
                    "logo_photos",
                    "miles",
                    "name",
                    "offers_first_party_delivery",
                    "offers_third_party_delivery",
                    "phone_number",
                    "pickup_enabled",
                    "store_photos",
                    "supports_upc_codes",
                    "type",
                    "weighted_rating_value"
                  ],
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "MealMe ID of the store. Can be null in some cases.",
                      "example": "7c0360a5-20f4-470a-b8a0-124a509ad827"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the store",
                      "example": "7-Eleven"
                    },
                    "phone_number": {
                      "type": "integer",
                      "description": "Phone number of the store",
                      "example": 14158638332
                    },
                    "address": {
                      "description": "",
                      "required": [
                        "city",
                        "country",
                        "latitude",
                        "longitude",
                        "state",
                        "street_addr",
                        "street_addr_2",
                        "zipcode"
                      ],
                      "properties": {
                        "street_addr": {
                          "type": "string",
                          "description": "Street Address",
                          "example": "1390 Market Street"
                        },
                        "city": {
                          "type": "string",
                          "description": "City",
                          "example": "San Francisco"
                        },
                        "state": {
                          "type": "string",
                          "description": "State abbreviation",
                          "example": "CA"
                        },
                        "zipcode": {
                          "type": "string",
                          "description": "Zipcode",
                          "example": "94102"
                        },
                        "country": {
                          "type": "string",
                          "description": "Country abbreviation",
                          "example": "US"
                        },
                        "street_addr_2": {
                          "type": "string",
                          "description": "Street Address 2",
                          "example": "Apt. 123"
                        },
                        "latitude": {
                          "type": "number",
                          "description": "Latitude",
                          "example": 37.77709
                        },
                        "longitude": {
                          "type": "number",
                          "description": "Longitude",
                          "example": -122.4172976
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the store, either \"grocery\" or \"restaurant\"",
                      "example": "grocery"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the store",
                      "example": "Local convenience store with snacks, beverages, and more."
                    },
                    "local_hours": {
                      "description": "",
                      "properties": {
                        "operational": {
                          "description": "",
                          "properties": {
                            "Monday": {
                              "type": "string",
                              "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                              "example": "09:30AM - 01:00AM"
                            },
                            "Tuesday": {
                              "type": "string",
                              "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                              "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                            },
                            "Wednesday": {
                              "type": "string",
                              "description": "If a restaurant is opens at midnight, it will show as above. ",
                              "example": "12:00AM - 4:00PM"
                            },
                            "Thursday": {
                              "type": "string",
                              "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                              "example": "8:00AM - 4:00AM"
                            },
                            "Friday": {
                              "type": "string",
                              "description": "If a restaurant is open until midnight, it will show as above.",
                              "example": "10:00AM - 12:00AM"
                            },
                            "Saturday": {
                              "type": "string",
                              "description": "If a restaurant shows “Closed“, it is closed for that day.",
                              "example": "Closed"
                            },
                            "Sunday": {
                              "type": "string",
                              "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                              "example": "Open 24 hours"
                            }
                          },
                          "type": "object"
                        },
                        "delivery": {
                          "description": "",
                          "properties": {
                            "Monday": {
                              "type": "string",
                              "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                              "example": "09:30AM - 01:00AM"
                            },
                            "Tuesday": {
                              "type": "string",
                              "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                              "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                            },
                            "Wednesday": {
                              "type": "string",
                              "description": "If a restaurant is opens at midnight, it will show as above. ",
                              "example": "12:00AM - 4:00PM"
                            },
                            "Thursday": {
                              "type": "string",
                              "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                              "example": "8:00AM - 4:00AM"
                            },
                            "Friday": {
                              "type": "string",
                              "description": "If a restaurant is open until midnight, it will show as above.",
                              "example": "10:00AM - 12:00AM"
                            },
                            "Saturday": {
                              "type": "string",
                              "description": "If a restaurant shows “Closed“, it is closed for that day.",
                              "example": "Closed"
                            },
                            "Sunday": {
                              "type": "string",
                              "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                              "example": "Open 24 hours"
                            }
                          },
                          "type": "object"
                        },
                        "pickup": {
                          "description": "",
                          "properties": {
                            "Monday": {
                              "type": "string",
                              "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                              "example": "09:30AM - 01:00AM"
                            },
                            "Tuesday": {
                              "type": "string",
                              "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                              "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                            },
                            "Wednesday": {
                              "type": "string",
                              "description": "If a restaurant is opens at midnight, it will show as above. ",
                              "example": "12:00AM - 4:00PM"
                            },
                            "Thursday": {
                              "type": "string",
                              "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                              "example": "8:00AM - 4:00AM"
                            },
                            "Friday": {
                              "type": "string",
                              "description": "If a restaurant is open until midnight, it will show as above.",
                              "example": "10:00AM - 12:00AM"
                            },
                            "Saturday": {
                              "type": "string",
                              "description": "If a restaurant shows “Closed“, it is closed for that day.",
                              "example": "Closed"
                            },
                            "Sunday": {
                              "type": "string",
                              "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                              "example": "Open 24 hours"
                            }
                          },
                          "type": "object"
                        },
                        "dine_in": {
                          "description": "",
                          "properties": {
                            "Monday": {
                              "type": "string",
                              "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                              "example": "09:30AM - 01:00AM"
                            },
                            "Tuesday": {
                              "type": "string",
                              "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                              "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                            },
                            "Wednesday": {
                              "type": "string",
                              "description": "If a restaurant is opens at midnight, it will show as above. ",
                              "example": "12:00AM - 4:00PM"
                            },
                            "Thursday": {
                              "type": "string",
                              "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                              "example": "8:00AM - 4:00AM"
                            },
                            "Friday": {
                              "type": "string",
                              "description": "If a restaurant is open until midnight, it will show as above.",
                              "example": "10:00AM - 12:00AM"
                            },
                            "Saturday": {
                              "type": "string",
                              "description": "If a restaurant shows “Closed“, it is closed for that day.",
                              "example": "Closed"
                            },
                            "Sunday": {
                              "type": "string",
                              "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                              "example": "Open 24 hours"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "hours": {
                      "description": "A mapping of quote ID(s) to their respective local hours.",
                      "allOf": [
                        {
                          "properties": {
                            "*": {
                              "description": "",
                              "properties": {
                                "operational": {
                                  "description": "",
                                  "properties": {
                                    "Monday": {
                                      "type": "string",
                                      "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                      "example": "09:30AM - 01:00AM"
                                    },
                                    "Tuesday": {
                                      "type": "string",
                                      "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                      "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                    },
                                    "Wednesday": {
                                      "type": "string",
                                      "description": "If a restaurant is opens at midnight, it will show as above. ",
                                      "example": "12:00AM - 4:00PM"
                                    },
                                    "Thursday": {
                                      "type": "string",
                                      "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                      "example": "8:00AM - 4:00AM"
                                    },
                                    "Friday": {
                                      "type": "string",
                                      "description": "If a restaurant is open until midnight, it will show as above.",
                                      "example": "10:00AM - 12:00AM"
                                    },
                                    "Saturday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                      "example": "Closed"
                                    },
                                    "Sunday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                      "example": "Open 24 hours"
                                    }
                                  },
                                  "type": "object"
                                },
                                "delivery": {
                                  "description": "",
                                  "properties": {
                                    "Monday": {
                                      "type": "string",
                                      "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                      "example": "09:30AM - 01:00AM"
                                    },
                                    "Tuesday": {
                                      "type": "string",
                                      "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                      "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                    },
                                    "Wednesday": {
                                      "type": "string",
                                      "description": "If a restaurant is opens at midnight, it will show as above. ",
                                      "example": "12:00AM - 4:00PM"
                                    },
                                    "Thursday": {
                                      "type": "string",
                                      "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                      "example": "8:00AM - 4:00AM"
                                    },
                                    "Friday": {
                                      "type": "string",
                                      "description": "If a restaurant is open until midnight, it will show as above.",
                                      "example": "10:00AM - 12:00AM"
                                    },
                                    "Saturday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                      "example": "Closed"
                                    },
                                    "Sunday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                      "example": "Open 24 hours"
                                    }
                                  },
                                  "type": "object"
                                },
                                "pickup": {
                                  "description": "",
                                  "properties": {
                                    "Monday": {
                                      "type": "string",
                                      "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                      "example": "09:30AM - 01:00AM"
                                    },
                                    "Tuesday": {
                                      "type": "string",
                                      "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                      "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                    },
                                    "Wednesday": {
                                      "type": "string",
                                      "description": "If a restaurant is opens at midnight, it will show as above. ",
                                      "example": "12:00AM - 4:00PM"
                                    },
                                    "Thursday": {
                                      "type": "string",
                                      "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                      "example": "8:00AM - 4:00AM"
                                    },
                                    "Friday": {
                                      "type": "string",
                                      "description": "If a restaurant is open until midnight, it will show as above.",
                                      "example": "10:00AM - 12:00AM"
                                    },
                                    "Saturday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                      "example": "Closed"
                                    },
                                    "Sunday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                      "example": "Open 24 hours"
                                    }
                                  },
                                  "type": "object"
                                },
                                "dine_in": {
                                  "description": "",
                                  "properties": {
                                    "Monday": {
                                      "type": "string",
                                      "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                      "example": "09:30AM - 01:00AM"
                                    },
                                    "Tuesday": {
                                      "type": "string",
                                      "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                      "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                    },
                                    "Wednesday": {
                                      "type": "string",
                                      "description": "If a restaurant is opens at midnight, it will show as above. ",
                                      "example": "12:00AM - 4:00PM"
                                    },
                                    "Thursday": {
                                      "type": "string",
                                      "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                      "example": "8:00AM - 4:00AM"
                                    },
                                    "Friday": {
                                      "type": "string",
                                      "description": "If a restaurant is open until midnight, it will show as above.",
                                      "example": "10:00AM - 12:00AM"
                                    },
                                    "Saturday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                      "example": "Closed"
                                    },
                                    "Sunday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                      "example": "Open 24 hours"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "utc_hours": {
                      "description": "",
                      "properties": {
                        "operational": {
                          "description": "",
                          "required": [
                            "Friday",
                            "Monday",
                            "Saturday",
                            "Sunday",
                            "Thursday",
                            "Tuesday",
                            "Wednesday"
                          ],
                          "properties": {
                            "Monday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Monday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Tuesday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Tuesday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Wednesday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Wednesday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Thursday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Thursday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Friday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Friday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Saturday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Saturday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Sunday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Sunday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          },
                          "type": "object"
                        },
                        "delivery": {
                          "description": "",
                          "required": [
                            "Friday",
                            "Monday",
                            "Saturday",
                            "Sunday",
                            "Thursday",
                            "Tuesday",
                            "Wednesday"
                          ],
                          "properties": {
                            "Monday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Monday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Tuesday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Tuesday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Wednesday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Wednesday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Thursday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Thursday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Friday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Friday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Saturday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Saturday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Sunday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Sunday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          },
                          "type": "object"
                        },
                        "pickup": {
                          "description": "",
                          "required": [
                            "Friday",
                            "Monday",
                            "Saturday",
                            "Sunday",
                            "Thursday",
                            "Tuesday",
                            "Wednesday"
                          ],
                          "properties": {
                            "Monday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Monday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Tuesday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Tuesday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Wednesday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Wednesday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Thursday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Thursday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Friday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Friday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Saturday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Saturday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Sunday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Sunday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          },
                          "type": "object"
                        },
                        "dine_in": {
                          "description": "",
                          "required": [
                            "Friday",
                            "Monday",
                            "Saturday",
                            "Sunday",
                            "Thursday",
                            "Tuesday",
                            "Wednesday"
                          ],
                          "properties": {
                            "Monday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Monday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Tuesday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Tuesday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Wednesday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Wednesday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Thursday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Thursday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Friday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Friday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Saturday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Saturday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Sunday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Sunday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "cuisines": {
                      "type": "array",
                      "description": "The cuisine types",
                      "example": [
                        "Snacks",
                        "Convenience",
                        "Ice Cream"
                      ],
                      "items": {
                        "type": "string",
                        "description": "Cuisine of the store"
                      }
                    },
                    "food_photos": {
                      "type": "array",
                      "description": "Photos of the food at the store",
                      "example": [
                        "https://cdn-img.mealme.ai/f9ccb38a3d986eeb3f25e5b021d85a73c5d492ba/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f65303762376261372d663036612d346237302d383861302d3466633932656261346236322e6a706567"
                      ],
                      "items": {
                        "type": "string",
                        "description": "Photo of the store"
                      }
                    },
                    "logo_photos": {
                      "type": "array",
                      "description": "Photos of the store's logo",
                      "example": [
                        "https://cdn-img.mealme.ai/9a55bb89e411b1ef87210731a2e7f9fe850cc979/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f76313630313330373339332f656a6e376377756b74766537766e696867616b782e6a7067"
                      ],
                      "items": {
                        "type": "string",
                        "description": "Photo of the store's logo"
                      }
                    },
                    "store_photos": {
                      "type": "array",
                      "description": "Photos of the store",
                      "example": [
                        "https://cdn-img.mealme.ai/7aba9346a8f2e1d8ecf453a86fe3be1b53f98270/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f36393264376333342d626465362d343337612d616435342d3961303633656333666161642e6a706567"
                      ],
                      "items": {
                        "type": "string",
                        "description": "Photo of the store"
                      }
                    },
                    "dollar_signs": {
                      "type": "integer",
                      "description": "Estimated cost of the store, like 1 representing \"$\" or 2 representing \"$$\"",
                      "example": 1
                    },
                    "pickup_enabled": {
                      "type": "boolean",
                      "description": "Whether the store supports pickup.",
                      "example": false
                    },
                    "delivery_enabled": {
                      "type": "boolean",
                      "description": "Whether the store supports delivery.",
                      "example": true
                    },
                    "is_open": {
                      "type": "boolean",
                      "description": "Whether the store is open. If null, then there is no data available on whether the store is open.",
                      "example": true
                    },
                    "quotes": {
                      "description": "",
                      "properties": {
                        "cheapest_delivery": {
                          "example": {
                            "time_estimate": {
                              "minimum": 43,
                              "maximum": 45
                            },
                            "sales_tax_percent": 10.5,
                            "delivery_fee": {
                              "delivery_fee_flat": 0,
                              "delivery_fee_percent": 0,
                              "delivery_fee_taxable": false
                            },
                            "service_fee": {
                              "service_fee_flat": 0,
                              "service_fee_percent": 10,
                              "service_fee_min": 300,
                              "service_fee_max": 700,
                              "service_fee_taxable": false
                            },
                            "small_order_fee": {
                              "minimum_order_value": 0,
                              "small_order_fee_flat": 0,
                              "small_order_fee_percent": 0
                            },
                            "order_minimum": 1500,
                            "threshold_fees": [],
                            "asap_available": true
                          },
                          "allOf": [
                            {
                              "required": [
                                "accepts_delivery_tip",
                                "accepts_pickup_note",
                                "accepts_pickup_tip",
                                "asap_available",
                                "courier_quote",
                                "delivery_fee",
                                "first_party_quote",
                                "order_minimum",
                                "sales_tax_percent",
                                "service_fee",
                                "small_order_fee",
                                "third_party_quote",
                                "time_estimate"
                              ],
                              "properties": {
                                "time_estimate": {
                                  "description": "",
                                  "required": [
                                    "maximum",
                                    "minimum"
                                  ],
                                  "properties": {
                                    "minimum": {
                                      "type": "integer",
                                      "description": "Lower bound of delivery time estimate (in minutes)"
                                    },
                                    "maximum": {
                                      "type": "integer",
                                      "description": "Upper bound of delivery time estimate (in minutes)"
                                    },
                                    "scheduled": {
                                      "type": "array",
                                      "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                      "items": {
                                        "required": [
                                          "delivery_fee",
                                          "maximum",
                                          "minimum"
                                        ],
                                        "properties": {
                                          "minimum": {
                                            "type": "integer",
                                            "description": "Timestamp (seconds since 1970)"
                                          },
                                          "maximum": {
                                            "type": "integer",
                                            "description": "Timestamp (seconds since 1970)"
                                          },
                                          "delivery_fee": {
                                            "description": "",
                                            "required": [
                                              "delivery_fee_flat",
                                              "delivery_fee_percent"
                                            ],
                                            "properties": {
                                              "delivery_fee_flat": {
                                                "type": "integer",
                                                "description": "Delivery fee amount in cents"
                                              },
                                              "delivery_fee_percent": {
                                                "type": "number",
                                                "description": "Delivery fee percentage"
                                              },
                                              "delivery_fee_taxable": {
                                                "type": "boolean",
                                                "description": "Whether the delivery fee is taxable or not"
                                              },
                                              "threshold_fees": {
                                                "type": "array",
                                                "description": "Threshold Fees, if they exist",
                                                "items": {
                                                  "required": [
                                                    "threshold_cents",
                                                    "threshold_fee_cents"
                                                  ],
                                                  "properties": {
                                                    "threshold_cents": {
                                                      "type": "integer",
                                                      "description": "Subtotal that enacts a specific fee"
                                                    },
                                                    "threshold_fee_cents": {
                                                      "type": "integer",
                                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "sales_tax_percent": {
                                  "type": "integer",
                                  "description": "Sales tax in percentage terms"
                                },
                                "delivery_fee": {
                                  "description": "",
                                  "required": [
                                    "delivery_fee_flat",
                                    "delivery_fee_percent"
                                  ],
                                  "properties": {
                                    "delivery_fee_flat": {
                                      "type": "integer",
                                      "description": "Delivery fee amount in cents"
                                    },
                                    "delivery_fee_percent": {
                                      "type": "number",
                                      "description": "Delivery fee percentage"
                                    },
                                    "delivery_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the delivery fee is taxable or not"
                                    },
                                    "threshold_fees": {
                                      "type": "array",
                                      "description": "Threshold Fees, if they exist",
                                      "items": {
                                        "required": [
                                          "threshold_cents",
                                          "threshold_fee_cents"
                                        ],
                                        "properties": {
                                          "threshold_cents": {
                                            "type": "integer",
                                            "description": "Subtotal that enacts a specific fee"
                                          },
                                          "threshold_fee_cents": {
                                            "type": "integer",
                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "service_fee": {
                                  "description": "",
                                  "required": [
                                    "service_fee_flat",
                                    "service_fee_percent"
                                  ],
                                  "properties": {
                                    "service_fee_flat": {
                                      "type": "integer",
                                      "description": "Service fee amount in cents"
                                    },
                                    "service_fee_percent": {
                                      "type": "number",
                                      "description": "Service fee percentage from 0 to 100"
                                    },
                                    "service_fee_min": {
                                      "type": "integer",
                                      "description": "Minimum service fee amount in cents"
                                    },
                                    "service_fee_max": {
                                      "type": "integer",
                                      "description": "Maximum service fee amount in cents"
                                    },
                                    "service_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the service fee is taxable or not"
                                    },
                                    "threshold_fees": {
                                      "type": "array",
                                      "description": "Threshold Fees, if they exist",
                                      "items": {
                                        "required": [
                                          "threshold_cents",
                                          "threshold_fee_cents"
                                        ],
                                        "properties": {
                                          "threshold_cents": {
                                            "type": "integer",
                                            "description": "Subtotal that enacts a specific fee"
                                          },
                                          "threshold_fee_cents": {
                                            "type": "integer",
                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "small_order_fee": {
                                  "description": "",
                                  "required": [
                                    "minimum_order_value",
                                    "small_order_fee_flat",
                                    "small_order_fee_percent"
                                  ],
                                  "properties": {
                                    "minimum_order_value": {
                                      "type": "integer",
                                      "description": "Minimum amount to not incur small order fee in cents",
                                      "example": 0
                                    },
                                    "small_order_fee_flat": {
                                      "type": "integer",
                                      "description": "Small order fee amount in cents",
                                      "example": 0
                                    },
                                    "small_order_fee_percent": {
                                      "type": "number",
                                      "description": "Small order fee percentage",
                                      "example": 0
                                    }
                                  },
                                  "type": "object"
                                },
                                "order_minimum": {
                                  "type": "integer",
                                  "description": "Minimum order amount in cents"
                                },
                                "min_tip": {
                                  "type": "integer",
                                  "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                },
                                "asap_available": {
                                  "type": "integer",
                                  "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                },
                                "first_party_quote": {
                                  "type": "boolean",
                                  "description": "Whether this quote is provided by the store"
                                },
                                "third_party_quote": {
                                  "type": "boolean",
                                  "description": "Whether this quote is provided by a third party service"
                                },
                                "courier_quote": {
                                  "type": "boolean",
                                  "description": "Whether this quote is provided by a last-mile delivery service."
                                },
                                "accepts_delivery_tip": {
                                  "type": "boolean",
                                  "description": "Whether a delivery tip is accepted."
                                },
                                "accepts_pickup_tip": {
                                  "type": "boolean",
                                  "description": "Whether a pickup tip is accepted."
                                },
                                "accepts_pickup_note": {
                                  "type": "boolean",
                                  "description": "Whether a pickup note is accepted."
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "description": ""
                        },
                        "fastest_delivery": {
                          "example": {
                            "time_estimate": {
                              "minimum": 15,
                              "maximum": 30
                            },
                            "sales_tax_percent": 10.5,
                            "delivery_fee": {
                              "delivery_fee_flat": 199,
                              "delivery_fee_percent": 0,
                              "delivery_fee_taxable": false
                            },
                            "service_fee": {
                              "service_fee_flat": 0,
                              "service_fee_percent": 5
                            },
                            "small_order_fee": {
                              "minimum_order_value": 1200,
                              "small_order_fee_flat": 200,
                              "small_order_fee_percent": 0
                            },
                            "order_minimum": 0,
                            "threshold_fees": [
                              {
                                "threshold_cents": 10000,
                                "threshold_fee_cents": 1000
                              },
                              {
                                "threshold_cents": 20000,
                                "threshold_fee_cents": 2000
                              }
                            ]
                          },
                          "allOf": [
                            {
                              "required": [
                                "accepts_delivery_tip",
                                "accepts_pickup_note",
                                "accepts_pickup_tip",
                                "asap_available",
                                "courier_quote",
                                "delivery_fee",
                                "first_party_quote",
                                "order_minimum",
                                "sales_tax_percent",
                                "service_fee",
                                "small_order_fee",
                                "third_party_quote",
                                "time_estimate"
                              ],
                              "properties": {
                                "time_estimate": {
                                  "description": "",
                                  "required": [
                                    "maximum",
                                    "minimum"
                                  ],
                                  "properties": {
                                    "minimum": {
                                      "type": "integer",
                                      "description": "Lower bound of delivery time estimate (in minutes)"
                                    },
                                    "maximum": {
                                      "type": "integer",
                                      "description": "Upper bound of delivery time estimate (in minutes)"
                                    },
                                    "scheduled": {
                                      "type": "array",
                                      "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                      "items": {
                                        "required": [
                                          "delivery_fee",
                                          "maximum",
                                          "minimum"
                                        ],
                                        "properties": {
                                          "minimum": {
                                            "type": "integer",
                                            "description": "Timestamp (seconds since 1970)"
                                          },
                                          "maximum": {
                                            "type": "integer",
                                            "description": "Timestamp (seconds since 1970)"
                                          },
                                          "delivery_fee": {
                                            "description": "",
                                            "required": [
                                              "delivery_fee_flat",
                                              "delivery_fee_percent"
                                            ],
                                            "properties": {
                                              "delivery_fee_flat": {
                                                "type": "integer",
                                                "description": "Delivery fee amount in cents"
                                              },
                                              "delivery_fee_percent": {
                                                "type": "number",
                                                "description": "Delivery fee percentage"
                                              },
                                              "delivery_fee_taxable": {
                                                "type": "boolean",
                                                "description": "Whether the delivery fee is taxable or not"
                                              },
                                              "threshold_fees": {
                                                "type": "array",
                                                "description": "Threshold Fees, if they exist",
                                                "items": {
                                                  "required": [
                                                    "threshold_cents",
                                                    "threshold_fee_cents"
                                                  ],
                                                  "properties": {
                                                    "threshold_cents": {
                                                      "type": "integer",
                                                      "description": "Subtotal that enacts a specific fee"
                                                    },
                                                    "threshold_fee_cents": {
                                                      "type": "integer",
                                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "sales_tax_percent": {
                                  "type": "integer",
                                  "description": "Sales tax in percentage terms"
                                },
                                "delivery_fee": {
                                  "description": "",
                                  "required": [
                                    "delivery_fee_flat",
                                    "delivery_fee_percent"
                                  ],
                                  "properties": {
                                    "delivery_fee_flat": {
                                      "type": "integer",
                                      "description": "Delivery fee amount in cents"
                                    },
                                    "delivery_fee_percent": {
                                      "type": "number",
                                      "description": "Delivery fee percentage"
                                    },
                                    "delivery_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the delivery fee is taxable or not"
                                    },
                                    "threshold_fees": {
                                      "type": "array",
                                      "description": "Threshold Fees, if they exist",
                                      "items": {
                                        "required": [
                                          "threshold_cents",
                                          "threshold_fee_cents"
                                        ],
                                        "properties": {
                                          "threshold_cents": {
                                            "type": "integer",
                                            "description": "Subtotal that enacts a specific fee"
                                          },
                                          "threshold_fee_cents": {
                                            "type": "integer",
                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "service_fee": {
                                  "description": "",
                                  "required": [
                                    "service_fee_flat",
                                    "service_fee_percent"
                                  ],
                                  "properties": {
                                    "service_fee_flat": {
                                      "type": "integer",
                                      "description": "Service fee amount in cents"
                                    },
                                    "service_fee_percent": {
                                      "type": "number",
                                      "description": "Service fee percentage from 0 to 100"
                                    },
                                    "service_fee_min": {
                                      "type": "integer",
                                      "description": "Minimum service fee amount in cents"
                                    },
                                    "service_fee_max": {
                                      "type": "integer",
                                      "description": "Maximum service fee amount in cents"
                                    },
                                    "service_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the service fee is taxable or not"
                                    },
                                    "threshold_fees": {
                                      "type": "array",
                                      "description": "Threshold Fees, if they exist",
                                      "items": {
                                        "required": [
                                          "threshold_cents",
                                          "threshold_fee_cents"
                                        ],
                                        "properties": {
                                          "threshold_cents": {
                                            "type": "integer",
                                            "description": "Subtotal that enacts a specific fee"
                                          },
                                          "threshold_fee_cents": {
                                            "type": "integer",
                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "small_order_fee": {
                                  "description": "",
                                  "required": [
                                    "minimum_order_value",
                                    "small_order_fee_flat",
                                    "small_order_fee_percent"
                                  ],
                                  "properties": {
                                    "minimum_order_value": {
                                      "type": "integer",
                                      "description": "Minimum amount to not incur small order fee in cents",
                                      "example": 0
                                    },
                                    "small_order_fee_flat": {
                                      "type": "integer",
                                      "description": "Small order fee amount in cents",
                                      "example": 0
                                    },
                                    "small_order_fee_percent": {
                                      "type": "number",
                                      "description": "Small order fee percentage",
                                      "example": 0
                                    }
                                  },
                                  "type": "object"
                                },
                                "order_minimum": {
                                  "type": "integer",
                                  "description": "Minimum order amount in cents"
                                },
                                "min_tip": {
                                  "type": "integer",
                                  "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                },
                                "asap_available": {
                                  "type": "integer",
                                  "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                },
                                "first_party_quote": {
                                  "type": "boolean",
                                  "description": "Whether this quote is provided by the store"
                                },
                                "third_party_quote": {
                                  "type": "boolean",
                                  "description": "Whether this quote is provided by a third party service"
                                },
                                "courier_quote": {
                                  "type": "boolean",
                                  "description": "Whether this quote is provided by a last-mile delivery service."
                                },
                                "accepts_delivery_tip": {
                                  "type": "boolean",
                                  "description": "Whether a delivery tip is accepted."
                                },
                                "accepts_pickup_tip": {
                                  "type": "boolean",
                                  "description": "Whether a pickup tip is accepted."
                                },
                                "accepts_pickup_note": {
                                  "type": "boolean",
                                  "description": "Whether a pickup note is accepted."
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "description": ""
                        },
                        "pickup": {
                          "example": {
                            "time_estimate": {
                              "minimum": 5,
                              "maximum": 5
                            },
                            "sales_tax_percent": 10.5,
                            "delivery_fee": {
                              "delivery_fee_flat": 0,
                              "delivery_fee_percent": 0,
                              "delivery_fee_taxable": false
                            },
                            "service_fee": {
                              "service_fee_flat": 0,
                              "service_fee_percent": 0
                            },
                            "small_order_fee": {
                              "minimum_order_value": 1200,
                              "small_order_fee_flat": 200,
                              "small_order_fee_percent": 0
                            },
                            "order_minimum": 100,
                            "threshold_fees": []
                          },
                          "allOf": [
                            {
                              "required": [
                                "accepts_delivery_tip",
                                "accepts_pickup_note",
                                "accepts_pickup_tip",
                                "asap_available",
                                "courier_quote",
                                "delivery_fee",
                                "first_party_quote",
                                "order_minimum",
                                "sales_tax_percent",
                                "service_fee",
                                "small_order_fee",
                                "third_party_quote",
                                "time_estimate"
                              ],
                              "properties": {
                                "time_estimate": {
                                  "description": "",
                                  "required": [
                                    "maximum",
                                    "minimum"
                                  ],
                                  "properties": {
                                    "minimum": {
                                      "type": "integer",
                                      "description": "Lower bound of delivery time estimate (in minutes)"
                                    },
                                    "maximum": {
                                      "type": "integer",
                                      "description": "Upper bound of delivery time estimate (in minutes)"
                                    },
                                    "scheduled": {
                                      "type": "array",
                                      "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                      "items": {
                                        "required": [
                                          "delivery_fee",
                                          "maximum",
                                          "minimum"
                                        ],
                                        "properties": {
                                          "minimum": {
                                            "type": "integer",
                                            "description": "Timestamp (seconds since 1970)"
                                          },
                                          "maximum": {
                                            "type": "integer",
                                            "description": "Timestamp (seconds since 1970)"
                                          },
                                          "delivery_fee": {
                                            "description": "",
                                            "required": [
                                              "delivery_fee_flat",
                                              "delivery_fee_percent"
                                            ],
                                            "properties": {
                                              "delivery_fee_flat": {
                                                "type": "integer",
                                                "description": "Delivery fee amount in cents"
                                              },
                                              "delivery_fee_percent": {
                                                "type": "number",
                                                "description": "Delivery fee percentage"
                                              },
                                              "delivery_fee_taxable": {
                                                "type": "boolean",
                                                "description": "Whether the delivery fee is taxable or not"
                                              },
                                              "threshold_fees": {
                                                "type": "array",
                                                "description": "Threshold Fees, if they exist",
                                                "items": {
                                                  "required": [
                                                    "threshold_cents",
                                                    "threshold_fee_cents"
                                                  ],
                                                  "properties": {
                                                    "threshold_cents": {
                                                      "type": "integer",
                                                      "description": "Subtotal that enacts a specific fee"
                                                    },
                                                    "threshold_fee_cents": {
                                                      "type": "integer",
                                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "sales_tax_percent": {
                                  "type": "integer",
                                  "description": "Sales tax in percentage terms"
                                },
                                "delivery_fee": {
                                  "description": "",
                                  "required": [
                                    "delivery_fee_flat",
                                    "delivery_fee_percent"
                                  ],
                                  "properties": {
                                    "delivery_fee_flat": {
                                      "type": "integer",
                                      "description": "Delivery fee amount in cents"
                                    },
                                    "delivery_fee_percent": {
                                      "type": "number",
                                      "description": "Delivery fee percentage"
                                    },
                                    "delivery_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the delivery fee is taxable or not"
                                    },
                                    "threshold_fees": {
                                      "type": "array",
                                      "description": "Threshold Fees, if they exist",
                                      "items": {
                                        "required": [
                                          "threshold_cents",
                                          "threshold_fee_cents"
                                        ],
                                        "properties": {
                                          "threshold_cents": {
                                            "type": "integer",
                                            "description": "Subtotal that enacts a specific fee"
                                          },
                                          "threshold_fee_cents": {
                                            "type": "integer",
                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "service_fee": {
                                  "description": "",
                                  "required": [
                                    "service_fee_flat",
                                    "service_fee_percent"
                                  ],
                                  "properties": {
                                    "service_fee_flat": {
                                      "type": "integer",
                                      "description": "Service fee amount in cents"
                                    },
                                    "service_fee_percent": {
                                      "type": "number",
                                      "description": "Service fee percentage from 0 to 100"
                                    },
                                    "service_fee_min": {
                                      "type": "integer",
                                      "description": "Minimum service fee amount in cents"
                                    },
                                    "service_fee_max": {
                                      "type": "integer",
                                      "description": "Maximum service fee amount in cents"
                                    },
                                    "service_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the service fee is taxable or not"
                                    },
                                    "threshold_fees": {
                                      "type": "array",
                                      "description": "Threshold Fees, if they exist",
                                      "items": {
                                        "required": [
                                          "threshold_cents",
                                          "threshold_fee_cents"
                                        ],
                                        "properties": {
                                          "threshold_cents": {
                                            "type": "integer",
                                            "description": "Subtotal that enacts a specific fee"
                                          },
                                          "threshold_fee_cents": {
                                            "type": "integer",
                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "small_order_fee": {
                                  "description": "",
                                  "required": [
                                    "minimum_order_value",
                                    "small_order_fee_flat",
                                    "small_order_fee_percent"
                                  ],
                                  "properties": {
                                    "minimum_order_value": {
                                      "type": "integer",
                                      "description": "Minimum amount to not incur small order fee in cents",
                                      "example": 0
                                    },
                                    "small_order_fee_flat": {
                                      "type": "integer",
                                      "description": "Small order fee amount in cents",
                                      "example": 0
                                    },
                                    "small_order_fee_percent": {
                                      "type": "number",
                                      "description": "Small order fee percentage",
                                      "example": 0
                                    }
                                  },
                                  "type": "object"
                                },
                                "order_minimum": {
                                  "type": "integer",
                                  "description": "Minimum order amount in cents"
                                },
                                "min_tip": {
                                  "type": "integer",
                                  "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                },
                                "asap_available": {
                                  "type": "integer",
                                  "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                },
                                "first_party_quote": {
                                  "type": "boolean",
                                  "description": "Whether this quote is provided by the store"
                                },
                                "third_party_quote": {
                                  "type": "boolean",
                                  "description": "Whether this quote is provided by a third party service"
                                },
                                "courier_quote": {
                                  "type": "boolean",
                                  "description": "Whether this quote is provided by a last-mile delivery service."
                                },
                                "accepts_delivery_tip": {
                                  "type": "boolean",
                                  "description": "Whether a delivery tip is accepted."
                                },
                                "accepts_pickup_tip": {
                                  "type": "boolean",
                                  "description": "Whether a pickup tip is accepted."
                                },
                                "accepts_pickup_note": {
                                  "type": "boolean",
                                  "description": "Whether a pickup note is accepted."
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "description": ""
                        }
                      },
                      "type": "object"
                    },
                    "quote_types": {
                      "description": "",
                      "properties": {
                        "<quote id>": {
                          "type": "array",
                          "description": "The list of quote types available for this quote id.",
                          "items": {
                            "type": "string",
                            "description": "Quote Type",
                            "example": "pickup",
                            "enum": [
                              "pickup",
                              "delivery"
                            ]
                          }
                        }
                      },
                      "type": "object"
                    },
                    "offers_first_party_delivery": {
                      "type": "boolean",
                      "description": "Whether or not the store delivers directly.",
                      "example": false
                    },
                    "offers_third_party_delivery": {
                      "type": "boolean",
                      "description": "Whether or not the store delivers with third-party services.",
                      "example": false
                    },
                    "miles": {
                      "type": "number",
                      "description": "Miles from the user to the store",
                      "example": 0.23
                    },
                    "weighted_rating_value": {
                      "type": "number",
                      "description": "The weighted average rating of this store across all the websites it appears on. Floating-point from 1 to 5 (inclusive) or 0.",
                      "example": 4.83
                    },
                    "aggregated_rating_count": {
                      "type": "integer",
                      "description": "Number of total aggregated ratings for this store across all the websites it appears on. Non-negative integer.",
                      "example": 956
                    },
                    "supports_upc_codes": {
                      "type": "boolean",
                      "description": "Whether the store's inventory supports UPC codes.",
                      "example": false
                    }
                  },
                  "type": "object",
                  "description": ""
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Store_Cart_Search_Output": {
        "required": [
          "carts"
        ],
        "properties": {
          "carts": {
            "type": "array",
            "description": "List of resulting carts",
            "example": [
              {
                "products": {
                  "Whole Milk": [
                    {
                      "product_id": "gAAAAABi6Y6X17Oe4mBPObpYx0QjQuHT3PFHXgvy0fL0wLVEnD_zvAIluS1467rnlk05jzxSQ7QiK_yG8VDEhPjdkZhjICapPtrXjQgJ82UTnDrd9US5VKa-qU9bqHlZuhy0bRWNii74t6WKPrKNbSI64B6oeiaiW5S3XZ6PiAf_Lj1jgdybbJ4W6qj2SWZJBK20EclqZ2U4xvVFaQpX7aGciBjDA2vdNgx6rVsXBnPYTdIddbQrSi3NjiG1uc_BrZTBqsvaor4MEM31JZEl6DJsHEn32BzAgeIDq8NbYjwA-CYebohDK5pWs2pHXHLAz0gZ5tfNfxaw7TrxFBMFwjrWBzfmgcIC2FG2KwUq0ojFSEP6fcV9DlIqTAXiyeBub_YimU6xXILb6jI8jYAYTNzBnEcbcdI2OsVD12vbYz9A46fVN5oUbf-h8_NyNPGUAm7feeTJWWarcgifLAWwbKurI0q3qvc_Iupx8jHpUMPOTB1vWGUj9997F9ENSXoTMcuW8XxcxN5qPIBF7-DyMRPjcR8PcqSwaGG9hgRtm0WpRNrmtFlaTTgyn1PiP-fWXs2xYZ8SDB4X4Zi57YlJaGKM77OrBOmZIA==",
                      "item_name": "Lactaid Whole Milk",
                      "image": "https://d2lnr5mha7bycj.cloudfront.net/product-image/file/large_7ed5cc83-e633-4aae-8304-9dffe6dc74bd.jpg",
                      "description": "Fresh whole milk.",
                      "category": "Milk",
                      "price": 639,
                      "formatted_price": "$6.39",
                      "upc_codes": [],
                      "unit_size": 0.5,
                      "unit_of_measurement": "gal",
                      "attributes": [
                        "Dairy-Free",
                        "Lactose-Free",
                        "Soy-Free"
                      ],
                      "should_fetch_customizations": true
                    }
                  ],
                  "Eggs": [
                    {
                      "product_id": "gAAAAABi6Y6X17Oe4mBPObpYx0QjQuHT3PFHXgvy0fL0wLVEnD_zvAIluS1467rnlk05jzxSQ7QiK_yG8VDEhPjdkZhjICapPtrXjQgJ82UTnDrd9US5VKa-qU9bqHlZuhy0bRWNii74t6WKPrKNbSI64B6oeiaiW5S3XZ6PiAf_Lj1jgdybbJ4W6qj2SWZJBK20EclqZ2U4xvVFaQpX7aGciBjDA2vdNgx6rVsXBnPYTdIddbQrSi3NjiG1uc_BrZTBqsvaor4MEM31JZEl6DJsHEn32BzAgeIDq8NbYjwA-CYebohDK5pWs2pHXHLAz0gZ5tfNfxaw7TrxFBMFwjrWBzfmgcIC2FG2KwUq0ojFSEP6fcV9DlIqTAXiyeBub_YimU6xXILb6jI8jYAYTNzBnEcbcdI2OsVD12vbYz9A46fVN5oUbf-h8_NyNPGUAm7feeTJWWarcgifLAWwbKurI0q3qvc_Iupx8jHpUMPOTB1vWGUj9997F9ENSXoTMcuW8XxcxN5qPIBF7-DyMRPjcR8PcqSwaGG9hgRtm0WpRNrmtFlaTTgyn1PiP-fWXs2xYZ8SDB4X4Zi57YlJaGKM77OrBOmZIA==",
                      "item_name": "O Organics Eggs, Brown, Large, Pasture-Raised",
                      "image": "https://d2lnr5mha7bycj.cloudfront.net/product-image/file/large_7ed5cc83-e633-4aae-8304-9dffe6dc74bd.jpg",
                      "description": "Fresh brown dozen eggs",
                      "price": 700,
                      "formatted_price": "$7.00",
                      "upc_codes": [],
                      "unit_size": 1,
                      "unit_of_measurement": "dozen",
                      "attributes": [
                        "Low Sugar"
                      ],
                      "should_fetch_customizations": true
                    }
                  ]
                },
                "menu_id": "gAAAAABi6Y6XqcCj9PQmqFBLgkKDz8gqIsNhcAdSHtOTPKq8QTFrmHuxafS2SvK9PKFF_zv7IT5EV78cRNpvICrbnfnw5Jblq3QBkDojX2fpGksN8TAEpgC9PHtqQyewvq-WcPXpK4Lk0_4G71pwECFtqC0R-KkHoa4GYPLGt34LZYfe2DOE9B4jTWzsBgCjCFTzyX7AUS3Y0ZMWAeKjCEjZ_BHCN45ACSlYOigNxZ5FCBNXRgrwJIHyTENU1z_o_eeFgXqFWdD6ccefU8ZSnwc9lw_JCcO1Y5Etr-j0CExxlGsSNhEZT3AtoEZiCYiqvBXbU7b3V-6S",
                "grand_total": 2067,
                "store": {
                  "_id": "754d773d-ea03-46fb-b7dc-8e40f855fd1e",
                  "name": "O Organics Market",
                  "phone_number": 14159746822,
                  "address": {
                    "street_addr": "145 Jackson St, Unit 1",
                    "city": "San Francisco",
                    "state": "CA",
                    "zipcode": "94188",
                    "country": "US",
                    "street_addr_2": "",
                    "latitude": 37.7974,
                    "longitude": -122.4001
                  },
                  "type": "grocery",
                  "description": "Get what you love from O Organics Market - delivered to you.",
                  "local_hours": {
                    "operational": {
                      "Monday": "06:00AM - 11:00PM",
                      "Tuesday": "06:00AM - 11:00PM",
                      "Wednesday": "06:00AM - 11:00PM",
                      "Thursday": "06:00AM - 11:00PM",
                      "Friday": "06:00AM - 11:00PM",
                      "Saturday": "06:00AM - 11:00PM",
                      "Sunday": "06:00AM - 11:00PM"
                    },
                    "delivery": {
                      "Monday": "06:00AM - 11:00PM",
                      "Tuesday": "06:00AM - 11:00PM",
                      "Wednesday": "06:00AM - 11:00PM",
                      "Thursday": "06:00AM - 11:00PM",
                      "Friday": "06:00AM - 11:00PM",
                      "Saturday": "06:00AM - 11:00PM",
                      "Sunday": "06:00AM - 11:00PM"
                    },
                    "pickup": {
                      "Monday": "Closed",
                      "Tuesday": "Closed",
                      "Wednesday": "Closed",
                      "Thursday": "Closed",
                      "Friday": "Closed",
                      "Saturday": "Closed",
                      "Sunday": "Closed"
                    },
                    "dine_in": {
                      "Monday": "Closed",
                      "Tuesday": "Closed",
                      "Wednesday": "Closed",
                      "Thursday": "Closed",
                      "Friday": "Closed",
                      "Saturday": "Closed",
                      "Sunday": "Closed"
                    }
                  },
                  "food_photos": [
                    "https://cdn-img.mealme.ai/e272aeadc9769a74bbfa711ab76428ec3477ae5f/68747470733a2f2f73686f70706572732e696e737461636172742e636f6d2f68616c766f722f77617265686f7573652f6c6f676f2f3431332f35633566353332642d323839362d346639322d613635342d3164666434656563656632652e706e67"
                  ],
                  "logo_photos": [
                    "https://cdn-img.mealme.ai/e272aeadc9769a74bbfa711ab76428ec3477ae5f/68747470733a2f2f73686f70706572732e696e737461636172742e636f6d2f68616c766f722f77617265686f7573652f6c6f676f2f3431332f35633566353332642d323839362d346639322d613635342d3164666434656563656632652e706e67"
                  ],
                  "store_photos": [
                    "https://cdn-img.mealme.ai/e272aeadc9769a74bbfa711ab76428ec3477ae5f/68747470733a2f2f73686f70706572732e696e737461636172742e636f6d2f68616c766f722f77617265686f7573652f6c6f676f2f3431332f35633566353332642d323839362d346639322d613635342d3164666434656563656632652e706e67"
                  ],
                  "dollar_signs": 3,
                  "pickup_enabled": false,
                  "delivery_enabled": true,
                  "is_open": true,
                  "offers_first_party_delivery": false,
                  "offers_third_party_delivery": true,
                  "miles": 1.373605808923405,
                  "weighted_rating_value": 0,
                  "aggregated_rating_count": 0
                },
                "quote": {
                  "time_estimate": {
                    "minimum": 57,
                    "maximum": 67,
                    "scheduled": [
                      {
                        "id": "170352587",
                        "minimum": 1659470400,
                        "maximum": 1659477600,
                        "delivery_fee": {
                          "delivery_fee_flat": 399,
                          "delivery_fee_percent": 0,
                          "delivery_fee_taxable": true
                        }
                      },
                      {
                        "id": "1059732021",
                        "minimum": 1659481200,
                        "maximum": 1659488400,
                        "delivery_fee": {
                          "delivery_fee_flat": 399,
                          "delivery_fee_percent": 0,
                          "delivery_fee_taxable": true
                        }
                      }
                    ]
                  },
                  "sales_tax_percent": 11.65,
                  "order_minimum": 1100,
                  "delivery_fee": {
                    "delivery_fee_flat": 399,
                    "delivery_fee_percent": 0,
                    "delivery_fee_taxable": true,
                    "threshold_fees": []
                  },
                  "service_fee": {
                    "service_fee_flat": 0,
                    "service_fee_percent": 13.64,
                    "service_fee_min": 0,
                    "service_fee_taxable": false
                  },
                  "small_order_fee": {
                    "minimum_order_value": 0,
                    "small_order_fee_flat": 0,
                    "small_order_fee_percent": 0
                  }
                }
              }
            ],
            "items": {
              "required": [
                "grand_total",
                "menu_id",
                "products",
                "store"
              ],
              "properties": {
                "products": {
                  "description": "",
                  "required": [
                    "*"
                  ],
                  "properties": {
                    "*": {
                      "type": "array",
                      "description": "List of product search results for a cart item query, sorted by relevance.",
                      "items": {
                        "required": [
                          "attributes",
                          "category",
                          "description",
                          "formatted_price",
                          "image",
                          "item_name",
                          "original_price",
                          "price",
                          "product_id",
                          "unit_of_measurement",
                          "unit_size",
                          "upc_codes"
                        ],
                        "properties": {
                          "item_name": {
                            "type": "string",
                            "description": "The item's name",
                            "example": "Lactaid Whole Milk"
                          },
                          "product_id": {
                            "type": "string",
                            "description": "The MealMe Product ID",
                            "example": "gAAAAABi4c1c6Pha-EhoxdT36F0eojiGoUYNyt4Skz83vlTpmj4gRLkhlyzEB80wgWDhj_GRvZhVf12yKy17ApsrouqUJJAhfrbe9g5yQcHq6Y5fy59816Z0D71mXJC4_uOXzscvquBooBvavPEvZoz9TnsDIBZJ1zrNJAUDQUCsG0W-dWgmNfxDnx880FmC-e2ueJpMa9udEEyTFnptgQXLR5_enfIWFMacBmKzy72lzOak5WmxJtJ3F0DCJPRlSaEKPl3tYCDx5amzbbR-1xh7Q9tBCxycIEfjtjQRUEHYiGaNeWHwRaNk5Mve6qOC6ZAxAG_1CismNc3Svx5N7ztAfHbGbHGfvcfHIw1KSegbctfXGsDjGofcDM7gMpu-7H0vjgqhVI_Mbg1OJ71rK0mtvE9rQbnP-Tosdn2oM70DM5Y69fuS8eFDqoY1kkCtjZJXXQ8_erqOkjMgXZ7HJCAm3uYGd8P_GZqy2hzfpSBD6MIxlAuTfOVHySiC1_P6I97HAnaYiO90QFWFeAfI2Dx6ZB4p9ZYakdoiexpYLA-uUJ7jB7OT3Qlvuuh4VOmxdHOtgawgwYQe"
                          },
                          "image": {
                            "type": "string",
                            "description": "Image of the item, if it exists",
                            "example": "https://cdn-img.mealme.ai/90d01ee227f564e9cfaeb4d5bc7f47260f6337de/68747470733a2f2f732e636f726e657273686f706170702e636f6d2f70726f647563742d696d616765732f323732353130382e6a70673f76657273696f6e49643d4f4e6d71622e55372e646b6d4a30777956706a6f454e54374b6571592e4d7962"
                          },
                          "description": {
                            "type": "string",
                            "description": "The item's description",
                            "example": "Lactaid Whole Milk"
                          },
                          "category": {
                            "type": "string",
                            "description": "The item's category",
                            "example": "Milk"
                          },
                          "price": {
                            "type": "integer",
                            "description": "The item's base price in cents",
                            "example": 639
                          },
                          "formatted_price": {
                            "type": "string",
                            "description": "This item's price formatted in the store's accepted currency",
                            "example": "$6.39"
                          },
                          "original_price": {
                            "type": "integer",
                            "description": "The product's original price. This will only be available if the product is currently on sale.",
                            "example": 700
                          },
                          "unit_size": {
                            "type": "number",
                            "description": "The unit size for this product",
                            "example": 1
                          },
                          "unit_of_measurement": {
                            "type": "string",
                            "description": "The unit of measurement used to measure the product's size (i.e. oz, lb, L, gal)",
                            "example": "gal"
                          },
                          "attributes": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "The list of dietary preferences for this product.",
                              "example": [
                                "Dairy-Free",
                                "Lactose-Free",
                                "Soy-Free"
                              ]
                            },
                            "description": ""
                          },
                          "upc_codes": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "The list of upc codes for this product",
                              "example": [
                                "12345"
                              ]
                            },
                            "description": ""
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object"
                },
                "menu_id": {
                  "type": "string",
                  "description": "The cart's menu ID",
                  "example": "gAAAAABisq4zjEh2BFV35vfjge4ZVQDyoBFZN-QvjUdpvEqBG5d4YSAwfBZ2oY3yQFdS3K7WyLnxuVPPhd5RlKwMGlQD3YpKCf9gzsBe6YcvzUD2mGoFR7Ucg8DT8OT1MkV_NkBKqPQ2YCFCGhGECsWfSatARHatM8XmN3oeTO7vNRQxoePbZxt0J_WMg7n24-kvMERLbtVpimIARjqu6AwVZ5yjr98TUWzP0rvQYQIUqCKHXPuxqW8NhEi0nPp2B_g10hCAkzPB6yYDvUTf-cp9VM9LXPXn6rtF3JherT-kBHwOE_Zh9ZAzZlqvnxl890Z-InD5h8Rw"
                },
                "quote": {
                  "example": {
                    "quote_id": "13881",
                    "time_estimate": {
                      "minimum": 15,
                      "maximum": 30,
                      "scheduled": [
                        {
                          "minimum": 1634760000,
                          "maximum": 1634770800,
                          "delivery_fee": {
                            "delivery_fee_flat": 199,
                            "delivery_fee_percent": 0,
                            "delivery_fee_taxable": true
                          }
                        },
                        {
                          "minimum": 1634803200,
                          "maximum": 1634814000,
                          "delivery_fee": {
                            "delivery_fee_flat": 199,
                            "delivery_fee_percent": 0,
                            "delivery_fee_taxable": true
                          }
                        }
                      ]
                    },
                    "sales_tax_percent": 10.5,
                    "delivery_fee": {
                      "delivery_fee_flat": 199,
                      "delivery_fee_percent": 0,
                      "delivery_fee_taxable": false
                    },
                    "service_fee": {
                      "service_fee_flat": 0,
                      "service_fee_percent": 5
                    },
                    "small_order_fee": {
                      "minimum_order_value": 1200,
                      "small_order_fee_flat": 200,
                      "small_order_fee_percent": 0
                    },
                    "order_minimum": 0,
                    "threshold_fees": [
                      {
                        "threshold_cents": 10000,
                        "threshold_fee_cents": 1000
                      },
                      {
                        "threshold_cents": 20000,
                        "threshold_fee_cents": 2000
                      }
                    ]
                  },
                  "allOf": [
                    {
                      "required": [
                        "accepts_delivery_tip",
                        "accepts_pickup_note",
                        "accepts_pickup_tip",
                        "asap_available",
                        "courier_quote",
                        "delivery_fee",
                        "first_party_quote",
                        "order_minimum",
                        "sales_tax_percent",
                        "service_fee",
                        "small_order_fee",
                        "third_party_quote",
                        "time_estimate"
                      ],
                      "properties": {
                        "time_estimate": {
                          "description": "",
                          "required": [
                            "maximum",
                            "minimum"
                          ],
                          "properties": {
                            "minimum": {
                              "type": "integer",
                              "description": "Lower bound of delivery time estimate (in minutes)"
                            },
                            "maximum": {
                              "type": "integer",
                              "description": "Upper bound of delivery time estimate (in minutes)"
                            },
                            "scheduled": {
                              "type": "array",
                              "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                              "items": {
                                "required": [
                                  "delivery_fee",
                                  "maximum",
                                  "minimum"
                                ],
                                "properties": {
                                  "minimum": {
                                    "type": "integer",
                                    "description": "Timestamp (seconds since 1970)"
                                  },
                                  "maximum": {
                                    "type": "integer",
                                    "description": "Timestamp (seconds since 1970)"
                                  },
                                  "delivery_fee": {
                                    "description": "",
                                    "required": [
                                      "delivery_fee_flat",
                                      "delivery_fee_percent"
                                    ],
                                    "properties": {
                                      "delivery_fee_flat": {
                                        "type": "integer",
                                        "description": "Delivery fee amount in cents"
                                      },
                                      "delivery_fee_percent": {
                                        "type": "number",
                                        "description": "Delivery fee percentage"
                                      },
                                      "delivery_fee_taxable": {
                                        "type": "boolean",
                                        "description": "Whether the delivery fee is taxable or not"
                                      },
                                      "threshold_fees": {
                                        "type": "array",
                                        "description": "Threshold Fees, if they exist",
                                        "items": {
                                          "required": [
                                            "threshold_cents",
                                            "threshold_fee_cents"
                                          ],
                                          "properties": {
                                            "threshold_cents": {
                                              "type": "integer",
                                              "description": "Subtotal that enacts a specific fee"
                                            },
                                            "threshold_fee_cents": {
                                              "type": "integer",
                                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          },
                          "type": "object"
                        },
                        "sales_tax_percent": {
                          "type": "integer",
                          "description": "Sales tax in percentage terms"
                        },
                        "delivery_fee": {
                          "description": "",
                          "required": [
                            "delivery_fee_flat",
                            "delivery_fee_percent"
                          ],
                          "properties": {
                            "delivery_fee_flat": {
                              "type": "integer",
                              "description": "Delivery fee amount in cents"
                            },
                            "delivery_fee_percent": {
                              "type": "number",
                              "description": "Delivery fee percentage"
                            },
                            "delivery_fee_taxable": {
                              "type": "boolean",
                              "description": "Whether the delivery fee is taxable or not"
                            },
                            "threshold_fees": {
                              "type": "array",
                              "description": "Threshold Fees, if they exist",
                              "items": {
                                "required": [
                                  "threshold_cents",
                                  "threshold_fee_cents"
                                ],
                                "properties": {
                                  "threshold_cents": {
                                    "type": "integer",
                                    "description": "Subtotal that enacts a specific fee"
                                  },
                                  "threshold_fee_cents": {
                                    "type": "integer",
                                    "description": "Flat delivery fee that will be charged for this threshold_cents"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          },
                          "type": "object"
                        },
                        "service_fee": {
                          "description": "",
                          "required": [
                            "service_fee_flat",
                            "service_fee_percent"
                          ],
                          "properties": {
                            "service_fee_flat": {
                              "type": "integer",
                              "description": "Service fee amount in cents"
                            },
                            "service_fee_percent": {
                              "type": "number",
                              "description": "Service fee percentage from 0 to 100"
                            },
                            "service_fee_min": {
                              "type": "integer",
                              "description": "Minimum service fee amount in cents"
                            },
                            "service_fee_max": {
                              "type": "integer",
                              "description": "Maximum service fee amount in cents"
                            },
                            "service_fee_taxable": {
                              "type": "boolean",
                              "description": "Whether the service fee is taxable or not"
                            },
                            "threshold_fees": {
                              "type": "array",
                              "description": "Threshold Fees, if they exist",
                              "items": {
                                "required": [
                                  "threshold_cents",
                                  "threshold_fee_cents"
                                ],
                                "properties": {
                                  "threshold_cents": {
                                    "type": "integer",
                                    "description": "Subtotal that enacts a specific fee"
                                  },
                                  "threshold_fee_cents": {
                                    "type": "integer",
                                    "description": "Flat delivery fee that will be charged for this threshold_cents"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          },
                          "type": "object"
                        },
                        "small_order_fee": {
                          "description": "",
                          "required": [
                            "minimum_order_value",
                            "small_order_fee_flat",
                            "small_order_fee_percent"
                          ],
                          "properties": {
                            "minimum_order_value": {
                              "type": "integer",
                              "description": "Minimum amount to not incur small order fee in cents",
                              "example": 0
                            },
                            "small_order_fee_flat": {
                              "type": "integer",
                              "description": "Small order fee amount in cents",
                              "example": 0
                            },
                            "small_order_fee_percent": {
                              "type": "number",
                              "description": "Small order fee percentage",
                              "example": 0
                            }
                          },
                          "type": "object"
                        },
                        "order_minimum": {
                          "type": "integer",
                          "description": "Minimum order amount in cents"
                        },
                        "min_tip": {
                          "type": "integer",
                          "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                        },
                        "asap_available": {
                          "type": "integer",
                          "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                        },
                        "first_party_quote": {
                          "type": "boolean",
                          "description": "Whether this quote is provided by the store"
                        },
                        "third_party_quote": {
                          "type": "boolean",
                          "description": "Whether this quote is provided by a third party service"
                        },
                        "courier_quote": {
                          "type": "boolean",
                          "description": "Whether this quote is provided by a last-mile delivery service."
                        },
                        "accepts_delivery_tip": {
                          "type": "boolean",
                          "description": "Whether a delivery tip is accepted."
                        },
                        "accepts_pickup_tip": {
                          "type": "boolean",
                          "description": "Whether a pickup tip is accepted."
                        },
                        "accepts_pickup_note": {
                          "type": "boolean",
                          "description": "Whether a pickup note is accepted."
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "description": ""
                },
                "grand_total": {
                  "type": "integer",
                  "description": "The cart's total price in cents, including any fees if `fetch_quotes=true`. The first product from each product list is used to calculate subtotal.",
                  "example": 500
                },
                "store": {
                  "required": [
                    "_id",
                    "address",
                    "aggregated_rating_count",
                    "cuisines",
                    "delivery_enabled",
                    "description",
                    "dollar_signs",
                    "food_photos",
                    "hours",
                    "is_open",
                    "local_hours",
                    "logo_photos",
                    "miles",
                    "name",
                    "offers_first_party_delivery",
                    "offers_third_party_delivery",
                    "phone_number",
                    "pickup_enabled",
                    "store_photos",
                    "supports_upc_codes",
                    "type",
                    "weighted_rating_value"
                  ],
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "MealMe ID of the store. Can be null in some cases.",
                      "example": "7c0360a5-20f4-470a-b8a0-124a509ad827"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the store",
                      "example": "7-Eleven"
                    },
                    "phone_number": {
                      "type": "integer",
                      "description": "Phone number of the store",
                      "example": 14158638332
                    },
                    "address": {
                      "description": "",
                      "required": [
                        "city",
                        "country",
                        "latitude",
                        "longitude",
                        "state",
                        "street_addr",
                        "street_addr_2",
                        "zipcode"
                      ],
                      "properties": {
                        "street_addr": {
                          "type": "string",
                          "description": "Street Address",
                          "example": "1390 Market Street"
                        },
                        "city": {
                          "type": "string",
                          "description": "City",
                          "example": "San Francisco"
                        },
                        "state": {
                          "type": "string",
                          "description": "State abbreviation",
                          "example": "CA"
                        },
                        "zipcode": {
                          "type": "string",
                          "description": "Zipcode",
                          "example": "94102"
                        },
                        "country": {
                          "type": "string",
                          "description": "Country abbreviation",
                          "example": "US"
                        },
                        "street_addr_2": {
                          "type": "string",
                          "description": "Street Address 2",
                          "example": "Apt. 123"
                        },
                        "latitude": {
                          "type": "number",
                          "description": "Latitude",
                          "example": 37.77709
                        },
                        "longitude": {
                          "type": "number",
                          "description": "Longitude",
                          "example": -122.4172976
                        }
                      },
                      "type": "object"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of the store, either \"grocery\" or \"restaurant\"",
                      "example": "grocery"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the store",
                      "example": "Local convenience store with snacks, beverages, and more."
                    },
                    "local_hours": {
                      "description": "",
                      "properties": {
                        "operational": {
                          "description": "",
                          "properties": {
                            "Monday": {
                              "type": "string",
                              "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                              "example": "09:30AM - 01:00AM"
                            },
                            "Tuesday": {
                              "type": "string",
                              "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                              "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                            },
                            "Wednesday": {
                              "type": "string",
                              "description": "If a restaurant is opens at midnight, it will show as above. ",
                              "example": "12:00AM - 4:00PM"
                            },
                            "Thursday": {
                              "type": "string",
                              "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                              "example": "8:00AM - 4:00AM"
                            },
                            "Friday": {
                              "type": "string",
                              "description": "If a restaurant is open until midnight, it will show as above.",
                              "example": "10:00AM - 12:00AM"
                            },
                            "Saturday": {
                              "type": "string",
                              "description": "If a restaurant shows “Closed“, it is closed for that day.",
                              "example": "Closed"
                            },
                            "Sunday": {
                              "type": "string",
                              "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                              "example": "Open 24 hours"
                            }
                          },
                          "type": "object"
                        },
                        "delivery": {
                          "description": "",
                          "properties": {
                            "Monday": {
                              "type": "string",
                              "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                              "example": "09:30AM - 01:00AM"
                            },
                            "Tuesday": {
                              "type": "string",
                              "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                              "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                            },
                            "Wednesday": {
                              "type": "string",
                              "description": "If a restaurant is opens at midnight, it will show as above. ",
                              "example": "12:00AM - 4:00PM"
                            },
                            "Thursday": {
                              "type": "string",
                              "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                              "example": "8:00AM - 4:00AM"
                            },
                            "Friday": {
                              "type": "string",
                              "description": "If a restaurant is open until midnight, it will show as above.",
                              "example": "10:00AM - 12:00AM"
                            },
                            "Saturday": {
                              "type": "string",
                              "description": "If a restaurant shows “Closed“, it is closed for that day.",
                              "example": "Closed"
                            },
                            "Sunday": {
                              "type": "string",
                              "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                              "example": "Open 24 hours"
                            }
                          },
                          "type": "object"
                        },
                        "pickup": {
                          "description": "",
                          "properties": {
                            "Monday": {
                              "type": "string",
                              "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                              "example": "09:30AM - 01:00AM"
                            },
                            "Tuesday": {
                              "type": "string",
                              "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                              "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                            },
                            "Wednesday": {
                              "type": "string",
                              "description": "If a restaurant is opens at midnight, it will show as above. ",
                              "example": "12:00AM - 4:00PM"
                            },
                            "Thursday": {
                              "type": "string",
                              "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                              "example": "8:00AM - 4:00AM"
                            },
                            "Friday": {
                              "type": "string",
                              "description": "If a restaurant is open until midnight, it will show as above.",
                              "example": "10:00AM - 12:00AM"
                            },
                            "Saturday": {
                              "type": "string",
                              "description": "If a restaurant shows “Closed“, it is closed for that day.",
                              "example": "Closed"
                            },
                            "Sunday": {
                              "type": "string",
                              "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                              "example": "Open 24 hours"
                            }
                          },
                          "type": "object"
                        },
                        "dine_in": {
                          "description": "",
                          "properties": {
                            "Monday": {
                              "type": "string",
                              "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                              "example": "09:30AM - 01:00AM"
                            },
                            "Tuesday": {
                              "type": "string",
                              "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                              "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                            },
                            "Wednesday": {
                              "type": "string",
                              "description": "If a restaurant is opens at midnight, it will show as above. ",
                              "example": "12:00AM - 4:00PM"
                            },
                            "Thursday": {
                              "type": "string",
                              "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                              "example": "8:00AM - 4:00AM"
                            },
                            "Friday": {
                              "type": "string",
                              "description": "If a restaurant is open until midnight, it will show as above.",
                              "example": "10:00AM - 12:00AM"
                            },
                            "Saturday": {
                              "type": "string",
                              "description": "If a restaurant shows “Closed“, it is closed for that day.",
                              "example": "Closed"
                            },
                            "Sunday": {
                              "type": "string",
                              "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                              "example": "Open 24 hours"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "hours": {
                      "description": "A mapping of quote ID(s) to their respective local hours.",
                      "allOf": [
                        {
                          "properties": {
                            "*": {
                              "description": "",
                              "properties": {
                                "operational": {
                                  "description": "",
                                  "properties": {
                                    "Monday": {
                                      "type": "string",
                                      "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                      "example": "09:30AM - 01:00AM"
                                    },
                                    "Tuesday": {
                                      "type": "string",
                                      "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                      "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                    },
                                    "Wednesday": {
                                      "type": "string",
                                      "description": "If a restaurant is opens at midnight, it will show as above. ",
                                      "example": "12:00AM - 4:00PM"
                                    },
                                    "Thursday": {
                                      "type": "string",
                                      "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                      "example": "8:00AM - 4:00AM"
                                    },
                                    "Friday": {
                                      "type": "string",
                                      "description": "If a restaurant is open until midnight, it will show as above.",
                                      "example": "10:00AM - 12:00AM"
                                    },
                                    "Saturday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                      "example": "Closed"
                                    },
                                    "Sunday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                      "example": "Open 24 hours"
                                    }
                                  },
                                  "type": "object"
                                },
                                "delivery": {
                                  "description": "",
                                  "properties": {
                                    "Monday": {
                                      "type": "string",
                                      "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                      "example": "09:30AM - 01:00AM"
                                    },
                                    "Tuesday": {
                                      "type": "string",
                                      "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                      "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                    },
                                    "Wednesday": {
                                      "type": "string",
                                      "description": "If a restaurant is opens at midnight, it will show as above. ",
                                      "example": "12:00AM - 4:00PM"
                                    },
                                    "Thursday": {
                                      "type": "string",
                                      "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                      "example": "8:00AM - 4:00AM"
                                    },
                                    "Friday": {
                                      "type": "string",
                                      "description": "If a restaurant is open until midnight, it will show as above.",
                                      "example": "10:00AM - 12:00AM"
                                    },
                                    "Saturday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                      "example": "Closed"
                                    },
                                    "Sunday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                      "example": "Open 24 hours"
                                    }
                                  },
                                  "type": "object"
                                },
                                "pickup": {
                                  "description": "",
                                  "properties": {
                                    "Monday": {
                                      "type": "string",
                                      "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                      "example": "09:30AM - 01:00AM"
                                    },
                                    "Tuesday": {
                                      "type": "string",
                                      "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                      "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                    },
                                    "Wednesday": {
                                      "type": "string",
                                      "description": "If a restaurant is opens at midnight, it will show as above. ",
                                      "example": "12:00AM - 4:00PM"
                                    },
                                    "Thursday": {
                                      "type": "string",
                                      "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                      "example": "8:00AM - 4:00AM"
                                    },
                                    "Friday": {
                                      "type": "string",
                                      "description": "If a restaurant is open until midnight, it will show as above.",
                                      "example": "10:00AM - 12:00AM"
                                    },
                                    "Saturday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                      "example": "Closed"
                                    },
                                    "Sunday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                      "example": "Open 24 hours"
                                    }
                                  },
                                  "type": "object"
                                },
                                "dine_in": {
                                  "description": "",
                                  "properties": {
                                    "Monday": {
                                      "type": "string",
                                      "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                      "example": "09:30AM - 01:00AM"
                                    },
                                    "Tuesday": {
                                      "type": "string",
                                      "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                      "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                    },
                                    "Wednesday": {
                                      "type": "string",
                                      "description": "If a restaurant is opens at midnight, it will show as above. ",
                                      "example": "12:00AM - 4:00PM"
                                    },
                                    "Thursday": {
                                      "type": "string",
                                      "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                      "example": "8:00AM - 4:00AM"
                                    },
                                    "Friday": {
                                      "type": "string",
                                      "description": "If a restaurant is open until midnight, it will show as above.",
                                      "example": "10:00AM - 12:00AM"
                                    },
                                    "Saturday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                      "example": "Closed"
                                    },
                                    "Sunday": {
                                      "type": "string",
                                      "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                      "example": "Open 24 hours"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "utc_hours": {
                      "description": "",
                      "properties": {
                        "operational": {
                          "description": "",
                          "required": [
                            "Friday",
                            "Monday",
                            "Saturday",
                            "Sunday",
                            "Thursday",
                            "Tuesday",
                            "Wednesday"
                          ],
                          "properties": {
                            "Monday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Monday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Tuesday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Tuesday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Wednesday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Wednesday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Thursday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Thursday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Friday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Friday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Saturday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Saturday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Sunday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Sunday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          },
                          "type": "object"
                        },
                        "delivery": {
                          "description": "",
                          "required": [
                            "Friday",
                            "Monday",
                            "Saturday",
                            "Sunday",
                            "Thursday",
                            "Tuesday",
                            "Wednesday"
                          ],
                          "properties": {
                            "Monday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Monday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Tuesday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Tuesday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Wednesday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Wednesday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Thursday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Thursday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Friday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Friday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Saturday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Saturday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Sunday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Sunday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          },
                          "type": "object"
                        },
                        "pickup": {
                          "description": "",
                          "required": [
                            "Friday",
                            "Monday",
                            "Saturday",
                            "Sunday",
                            "Thursday",
                            "Tuesday",
                            "Wednesday"
                          ],
                          "properties": {
                            "Monday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Monday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Tuesday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Tuesday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Wednesday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Wednesday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Thursday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Thursday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Friday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Friday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Saturday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Saturday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Sunday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Sunday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          },
                          "type": "object"
                        },
                        "dine_in": {
                          "description": "",
                          "required": [
                            "Friday",
                            "Monday",
                            "Saturday",
                            "Sunday",
                            "Thursday",
                            "Tuesday",
                            "Wednesday"
                          ],
                          "properties": {
                            "Monday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Monday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Tuesday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Tuesday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Wednesday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Wednesday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Thursday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Thursday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Friday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Friday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Saturday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Saturday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "Sunday": {
                              "type": "array",
                              "description": "The list of opening and closing times on Sunday.",
                              "items": {
                                "required": [
                                  "closed",
                                  "open"
                                ],
                                "properties": {
                                  "open": {
                                    "type": "string",
                                    "description": "The store opening UTC time.",
                                    "example": "01:00:00+00:00"
                                  },
                                  "closed": {
                                    "type": "string",
                                    "description": "The store closing UTC time.",
                                    "example": "17:00:00+00:00"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "cuisines": {
                      "type": "array",
                      "description": "The cuisine types",
                      "example": [
                        "Snacks",
                        "Convenience",
                        "Ice Cream"
                      ],
                      "items": {
                        "type": "string",
                        "description": "Cuisine of the store"
                      }
                    },
                    "food_photos": {
                      "type": "array",
                      "description": "Photos of the food at the store",
                      "example": [
                        "https://cdn-img.mealme.ai/f9ccb38a3d986eeb3f25e5b021d85a73c5d492ba/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f65303762376261372d663036612d346237302d383861302d3466633932656261346236322e6a706567"
                      ],
                      "items": {
                        "type": "string",
                        "description": "Photo of the store"
                      }
                    },
                    "logo_photos": {
                      "type": "array",
                      "description": "Photos of the store's logo",
                      "example": [
                        "https://cdn-img.mealme.ai/9a55bb89e411b1ef87210731a2e7f9fe850cc979/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f76313630313330373339332f656a6e376377756b74766537766e696867616b782e6a7067"
                      ],
                      "items": {
                        "type": "string",
                        "description": "Photo of the store's logo"
                      }
                    },
                    "store_photos": {
                      "type": "array",
                      "description": "Photos of the store",
                      "example": [
                        "https://cdn-img.mealme.ai/7aba9346a8f2e1d8ecf453a86fe3be1b53f98270/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f36393264376333342d626465362d343337612d616435342d3961303633656333666161642e6a706567"
                      ],
                      "items": {
                        "type": "string",
                        "description": "Photo of the store"
                      }
                    },
                    "dollar_signs": {
                      "type": "integer",
                      "description": "Estimated cost of the store, like 1 representing \"$\" or 2 representing \"$$\"",
                      "example": 1
                    },
                    "pickup_enabled": {
                      "type": "boolean",
                      "description": "Whether the store supports pickup.",
                      "example": false
                    },
                    "delivery_enabled": {
                      "type": "boolean",
                      "description": "Whether the store supports delivery.",
                      "example": true
                    },
                    "is_open": {
                      "type": "boolean",
                      "description": "Whether the store is open. If null, then there is no data available on whether the store is open.",
                      "example": true
                    },
                    "quotes": {
                      "description": "",
                      "properties": {
                        "cheapest_delivery": {
                          "example": {
                            "time_estimate": {
                              "minimum": 43,
                              "maximum": 45
                            },
                            "sales_tax_percent": 10.5,
                            "delivery_fee": {
                              "delivery_fee_flat": 0,
                              "delivery_fee_percent": 0,
                              "delivery_fee_taxable": false
                            },
                            "service_fee": {
                              "service_fee_flat": 0,
                              "service_fee_percent": 10,
                              "service_fee_min": 300,
                              "service_fee_max": 700,
                              "service_fee_taxable": false
                            },
                            "small_order_fee": {
                              "minimum_order_value": 0,
                              "small_order_fee_flat": 0,
                              "small_order_fee_percent": 0
                            },
                            "order_minimum": 1500,
                            "threshold_fees": [],
                            "asap_available": true
                          },
                          "allOf": [
                            {
                              "required": [
                                "accepts_delivery_tip",
                                "accepts_pickup_note",
                                "accepts_pickup_tip",
                                "asap_available",
                                "courier_quote",
                                "delivery_fee",
                                "first_party_quote",
                                "order_minimum",
                                "sales_tax_percent",
                                "service_fee",
                                "small_order_fee",
                                "third_party_quote",
                                "time_estimate"
                              ],
                              "properties": {
                                "time_estimate": {
                                  "description": "",
                                  "required": [
                                    "maximum",
                                    "minimum"
                                  ],
                                  "properties": {
                                    "minimum": {
                                      "type": "integer",
                                      "description": "Lower bound of delivery time estimate (in minutes)"
                                    },
                                    "maximum": {
                                      "type": "integer",
                                      "description": "Upper bound of delivery time estimate (in minutes)"
                                    },
                                    "scheduled": {
                                      "type": "array",
                                      "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                      "items": {
                                        "required": [
                                          "delivery_fee",
                                          "maximum",
                                          "minimum"
                                        ],
                                        "properties": {
                                          "minimum": {
                                            "type": "integer",
                                            "description": "Timestamp (seconds since 1970)"
                                          },
                                          "maximum": {
                                            "type": "integer",
                                            "description": "Timestamp (seconds since 1970)"
                                          },
                                          "delivery_fee": {
                                            "description": "",
                                            "required": [
                                              "delivery_fee_flat",
                                              "delivery_fee_percent"
                                            ],
                                            "properties": {
                                              "delivery_fee_flat": {
                                                "type": "integer",
                                                "description": "Delivery fee amount in cents"
                                              },
                                              "delivery_fee_percent": {
                                                "type": "number",
                                                "description": "Delivery fee percentage"
                                              },
                                              "delivery_fee_taxable": {
                                                "type": "boolean",
                                                "description": "Whether the delivery fee is taxable or not"
                                              },
                                              "threshold_fees": {
                                                "type": "array",
                                                "description": "Threshold Fees, if they exist",
                                                "items": {
                                                  "required": [
                                                    "threshold_cents",
                                                    "threshold_fee_cents"
                                                  ],
                                                  "properties": {
                                                    "threshold_cents": {
                                                      "type": "integer",
                                                      "description": "Subtotal that enacts a specific fee"
                                                    },
                                                    "threshold_fee_cents": {
                                                      "type": "integer",
                                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "sales_tax_percent": {
                                  "type": "integer",
                                  "description": "Sales tax in percentage terms"
                                },
                                "delivery_fee": {
                                  "description": "",
                                  "required": [
                                    "delivery_fee_flat",
                                    "delivery_fee_percent"
                                  ],
                                  "properties": {
                                    "delivery_fee_flat": {
                                      "type": "integer",
                                      "description": "Delivery fee amount in cents"
                                    },
                                    "delivery_fee_percent": {
                                      "type": "number",
                                      "description": "Delivery fee percentage"
                                    },
                                    "delivery_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the delivery fee is taxable or not"
                                    },
                                    "threshold_fees": {
                                      "type": "array",
                                      "description": "Threshold Fees, if they exist",
                                      "items": {
                                        "required": [
                                          "threshold_cents",
                                          "threshold_fee_cents"
                                        ],
                                        "properties": {
                                          "threshold_cents": {
                                            "type": "integer",
                                            "description": "Subtotal that enacts a specific fee"
                                          },
                                          "threshold_fee_cents": {
                                            "type": "integer",
                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "service_fee": {
                                  "description": "",
                                  "required": [
                                    "service_fee_flat",
                                    "service_fee_percent"
                                  ],
                                  "properties": {
                                    "service_fee_flat": {
                                      "type": "integer",
                                      "description": "Service fee amount in cents"
                                    },
                                    "service_fee_percent": {
                                      "type": "number",
                                      "description": "Service fee percentage from 0 to 100"
                                    },
                                    "service_fee_min": {
                                      "type": "integer",
                                      "description": "Minimum service fee amount in cents"
                                    },
                                    "service_fee_max": {
                                      "type": "integer",
                                      "description": "Maximum service fee amount in cents"
                                    },
                                    "service_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the service fee is taxable or not"
                                    },
                                    "threshold_fees": {
                                      "type": "array",
                                      "description": "Threshold Fees, if they exist",
                                      "items": {
                                        "required": [
                                          "threshold_cents",
                                          "threshold_fee_cents"
                                        ],
                                        "properties": {
                                          "threshold_cents": {
                                            "type": "integer",
                                            "description": "Subtotal that enacts a specific fee"
                                          },
                                          "threshold_fee_cents": {
                                            "type": "integer",
                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "small_order_fee": {
                                  "description": "",
                                  "required": [
                                    "minimum_order_value",
                                    "small_order_fee_flat",
                                    "small_order_fee_percent"
                                  ],
                                  "properties": {
                                    "minimum_order_value": {
                                      "type": "integer",
                                      "description": "Minimum amount to not incur small order fee in cents",
                                      "example": 0
                                    },
                                    "small_order_fee_flat": {
                                      "type": "integer",
                                      "description": "Small order fee amount in cents",
                                      "example": 0
                                    },
                                    "small_order_fee_percent": {
                                      "type": "number",
                                      "description": "Small order fee percentage",
                                      "example": 0
                                    }
                                  },
                                  "type": "object"
                                },
                                "order_minimum": {
                                  "type": "integer",
                                  "description": "Minimum order amount in cents"
                                },
                                "min_tip": {
                                  "type": "integer",
                                  "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                },
                                "asap_available": {
                                  "type": "integer",
                                  "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                },
                                "first_party_quote": {
                                  "type": "boolean",
                                  "description": "Whether this quote is provided by the store"
                                },
                                "third_party_quote": {
                                  "type": "boolean",
                                  "description": "Whether this quote is provided by a third party service"
                                },
                                "courier_quote": {
                                  "type": "boolean",
                                  "description": "Whether this quote is provided by a last-mile delivery service."
                                },
                                "accepts_delivery_tip": {
                                  "type": "boolean",
                                  "description": "Whether a delivery tip is accepted."
                                },
                                "accepts_pickup_tip": {
                                  "type": "boolean",
                                  "description": "Whether a pickup tip is accepted."
                                },
                                "accepts_pickup_note": {
                                  "type": "boolean",
                                  "description": "Whether a pickup note is accepted."
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "description": ""
                        },
                        "fastest_delivery": {
                          "example": {
                            "time_estimate": {
                              "minimum": 15,
                              "maximum": 30
                            },
                            "sales_tax_percent": 10.5,
                            "delivery_fee": {
                              "delivery_fee_flat": 199,
                              "delivery_fee_percent": 0,
                              "delivery_fee_taxable": false
                            },
                            "service_fee": {
                              "service_fee_flat": 0,
                              "service_fee_percent": 5
                            },
                            "small_order_fee": {
                              "minimum_order_value": 1200,
                              "small_order_fee_flat": 200,
                              "small_order_fee_percent": 0
                            },
                            "order_minimum": 0,
                            "threshold_fees": [
                              {
                                "threshold_cents": 10000,
                                "threshold_fee_cents": 1000
                              },
                              {
                                "threshold_cents": 20000,
                                "threshold_fee_cents": 2000
                              }
                            ]
                          },
                          "allOf": [
                            {
                              "required": [
                                "accepts_delivery_tip",
                                "accepts_pickup_note",
                                "accepts_pickup_tip",
                                "asap_available",
                                "courier_quote",
                                "delivery_fee",
                                "first_party_quote",
                                "order_minimum",
                                "sales_tax_percent",
                                "service_fee",
                                "small_order_fee",
                                "third_party_quote",
                                "time_estimate"
                              ],
                              "properties": {
                                "time_estimate": {
                                  "description": "",
                                  "required": [
                                    "maximum",
                                    "minimum"
                                  ],
                                  "properties": {
                                    "minimum": {
                                      "type": "integer",
                                      "description": "Lower bound of delivery time estimate (in minutes)"
                                    },
                                    "maximum": {
                                      "type": "integer",
                                      "description": "Upper bound of delivery time estimate (in minutes)"
                                    },
                                    "scheduled": {
                                      "type": "array",
                                      "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                      "items": {
                                        "required": [
                                          "delivery_fee",
                                          "maximum",
                                          "minimum"
                                        ],
                                        "properties": {
                                          "minimum": {
                                            "type": "integer",
                                            "description": "Timestamp (seconds since 1970)"
                                          },
                                          "maximum": {
                                            "type": "integer",
                                            "description": "Timestamp (seconds since 1970)"
                                          },
                                          "delivery_fee": {
                                            "description": "",
                                            "required": [
                                              "delivery_fee_flat",
                                              "delivery_fee_percent"
                                            ],
                                            "properties": {
                                              "delivery_fee_flat": {
                                                "type": "integer",
                                                "description": "Delivery fee amount in cents"
                                              },
                                              "delivery_fee_percent": {
                                                "type": "number",
                                                "description": "Delivery fee percentage"
                                              },
                                              "delivery_fee_taxable": {
                                                "type": "boolean",
                                                "description": "Whether the delivery fee is taxable or not"
                                              },
                                              "threshold_fees": {
                                                "type": "array",
                                                "description": "Threshold Fees, if they exist",
                                                "items": {
                                                  "required": [
                                                    "threshold_cents",
                                                    "threshold_fee_cents"
                                                  ],
                                                  "properties": {
                                                    "threshold_cents": {
                                                      "type": "integer",
                                                      "description": "Subtotal that enacts a specific fee"
                                                    },
                                                    "threshold_fee_cents": {
                                                      "type": "integer",
                                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "sales_tax_percent": {
                                  "type": "integer",
                                  "description": "Sales tax in percentage terms"
                                },
                                "delivery_fee": {
                                  "description": "",
                                  "required": [
                                    "delivery_fee_flat",
                                    "delivery_fee_percent"
                                  ],
                                  "properties": {
                                    "delivery_fee_flat": {
                                      "type": "integer",
                                      "description": "Delivery fee amount in cents"
                                    },
                                    "delivery_fee_percent": {
                                      "type": "number",
                                      "description": "Delivery fee percentage"
                                    },
                                    "delivery_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the delivery fee is taxable or not"
                                    },
                                    "threshold_fees": {
                                      "type": "array",
                                      "description": "Threshold Fees, if they exist",
                                      "items": {
                                        "required": [
                                          "threshold_cents",
                                          "threshold_fee_cents"
                                        ],
                                        "properties": {
                                          "threshold_cents": {
                                            "type": "integer",
                                            "description": "Subtotal that enacts a specific fee"
                                          },
                                          "threshold_fee_cents": {
                                            "type": "integer",
                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "service_fee": {
                                  "description": "",
                                  "required": [
                                    "service_fee_flat",
                                    "service_fee_percent"
                                  ],
                                  "properties": {
                                    "service_fee_flat": {
                                      "type": "integer",
                                      "description": "Service fee amount in cents"
                                    },
                                    "service_fee_percent": {
                                      "type": "number",
                                      "description": "Service fee percentage from 0 to 100"
                                    },
                                    "service_fee_min": {
                                      "type": "integer",
                                      "description": "Minimum service fee amount in cents"
                                    },
                                    "service_fee_max": {
                                      "type": "integer",
                                      "description": "Maximum service fee amount in cents"
                                    },
                                    "service_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the service fee is taxable or not"
                                    },
                                    "threshold_fees": {
                                      "type": "array",
                                      "description": "Threshold Fees, if they exist",
                                      "items": {
                                        "required": [
                                          "threshold_cents",
                                          "threshold_fee_cents"
                                        ],
                                        "properties": {
                                          "threshold_cents": {
                                            "type": "integer",
                                            "description": "Subtotal that enacts a specific fee"
                                          },
                                          "threshold_fee_cents": {
                                            "type": "integer",
                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "small_order_fee": {
                                  "description": "",
                                  "required": [
                                    "minimum_order_value",
                                    "small_order_fee_flat",
                                    "small_order_fee_percent"
                                  ],
                                  "properties": {
                                    "minimum_order_value": {
                                      "type": "integer",
                                      "description": "Minimum amount to not incur small order fee in cents",
                                      "example": 0
                                    },
                                    "small_order_fee_flat": {
                                      "type": "integer",
                                      "description": "Small order fee amount in cents",
                                      "example": 0
                                    },
                                    "small_order_fee_percent": {
                                      "type": "number",
                                      "description": "Small order fee percentage",
                                      "example": 0
                                    }
                                  },
                                  "type": "object"
                                },
                                "order_minimum": {
                                  "type": "integer",
                                  "description": "Minimum order amount in cents"
                                },
                                "min_tip": {
                                  "type": "integer",
                                  "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                },
                                "asap_available": {
                                  "type": "integer",
                                  "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                },
                                "first_party_quote": {
                                  "type": "boolean",
                                  "description": "Whether this quote is provided by the store"
                                },
                                "third_party_quote": {
                                  "type": "boolean",
                                  "description": "Whether this quote is provided by a third party service"
                                },
                                "courier_quote": {
                                  "type": "boolean",
                                  "description": "Whether this quote is provided by a last-mile delivery service."
                                },
                                "accepts_delivery_tip": {
                                  "type": "boolean",
                                  "description": "Whether a delivery tip is accepted."
                                },
                                "accepts_pickup_tip": {
                                  "type": "boolean",
                                  "description": "Whether a pickup tip is accepted."
                                },
                                "accepts_pickup_note": {
                                  "type": "boolean",
                                  "description": "Whether a pickup note is accepted."
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "description": ""
                        },
                        "pickup": {
                          "example": {
                            "time_estimate": {
                              "minimum": 5,
                              "maximum": 5
                            },
                            "sales_tax_percent": 10.5,
                            "delivery_fee": {
                              "delivery_fee_flat": 0,
                              "delivery_fee_percent": 0,
                              "delivery_fee_taxable": false
                            },
                            "service_fee": {
                              "service_fee_flat": 0,
                              "service_fee_percent": 0
                            },
                            "small_order_fee": {
                              "minimum_order_value": 1200,
                              "small_order_fee_flat": 200,
                              "small_order_fee_percent": 0
                            },
                            "order_minimum": 100,
                            "threshold_fees": []
                          },
                          "allOf": [
                            {
                              "required": [
                                "accepts_delivery_tip",
                                "accepts_pickup_note",
                                "accepts_pickup_tip",
                                "asap_available",
                                "courier_quote",
                                "delivery_fee",
                                "first_party_quote",
                                "order_minimum",
                                "sales_tax_percent",
                                "service_fee",
                                "small_order_fee",
                                "third_party_quote",
                                "time_estimate"
                              ],
                              "properties": {
                                "time_estimate": {
                                  "description": "",
                                  "required": [
                                    "maximum",
                                    "minimum"
                                  ],
                                  "properties": {
                                    "minimum": {
                                      "type": "integer",
                                      "description": "Lower bound of delivery time estimate (in minutes)"
                                    },
                                    "maximum": {
                                      "type": "integer",
                                      "description": "Upper bound of delivery time estimate (in minutes)"
                                    },
                                    "scheduled": {
                                      "type": "array",
                                      "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                      "items": {
                                        "required": [
                                          "delivery_fee",
                                          "maximum",
                                          "minimum"
                                        ],
                                        "properties": {
                                          "minimum": {
                                            "type": "integer",
                                            "description": "Timestamp (seconds since 1970)"
                                          },
                                          "maximum": {
                                            "type": "integer",
                                            "description": "Timestamp (seconds since 1970)"
                                          },
                                          "delivery_fee": {
                                            "description": "",
                                            "required": [
                                              "delivery_fee_flat",
                                              "delivery_fee_percent"
                                            ],
                                            "properties": {
                                              "delivery_fee_flat": {
                                                "type": "integer",
                                                "description": "Delivery fee amount in cents"
                                              },
                                              "delivery_fee_percent": {
                                                "type": "number",
                                                "description": "Delivery fee percentage"
                                              },
                                              "delivery_fee_taxable": {
                                                "type": "boolean",
                                                "description": "Whether the delivery fee is taxable or not"
                                              },
                                              "threshold_fees": {
                                                "type": "array",
                                                "description": "Threshold Fees, if they exist",
                                                "items": {
                                                  "required": [
                                                    "threshold_cents",
                                                    "threshold_fee_cents"
                                                  ],
                                                  "properties": {
                                                    "threshold_cents": {
                                                      "type": "integer",
                                                      "description": "Subtotal that enacts a specific fee"
                                                    },
                                                    "threshold_fee_cents": {
                                                      "type": "integer",
                                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "sales_tax_percent": {
                                  "type": "integer",
                                  "description": "Sales tax in percentage terms"
                                },
                                "delivery_fee": {
                                  "description": "",
                                  "required": [
                                    "delivery_fee_flat",
                                    "delivery_fee_percent"
                                  ],
                                  "properties": {
                                    "delivery_fee_flat": {
                                      "type": "integer",
                                      "description": "Delivery fee amount in cents"
                                    },
                                    "delivery_fee_percent": {
                                      "type": "number",
                                      "description": "Delivery fee percentage"
                                    },
                                    "delivery_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the delivery fee is taxable or not"
                                    },
                                    "threshold_fees": {
                                      "type": "array",
                                      "description": "Threshold Fees, if they exist",
                                      "items": {
                                        "required": [
                                          "threshold_cents",
                                          "threshold_fee_cents"
                                        ],
                                        "properties": {
                                          "threshold_cents": {
                                            "type": "integer",
                                            "description": "Subtotal that enacts a specific fee"
                                          },
                                          "threshold_fee_cents": {
                                            "type": "integer",
                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "service_fee": {
                                  "description": "",
                                  "required": [
                                    "service_fee_flat",
                                    "service_fee_percent"
                                  ],
                                  "properties": {
                                    "service_fee_flat": {
                                      "type": "integer",
                                      "description": "Service fee amount in cents"
                                    },
                                    "service_fee_percent": {
                                      "type": "number",
                                      "description": "Service fee percentage from 0 to 100"
                                    },
                                    "service_fee_min": {
                                      "type": "integer",
                                      "description": "Minimum service fee amount in cents"
                                    },
                                    "service_fee_max": {
                                      "type": "integer",
                                      "description": "Maximum service fee amount in cents"
                                    },
                                    "service_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the service fee is taxable or not"
                                    },
                                    "threshold_fees": {
                                      "type": "array",
                                      "description": "Threshold Fees, if they exist",
                                      "items": {
                                        "required": [
                                          "threshold_cents",
                                          "threshold_fee_cents"
                                        ],
                                        "properties": {
                                          "threshold_cents": {
                                            "type": "integer",
                                            "description": "Subtotal that enacts a specific fee"
                                          },
                                          "threshold_fee_cents": {
                                            "type": "integer",
                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                },
                                "small_order_fee": {
                                  "description": "",
                                  "required": [
                                    "minimum_order_value",
                                    "small_order_fee_flat",
                                    "small_order_fee_percent"
                                  ],
                                  "properties": {
                                    "minimum_order_value": {
                                      "type": "integer",
                                      "description": "Minimum amount to not incur small order fee in cents",
                                      "example": 0
                                    },
                                    "small_order_fee_flat": {
                                      "type": "integer",
                                      "description": "Small order fee amount in cents",
                                      "example": 0
                                    },
                                    "small_order_fee_percent": {
                                      "type": "number",
                                      "description": "Small order fee percentage",
                                      "example": 0
                                    }
                                  },
                                  "type": "object"
                                },
                                "order_minimum": {
                                  "type": "integer",
                                  "description": "Minimum order amount in cents"
                                },
                                "min_tip": {
                                  "type": "integer",
                                  "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                                },
                                "asap_available": {
                                  "type": "integer",
                                  "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                                },
                                "first_party_quote": {
                                  "type": "boolean",
                                  "description": "Whether this quote is provided by the store"
                                },
                                "third_party_quote": {
                                  "type": "boolean",
                                  "description": "Whether this quote is provided by a third party service"
                                },
                                "courier_quote": {
                                  "type": "boolean",
                                  "description": "Whether this quote is provided by a last-mile delivery service."
                                },
                                "accepts_delivery_tip": {
                                  "type": "boolean",
                                  "description": "Whether a delivery tip is accepted."
                                },
                                "accepts_pickup_tip": {
                                  "type": "boolean",
                                  "description": "Whether a pickup tip is accepted."
                                },
                                "accepts_pickup_note": {
                                  "type": "boolean",
                                  "description": "Whether a pickup note is accepted."
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "description": ""
                        }
                      },
                      "type": "object"
                    },
                    "quote_types": {
                      "description": "",
                      "properties": {
                        "<quote id>": {
                          "type": "array",
                          "description": "The list of quote types available for this quote id.",
                          "items": {
                            "type": "string",
                            "description": "Quote Type",
                            "example": "pickup",
                            "enum": [
                              "pickup",
                              "delivery"
                            ]
                          }
                        }
                      },
                      "type": "object"
                    },
                    "offers_first_party_delivery": {
                      "type": "boolean",
                      "description": "Whether or not the store delivers directly.",
                      "example": false
                    },
                    "offers_third_party_delivery": {
                      "type": "boolean",
                      "description": "Whether or not the store delivers with third-party services.",
                      "example": false
                    },
                    "miles": {
                      "type": "number",
                      "description": "Miles from the user to the store",
                      "example": 0.23
                    },
                    "weighted_rating_value": {
                      "type": "number",
                      "description": "The weighted average rating of this store across all the websites it appears on. Floating-point from 1 to 5 (inclusive) or 0.",
                      "example": 4.83
                    },
                    "aggregated_rating_count": {
                      "type": "integer",
                      "description": "Number of total aggregated ratings for this store across all the websites it appears on. Non-negative integer.",
                      "example": 956
                    },
                    "supports_upc_codes": {
                      "type": "boolean",
                      "description": "Whether the store's inventory supports UPC codes.",
                      "example": false
                    }
                  },
                  "type": "object",
                  "description": ""
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Store_Cart": {
        "required": [
          "grand_total",
          "menu_id",
          "products",
          "store"
        ],
        "properties": {
          "products": {
            "description": "",
            "required": [
              "*"
            ],
            "properties": {
              "*": {
                "type": "array",
                "description": "List of product search results for a cart item query, sorted by relevance.",
                "items": {
                  "required": [
                    "attributes",
                    "category",
                    "description",
                    "formatted_price",
                    "image",
                    "item_name",
                    "original_price",
                    "price",
                    "product_id",
                    "unit_of_measurement",
                    "unit_size",
                    "upc_codes"
                  ],
                  "properties": {
                    "item_name": {
                      "type": "string",
                      "description": "The item's name",
                      "example": "Lactaid Whole Milk"
                    },
                    "product_id": {
                      "type": "string",
                      "description": "The MealMe Product ID",
                      "example": "gAAAAABi4c1c6Pha-EhoxdT36F0eojiGoUYNyt4Skz83vlTpmj4gRLkhlyzEB80wgWDhj_GRvZhVf12yKy17ApsrouqUJJAhfrbe9g5yQcHq6Y5fy59816Z0D71mXJC4_uOXzscvquBooBvavPEvZoz9TnsDIBZJ1zrNJAUDQUCsG0W-dWgmNfxDnx880FmC-e2ueJpMa9udEEyTFnptgQXLR5_enfIWFMacBmKzy72lzOak5WmxJtJ3F0DCJPRlSaEKPl3tYCDx5amzbbR-1xh7Q9tBCxycIEfjtjQRUEHYiGaNeWHwRaNk5Mve6qOC6ZAxAG_1CismNc3Svx5N7ztAfHbGbHGfvcfHIw1KSegbctfXGsDjGofcDM7gMpu-7H0vjgqhVI_Mbg1OJ71rK0mtvE9rQbnP-Tosdn2oM70DM5Y69fuS8eFDqoY1kkCtjZJXXQ8_erqOkjMgXZ7HJCAm3uYGd8P_GZqy2hzfpSBD6MIxlAuTfOVHySiC1_P6I97HAnaYiO90QFWFeAfI2Dx6ZB4p9ZYakdoiexpYLA-uUJ7jB7OT3Qlvuuh4VOmxdHOtgawgwYQe"
                    },
                    "image": {
                      "type": "string",
                      "description": "Image of the item, if it exists",
                      "example": "https://cdn-img.mealme.ai/90d01ee227f564e9cfaeb4d5bc7f47260f6337de/68747470733a2f2f732e636f726e657273686f706170702e636f6d2f70726f647563742d696d616765732f323732353130382e6a70673f76657273696f6e49643d4f4e6d71622e55372e646b6d4a30777956706a6f454e54374b6571592e4d7962"
                    },
                    "description": {
                      "type": "string",
                      "description": "The item's description",
                      "example": "Lactaid Whole Milk"
                    },
                    "category": {
                      "type": "string",
                      "description": "The item's category",
                      "example": "Milk"
                    },
                    "price": {
                      "type": "integer",
                      "description": "The item's base price in cents",
                      "example": 639
                    },
                    "formatted_price": {
                      "type": "string",
                      "description": "This item's price formatted in the store's accepted currency",
                      "example": "$6.39"
                    },
                    "original_price": {
                      "type": "integer",
                      "description": "The product's original price. This will only be available if the product is currently on sale.",
                      "example": 700
                    },
                    "unit_size": {
                      "type": "number",
                      "description": "The unit size for this product",
                      "example": 1
                    },
                    "unit_of_measurement": {
                      "type": "string",
                      "description": "The unit of measurement used to measure the product's size (i.e. oz, lb, L, gal)",
                      "example": "gal"
                    },
                    "attributes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "The list of dietary preferences for this product.",
                        "example": [
                          "Dairy-Free",
                          "Lactose-Free",
                          "Soy-Free"
                        ]
                      },
                      "description": ""
                    },
                    "upc_codes": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "The list of upc codes for this product",
                        "example": [
                          "12345"
                        ]
                      },
                      "description": ""
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          },
          "menu_id": {
            "type": "string",
            "description": "The cart's menu ID",
            "example": "gAAAAABisq4zjEh2BFV35vfjge4ZVQDyoBFZN-QvjUdpvEqBG5d4YSAwfBZ2oY3yQFdS3K7WyLnxuVPPhd5RlKwMGlQD3YpKCf9gzsBe6YcvzUD2mGoFR7Ucg8DT8OT1MkV_NkBKqPQ2YCFCGhGECsWfSatARHatM8XmN3oeTO7vNRQxoePbZxt0J_WMg7n24-kvMERLbtVpimIARjqu6AwVZ5yjr98TUWzP0rvQYQIUqCKHXPuxqW8NhEi0nPp2B_g10hCAkzPB6yYDvUTf-cp9VM9LXPXn6rtF3JherT-kBHwOE_Zh9ZAzZlqvnxl890Z-InD5h8Rw"
          },
          "quote": {
            "example": {
              "quote_id": "13881",
              "time_estimate": {
                "minimum": 15,
                "maximum": 30,
                "scheduled": [
                  {
                    "minimum": 1634760000,
                    "maximum": 1634770800,
                    "delivery_fee": {
                      "delivery_fee_flat": 199,
                      "delivery_fee_percent": 0,
                      "delivery_fee_taxable": true
                    }
                  },
                  {
                    "minimum": 1634803200,
                    "maximum": 1634814000,
                    "delivery_fee": {
                      "delivery_fee_flat": 199,
                      "delivery_fee_percent": 0,
                      "delivery_fee_taxable": true
                    }
                  }
                ]
              },
              "sales_tax_percent": 10.5,
              "delivery_fee": {
                "delivery_fee_flat": 199,
                "delivery_fee_percent": 0,
                "delivery_fee_taxable": false
              },
              "service_fee": {
                "service_fee_flat": 0,
                "service_fee_percent": 5
              },
              "small_order_fee": {
                "minimum_order_value": 1200,
                "small_order_fee_flat": 200,
                "small_order_fee_percent": 0
              },
              "order_minimum": 0,
              "threshold_fees": [
                {
                  "threshold_cents": 10000,
                  "threshold_fee_cents": 1000
                },
                {
                  "threshold_cents": 20000,
                  "threshold_fee_cents": 2000
                }
              ]
            },
            "allOf": [
              {
                "required": [
                  "accepts_delivery_tip",
                  "accepts_pickup_note",
                  "accepts_pickup_tip",
                  "asap_available",
                  "courier_quote",
                  "delivery_fee",
                  "first_party_quote",
                  "order_minimum",
                  "sales_tax_percent",
                  "service_fee",
                  "small_order_fee",
                  "third_party_quote",
                  "time_estimate"
                ],
                "properties": {
                  "time_estimate": {
                    "description": "",
                    "required": [
                      "maximum",
                      "minimum"
                    ],
                    "properties": {
                      "minimum": {
                        "type": "integer",
                        "description": "Lower bound of delivery time estimate (in minutes)"
                      },
                      "maximum": {
                        "type": "integer",
                        "description": "Upper bound of delivery time estimate (in minutes)"
                      },
                      "scheduled": {
                        "type": "array",
                        "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                        "items": {
                          "required": [
                            "delivery_fee",
                            "maximum",
                            "minimum"
                          ],
                          "properties": {
                            "minimum": {
                              "type": "integer",
                              "description": "Timestamp (seconds since 1970)"
                            },
                            "maximum": {
                              "type": "integer",
                              "description": "Timestamp (seconds since 1970)"
                            },
                            "delivery_fee": {
                              "description": "",
                              "required": [
                                "delivery_fee_flat",
                                "delivery_fee_percent"
                              ],
                              "properties": {
                                "delivery_fee_flat": {
                                  "type": "integer",
                                  "description": "Delivery fee amount in cents"
                                },
                                "delivery_fee_percent": {
                                  "type": "number",
                                  "description": "Delivery fee percentage"
                                },
                                "delivery_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether the delivery fee is taxable or not"
                                },
                                "threshold_fees": {
                                  "type": "array",
                                  "description": "Threshold Fees, if they exist",
                                  "items": {
                                    "required": [
                                      "threshold_cents",
                                      "threshold_fee_cents"
                                    ],
                                    "properties": {
                                      "threshold_cents": {
                                        "type": "integer",
                                        "description": "Subtotal that enacts a specific fee"
                                      },
                                      "threshold_fee_cents": {
                                        "type": "integer",
                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "sales_tax_percent": {
                    "type": "integer",
                    "description": "Sales tax in percentage terms"
                  },
                  "delivery_fee": {
                    "description": "",
                    "required": [
                      "delivery_fee_flat",
                      "delivery_fee_percent"
                    ],
                    "properties": {
                      "delivery_fee_flat": {
                        "type": "integer",
                        "description": "Delivery fee amount in cents"
                      },
                      "delivery_fee_percent": {
                        "type": "number",
                        "description": "Delivery fee percentage"
                      },
                      "delivery_fee_taxable": {
                        "type": "boolean",
                        "description": "Whether the delivery fee is taxable or not"
                      },
                      "threshold_fees": {
                        "type": "array",
                        "description": "Threshold Fees, if they exist",
                        "items": {
                          "required": [
                            "threshold_cents",
                            "threshold_fee_cents"
                          ],
                          "properties": {
                            "threshold_cents": {
                              "type": "integer",
                              "description": "Subtotal that enacts a specific fee"
                            },
                            "threshold_fee_cents": {
                              "type": "integer",
                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "service_fee": {
                    "description": "",
                    "required": [
                      "service_fee_flat",
                      "service_fee_percent"
                    ],
                    "properties": {
                      "service_fee_flat": {
                        "type": "integer",
                        "description": "Service fee amount in cents"
                      },
                      "service_fee_percent": {
                        "type": "number",
                        "description": "Service fee percentage from 0 to 100"
                      },
                      "service_fee_min": {
                        "type": "integer",
                        "description": "Minimum service fee amount in cents"
                      },
                      "service_fee_max": {
                        "type": "integer",
                        "description": "Maximum service fee amount in cents"
                      },
                      "service_fee_taxable": {
                        "type": "boolean",
                        "description": "Whether the service fee is taxable or not"
                      },
                      "threshold_fees": {
                        "type": "array",
                        "description": "Threshold Fees, if they exist",
                        "items": {
                          "required": [
                            "threshold_cents",
                            "threshold_fee_cents"
                          ],
                          "properties": {
                            "threshold_cents": {
                              "type": "integer",
                              "description": "Subtotal that enacts a specific fee"
                            },
                            "threshold_fee_cents": {
                              "type": "integer",
                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "small_order_fee": {
                    "description": "",
                    "required": [
                      "minimum_order_value",
                      "small_order_fee_flat",
                      "small_order_fee_percent"
                    ],
                    "properties": {
                      "minimum_order_value": {
                        "type": "integer",
                        "description": "Minimum amount to not incur small order fee in cents",
                        "example": 0
                      },
                      "small_order_fee_flat": {
                        "type": "integer",
                        "description": "Small order fee amount in cents",
                        "example": 0
                      },
                      "small_order_fee_percent": {
                        "type": "number",
                        "description": "Small order fee percentage",
                        "example": 0
                      }
                    },
                    "type": "object"
                  },
                  "order_minimum": {
                    "type": "integer",
                    "description": "Minimum order amount in cents"
                  },
                  "min_tip": {
                    "type": "integer",
                    "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                  },
                  "asap_available": {
                    "type": "integer",
                    "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                  },
                  "first_party_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by the store"
                  },
                  "third_party_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by a third party service"
                  },
                  "courier_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by a last-mile delivery service."
                  },
                  "accepts_delivery_tip": {
                    "type": "boolean",
                    "description": "Whether a delivery tip is accepted."
                  },
                  "accepts_pickup_tip": {
                    "type": "boolean",
                    "description": "Whether a pickup tip is accepted."
                  },
                  "accepts_pickup_note": {
                    "type": "boolean",
                    "description": "Whether a pickup note is accepted."
                  }
                },
                "type": "object"
              }
            ],
            "description": ""
          },
          "grand_total": {
            "type": "integer",
            "description": "The cart's total price in cents, including any fees if `fetch_quotes=true`. The first product from each product list is used to calculate subtotal.",
            "example": 500
          },
          "store": {
            "required": [
              "_id",
              "address",
              "aggregated_rating_count",
              "cuisines",
              "delivery_enabled",
              "description",
              "dollar_signs",
              "food_photos",
              "hours",
              "is_open",
              "local_hours",
              "logo_photos",
              "miles",
              "name",
              "offers_first_party_delivery",
              "offers_third_party_delivery",
              "phone_number",
              "pickup_enabled",
              "store_photos",
              "supports_upc_codes",
              "type",
              "weighted_rating_value"
            ],
            "properties": {
              "_id": {
                "type": "string",
                "description": "MealMe ID of the store. Can be null in some cases.",
                "example": "7c0360a5-20f4-470a-b8a0-124a509ad827"
              },
              "name": {
                "type": "string",
                "description": "Name of the store",
                "example": "7-Eleven"
              },
              "phone_number": {
                "type": "integer",
                "description": "Phone number of the store",
                "example": 14158638332
              },
              "address": {
                "description": "",
                "required": [
                  "city",
                  "country",
                  "latitude",
                  "longitude",
                  "state",
                  "street_addr",
                  "street_addr_2",
                  "zipcode"
                ],
                "properties": {
                  "street_addr": {
                    "type": "string",
                    "description": "Street Address",
                    "example": "1390 Market Street"
                  },
                  "city": {
                    "type": "string",
                    "description": "City",
                    "example": "San Francisco"
                  },
                  "state": {
                    "type": "string",
                    "description": "State abbreviation",
                    "example": "CA"
                  },
                  "zipcode": {
                    "type": "string",
                    "description": "Zipcode",
                    "example": "94102"
                  },
                  "country": {
                    "type": "string",
                    "description": "Country abbreviation",
                    "example": "US"
                  },
                  "street_addr_2": {
                    "type": "string",
                    "description": "Street Address 2",
                    "example": "Apt. 123"
                  },
                  "latitude": {
                    "type": "number",
                    "description": "Latitude",
                    "example": 37.77709
                  },
                  "longitude": {
                    "type": "number",
                    "description": "Longitude",
                    "example": -122.4172976
                  }
                },
                "type": "object"
              },
              "type": {
                "type": "string",
                "description": "Type of the store, either \"grocery\" or \"restaurant\"",
                "example": "grocery"
              },
              "description": {
                "type": "string",
                "description": "Description of the store",
                "example": "Local convenience store with snacks, beverages, and more."
              },
              "local_hours": {
                "description": "",
                "properties": {
                  "operational": {
                    "description": "",
                    "properties": {
                      "Monday": {
                        "type": "string",
                        "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                        "example": "09:30AM - 01:00AM"
                      },
                      "Tuesday": {
                        "type": "string",
                        "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                        "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                      },
                      "Wednesday": {
                        "type": "string",
                        "description": "If a restaurant is opens at midnight, it will show as above. ",
                        "example": "12:00AM - 4:00PM"
                      },
                      "Thursday": {
                        "type": "string",
                        "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                        "example": "8:00AM - 4:00AM"
                      },
                      "Friday": {
                        "type": "string",
                        "description": "If a restaurant is open until midnight, it will show as above.",
                        "example": "10:00AM - 12:00AM"
                      },
                      "Saturday": {
                        "type": "string",
                        "description": "If a restaurant shows “Closed“, it is closed for that day.",
                        "example": "Closed"
                      },
                      "Sunday": {
                        "type": "string",
                        "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                        "example": "Open 24 hours"
                      }
                    },
                    "type": "object"
                  },
                  "delivery": {
                    "description": "",
                    "properties": {
                      "Monday": {
                        "type": "string",
                        "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                        "example": "09:30AM - 01:00AM"
                      },
                      "Tuesday": {
                        "type": "string",
                        "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                        "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                      },
                      "Wednesday": {
                        "type": "string",
                        "description": "If a restaurant is opens at midnight, it will show as above. ",
                        "example": "12:00AM - 4:00PM"
                      },
                      "Thursday": {
                        "type": "string",
                        "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                        "example": "8:00AM - 4:00AM"
                      },
                      "Friday": {
                        "type": "string",
                        "description": "If a restaurant is open until midnight, it will show as above.",
                        "example": "10:00AM - 12:00AM"
                      },
                      "Saturday": {
                        "type": "string",
                        "description": "If a restaurant shows “Closed“, it is closed for that day.",
                        "example": "Closed"
                      },
                      "Sunday": {
                        "type": "string",
                        "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                        "example": "Open 24 hours"
                      }
                    },
                    "type": "object"
                  },
                  "pickup": {
                    "description": "",
                    "properties": {
                      "Monday": {
                        "type": "string",
                        "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                        "example": "09:30AM - 01:00AM"
                      },
                      "Tuesday": {
                        "type": "string",
                        "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                        "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                      },
                      "Wednesday": {
                        "type": "string",
                        "description": "If a restaurant is opens at midnight, it will show as above. ",
                        "example": "12:00AM - 4:00PM"
                      },
                      "Thursday": {
                        "type": "string",
                        "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                        "example": "8:00AM - 4:00AM"
                      },
                      "Friday": {
                        "type": "string",
                        "description": "If a restaurant is open until midnight, it will show as above.",
                        "example": "10:00AM - 12:00AM"
                      },
                      "Saturday": {
                        "type": "string",
                        "description": "If a restaurant shows “Closed“, it is closed for that day.",
                        "example": "Closed"
                      },
                      "Sunday": {
                        "type": "string",
                        "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                        "example": "Open 24 hours"
                      }
                    },
                    "type": "object"
                  },
                  "dine_in": {
                    "description": "",
                    "properties": {
                      "Monday": {
                        "type": "string",
                        "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                        "example": "09:30AM - 01:00AM"
                      },
                      "Tuesday": {
                        "type": "string",
                        "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                        "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                      },
                      "Wednesday": {
                        "type": "string",
                        "description": "If a restaurant is opens at midnight, it will show as above. ",
                        "example": "12:00AM - 4:00PM"
                      },
                      "Thursday": {
                        "type": "string",
                        "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                        "example": "8:00AM - 4:00AM"
                      },
                      "Friday": {
                        "type": "string",
                        "description": "If a restaurant is open until midnight, it will show as above.",
                        "example": "10:00AM - 12:00AM"
                      },
                      "Saturday": {
                        "type": "string",
                        "description": "If a restaurant shows “Closed“, it is closed for that day.",
                        "example": "Closed"
                      },
                      "Sunday": {
                        "type": "string",
                        "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                        "example": "Open 24 hours"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "hours": {
                "description": "A mapping of quote ID(s) to their respective local hours.",
                "allOf": [
                  {
                    "properties": {
                      "*": {
                        "description": "",
                        "properties": {
                          "operational": {
                            "description": "",
                            "properties": {
                              "Monday": {
                                "type": "string",
                                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                "example": "09:30AM - 01:00AM"
                              },
                              "Tuesday": {
                                "type": "string",
                                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                              },
                              "Wednesday": {
                                "type": "string",
                                "description": "If a restaurant is opens at midnight, it will show as above. ",
                                "example": "12:00AM - 4:00PM"
                              },
                              "Thursday": {
                                "type": "string",
                                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                "example": "8:00AM - 4:00AM"
                              },
                              "Friday": {
                                "type": "string",
                                "description": "If a restaurant is open until midnight, it will show as above.",
                                "example": "10:00AM - 12:00AM"
                              },
                              "Saturday": {
                                "type": "string",
                                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                "example": "Closed"
                              },
                              "Sunday": {
                                "type": "string",
                                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                "example": "Open 24 hours"
                              }
                            },
                            "type": "object"
                          },
                          "delivery": {
                            "description": "",
                            "properties": {
                              "Monday": {
                                "type": "string",
                                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                "example": "09:30AM - 01:00AM"
                              },
                              "Tuesday": {
                                "type": "string",
                                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                              },
                              "Wednesday": {
                                "type": "string",
                                "description": "If a restaurant is opens at midnight, it will show as above. ",
                                "example": "12:00AM - 4:00PM"
                              },
                              "Thursday": {
                                "type": "string",
                                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                "example": "8:00AM - 4:00AM"
                              },
                              "Friday": {
                                "type": "string",
                                "description": "If a restaurant is open until midnight, it will show as above.",
                                "example": "10:00AM - 12:00AM"
                              },
                              "Saturday": {
                                "type": "string",
                                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                "example": "Closed"
                              },
                              "Sunday": {
                                "type": "string",
                                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                "example": "Open 24 hours"
                              }
                            },
                            "type": "object"
                          },
                          "pickup": {
                            "description": "",
                            "properties": {
                              "Monday": {
                                "type": "string",
                                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                "example": "09:30AM - 01:00AM"
                              },
                              "Tuesday": {
                                "type": "string",
                                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                              },
                              "Wednesday": {
                                "type": "string",
                                "description": "If a restaurant is opens at midnight, it will show as above. ",
                                "example": "12:00AM - 4:00PM"
                              },
                              "Thursday": {
                                "type": "string",
                                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                "example": "8:00AM - 4:00AM"
                              },
                              "Friday": {
                                "type": "string",
                                "description": "If a restaurant is open until midnight, it will show as above.",
                                "example": "10:00AM - 12:00AM"
                              },
                              "Saturday": {
                                "type": "string",
                                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                "example": "Closed"
                              },
                              "Sunday": {
                                "type": "string",
                                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                "example": "Open 24 hours"
                              }
                            },
                            "type": "object"
                          },
                          "dine_in": {
                            "description": "",
                            "properties": {
                              "Monday": {
                                "type": "string",
                                "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                "example": "09:30AM - 01:00AM"
                              },
                              "Tuesday": {
                                "type": "string",
                                "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                              },
                              "Wednesday": {
                                "type": "string",
                                "description": "If a restaurant is opens at midnight, it will show as above. ",
                                "example": "12:00AM - 4:00PM"
                              },
                              "Thursday": {
                                "type": "string",
                                "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                "example": "8:00AM - 4:00AM"
                              },
                              "Friday": {
                                "type": "string",
                                "description": "If a restaurant is open until midnight, it will show as above.",
                                "example": "10:00AM - 12:00AM"
                              },
                              "Saturday": {
                                "type": "string",
                                "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                "example": "Closed"
                              },
                              "Sunday": {
                                "type": "string",
                                "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                "example": "Open 24 hours"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                ]
              },
              "utc_hours": {
                "description": "",
                "properties": {
                  "operational": {
                    "description": "",
                    "required": [
                      "Friday",
                      "Monday",
                      "Saturday",
                      "Sunday",
                      "Thursday",
                      "Tuesday",
                      "Wednesday"
                    ],
                    "properties": {
                      "Monday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Monday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Tuesday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Tuesday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Wednesday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Wednesday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Thursday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Thursday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Friday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Friday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Saturday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Saturday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Sunday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Sunday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "delivery": {
                    "description": "",
                    "required": [
                      "Friday",
                      "Monday",
                      "Saturday",
                      "Sunday",
                      "Thursday",
                      "Tuesday",
                      "Wednesday"
                    ],
                    "properties": {
                      "Monday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Monday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Tuesday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Tuesday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Wednesday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Wednesday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Thursday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Thursday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Friday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Friday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Saturday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Saturday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Sunday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Sunday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "pickup": {
                    "description": "",
                    "required": [
                      "Friday",
                      "Monday",
                      "Saturday",
                      "Sunday",
                      "Thursday",
                      "Tuesday",
                      "Wednesday"
                    ],
                    "properties": {
                      "Monday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Monday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Tuesday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Tuesday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Wednesday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Wednesday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Thursday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Thursday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Friday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Friday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Saturday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Saturday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Sunday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Sunday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "dine_in": {
                    "description": "",
                    "required": [
                      "Friday",
                      "Monday",
                      "Saturday",
                      "Sunday",
                      "Thursday",
                      "Tuesday",
                      "Wednesday"
                    ],
                    "properties": {
                      "Monday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Monday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Tuesday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Tuesday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Wednesday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Wednesday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Thursday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Thursday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Friday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Friday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Saturday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Saturday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "Sunday": {
                        "type": "array",
                        "description": "The list of opening and closing times on Sunday.",
                        "items": {
                          "required": [
                            "closed",
                            "open"
                          ],
                          "properties": {
                            "open": {
                              "type": "string",
                              "description": "The store opening UTC time.",
                              "example": "01:00:00+00:00"
                            },
                            "closed": {
                              "type": "string",
                              "description": "The store closing UTC time.",
                              "example": "17:00:00+00:00"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "cuisines": {
                "type": "array",
                "description": "The cuisine types",
                "example": [
                  "Snacks",
                  "Convenience",
                  "Ice Cream"
                ],
                "items": {
                  "type": "string",
                  "description": "Cuisine of the store"
                }
              },
              "food_photos": {
                "type": "array",
                "description": "Photos of the food at the store",
                "example": [
                  "https://cdn-img.mealme.ai/f9ccb38a3d986eeb3f25e5b021d85a73c5d492ba/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f65303762376261372d663036612d346237302d383861302d3466633932656261346236322e6a706567"
                ],
                "items": {
                  "type": "string",
                  "description": "Photo of the store"
                }
              },
              "logo_photos": {
                "type": "array",
                "description": "Photos of the store's logo",
                "example": [
                  "https://cdn-img.mealme.ai/9a55bb89e411b1ef87210731a2e7f9fe850cc979/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f76313630313330373339332f656a6e376377756b74766537766e696867616b782e6a7067"
                ],
                "items": {
                  "type": "string",
                  "description": "Photo of the store's logo"
                }
              },
              "store_photos": {
                "type": "array",
                "description": "Photos of the store",
                "example": [
                  "https://cdn-img.mealme.ai/7aba9346a8f2e1d8ecf453a86fe3be1b53f98270/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f36393264376333342d626465362d343337612d616435342d3961303633656333666161642e6a706567"
                ],
                "items": {
                  "type": "string",
                  "description": "Photo of the store"
                }
              },
              "dollar_signs": {
                "type": "integer",
                "description": "Estimated cost of the store, like 1 representing \"$\" or 2 representing \"$$\"",
                "example": 1
              },
              "pickup_enabled": {
                "type": "boolean",
                "description": "Whether the store supports pickup.",
                "example": false
              },
              "delivery_enabled": {
                "type": "boolean",
                "description": "Whether the store supports delivery.",
                "example": true
              },
              "is_open": {
                "type": "boolean",
                "description": "Whether the store is open. If null, then there is no data available on whether the store is open.",
                "example": true
              },
              "quotes": {
                "description": "",
                "properties": {
                  "cheapest_delivery": {
                    "example": {
                      "time_estimate": {
                        "minimum": 43,
                        "maximum": 45
                      },
                      "sales_tax_percent": 10.5,
                      "delivery_fee": {
                        "delivery_fee_flat": 0,
                        "delivery_fee_percent": 0,
                        "delivery_fee_taxable": false
                      },
                      "service_fee": {
                        "service_fee_flat": 0,
                        "service_fee_percent": 10,
                        "service_fee_min": 300,
                        "service_fee_max": 700,
                        "service_fee_taxable": false
                      },
                      "small_order_fee": {
                        "minimum_order_value": 0,
                        "small_order_fee_flat": 0,
                        "small_order_fee_percent": 0
                      },
                      "order_minimum": 1500,
                      "threshold_fees": [],
                      "asap_available": true
                    },
                    "allOf": [
                      {
                        "required": [
                          "accepts_delivery_tip",
                          "accepts_pickup_note",
                          "accepts_pickup_tip",
                          "asap_available",
                          "courier_quote",
                          "delivery_fee",
                          "first_party_quote",
                          "order_minimum",
                          "sales_tax_percent",
                          "service_fee",
                          "small_order_fee",
                          "third_party_quote",
                          "time_estimate"
                        ],
                        "properties": {
                          "time_estimate": {
                            "description": "",
                            "required": [
                              "maximum",
                              "minimum"
                            ],
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "description": "Lower bound of delivery time estimate (in minutes)"
                              },
                              "maximum": {
                                "type": "integer",
                                "description": "Upper bound of delivery time estimate (in minutes)"
                              },
                              "scheduled": {
                                "type": "array",
                                "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                "items": {
                                  "required": [
                                    "delivery_fee",
                                    "maximum",
                                    "minimum"
                                  ],
                                  "properties": {
                                    "minimum": {
                                      "type": "integer",
                                      "description": "Timestamp (seconds since 1970)"
                                    },
                                    "maximum": {
                                      "type": "integer",
                                      "description": "Timestamp (seconds since 1970)"
                                    },
                                    "delivery_fee": {
                                      "description": "",
                                      "required": [
                                        "delivery_fee_flat",
                                        "delivery_fee_percent"
                                      ],
                                      "properties": {
                                        "delivery_fee_flat": {
                                          "type": "integer",
                                          "description": "Delivery fee amount in cents"
                                        },
                                        "delivery_fee_percent": {
                                          "type": "number",
                                          "description": "Delivery fee percentage"
                                        },
                                        "delivery_fee_taxable": {
                                          "type": "boolean",
                                          "description": "Whether the delivery fee is taxable or not"
                                        },
                                        "threshold_fees": {
                                          "type": "array",
                                          "description": "Threshold Fees, if they exist",
                                          "items": {
                                            "required": [
                                              "threshold_cents",
                                              "threshold_fee_cents"
                                            ],
                                            "properties": {
                                              "threshold_cents": {
                                                "type": "integer",
                                                "description": "Subtotal that enacts a specific fee"
                                              },
                                              "threshold_fee_cents": {
                                                "type": "integer",
                                                "description": "Flat delivery fee that will be charged for this threshold_cents"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "sales_tax_percent": {
                            "type": "integer",
                            "description": "Sales tax in percentage terms"
                          },
                          "delivery_fee": {
                            "description": "",
                            "required": [
                              "delivery_fee_flat",
                              "delivery_fee_percent"
                            ],
                            "properties": {
                              "delivery_fee_flat": {
                                "type": "integer",
                                "description": "Delivery fee amount in cents"
                              },
                              "delivery_fee_percent": {
                                "type": "number",
                                "description": "Delivery fee percentage"
                              },
                              "delivery_fee_taxable": {
                                "type": "boolean",
                                "description": "Whether the delivery fee is taxable or not"
                              },
                              "threshold_fees": {
                                "type": "array",
                                "description": "Threshold Fees, if they exist",
                                "items": {
                                  "required": [
                                    "threshold_cents",
                                    "threshold_fee_cents"
                                  ],
                                  "properties": {
                                    "threshold_cents": {
                                      "type": "integer",
                                      "description": "Subtotal that enacts a specific fee"
                                    },
                                    "threshold_fee_cents": {
                                      "type": "integer",
                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "service_fee": {
                            "description": "",
                            "required": [
                              "service_fee_flat",
                              "service_fee_percent"
                            ],
                            "properties": {
                              "service_fee_flat": {
                                "type": "integer",
                                "description": "Service fee amount in cents"
                              },
                              "service_fee_percent": {
                                "type": "number",
                                "description": "Service fee percentage from 0 to 100"
                              },
                              "service_fee_min": {
                                "type": "integer",
                                "description": "Minimum service fee amount in cents"
                              },
                              "service_fee_max": {
                                "type": "integer",
                                "description": "Maximum service fee amount in cents"
                              },
                              "service_fee_taxable": {
                                "type": "boolean",
                                "description": "Whether the service fee is taxable or not"
                              },
                              "threshold_fees": {
                                "type": "array",
                                "description": "Threshold Fees, if they exist",
                                "items": {
                                  "required": [
                                    "threshold_cents",
                                    "threshold_fee_cents"
                                  ],
                                  "properties": {
                                    "threshold_cents": {
                                      "type": "integer",
                                      "description": "Subtotal that enacts a specific fee"
                                    },
                                    "threshold_fee_cents": {
                                      "type": "integer",
                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "small_order_fee": {
                            "description": "",
                            "required": [
                              "minimum_order_value",
                              "small_order_fee_flat",
                              "small_order_fee_percent"
                            ],
                            "properties": {
                              "minimum_order_value": {
                                "type": "integer",
                                "description": "Minimum amount to not incur small order fee in cents",
                                "example": 0
                              },
                              "small_order_fee_flat": {
                                "type": "integer",
                                "description": "Small order fee amount in cents",
                                "example": 0
                              },
                              "small_order_fee_percent": {
                                "type": "number",
                                "description": "Small order fee percentage",
                                "example": 0
                              }
                            },
                            "type": "object"
                          },
                          "order_minimum": {
                            "type": "integer",
                            "description": "Minimum order amount in cents"
                          },
                          "min_tip": {
                            "type": "integer",
                            "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                          },
                          "asap_available": {
                            "type": "integer",
                            "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                          },
                          "first_party_quote": {
                            "type": "boolean",
                            "description": "Whether this quote is provided by the store"
                          },
                          "third_party_quote": {
                            "type": "boolean",
                            "description": "Whether this quote is provided by a third party service"
                          },
                          "courier_quote": {
                            "type": "boolean",
                            "description": "Whether this quote is provided by a last-mile delivery service."
                          },
                          "accepts_delivery_tip": {
                            "type": "boolean",
                            "description": "Whether a delivery tip is accepted."
                          },
                          "accepts_pickup_tip": {
                            "type": "boolean",
                            "description": "Whether a pickup tip is accepted."
                          },
                          "accepts_pickup_note": {
                            "type": "boolean",
                            "description": "Whether a pickup note is accepted."
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "description": ""
                  },
                  "fastest_delivery": {
                    "example": {
                      "time_estimate": {
                        "minimum": 15,
                        "maximum": 30
                      },
                      "sales_tax_percent": 10.5,
                      "delivery_fee": {
                        "delivery_fee_flat": 199,
                        "delivery_fee_percent": 0,
                        "delivery_fee_taxable": false
                      },
                      "service_fee": {
                        "service_fee_flat": 0,
                        "service_fee_percent": 5
                      },
                      "small_order_fee": {
                        "minimum_order_value": 1200,
                        "small_order_fee_flat": 200,
                        "small_order_fee_percent": 0
                      },
                      "order_minimum": 0,
                      "threshold_fees": [
                        {
                          "threshold_cents": 10000,
                          "threshold_fee_cents": 1000
                        },
                        {
                          "threshold_cents": 20000,
                          "threshold_fee_cents": 2000
                        }
                      ]
                    },
                    "allOf": [
                      {
                        "required": [
                          "accepts_delivery_tip",
                          "accepts_pickup_note",
                          "accepts_pickup_tip",
                          "asap_available",
                          "courier_quote",
                          "delivery_fee",
                          "first_party_quote",
                          "order_minimum",
                          "sales_tax_percent",
                          "service_fee",
                          "small_order_fee",
                          "third_party_quote",
                          "time_estimate"
                        ],
                        "properties": {
                          "time_estimate": {
                            "description": "",
                            "required": [
                              "maximum",
                              "minimum"
                            ],
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "description": "Lower bound of delivery time estimate (in minutes)"
                              },
                              "maximum": {
                                "type": "integer",
                                "description": "Upper bound of delivery time estimate (in minutes)"
                              },
                              "scheduled": {
                                "type": "array",
                                "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                "items": {
                                  "required": [
                                    "delivery_fee",
                                    "maximum",
                                    "minimum"
                                  ],
                                  "properties": {
                                    "minimum": {
                                      "type": "integer",
                                      "description": "Timestamp (seconds since 1970)"
                                    },
                                    "maximum": {
                                      "type": "integer",
                                      "description": "Timestamp (seconds since 1970)"
                                    },
                                    "delivery_fee": {
                                      "description": "",
                                      "required": [
                                        "delivery_fee_flat",
                                        "delivery_fee_percent"
                                      ],
                                      "properties": {
                                        "delivery_fee_flat": {
                                          "type": "integer",
                                          "description": "Delivery fee amount in cents"
                                        },
                                        "delivery_fee_percent": {
                                          "type": "number",
                                          "description": "Delivery fee percentage"
                                        },
                                        "delivery_fee_taxable": {
                                          "type": "boolean",
                                          "description": "Whether the delivery fee is taxable or not"
                                        },
                                        "threshold_fees": {
                                          "type": "array",
                                          "description": "Threshold Fees, if they exist",
                                          "items": {
                                            "required": [
                                              "threshold_cents",
                                              "threshold_fee_cents"
                                            ],
                                            "properties": {
                                              "threshold_cents": {
                                                "type": "integer",
                                                "description": "Subtotal that enacts a specific fee"
                                              },
                                              "threshold_fee_cents": {
                                                "type": "integer",
                                                "description": "Flat delivery fee that will be charged for this threshold_cents"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "sales_tax_percent": {
                            "type": "integer",
                            "description": "Sales tax in percentage terms"
                          },
                          "delivery_fee": {
                            "description": "",
                            "required": [
                              "delivery_fee_flat",
                              "delivery_fee_percent"
                            ],
                            "properties": {
                              "delivery_fee_flat": {
                                "type": "integer",
                                "description": "Delivery fee amount in cents"
                              },
                              "delivery_fee_percent": {
                                "type": "number",
                                "description": "Delivery fee percentage"
                              },
                              "delivery_fee_taxable": {
                                "type": "boolean",
                                "description": "Whether the delivery fee is taxable or not"
                              },
                              "threshold_fees": {
                                "type": "array",
                                "description": "Threshold Fees, if they exist",
                                "items": {
                                  "required": [
                                    "threshold_cents",
                                    "threshold_fee_cents"
                                  ],
                                  "properties": {
                                    "threshold_cents": {
                                      "type": "integer",
                                      "description": "Subtotal that enacts a specific fee"
                                    },
                                    "threshold_fee_cents": {
                                      "type": "integer",
                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "service_fee": {
                            "description": "",
                            "required": [
                              "service_fee_flat",
                              "service_fee_percent"
                            ],
                            "properties": {
                              "service_fee_flat": {
                                "type": "integer",
                                "description": "Service fee amount in cents"
                              },
                              "service_fee_percent": {
                                "type": "number",
                                "description": "Service fee percentage from 0 to 100"
                              },
                              "service_fee_min": {
                                "type": "integer",
                                "description": "Minimum service fee amount in cents"
                              },
                              "service_fee_max": {
                                "type": "integer",
                                "description": "Maximum service fee amount in cents"
                              },
                              "service_fee_taxable": {
                                "type": "boolean",
                                "description": "Whether the service fee is taxable or not"
                              },
                              "threshold_fees": {
                                "type": "array",
                                "description": "Threshold Fees, if they exist",
                                "items": {
                                  "required": [
                                    "threshold_cents",
                                    "threshold_fee_cents"
                                  ],
                                  "properties": {
                                    "threshold_cents": {
                                      "type": "integer",
                                      "description": "Subtotal that enacts a specific fee"
                                    },
                                    "threshold_fee_cents": {
                                      "type": "integer",
                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "small_order_fee": {
                            "description": "",
                            "required": [
                              "minimum_order_value",
                              "small_order_fee_flat",
                              "small_order_fee_percent"
                            ],
                            "properties": {
                              "minimum_order_value": {
                                "type": "integer",
                                "description": "Minimum amount to not incur small order fee in cents",
                                "example": 0
                              },
                              "small_order_fee_flat": {
                                "type": "integer",
                                "description": "Small order fee amount in cents",
                                "example": 0
                              },
                              "small_order_fee_percent": {
                                "type": "number",
                                "description": "Small order fee percentage",
                                "example": 0
                              }
                            },
                            "type": "object"
                          },
                          "order_minimum": {
                            "type": "integer",
                            "description": "Minimum order amount in cents"
                          },
                          "min_tip": {
                            "type": "integer",
                            "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                          },
                          "asap_available": {
                            "type": "integer",
                            "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                          },
                          "first_party_quote": {
                            "type": "boolean",
                            "description": "Whether this quote is provided by the store"
                          },
                          "third_party_quote": {
                            "type": "boolean",
                            "description": "Whether this quote is provided by a third party service"
                          },
                          "courier_quote": {
                            "type": "boolean",
                            "description": "Whether this quote is provided by a last-mile delivery service."
                          },
                          "accepts_delivery_tip": {
                            "type": "boolean",
                            "description": "Whether a delivery tip is accepted."
                          },
                          "accepts_pickup_tip": {
                            "type": "boolean",
                            "description": "Whether a pickup tip is accepted."
                          },
                          "accepts_pickup_note": {
                            "type": "boolean",
                            "description": "Whether a pickup note is accepted."
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "description": ""
                  },
                  "pickup": {
                    "example": {
                      "time_estimate": {
                        "minimum": 5,
                        "maximum": 5
                      },
                      "sales_tax_percent": 10.5,
                      "delivery_fee": {
                        "delivery_fee_flat": 0,
                        "delivery_fee_percent": 0,
                        "delivery_fee_taxable": false
                      },
                      "service_fee": {
                        "service_fee_flat": 0,
                        "service_fee_percent": 0
                      },
                      "small_order_fee": {
                        "minimum_order_value": 1200,
                        "small_order_fee_flat": 200,
                        "small_order_fee_percent": 0
                      },
                      "order_minimum": 100,
                      "threshold_fees": []
                    },
                    "allOf": [
                      {
                        "required": [
                          "accepts_delivery_tip",
                          "accepts_pickup_note",
                          "accepts_pickup_tip",
                          "asap_available",
                          "courier_quote",
                          "delivery_fee",
                          "first_party_quote",
                          "order_minimum",
                          "sales_tax_percent",
                          "service_fee",
                          "small_order_fee",
                          "third_party_quote",
                          "time_estimate"
                        ],
                        "properties": {
                          "time_estimate": {
                            "description": "",
                            "required": [
                              "maximum",
                              "minimum"
                            ],
                            "properties": {
                              "minimum": {
                                "type": "integer",
                                "description": "Lower bound of delivery time estimate (in minutes)"
                              },
                              "maximum": {
                                "type": "integer",
                                "description": "Upper bound of delivery time estimate (in minutes)"
                              },
                              "scheduled": {
                                "type": "array",
                                "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                "items": {
                                  "required": [
                                    "delivery_fee",
                                    "maximum",
                                    "minimum"
                                  ],
                                  "properties": {
                                    "minimum": {
                                      "type": "integer",
                                      "description": "Timestamp (seconds since 1970)"
                                    },
                                    "maximum": {
                                      "type": "integer",
                                      "description": "Timestamp (seconds since 1970)"
                                    },
                                    "delivery_fee": {
                                      "description": "",
                                      "required": [
                                        "delivery_fee_flat",
                                        "delivery_fee_percent"
                                      ],
                                      "properties": {
                                        "delivery_fee_flat": {
                                          "type": "integer",
                                          "description": "Delivery fee amount in cents"
                                        },
                                        "delivery_fee_percent": {
                                          "type": "number",
                                          "description": "Delivery fee percentage"
                                        },
                                        "delivery_fee_taxable": {
                                          "type": "boolean",
                                          "description": "Whether the delivery fee is taxable or not"
                                        },
                                        "threshold_fees": {
                                          "type": "array",
                                          "description": "Threshold Fees, if they exist",
                                          "items": {
                                            "required": [
                                              "threshold_cents",
                                              "threshold_fee_cents"
                                            ],
                                            "properties": {
                                              "threshold_cents": {
                                                "type": "integer",
                                                "description": "Subtotal that enacts a specific fee"
                                              },
                                              "threshold_fee_cents": {
                                                "type": "integer",
                                                "description": "Flat delivery fee that will be charged for this threshold_cents"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "sales_tax_percent": {
                            "type": "integer",
                            "description": "Sales tax in percentage terms"
                          },
                          "delivery_fee": {
                            "description": "",
                            "required": [
                              "delivery_fee_flat",
                              "delivery_fee_percent"
                            ],
                            "properties": {
                              "delivery_fee_flat": {
                                "type": "integer",
                                "description": "Delivery fee amount in cents"
                              },
                              "delivery_fee_percent": {
                                "type": "number",
                                "description": "Delivery fee percentage"
                              },
                              "delivery_fee_taxable": {
                                "type": "boolean",
                                "description": "Whether the delivery fee is taxable or not"
                              },
                              "threshold_fees": {
                                "type": "array",
                                "description": "Threshold Fees, if they exist",
                                "items": {
                                  "required": [
                                    "threshold_cents",
                                    "threshold_fee_cents"
                                  ],
                                  "properties": {
                                    "threshold_cents": {
                                      "type": "integer",
                                      "description": "Subtotal that enacts a specific fee"
                                    },
                                    "threshold_fee_cents": {
                                      "type": "integer",
                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "service_fee": {
                            "description": "",
                            "required": [
                              "service_fee_flat",
                              "service_fee_percent"
                            ],
                            "properties": {
                              "service_fee_flat": {
                                "type": "integer",
                                "description": "Service fee amount in cents"
                              },
                              "service_fee_percent": {
                                "type": "number",
                                "description": "Service fee percentage from 0 to 100"
                              },
                              "service_fee_min": {
                                "type": "integer",
                                "description": "Minimum service fee amount in cents"
                              },
                              "service_fee_max": {
                                "type": "integer",
                                "description": "Maximum service fee amount in cents"
                              },
                              "service_fee_taxable": {
                                "type": "boolean",
                                "description": "Whether the service fee is taxable or not"
                              },
                              "threshold_fees": {
                                "type": "array",
                                "description": "Threshold Fees, if they exist",
                                "items": {
                                  "required": [
                                    "threshold_cents",
                                    "threshold_fee_cents"
                                  ],
                                  "properties": {
                                    "threshold_cents": {
                                      "type": "integer",
                                      "description": "Subtotal that enacts a specific fee"
                                    },
                                    "threshold_fee_cents": {
                                      "type": "integer",
                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          },
                          "small_order_fee": {
                            "description": "",
                            "required": [
                              "minimum_order_value",
                              "small_order_fee_flat",
                              "small_order_fee_percent"
                            ],
                            "properties": {
                              "minimum_order_value": {
                                "type": "integer",
                                "description": "Minimum amount to not incur small order fee in cents",
                                "example": 0
                              },
                              "small_order_fee_flat": {
                                "type": "integer",
                                "description": "Small order fee amount in cents",
                                "example": 0
                              },
                              "small_order_fee_percent": {
                                "type": "number",
                                "description": "Small order fee percentage",
                                "example": 0
                              }
                            },
                            "type": "object"
                          },
                          "order_minimum": {
                            "type": "integer",
                            "description": "Minimum order amount in cents"
                          },
                          "min_tip": {
                            "type": "integer",
                            "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                          },
                          "asap_available": {
                            "type": "integer",
                            "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                          },
                          "first_party_quote": {
                            "type": "boolean",
                            "description": "Whether this quote is provided by the store"
                          },
                          "third_party_quote": {
                            "type": "boolean",
                            "description": "Whether this quote is provided by a third party service"
                          },
                          "courier_quote": {
                            "type": "boolean",
                            "description": "Whether this quote is provided by a last-mile delivery service."
                          },
                          "accepts_delivery_tip": {
                            "type": "boolean",
                            "description": "Whether a delivery tip is accepted."
                          },
                          "accepts_pickup_tip": {
                            "type": "boolean",
                            "description": "Whether a pickup tip is accepted."
                          },
                          "accepts_pickup_note": {
                            "type": "boolean",
                            "description": "Whether a pickup note is accepted."
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "description": ""
                  }
                },
                "type": "object"
              },
              "quote_types": {
                "description": "",
                "properties": {
                  "<quote id>": {
                    "type": "array",
                    "description": "The list of quote types available for this quote id.",
                    "items": {
                      "type": "string",
                      "description": "Quote Type",
                      "example": "pickup",
                      "enum": [
                        "pickup",
                        "delivery"
                      ]
                    }
                  }
                },
                "type": "object"
              },
              "offers_first_party_delivery": {
                "type": "boolean",
                "description": "Whether or not the store delivers directly.",
                "example": false
              },
              "offers_third_party_delivery": {
                "type": "boolean",
                "description": "Whether or not the store delivers with third-party services.",
                "example": false
              },
              "miles": {
                "type": "number",
                "description": "Miles from the user to the store",
                "example": 0.23
              },
              "weighted_rating_value": {
                "type": "number",
                "description": "The weighted average rating of this store across all the websites it appears on. Floating-point from 1 to 5 (inclusive) or 0.",
                "example": 4.83
              },
              "aggregated_rating_count": {
                "type": "integer",
                "description": "Number of total aggregated ratings for this store across all the websites it appears on. Non-negative integer.",
                "example": 956
              },
              "supports_upc_codes": {
                "type": "boolean",
                "description": "Whether the store's inventory supports UPC codes.",
                "example": false
              }
            },
            "type": "object",
            "description": ""
          }
        },
        "type": "object"
      },
      "Grocery_Store_Cart_Search_Products": {
        "required": [
          "*"
        ],
        "properties": {
          "*": {
            "type": "array",
            "description": "List of product search results for a cart item query, sorted by relevance.",
            "items": {
              "required": [
                "attributes",
                "category",
                "description",
                "formatted_price",
                "image",
                "item_name",
                "original_price",
                "price",
                "product_id",
                "unit_of_measurement",
                "unit_size",
                "upc_codes"
              ],
              "properties": {
                "item_name": {
                  "type": "string",
                  "description": "The item's name",
                  "example": "Lactaid Whole Milk"
                },
                "product_id": {
                  "type": "string",
                  "description": "The MealMe Product ID",
                  "example": "gAAAAABi4c1c6Pha-EhoxdT36F0eojiGoUYNyt4Skz83vlTpmj4gRLkhlyzEB80wgWDhj_GRvZhVf12yKy17ApsrouqUJJAhfrbe9g5yQcHq6Y5fy59816Z0D71mXJC4_uOXzscvquBooBvavPEvZoz9TnsDIBZJ1zrNJAUDQUCsG0W-dWgmNfxDnx880FmC-e2ueJpMa9udEEyTFnptgQXLR5_enfIWFMacBmKzy72lzOak5WmxJtJ3F0DCJPRlSaEKPl3tYCDx5amzbbR-1xh7Q9tBCxycIEfjtjQRUEHYiGaNeWHwRaNk5Mve6qOC6ZAxAG_1CismNc3Svx5N7ztAfHbGbHGfvcfHIw1KSegbctfXGsDjGofcDM7gMpu-7H0vjgqhVI_Mbg1OJ71rK0mtvE9rQbnP-Tosdn2oM70DM5Y69fuS8eFDqoY1kkCtjZJXXQ8_erqOkjMgXZ7HJCAm3uYGd8P_GZqy2hzfpSBD6MIxlAuTfOVHySiC1_P6I97HAnaYiO90QFWFeAfI2Dx6ZB4p9ZYakdoiexpYLA-uUJ7jB7OT3Qlvuuh4VOmxdHOtgawgwYQe"
                },
                "image": {
                  "type": "string",
                  "description": "Image of the item, if it exists",
                  "example": "https://cdn-img.mealme.ai/90d01ee227f564e9cfaeb4d5bc7f47260f6337de/68747470733a2f2f732e636f726e657273686f706170702e636f6d2f70726f647563742d696d616765732f323732353130382e6a70673f76657273696f6e49643d4f4e6d71622e55372e646b6d4a30777956706a6f454e54374b6571592e4d7962"
                },
                "description": {
                  "type": "string",
                  "description": "The item's description",
                  "example": "Lactaid Whole Milk"
                },
                "category": {
                  "type": "string",
                  "description": "The item's category",
                  "example": "Milk"
                },
                "price": {
                  "type": "integer",
                  "description": "The item's base price in cents",
                  "example": 639
                },
                "formatted_price": {
                  "type": "string",
                  "description": "This item's price formatted in the store's accepted currency",
                  "example": "$6.39"
                },
                "original_price": {
                  "type": "integer",
                  "description": "The product's original price. This will only be available if the product is currently on sale.",
                  "example": 700
                },
                "unit_size": {
                  "type": "number",
                  "description": "The unit size for this product",
                  "example": 1
                },
                "unit_of_measurement": {
                  "type": "string",
                  "description": "The unit of measurement used to measure the product's size (i.e. oz, lb, L, gal)",
                  "example": "gal"
                },
                "attributes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The list of dietary preferences for this product.",
                    "example": [
                      "Dairy-Free",
                      "Lactose-Free",
                      "Soy-Free"
                    ]
                  },
                  "description": ""
                },
                "upc_codes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "The list of upc codes for this product",
                    "example": [
                      "12345"
                    ]
                  },
                  "description": ""
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Store_Product": {
        "required": [
          "attributes",
          "category",
          "description",
          "formatted_price",
          "image",
          "item_name",
          "original_price",
          "price",
          "product_id",
          "unit_of_measurement",
          "unit_size",
          "upc_codes"
        ],
        "properties": {
          "item_name": {
            "type": "string",
            "description": "The item's name",
            "example": "Lactaid Whole Milk"
          },
          "product_id": {
            "type": "string",
            "description": "The MealMe Product ID",
            "example": "gAAAAABi4c1c6Pha-EhoxdT36F0eojiGoUYNyt4Skz83vlTpmj4gRLkhlyzEB80wgWDhj_GRvZhVf12yKy17ApsrouqUJJAhfrbe9g5yQcHq6Y5fy59816Z0D71mXJC4_uOXzscvquBooBvavPEvZoz9TnsDIBZJ1zrNJAUDQUCsG0W-dWgmNfxDnx880FmC-e2ueJpMa9udEEyTFnptgQXLR5_enfIWFMacBmKzy72lzOak5WmxJtJ3F0DCJPRlSaEKPl3tYCDx5amzbbR-1xh7Q9tBCxycIEfjtjQRUEHYiGaNeWHwRaNk5Mve6qOC6ZAxAG_1CismNc3Svx5N7ztAfHbGbHGfvcfHIw1KSegbctfXGsDjGofcDM7gMpu-7H0vjgqhVI_Mbg1OJ71rK0mtvE9rQbnP-Tosdn2oM70DM5Y69fuS8eFDqoY1kkCtjZJXXQ8_erqOkjMgXZ7HJCAm3uYGd8P_GZqy2hzfpSBD6MIxlAuTfOVHySiC1_P6I97HAnaYiO90QFWFeAfI2Dx6ZB4p9ZYakdoiexpYLA-uUJ7jB7OT3Qlvuuh4VOmxdHOtgawgwYQe"
          },
          "image": {
            "type": "string",
            "description": "Image of the item, if it exists",
            "example": "https://cdn-img.mealme.ai/90d01ee227f564e9cfaeb4d5bc7f47260f6337de/68747470733a2f2f732e636f726e657273686f706170702e636f6d2f70726f647563742d696d616765732f323732353130382e6a70673f76657273696f6e49643d4f4e6d71622e55372e646b6d4a30777956706a6f454e54374b6571592e4d7962"
          },
          "description": {
            "type": "string",
            "description": "The item's description",
            "example": "Lactaid Whole Milk"
          },
          "category": {
            "type": "string",
            "description": "The item's category",
            "example": "Milk"
          },
          "price": {
            "type": "integer",
            "description": "The item's base price in cents",
            "example": 639
          },
          "formatted_price": {
            "type": "string",
            "description": "This item's price formatted in the store's accepted currency",
            "example": "$6.39"
          },
          "original_price": {
            "type": "integer",
            "description": "The product's original price. This will only be available if the product is currently on sale.",
            "example": 700
          },
          "unit_size": {
            "type": "number",
            "description": "The unit size for this product",
            "example": 1
          },
          "unit_of_measurement": {
            "type": "string",
            "description": "The unit of measurement used to measure the product's size (i.e. oz, lb, L, gal)",
            "example": "gal"
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "The list of dietary preferences for this product.",
              "example": [
                "Dairy-Free",
                "Lactose-Free",
                "Soy-Free"
              ]
            },
            "description": ""
          },
          "upc_codes": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "The list of upc codes for this product",
              "example": [
                "12345"
              ]
            },
            "description": ""
          }
        },
        "type": "object"
      },
      "Inventory_Unavailable": {
        "properties": {
          "error": {
            "type": "string",
            "description": "The reason a menu is unavailable.",
            "example": "Menu Request Failed"
          },
          "quote": {
            "description": "",
            "properties": {
              "error": {
                "type": "string",
                "description": "The reason a quote is unavailable.",
                "example": "Delivery is currently unavailable for this store."
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Inventory_Quote_Unavailable": {
        "properties": {
          "error": {
            "type": "string",
            "description": "The reason a quote is unavailable.",
            "example": "Delivery is currently unavailable for this store."
          }
        },
        "type": "object"
      },
      "Inventory_Output": {
        "required": [
          "categories",
          "menu_id"
        ],
        "properties": {
          "quote": {
            "description": "The quote for the given store",
            "example": {
              "time_estimate": {
                "minimum": 43,
                "maximum": 45
              },
              "sales_tax_percent": 10.5,
              "delivery_fee": {
                "delivery_fee_flat": 0,
                "delivery_fee_percent": 0,
                "delivery_fee_taxable": false
              },
              "service_fee": {
                "service_fee_flat": 0,
                "service_fee_percent": 10,
                "service_fee_min": 300,
                "service_fee_max": 700,
                "service_fee_taxable": false
              },
              "small_order_fee": {
                "minimum_order_value": 0,
                "small_order_fee_flat": 0,
                "small_order_fee_percent": 0
              },
              "order_minimum": 1500,
              "threshold_fees": [],
              "asap_available": true
            },
            "allOf": [
              {
                "required": [
                  "accepts_delivery_tip",
                  "accepts_pickup_note",
                  "accepts_pickup_tip",
                  "asap_available",
                  "courier_quote",
                  "delivery_fee",
                  "first_party_quote",
                  "order_minimum",
                  "sales_tax_percent",
                  "service_fee",
                  "small_order_fee",
                  "third_party_quote",
                  "time_estimate"
                ],
                "properties": {
                  "time_estimate": {
                    "description": "",
                    "required": [
                      "maximum",
                      "minimum"
                    ],
                    "properties": {
                      "minimum": {
                        "type": "integer",
                        "description": "Lower bound of delivery time estimate (in minutes)"
                      },
                      "maximum": {
                        "type": "integer",
                        "description": "Upper bound of delivery time estimate (in minutes)"
                      },
                      "scheduled": {
                        "type": "array",
                        "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                        "items": {
                          "required": [
                            "delivery_fee",
                            "maximum",
                            "minimum"
                          ],
                          "properties": {
                            "minimum": {
                              "type": "integer",
                              "description": "Timestamp (seconds since 1970)"
                            },
                            "maximum": {
                              "type": "integer",
                              "description": "Timestamp (seconds since 1970)"
                            },
                            "delivery_fee": {
                              "description": "",
                              "required": [
                                "delivery_fee_flat",
                                "delivery_fee_percent"
                              ],
                              "properties": {
                                "delivery_fee_flat": {
                                  "type": "integer",
                                  "description": "Delivery fee amount in cents"
                                },
                                "delivery_fee_percent": {
                                  "type": "number",
                                  "description": "Delivery fee percentage"
                                },
                                "delivery_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether the delivery fee is taxable or not"
                                },
                                "threshold_fees": {
                                  "type": "array",
                                  "description": "Threshold Fees, if they exist",
                                  "items": {
                                    "required": [
                                      "threshold_cents",
                                      "threshold_fee_cents"
                                    ],
                                    "properties": {
                                      "threshold_cents": {
                                        "type": "integer",
                                        "description": "Subtotal that enacts a specific fee"
                                      },
                                      "threshold_fee_cents": {
                                        "type": "integer",
                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "sales_tax_percent": {
                    "type": "integer",
                    "description": "Sales tax in percentage terms"
                  },
                  "delivery_fee": {
                    "description": "",
                    "required": [
                      "delivery_fee_flat",
                      "delivery_fee_percent"
                    ],
                    "properties": {
                      "delivery_fee_flat": {
                        "type": "integer",
                        "description": "Delivery fee amount in cents"
                      },
                      "delivery_fee_percent": {
                        "type": "number",
                        "description": "Delivery fee percentage"
                      },
                      "delivery_fee_taxable": {
                        "type": "boolean",
                        "description": "Whether the delivery fee is taxable or not"
                      },
                      "threshold_fees": {
                        "type": "array",
                        "description": "Threshold Fees, if they exist",
                        "items": {
                          "required": [
                            "threshold_cents",
                            "threshold_fee_cents"
                          ],
                          "properties": {
                            "threshold_cents": {
                              "type": "integer",
                              "description": "Subtotal that enacts a specific fee"
                            },
                            "threshold_fee_cents": {
                              "type": "integer",
                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "service_fee": {
                    "description": "",
                    "required": [
                      "service_fee_flat",
                      "service_fee_percent"
                    ],
                    "properties": {
                      "service_fee_flat": {
                        "type": "integer",
                        "description": "Service fee amount in cents"
                      },
                      "service_fee_percent": {
                        "type": "number",
                        "description": "Service fee percentage from 0 to 100"
                      },
                      "service_fee_min": {
                        "type": "integer",
                        "description": "Minimum service fee amount in cents"
                      },
                      "service_fee_max": {
                        "type": "integer",
                        "description": "Maximum service fee amount in cents"
                      },
                      "service_fee_taxable": {
                        "type": "boolean",
                        "description": "Whether the service fee is taxable or not"
                      },
                      "threshold_fees": {
                        "type": "array",
                        "description": "Threshold Fees, if they exist",
                        "items": {
                          "required": [
                            "threshold_cents",
                            "threshold_fee_cents"
                          ],
                          "properties": {
                            "threshold_cents": {
                              "type": "integer",
                              "description": "Subtotal that enacts a specific fee"
                            },
                            "threshold_fee_cents": {
                              "type": "integer",
                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "small_order_fee": {
                    "description": "",
                    "required": [
                      "minimum_order_value",
                      "small_order_fee_flat",
                      "small_order_fee_percent"
                    ],
                    "properties": {
                      "minimum_order_value": {
                        "type": "integer",
                        "description": "Minimum amount to not incur small order fee in cents",
                        "example": 0
                      },
                      "small_order_fee_flat": {
                        "type": "integer",
                        "description": "Small order fee amount in cents",
                        "example": 0
                      },
                      "small_order_fee_percent": {
                        "type": "number",
                        "description": "Small order fee percentage",
                        "example": 0
                      }
                    },
                    "type": "object"
                  },
                  "order_minimum": {
                    "type": "integer",
                    "description": "Minimum order amount in cents"
                  },
                  "min_tip": {
                    "type": "integer",
                    "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                  },
                  "asap_available": {
                    "type": "integer",
                    "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                  },
                  "first_party_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by the store"
                  },
                  "third_party_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by a third party service"
                  },
                  "courier_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by a last-mile delivery service."
                  },
                  "accepts_delivery_tip": {
                    "type": "boolean",
                    "description": "Whether a delivery tip is accepted."
                  },
                  "accepts_pickup_tip": {
                    "type": "boolean",
                    "description": "Whether a pickup tip is accepted."
                  },
                  "accepts_pickup_note": {
                    "type": "boolean",
                    "description": "Whether a pickup note is accepted."
                  }
                },
                "type": "object"
              }
            ]
          },
          "menu_id": {
            "type": "string",
            "description": "The MealMe Menu ID",
            "example": "gAAAAABihzvxA4pMVWefTSN3GFOL7b3CYG5yPIRnGUNnEu8oD72y0SiHcDkoloajAINb3pI4Kw6R5qR694t5fCXc8_DnvoB0_BeBlCZ_zJmelaZ4jWfcnF5ySNVt29YYobrl5PMQduRavTxgb5E2IvgZakNNbAzP9rYwyApbdaZ6n_RCwz09IlN2iOoqUlnNVL1WF8dDwqI6-XWMiA3XDI_A-k4QyVPZ0yMZDP_LuRzEnQOYIQ23CCyHHz2imKBP4ySAMNgeIKv0ynYV-a1ZfMC_MjFVyK_OHCds8KmiAM8RHZWt6-wR2m2xqMhKOg8NFWU5gWzYFVL_"
          },
          "categories": {
            "type": "array",
            "description": "List of inventory categories",
            "example": [
              {
                "name": "All-American Slam®",
                "price": 2420,
                "qty_available": null,
                "unit_size": null,
                "unit_of_measurement": "",
                "description": "Three scrambled eggs with Cheddar cheese, bacon strips, sausage links, hash browns and choice of bread.",
                "image": "https://cdn-img.mealme.ai/5888abdc30b2d3883b7c75df474b6c54bdf0f5c3/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f63613166616631312d343566632d346438352d623164622d3665653664636633383038332e6a706567",
                "formatted_price": "$24.20",
                "product_id": "gAAAAABjK9szYobuv6iW65lgAmIKh_k-gjXi-oKzrcqka5vYOVLq3IWsQtW9VpRJyXC-SbyvwlNt6zZWcxtw04v4E-09MgEley3TlTuAhfKuYBWzW35wk6x7VHfr8vGv3v99CY7fr3gKJfwOBHbb-oCNaHEmV1f5lLzXOV8nN2O6pLSj4Fw8kYMK06X1asT3n6kchHv4qoo3PhMtHmlkVmAgjr3qVDpkeknJMzbA3CrC1E3IWpQhNYCZtHZKUIfdoG6c1hr1dURQVdsEduOmYEpT8DkI16StynnXrPuAhI78Ub2aM0Y--u41H3H45T-SB-N9Pc8JTXZmsudk3-H9ODuuhqvy4eyICUz-O8BsR4IaKoem2UvGBMNFUPQ5SWdfZOwu-eXiXMrOPD3OPJ2HqkmbjCG9sbL2qwRNYoDu-qqQHHhE1c-1HO-vyfjTPa9Aud7Ga5bAmMggapUZjIxjLGSKX6wM7mhdEWfa6cZ0eVlpq4M7vVm9SGtmm-UnGCpRXTuXA2-U-oI3DlMiN_VR7Hwzh_CN3k22tsALWsNLB2Sn6BiBSSCQtJ4p5yHyCaHFMWhXAPNFxBeLz3OzttCXx5GfZBhLXH_oP5VYfVqURmnB-xelfAwG6hBaq4mUoweH9cBF8HhN-Mom3FoBA0JtScAyaEXWBbBThuzHk4XnskJFhtX2diENMLZ21cXfp0h6biEwOPIY1_fDuM_m9zEUU0xVSOHSC5raizsDsH53cNhjTctuHNXZGyap3MgEyziChflrJoyvB1AZOsIKOp_58Hfacjf1sgGyuMg_OXkU7Bm-TuGY56fPE5Cwitmiv0rMV30ifzeWBxx6mD0BYWNC5EiM8fD1Gx4yYF06p2-p4leBYxR-FHTeoZDlxDmkaCR69POiWLekM7ZeMqb4o9Cb3Qy4URIbymH5MBcbOLPcR8aXX40T3Ksr1pvos6AH183D0cRjCDcBO5HhFHBG6NXpPEi38uFpyiNjuSLlYinxAm6wHofhS2bPCWOoPiCVfed_tHSGfapkzFqYckaIb9MBRTRYQBDm7_S6PzzJoxJSdVGlq9WwqHyWfqNHHUd9OsNClP_-ZmGSctFPlr5oqc6c8SklsoboQHemOynglmcMhb9ne1vphiVcLddALtvKeUhgdohLn-rOxrpnRCs4cttkI4bKtz6uWatSLLA4dSKGM3m0_9PftAuh7YLWZtMPVPwT4fqLAI5D2lIrnGs-nqVjVJ1FFyNY57U5wYOTOViHST7be3PGqV9kMP9em6vcl0OaMQlq_J0SiWvDnQNFyUO0YIKA-uBLQfykKfHfaWATpLdbj-WwIHS9R8BNuja0Yab9EQCppINPubJOO1ILHvuwckU4jKgWL0hgA_8ZYvYkrACvS4_pGAolXeROrr8PmyqQDzUd_0UWO3Amh71I1XK1xT5VRFacTa2sYuLstSK5C9ulo9kKPnSArDOi1TXrvMH8FJzRVFc9-D6T-p85mPfQcFMu6r8lrxk2YlUPNZDHvDACJijOC4c4nVT1xqR7ODxqrQVf5e40NTo7eQm94vOIJCAIy7UicJv42DQoVPRmovmB0PP_NspNkT744AXSHkLka8BuXbwEGuy_EmhhfrZK8hXjaUtTgvJVFy4ji94epJmjk_h3W7yaoW7ySEQBpgnooDN47qU-M3_F-sQGUk4i-tOqSl327ZI7FZR81_cqGVw91uptKvYxkM8=",
                "should_fetch_customizations": true
              }
            ],
            "items": {
              "required": [
                "menu_item_list",
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The category's name (eg. Beverages)",
                  "example": "Coffee"
                },
                "subcategory_id": {
                  "type": "string",
                  "description": "The optional Subcategory ID, needed to fetch the next layer of subcategories or products if there are no further subcategories.",
                  "example": "gAAAAABiQmehnAId3aB5e_-ViDOrhJGgX7EOwkjuRPt_9TCw_atbHwRy3wqlULcwE5s0UhjQIgaz0O8fhnfHLmmDQS1YgUwvpTS1xTAJTLOgUGaRe11Kaig="
                },
                "menu_item_list": {
                  "type": "array",
                  "description": "List of products in this category",
                  "items": {
                    "required": [
                      "attributes",
                      "description",
                      "formatted_price",
                      "image",
                      "is_alcoholic",
                      "is_available",
                      "min_price",
                      "name",
                      "original_price",
                      "price",
                      "product_id",
                      "qty_available",
                      "should_fetch_customizations",
                      "supports_image_scaling",
                      "unit_of_measurement",
                      "unit_size",
                      "upc_code"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The item's name (eg. Grande Stacker)",
                        "example": "Iced Black Coffee"
                      },
                      "price": {
                        "type": "integer",
                        "description": "The item's base price in cents",
                        "example": 500
                      },
                      "min_price": {
                        "type": "integer",
                        "description": "The item's minimum price in cents",
                        "example": 500
                      },
                      "original_price": {
                        "type": "integer",
                        "description": "The product's original price. This will only be available if the product is currently on sale.",
                        "example": 700
                      },
                      "qty_available": {
                        "type": "integer",
                        "description": "The remaining amount available. If null, unlimited is available."
                      },
                      "unit_size": {
                        "type": "number",
                        "description": "The unit size for this product",
                        "example": 12
                      },
                      "unit_of_measurement": {
                        "type": "string",
                        "description": "The unit of measurement used to measure the product's size (i.e. oz, lb, L, gal)",
                        "example": "oz"
                      },
                      "description": {
                        "type": "string",
                        "description": "The item's description (eg. Melted cheese, double the seasoned beef, and nacho cheese sauce stacked up in a flour tortilla.",
                        "example": "Our Classic Beverage!"
                      },
                      "image": {
                        "type": "string",
                        "description": "Image of the item, if it exists",
                        "example": "https://cdn-img.mealme.ai/502b9e3a38d1395352faccd16d6daa2f667268d2/68747470733a2f2f64326c6e72356d6861376279636a2e636c6f756466726f6e742e6e65742f70726f647563742d696d6167652f66696c652f6c617267655f64356163336130302d386566392d343461662d396537632d3436383163386632316239662e706e67"
                      },
                      "formatted_price": {
                        "type": "string",
                        "description": "This item's price formatted in the restaurant's accepted currency",
                        "example": "$5.00"
                      },
                      "product_id": {
                        "type": "string",
                        "description": "The MealMe Product ID",
                        "example": "gAAAAABi6IJKDsJDuCdfEF3zQ2cBogEYyvlZhUq3Pn1G15uFl6l4khyg3_hdTJKh96-kYp2lFDJj_Dd3CNKrhw4u5wW3gCU9BQ9I9dIzr9UHhzE5XBZ4jszXNOUd8hp7ojMF6mYz6DinNeobtFYQF-dW5TvvDT7pYRm7lHleFK8JxPkgbzOGPFz_BRWER0KIKnRrULFVhYANYwxgxRW8lvygPDgwClOeq-0YgE3Un1DV9ZWZjpem1-XWaWnWGdPA_3f8OOslR7KF8SvUwKxx3M5AFiZSAPz-2zZljA__qC-S_ZlK3Ys5_xsJUz4tStmLLlEf5TVVsBLsjTKmkkK4Kd9k_K0UXYxkHMlJrit3z4NA0djr2vJNUqDzQ_XP4ZDZZF2qW2kCKPF1cIwZuVID-23OJdoHrO7HcSXNAFmCOA2g-ASQ_xn99MnjFI1Q1V64QHXdhORzQdH6Jj8J1tn2grXkav1j6y5KAxKCqZz6dkuEKKTvYdffYQ_-ACT0ef2kU-7eEajJY7tHf9BSO7ZQHDJTTmWxMY6qpmK8Hrzs31qWWLgF7Q1Vvaqki7N6u5hDxJu6REppgcQ_TSPVpgjr5FKYfQhSOMkC3D0w_NVvWgrnjfwwvuf9ED3AHsNLpGb0hkyc64dA0JI82nU-GmZ7gKPWWwBlIAWMtEGUyWblrhlf1izB0wbGm74="
                      },
                      "customizations": {
                        "type": "array",
                        "description": "List of customizations for this item",
                        "items": {
                          "required": [
                            "charge_threshold",
                            "customization_id",
                            "max_choice_options",
                            "min_choice_options",
                            "name",
                            "options"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The customization's name (eg. Choose your Meat)",
                              "example": "Extra Ice?"
                            },
                            "min_choice_options": {
                              "type": "integer",
                              "description": "The minimum number of options that must be selected for this customization",
                              "example": 0
                            },
                            "max_choice_options": {
                              "type": "integer",
                              "description": "The maximum number of options that must be selected for this customization",
                              "example": 1
                            },
                            "charge_threshold": {
                              "type": "integer",
                              "description": "The maximum option quantity that comes at no extra cost. For example, if `charge_threshold=2` the product's base price won't increase if any two unique or non-unique options are selected.",
                              "example": 1
                            },
                            "options": {
                              "type": "array",
                              "description": "List of options for this customization",
                              "items": {
                                "required": [
                                  "charge_threshold",
                                  "conditional_price",
                                  "default_qty",
                                  "formatted_price",
                                  "is_available",
                                  "is_required",
                                  "max_qty",
                                  "min_qty",
                                  "name",
                                  "option_id",
                                  "price"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "This option's name (eg. Chicken).",
                                    "example": true
                                  },
                                  "price": {
                                    "type": "integer",
                                    "description": "This option's additional price in cents.",
                                    "example": 0
                                  },
                                  "customizations": {
                                    "type": "array",
                                    "description": "List of customizations for this option.",
                                    "example": [],
                                    "items": {
                                      "properties": {},
                                      "type": "object"
                                    }
                                  },
                                  "default_qty": {
                                    "type": "integer",
                                    "description": "The default quantity automatically selected for this option.",
                                    "example": 0
                                  },
                                  "min_qty": {
                                    "type": "integer",
                                    "description": "The minimum quantity required for this option, if selected.",
                                    "example": 0
                                  },
                                  "max_qty": {
                                    "type": "integer",
                                    "description": "The maximum quantity for this option.",
                                    "example": 1
                                  },
                                  "is_required": {
                                    "type": "boolean",
                                    "description": "Whether this option must be selected. If `is_required` is `true`, then a quantity of atleast `min_qty` must be selected.",
                                    "example": 0
                                  },
                                  "charge_threshold": {
                                    "type": "integer",
                                    "description": "The maximum option quantity that comes at no extra cost. For example, if `charge_threshold=2` the product's base price should only increase by the option's price if a quantity greater than 2 is selected.",
                                    "example": 1
                                  },
                                  "formatted_price": {
                                    "type": "string",
                                    "description": "This option's additional price formatted in the store's accepted currency.",
                                    "example": "$0.00"
                                  },
                                  "option_id": {
                                    "type": "integer",
                                    "description": "This option's UUID.",
                                    "example": "gAAAAABi2J7G1dSgi_qhOEcmKI7dE5DSubG-_6ujtGfDtkuWJLKo_4Vy63k9I7bbjIhNH2K-n-7_8oKJs2fE3f_mJInhbbrSBAqmH7e0g4HlLS9gStkv1Rst0WCFQFah_QzyrhyfiG1jIlmGvGYmiVEV_aG1aTPwpANudL2GMmAWTRlG_4J7snU="
                                  },
                                  "conditional_price": {
                                    "description": "A mapping of option ID to price in cents. If this property exists for an option, then its price is dependent on the selected option of another customization. This property defines the conditional pricing.",
                                    "allOf": [
                                      {
                                        "required": [
                                          "*"
                                        ],
                                        "properties": {
                                          "*": {
                                            "type": "integer",
                                            "description": "The option's price in cents if the option corresponding to the key is also selected",
                                            "example": 200
                                          }
                                        },
                                        "type": "object"
                                      }
                                    ]
                                  },
                                  "is_available": {
                                    "type": "boolean",
                                    "description": "Whether the option is currently available.",
                                    "example": true
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "customization_id": {
                              "type": "string",
                              "description": "The uuid for the customization",
                              "example": "gAAAAABi2GRjalyt5qpvx650sKGop-NgTUE1BBRpm7oasAAjNS_w9SGeNsPSzzwkRvl3WEj3zsYqtjQUBfVIUtsmnzyZktN8ZLWOuyfvpBkO_OQzIf5gvvP2wuOSHIoc0w-k_j726owyBwBF3rmS6e9C8QA7O7JY-wlB5Bcy94S7EtLw1VLTTWlIe-DpCDJp81L4JFA-yQRN9jErerBlqDii9515XaTvmMhKwywT4uAF-vRY4688N9k="
                            }
                          },
                          "type": "object"
                        }
                      },
                      "attributes": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "The list of dietary preferences for this product.",
                          "example": [
                            "Diary-Free",
                            "Lactose-Free"
                          ]
                        },
                        "description": ""
                      },
                      "is_alcoholic": {
                        "type": "boolean",
                        "description": "Whether the product contains alcohol.",
                        "example": true
                      },
                      "upc_code": {
                        "type": "string",
                        "description": "The upc code of the product",
                        "example": "021000604647"
                      },
                      "should_fetch_customizations": {
                        "type": "boolean",
                        "description": "Whether a request should be made to to fetch customizations",
                        "example": true
                      },
                      "supports_image_scaling": {
                        "type": "boolean",
                        "description": "Whether the product's image can be scaled with the `image_height` and `image_weight` input parameters",
                        "example": true
                      },
                      "is_available": {
                        "type": "boolean",
                        "description": "Whether the product is currently available.",
                        "example": true
                      },
                      "next_available": {
                        "description": "The next time period that the product will be available. Note that this may only be existent when `is_available` is `false`.",
                        "allOf": [
                          {
                            "required": [
                              "close",
                              "day",
                              "next_close_timestamp",
                              "next_open_timestamp",
                              "open"
                            ],
                            "properties": {
                              "day": {
                                "type": "string",
                                "description": "The week day of the start time of this period.",
                                "example": "Friday"
                              },
                              "open": {
                                "type": "string",
                                "description": "The human-readable start time of this period.",
                                "example": 36000
                              },
                              "close": {
                                "type": "string",
                                "description": "The human-readable end time of this period.",
                                "example": 64799
                              },
                              "next_open_timestamp": {
                                "type": "number",
                                "description": "The UTC start timestamp of this period.",
                                "example": 1687626000
                              },
                              "next_close_timestamp": {
                                "type": "number",
                                "description": "The UTC end timestamp of this period.",
                                "example": 1687654799
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "max_qty": {
                        "type": "integer",
                        "description": "The maximum quantity that can be selected.",
                        "example": 10
                      }
                    },
                    "type": "object"
                  }
                },
                "menu_name": {
                  "type": "string",
                  "description": "The name of the menu the category falls under (eg. Breakfast).",
                  "example": "Breakfast"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Inventory_Product": {
        "required": [
          "attributes",
          "description",
          "formatted_price",
          "image",
          "is_alcoholic",
          "is_available",
          "min_price",
          "name",
          "original_price",
          "price",
          "product_id",
          "qty_available",
          "should_fetch_customizations",
          "supports_image_scaling",
          "unit_of_measurement",
          "unit_size",
          "upc_code"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The item's name (eg. Grande Stacker)",
            "example": "Iced Black Coffee"
          },
          "price": {
            "type": "integer",
            "description": "The item's base price in cents",
            "example": 500
          },
          "min_price": {
            "type": "integer",
            "description": "The item's minimum price in cents",
            "example": 500
          },
          "original_price": {
            "type": "integer",
            "description": "The product's original price. This will only be available if the product is currently on sale.",
            "example": 700
          },
          "qty_available": {
            "type": "integer",
            "description": "The remaining amount available. If null, unlimited is available."
          },
          "unit_size": {
            "type": "number",
            "description": "The unit size for this product",
            "example": 12
          },
          "unit_of_measurement": {
            "type": "string",
            "description": "The unit of measurement used to measure the product's size (i.e. oz, lb, L, gal)",
            "example": "oz"
          },
          "description": {
            "type": "string",
            "description": "The item's description (eg. Melted cheese, double the seasoned beef, and nacho cheese sauce stacked up in a flour tortilla.",
            "example": "Our Classic Beverage!"
          },
          "image": {
            "type": "string",
            "description": "Image of the item, if it exists",
            "example": "https://cdn-img.mealme.ai/502b9e3a38d1395352faccd16d6daa2f667268d2/68747470733a2f2f64326c6e72356d6861376279636a2e636c6f756466726f6e742e6e65742f70726f647563742d696d6167652f66696c652f6c617267655f64356163336130302d386566392d343461662d396537632d3436383163386632316239662e706e67"
          },
          "formatted_price": {
            "type": "string",
            "description": "This item's price formatted in the restaurant's accepted currency",
            "example": "$5.00"
          },
          "product_id": {
            "type": "string",
            "description": "The MealMe Product ID",
            "example": "gAAAAABi6IJKDsJDuCdfEF3zQ2cBogEYyvlZhUq3Pn1G15uFl6l4khyg3_hdTJKh96-kYp2lFDJj_Dd3CNKrhw4u5wW3gCU9BQ9I9dIzr9UHhzE5XBZ4jszXNOUd8hp7ojMF6mYz6DinNeobtFYQF-dW5TvvDT7pYRm7lHleFK8JxPkgbzOGPFz_BRWER0KIKnRrULFVhYANYwxgxRW8lvygPDgwClOeq-0YgE3Un1DV9ZWZjpem1-XWaWnWGdPA_3f8OOslR7KF8SvUwKxx3M5AFiZSAPz-2zZljA__qC-S_ZlK3Ys5_xsJUz4tStmLLlEf5TVVsBLsjTKmkkK4Kd9k_K0UXYxkHMlJrit3z4NA0djr2vJNUqDzQ_XP4ZDZZF2qW2kCKPF1cIwZuVID-23OJdoHrO7HcSXNAFmCOA2g-ASQ_xn99MnjFI1Q1V64QHXdhORzQdH6Jj8J1tn2grXkav1j6y5KAxKCqZz6dkuEKKTvYdffYQ_-ACT0ef2kU-7eEajJY7tHf9BSO7ZQHDJTTmWxMY6qpmK8Hrzs31qWWLgF7Q1Vvaqki7N6u5hDxJu6REppgcQ_TSPVpgjr5FKYfQhSOMkC3D0w_NVvWgrnjfwwvuf9ED3AHsNLpGb0hkyc64dA0JI82nU-GmZ7gKPWWwBlIAWMtEGUyWblrhlf1izB0wbGm74="
          },
          "customizations": {
            "type": "array",
            "description": "List of customizations for this item",
            "items": {
              "required": [
                "charge_threshold",
                "customization_id",
                "max_choice_options",
                "min_choice_options",
                "name",
                "options"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The customization's name (eg. Choose your Meat)",
                  "example": "Extra Ice?"
                },
                "min_choice_options": {
                  "type": "integer",
                  "description": "The minimum number of options that must be selected for this customization",
                  "example": 0
                },
                "max_choice_options": {
                  "type": "integer",
                  "description": "The maximum number of options that must be selected for this customization",
                  "example": 1
                },
                "charge_threshold": {
                  "type": "integer",
                  "description": "The maximum option quantity that comes at no extra cost. For example, if `charge_threshold=2` the product's base price won't increase if any two unique or non-unique options are selected.",
                  "example": 1
                },
                "options": {
                  "type": "array",
                  "description": "List of options for this customization",
                  "items": {
                    "required": [
                      "charge_threshold",
                      "conditional_price",
                      "default_qty",
                      "formatted_price",
                      "is_available",
                      "is_required",
                      "max_qty",
                      "min_qty",
                      "name",
                      "option_id",
                      "price"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "This option's name (eg. Chicken).",
                        "example": true
                      },
                      "price": {
                        "type": "integer",
                        "description": "This option's additional price in cents.",
                        "example": 0
                      },
                      "customizations": {
                        "type": "array",
                        "description": "List of customizations for this option.",
                        "example": [],
                        "items": {
                          "properties": {},
                          "type": "object"
                        }
                      },
                      "default_qty": {
                        "type": "integer",
                        "description": "The default quantity automatically selected for this option.",
                        "example": 0
                      },
                      "min_qty": {
                        "type": "integer",
                        "description": "The minimum quantity required for this option, if selected.",
                        "example": 0
                      },
                      "max_qty": {
                        "type": "integer",
                        "description": "The maximum quantity for this option.",
                        "example": 1
                      },
                      "is_required": {
                        "type": "boolean",
                        "description": "Whether this option must be selected. If `is_required` is `true`, then a quantity of atleast `min_qty` must be selected.",
                        "example": 0
                      },
                      "charge_threshold": {
                        "type": "integer",
                        "description": "The maximum option quantity that comes at no extra cost. For example, if `charge_threshold=2` the product's base price should only increase by the option's price if a quantity greater than 2 is selected.",
                        "example": 1
                      },
                      "formatted_price": {
                        "type": "string",
                        "description": "This option's additional price formatted in the store's accepted currency.",
                        "example": "$0.00"
                      },
                      "option_id": {
                        "type": "integer",
                        "description": "This option's UUID.",
                        "example": "gAAAAABi2J7G1dSgi_qhOEcmKI7dE5DSubG-_6ujtGfDtkuWJLKo_4Vy63k9I7bbjIhNH2K-n-7_8oKJs2fE3f_mJInhbbrSBAqmH7e0g4HlLS9gStkv1Rst0WCFQFah_QzyrhyfiG1jIlmGvGYmiVEV_aG1aTPwpANudL2GMmAWTRlG_4J7snU="
                      },
                      "conditional_price": {
                        "description": "A mapping of option ID to price in cents. If this property exists for an option, then its price is dependent on the selected option of another customization. This property defines the conditional pricing.",
                        "allOf": [
                          {
                            "required": [
                              "*"
                            ],
                            "properties": {
                              "*": {
                                "type": "integer",
                                "description": "The option's price in cents if the option corresponding to the key is also selected",
                                "example": 200
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "is_available": {
                        "type": "boolean",
                        "description": "Whether the option is currently available.",
                        "example": true
                      }
                    },
                    "type": "object"
                  }
                },
                "customization_id": {
                  "type": "string",
                  "description": "The uuid for the customization",
                  "example": "gAAAAABi2GRjalyt5qpvx650sKGop-NgTUE1BBRpm7oasAAjNS_w9SGeNsPSzzwkRvl3WEj3zsYqtjQUBfVIUtsmnzyZktN8ZLWOuyfvpBkO_OQzIf5gvvP2wuOSHIoc0w-k_j726owyBwBF3rmS6e9C8QA7O7JY-wlB5Bcy94S7EtLw1VLTTWlIe-DpCDJp81L4JFA-yQRN9jErerBlqDii9515XaTvmMhKwywT4uAF-vRY4688N9k="
                }
              },
              "type": "object"
            }
          },
          "attributes": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "The list of dietary preferences for this product.",
              "example": [
                "Diary-Free",
                "Lactose-Free"
              ]
            },
            "description": ""
          },
          "is_alcoholic": {
            "type": "boolean",
            "description": "Whether the product contains alcohol.",
            "example": true
          },
          "upc_code": {
            "type": "string",
            "description": "The upc code of the product",
            "example": "021000604647"
          },
          "should_fetch_customizations": {
            "type": "boolean",
            "description": "Whether a request should be made to to fetch customizations",
            "example": true
          },
          "supports_image_scaling": {
            "type": "boolean",
            "description": "Whether the product's image can be scaled with the `image_height` and `image_weight` input parameters",
            "example": true
          },
          "is_available": {
            "type": "boolean",
            "description": "Whether the product is currently available.",
            "example": true
          },
          "next_available": {
            "description": "The next time period that the product will be available. Note that this may only be existent when `is_available` is `false`.",
            "allOf": [
              {
                "required": [
                  "close",
                  "day",
                  "next_close_timestamp",
                  "next_open_timestamp",
                  "open"
                ],
                "properties": {
                  "day": {
                    "type": "string",
                    "description": "The week day of the start time of this period.",
                    "example": "Friday"
                  },
                  "open": {
                    "type": "string",
                    "description": "The human-readable start time of this period.",
                    "example": 36000
                  },
                  "close": {
                    "type": "string",
                    "description": "The human-readable end time of this period.",
                    "example": 64799
                  },
                  "next_open_timestamp": {
                    "type": "number",
                    "description": "The UTC start timestamp of this period.",
                    "example": 1687626000
                  },
                  "next_close_timestamp": {
                    "type": "number",
                    "description": "The UTC end timestamp of this period.",
                    "example": 1687654799
                  }
                },
                "type": "object"
              }
            ]
          },
          "max_qty": {
            "type": "integer",
            "description": "The maximum quantity that can be selected.",
            "example": 10
          }
        },
        "type": "object"
      },
      "Customizations_list": {
        "required": [
          "charge_threshold",
          "customization_id",
          "max_choice_options",
          "min_choice_options",
          "name",
          "options"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The customization's name (eg. Choose your Meat)",
            "example": "Extra Ice?"
          },
          "min_choice_options": {
            "type": "integer",
            "description": "The minimum number of options that must be selected for this customization",
            "example": 0
          },
          "max_choice_options": {
            "type": "integer",
            "description": "The maximum number of options that must be selected for this customization",
            "example": 1
          },
          "charge_threshold": {
            "type": "integer",
            "description": "The maximum option quantity that comes at no extra cost. For example, if `charge_threshold=2` the product's base price won't increase if any two unique or non-unique options are selected.",
            "example": 1
          },
          "options": {
            "type": "array",
            "description": "List of options for this customization",
            "items": {
              "required": [
                "charge_threshold",
                "conditional_price",
                "default_qty",
                "formatted_price",
                "is_available",
                "is_required",
                "max_qty",
                "min_qty",
                "name",
                "option_id",
                "price"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "This option's name (eg. Chicken).",
                  "example": true
                },
                "price": {
                  "type": "integer",
                  "description": "This option's additional price in cents.",
                  "example": 0
                },
                "customizations": {
                  "type": "array",
                  "description": "List of customizations for this option.",
                  "example": [],
                  "items": {
                    "properties": {},
                    "type": "object"
                  }
                },
                "default_qty": {
                  "type": "integer",
                  "description": "The default quantity automatically selected for this option.",
                  "example": 0
                },
                "min_qty": {
                  "type": "integer",
                  "description": "The minimum quantity required for this option, if selected.",
                  "example": 0
                },
                "max_qty": {
                  "type": "integer",
                  "description": "The maximum quantity for this option.",
                  "example": 1
                },
                "is_required": {
                  "type": "boolean",
                  "description": "Whether this option must be selected. If `is_required` is `true`, then a quantity of atleast `min_qty` must be selected.",
                  "example": 0
                },
                "charge_threshold": {
                  "type": "integer",
                  "description": "The maximum option quantity that comes at no extra cost. For example, if `charge_threshold=2` the product's base price should only increase by the option's price if a quantity greater than 2 is selected.",
                  "example": 1
                },
                "formatted_price": {
                  "type": "string",
                  "description": "This option's additional price formatted in the store's accepted currency.",
                  "example": "$0.00"
                },
                "option_id": {
                  "type": "integer",
                  "description": "This option's UUID.",
                  "example": "gAAAAABi2J7G1dSgi_qhOEcmKI7dE5DSubG-_6ujtGfDtkuWJLKo_4Vy63k9I7bbjIhNH2K-n-7_8oKJs2fE3f_mJInhbbrSBAqmH7e0g4HlLS9gStkv1Rst0WCFQFah_QzyrhyfiG1jIlmGvGYmiVEV_aG1aTPwpANudL2GMmAWTRlG_4J7snU="
                },
                "conditional_price": {
                  "description": "A mapping of option ID to price in cents. If this property exists for an option, then its price is dependent on the selected option of another customization. This property defines the conditional pricing.",
                  "allOf": [
                    {
                      "required": [
                        "*"
                      ],
                      "properties": {
                        "*": {
                          "type": "integer",
                          "description": "The option's price in cents if the option corresponding to the key is also selected",
                          "example": 200
                        }
                      },
                      "type": "object"
                    }
                  ]
                },
                "is_available": {
                  "type": "boolean",
                  "description": "Whether the option is currently available.",
                  "example": true
                }
              },
              "type": "object"
            }
          },
          "customization_id": {
            "type": "string",
            "description": "The uuid for the customization",
            "example": "gAAAAABi2GRjalyt5qpvx650sKGop-NgTUE1BBRpm7oasAAjNS_w9SGeNsPSzzwkRvl3WEj3zsYqtjQUBfVIUtsmnzyZktN8ZLWOuyfvpBkO_OQzIf5gvvP2wuOSHIoc0w-k_j726owyBwBF3rmS6e9C8QA7O7JY-wlB5Bcy94S7EtLw1VLTTWlIe-DpCDJp81L4JFA-yQRN9jErerBlqDii9515XaTvmMhKwywT4uAF-vRY4688N9k="
          }
        },
        "type": "object"
      },
      "Options_list": {
        "required": [
          "charge_threshold",
          "conditional_price",
          "default_qty",
          "formatted_price",
          "is_available",
          "is_required",
          "max_qty",
          "min_qty",
          "name",
          "option_id",
          "price"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "This option's name (eg. Chicken).",
            "example": true
          },
          "price": {
            "type": "integer",
            "description": "This option's additional price in cents.",
            "example": 0
          },
          "customizations": {
            "type": "array",
            "description": "List of customizations for this option.",
            "example": [],
            "items": {
              "properties": {},
              "type": "object"
            }
          },
          "default_qty": {
            "type": "integer",
            "description": "The default quantity automatically selected for this option.",
            "example": 0
          },
          "min_qty": {
            "type": "integer",
            "description": "The minimum quantity required for this option, if selected.",
            "example": 0
          },
          "max_qty": {
            "type": "integer",
            "description": "The maximum quantity for this option.",
            "example": 1
          },
          "is_required": {
            "type": "boolean",
            "description": "Whether this option must be selected. If `is_required` is `true`, then a quantity of atleast `min_qty` must be selected.",
            "example": 0
          },
          "charge_threshold": {
            "type": "integer",
            "description": "The maximum option quantity that comes at no extra cost. For example, if `charge_threshold=2` the product's base price should only increase by the option's price if a quantity greater than 2 is selected.",
            "example": 1
          },
          "formatted_price": {
            "type": "string",
            "description": "This option's additional price formatted in the store's accepted currency.",
            "example": "$0.00"
          },
          "option_id": {
            "type": "integer",
            "description": "This option's UUID.",
            "example": "gAAAAABi2J7G1dSgi_qhOEcmKI7dE5DSubG-_6ujtGfDtkuWJLKo_4Vy63k9I7bbjIhNH2K-n-7_8oKJs2fE3f_mJInhbbrSBAqmH7e0g4HlLS9gStkv1Rst0WCFQFah_QzyrhyfiG1jIlmGvGYmiVEV_aG1aTPwpANudL2GMmAWTRlG_4J7snU="
          },
          "conditional_price": {
            "description": "A mapping of option ID to price in cents. If this property exists for an option, then its price is dependent on the selected option of another customization. This property defines the conditional pricing.",
            "allOf": [
              {
                "required": [
                  "*"
                ],
                "properties": {
                  "*": {
                    "type": "integer",
                    "description": "The option's price in cents if the option corresponding to the key is also selected",
                    "example": 200
                  }
                },
                "type": "object"
              }
            ]
          },
          "is_available": {
            "type": "boolean",
            "description": "Whether the option is currently available.",
            "example": true
          }
        },
        "type": "object"
      },
      "Option_Customizations_list": {
        "properties": {},
        "type": "object"
      },
      "Conditional_Price": {
        "required": [
          "*"
        ],
        "properties": {
          "*": {
            "type": "integer",
            "description": "The option's price in cents if the option corresponding to the key is also selected",
            "example": 200
          }
        },
        "type": "object"
      },
      "Time_Period": {
        "required": [
          "close",
          "day",
          "next_close_timestamp",
          "next_open_timestamp",
          "open"
        ],
        "properties": {
          "day": {
            "type": "string",
            "description": "The week day of the start time of this period.",
            "example": "Friday"
          },
          "open": {
            "type": "string",
            "description": "The human-readable start time of this period.",
            "example": 36000
          },
          "close": {
            "type": "string",
            "description": "The human-readable end time of this period.",
            "example": 64799
          },
          "next_open_timestamp": {
            "type": "number",
            "description": "The UTC start timestamp of this period.",
            "example": 1687626000
          },
          "next_close_timestamp": {
            "type": "number",
            "description": "The UTC end timestamp of this period.",
            "example": 1687654799
          }
        },
        "type": "object"
      },
      "Product_Details_Unavailable": {
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "The reason product details are unavailable.",
            "example": "Delivery is currently unavailable for this store."
          }
        },
        "type": "object"
      },
      "Product_Details_and_Quote_Output": {
        "required": [
          "customizations",
          "description",
          "formatted_price",
          "image",
          "is_alcoholic",
          "is_available",
          "min_price",
          "name",
          "original_price",
          "price",
          "product_id",
          "qty_available",
          "supports_image_scaling",
          "thumbnail_image",
          "unit_of_measurement",
          "unit_size",
          "upc_code"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The product's name.",
            "example": "Iced Black Coffee"
          },
          "price": {
            "type": "integer",
            "description": "The base price of the product, in cents.",
            "example": 200
          },
          "qty_available": {
            "type": "integer",
            "description": "The remaining quantity available. If null, and unlimited amount is available."
          },
          "unit_size": {
            "type": "number",
            "description": "The unit size for this product.",
            "example": 12
          },
          "unit_of_measurement": {
            "type": "string",
            "description": "The unit of measurement used to measure the product's size (i.e. oz, lb, L, gal).",
            "example": "oz"
          },
          "description": {
            "type": "string",
            "description": "The product's description.",
            "example": "Our Classic Beverage!"
          },
          "min_price": {
            "type": "integer",
            "description": "The product's minimum price, in cents.",
            "example": 200
          },
          "image": {
            "type": "string",
            "description": "The image of the product.",
            "example": "https://cdn-img.mealme.ai/436200dc0431f9629c1771dd24667b9af74a8a99/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f73396d68776c30347771373779646c76327966622e6a7067"
          },
          "original_price": {
            "type": "integer",
            "description": "The product's original price, in cents. The original price will differ from `price` if the product is currently discounted.",
            "example": 700
          },
          "formatted_price": {
            "type": "string",
            "description": "This product's price formatted in the store's accepted currency",
            "example": "$5.00"
          },
          "product_id": {
            "type": "string",
            "description": "The MealMe Product ID",
            "example": "gAAAAABi6IJKDsJDuCdfEF3zQ2cBogEYyvlZhUq3Pn1G15uFl6l4khyg3_hdTJKh96-kYp2lFDJj_Dd3CNKrhw4u5wW3gCU9BQ9I9dIzr9UHhzE5XBZ4jszXNOUd8hp7ojMF6mYz6DinNeobtFYQF-dW5TvvDT7pYRm7lHleFK8JxPkgbzOGPFz_BRWER0KIKnRrULFVhYANYwxgxRW8lvygPDgwClOeq-0YgE3Un1DV9ZWZjpem1-XWaWnWGdPA_3f8OOslR7KF8SvUwKxx3M5AFiZSAPz-2zZljA__qC-S_ZlK3Ys5_xsJUz4tStmLLlEf5TVVsBLsjTKmkkK4Kd9k_K0UXYxkHMlJrit3z4NA0djr2vJNUqDzQ_XP4ZDZZF2qW2kCKPF1cIwZuVID-23OJdoHrO7HcSXNAFmCOA2g-ASQ_xn99MnjFI1Q1V64QHXdhORzQdH6Jj8J1tn2grXkav1j6y5KAxKCqZz6dkuEKKTvYdffYQ_-ACT0ef2kU-7eEajJY7tHf9BSO7ZQHDJTTmWxMY6qpmK8Hrzs31qWWLgF7Q1Vvaqki7N6u5hDxJu6REppgcQ_TSPVpgjr5FKYfQhSOMkC3D0w_NVvWgrnjfwwvuf9ED3AHsNLpGb0hkyc64dA0JI82nU-GmZ7gKPWWwBlIAWMtEGUyWblrhlf1izB0wbGm74="
          },
          "thumbnail_image": {
            "type": "string",
            "description": "The thumbnail image of the product.",
            "example": "https://cdn-img.mealme.ai/10d7edecf681e9a60fffa6095198942cca938305/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f685f3330302c775f3330302c635f6c696d69742f73396d68776c30347771373779646c76327966622e6a7067"
          },
          "is_alcoholic": {
            "type": "boolean",
            "description": "Whether the product contains alcohol.",
            "example": true
          },
          "upc_code": {
            "type": "string",
            "description": "The upc code of the product.",
            "example": "021000604647"
          },
          "supports_image_scaling": {
            "type": "boolean",
            "description": "Whether the product's image can be scaled with the `image_height` and `image_weight` input parameters.",
            "example": true
          },
          "is_available": {
            "type": "boolean",
            "description": "Whether the product is currently available",
            "example": true
          },
          "default_customization_description": {
            "type": "string",
            "description": "A description of customizations that are included.",
            "example": "Comes with Small Premium Roast Coffee"
          },
          "customizations": {
            "type": "array",
            "description": "List of customizations for this product.",
            "example": [
              {
                "name": "Add Strawberry Topping",
                "min_choice_options": 0,
                "max_choice_options": 1,
                "options": [
                  {
                    "name": "Strawberry Topping",
                    "price": 0,
                    "customizations": [],
                    "min_qty": 0,
                    "max_qty": 1,
                    "formatted_price": "$0.00",
                    "option_id": "gAAAAABi6eTp5hEa_7-AXIipoGFGb18GyugoPYx3bL4JIb7NRfavPLYIVUe4vcL8Y0ijERPJ83PeMKQGD_GzsfP4HcdaCjICmT7Vkh1IjWULGmKJtyETbMhtsSy4ieeG-NroSmidMIMaYgmpS3WBcWr4OmNrdaS1V6DM9nTwlf1O6-i5vuXEGjU="
                  }
                ],
                "customization_id": "gAAAAABi6eTphy9NstMVMveWjkadqTQtGoyg3SeSsms6uaiH-08qieDYzPgqr1xs7LfvAho1Knir3wqV2B-RypE8LBLwQ2nAG6HyOQN8rhA4n4XF7qzW4Nrl8SKEiCohK4EZ6I-olUPjvA-MpQLQOBPYGEstxPOwVjmWiCDelknbo7KjTKpcbJOOJNMhm9MIzBD2pgJDVRA2XuTrrFxcljq3tLyMQ2PfleTsYXpWFsyqI6DHQ_lvrg4="
              }
            ],
            "items": {
              "required": [
                "charge_threshold",
                "customization_id",
                "max_choice_options",
                "min_choice_options",
                "name",
                "options"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The customization's name (eg. Choose your Meat)",
                  "example": "Extra Ice?"
                },
                "min_choice_options": {
                  "type": "integer",
                  "description": "The minimum number of options that must be selected for this customization",
                  "example": 0
                },
                "max_choice_options": {
                  "type": "integer",
                  "description": "The maximum number of options that must be selected for this customization",
                  "example": 1
                },
                "charge_threshold": {
                  "type": "integer",
                  "description": "The maximum option quantity that comes at no extra cost. For example, if `charge_threshold=2` the product's base price won't increase if any two unique or non-unique options are selected.",
                  "example": 1
                },
                "options": {
                  "type": "array",
                  "description": "List of options for this customization",
                  "items": {
                    "required": [
                      "charge_threshold",
                      "conditional_price",
                      "default_qty",
                      "formatted_price",
                      "is_available",
                      "is_required",
                      "max_qty",
                      "min_qty",
                      "name",
                      "option_id",
                      "price"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "This option's name (eg. Chicken).",
                        "example": true
                      },
                      "price": {
                        "type": "integer",
                        "description": "This option's additional price in cents.",
                        "example": 0
                      },
                      "customizations": {
                        "type": "array",
                        "description": "List of customizations for this option.",
                        "example": [],
                        "items": {
                          "properties": {},
                          "type": "object"
                        }
                      },
                      "default_qty": {
                        "type": "integer",
                        "description": "The default quantity automatically selected for this option.",
                        "example": 0
                      },
                      "min_qty": {
                        "type": "integer",
                        "description": "The minimum quantity required for this option, if selected.",
                        "example": 0
                      },
                      "max_qty": {
                        "type": "integer",
                        "description": "The maximum quantity for this option.",
                        "example": 1
                      },
                      "is_required": {
                        "type": "boolean",
                        "description": "Whether this option must be selected. If `is_required` is `true`, then a quantity of atleast `min_qty` must be selected.",
                        "example": 0
                      },
                      "charge_threshold": {
                        "type": "integer",
                        "description": "The maximum option quantity that comes at no extra cost. For example, if `charge_threshold=2` the product's base price should only increase by the option's price if a quantity greater than 2 is selected.",
                        "example": 1
                      },
                      "formatted_price": {
                        "type": "string",
                        "description": "This option's additional price formatted in the store's accepted currency.",
                        "example": "$0.00"
                      },
                      "option_id": {
                        "type": "integer",
                        "description": "This option's UUID.",
                        "example": "gAAAAABi2J7G1dSgi_qhOEcmKI7dE5DSubG-_6ujtGfDtkuWJLKo_4Vy63k9I7bbjIhNH2K-n-7_8oKJs2fE3f_mJInhbbrSBAqmH7e0g4HlLS9gStkv1Rst0WCFQFah_QzyrhyfiG1jIlmGvGYmiVEV_aG1aTPwpANudL2GMmAWTRlG_4J7snU="
                      },
                      "conditional_price": {
                        "description": "A mapping of option ID to price in cents. If this property exists for an option, then its price is dependent on the selected option of another customization. This property defines the conditional pricing.",
                        "allOf": [
                          {
                            "required": [
                              "*"
                            ],
                            "properties": {
                              "*": {
                                "type": "integer",
                                "description": "The option's price in cents if the option corresponding to the key is also selected",
                                "example": 200
                              }
                            },
                            "type": "object"
                          }
                        ]
                      },
                      "is_available": {
                        "type": "boolean",
                        "description": "Whether the option is currently available.",
                        "example": true
                      }
                    },
                    "type": "object"
                  }
                },
                "customization_id": {
                  "type": "string",
                  "description": "The uuid for the customization",
                  "example": "gAAAAABi2GRjalyt5qpvx650sKGop-NgTUE1BBRpm7oasAAjNS_w9SGeNsPSzzwkRvl3WEj3zsYqtjQUBfVIUtsmnzyZktN8ZLWOuyfvpBkO_OQzIf5gvvP2wuOSHIoc0w-k_j726owyBwBF3rmS6e9C8QA7O7JY-wlB5Bcy94S7EtLw1VLTTWlIe-DpCDJp81L4JFA-yQRN9jErerBlqDii9515XaTvmMhKwywT4uAF-vRY4688N9k="
                }
              },
              "type": "object"
            }
          },
          "quote": {
            "description": "The quote for the given product. The quote will only be available when `include_quote=true`.",
            "example": {
              "time_estimate": {
                "minimum": 43,
                "maximum": 45
              },
              "sales_tax_percent": 10.5,
              "delivery_fee": {
                "delivery_fee_flat": 0,
                "delivery_fee_percent": 0,
                "delivery_fee_taxable": false
              },
              "service_fee": {
                "service_fee_flat": 0,
                "service_fee_percent": 10,
                "service_fee_min": 300,
                "service_fee_max": 700,
                "service_fee_taxable": false
              },
              "small_order_fee": {
                "minimum_order_value": 0,
                "small_order_fee_flat": 0,
                "small_order_fee_percent": 0
              },
              "order_minimum": 1500,
              "threshold_fees": [],
              "asap_available": true
            },
            "allOf": [
              {
                "required": [
                  "accepts_delivery_tip",
                  "accepts_pickup_note",
                  "accepts_pickup_tip",
                  "asap_available",
                  "courier_quote",
                  "delivery_fee",
                  "first_party_quote",
                  "order_minimum",
                  "sales_tax_percent",
                  "service_fee",
                  "small_order_fee",
                  "third_party_quote",
                  "time_estimate"
                ],
                "properties": {
                  "time_estimate": {
                    "description": "",
                    "required": [
                      "maximum",
                      "minimum"
                    ],
                    "properties": {
                      "minimum": {
                        "type": "integer",
                        "description": "Lower bound of delivery time estimate (in minutes)"
                      },
                      "maximum": {
                        "type": "integer",
                        "description": "Upper bound of delivery time estimate (in minutes)"
                      },
                      "scheduled": {
                        "type": "array",
                        "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                        "items": {
                          "required": [
                            "delivery_fee",
                            "maximum",
                            "minimum"
                          ],
                          "properties": {
                            "minimum": {
                              "type": "integer",
                              "description": "Timestamp (seconds since 1970)"
                            },
                            "maximum": {
                              "type": "integer",
                              "description": "Timestamp (seconds since 1970)"
                            },
                            "delivery_fee": {
                              "description": "",
                              "required": [
                                "delivery_fee_flat",
                                "delivery_fee_percent"
                              ],
                              "properties": {
                                "delivery_fee_flat": {
                                  "type": "integer",
                                  "description": "Delivery fee amount in cents"
                                },
                                "delivery_fee_percent": {
                                  "type": "number",
                                  "description": "Delivery fee percentage"
                                },
                                "delivery_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether the delivery fee is taxable or not"
                                },
                                "threshold_fees": {
                                  "type": "array",
                                  "description": "Threshold Fees, if they exist",
                                  "items": {
                                    "required": [
                                      "threshold_cents",
                                      "threshold_fee_cents"
                                    ],
                                    "properties": {
                                      "threshold_cents": {
                                        "type": "integer",
                                        "description": "Subtotal that enacts a specific fee"
                                      },
                                      "threshold_fee_cents": {
                                        "type": "integer",
                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "sales_tax_percent": {
                    "type": "integer",
                    "description": "Sales tax in percentage terms"
                  },
                  "delivery_fee": {
                    "description": "",
                    "required": [
                      "delivery_fee_flat",
                      "delivery_fee_percent"
                    ],
                    "properties": {
                      "delivery_fee_flat": {
                        "type": "integer",
                        "description": "Delivery fee amount in cents"
                      },
                      "delivery_fee_percent": {
                        "type": "number",
                        "description": "Delivery fee percentage"
                      },
                      "delivery_fee_taxable": {
                        "type": "boolean",
                        "description": "Whether the delivery fee is taxable or not"
                      },
                      "threshold_fees": {
                        "type": "array",
                        "description": "Threshold Fees, if they exist",
                        "items": {
                          "required": [
                            "threshold_cents",
                            "threshold_fee_cents"
                          ],
                          "properties": {
                            "threshold_cents": {
                              "type": "integer",
                              "description": "Subtotal that enacts a specific fee"
                            },
                            "threshold_fee_cents": {
                              "type": "integer",
                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "service_fee": {
                    "description": "",
                    "required": [
                      "service_fee_flat",
                      "service_fee_percent"
                    ],
                    "properties": {
                      "service_fee_flat": {
                        "type": "integer",
                        "description": "Service fee amount in cents"
                      },
                      "service_fee_percent": {
                        "type": "number",
                        "description": "Service fee percentage from 0 to 100"
                      },
                      "service_fee_min": {
                        "type": "integer",
                        "description": "Minimum service fee amount in cents"
                      },
                      "service_fee_max": {
                        "type": "integer",
                        "description": "Maximum service fee amount in cents"
                      },
                      "service_fee_taxable": {
                        "type": "boolean",
                        "description": "Whether the service fee is taxable or not"
                      },
                      "threshold_fees": {
                        "type": "array",
                        "description": "Threshold Fees, if they exist",
                        "items": {
                          "required": [
                            "threshold_cents",
                            "threshold_fee_cents"
                          ],
                          "properties": {
                            "threshold_cents": {
                              "type": "integer",
                              "description": "Subtotal that enacts a specific fee"
                            },
                            "threshold_fee_cents": {
                              "type": "integer",
                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "small_order_fee": {
                    "description": "",
                    "required": [
                      "minimum_order_value",
                      "small_order_fee_flat",
                      "small_order_fee_percent"
                    ],
                    "properties": {
                      "minimum_order_value": {
                        "type": "integer",
                        "description": "Minimum amount to not incur small order fee in cents",
                        "example": 0
                      },
                      "small_order_fee_flat": {
                        "type": "integer",
                        "description": "Small order fee amount in cents",
                        "example": 0
                      },
                      "small_order_fee_percent": {
                        "type": "number",
                        "description": "Small order fee percentage",
                        "example": 0
                      }
                    },
                    "type": "object"
                  },
                  "order_minimum": {
                    "type": "integer",
                    "description": "Minimum order amount in cents"
                  },
                  "min_tip": {
                    "type": "integer",
                    "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                  },
                  "asap_available": {
                    "type": "integer",
                    "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                  },
                  "first_party_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by the store"
                  },
                  "third_party_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by a third party service"
                  },
                  "courier_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by a last-mile delivery service."
                  },
                  "accepts_delivery_tip": {
                    "type": "boolean",
                    "description": "Whether a delivery tip is accepted."
                  },
                  "accepts_pickup_tip": {
                    "type": "boolean",
                    "description": "Whether a pickup tip is accepted."
                  },
                  "accepts_pickup_note": {
                    "type": "boolean",
                    "description": "Whether a pickup note is accepted."
                  }
                },
                "type": "object"
              }
            ]
          }
        },
        "type": "object"
      },
      "Order_Input": {
        "required": [
          "items",
          "pickup",
          "place_order",
          "user_email",
          "user_id",
          "user_name",
          "user_phone"
        ],
        "properties": {
          "place_order": {
            "type": "boolean",
            "description": "Whether to actually place the order or just get the final quote",
            "default": false,
            "example": false
          },
          "order_id": {
            "type": "string",
            "description": "The ID of an existing order to update.",
            "example": "-O14zT3XJbLfybkJa6cG"
          },
          "items": {
            "type": "array",
            "description": "The list of items to include in the order. All items must come from the same menu.",
            "default": [
              {
                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                "notes": "No whipped cream."
              }
            ],
            "example": [
              {
                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                "notes": "No whipped cream."
              }
            ],
            "items": {
              "required": [
                "product_id"
              ],
              "properties": {
                "product_id": {
                  "type": "string",
                  "description": "The product's ID."
                },
                "quantity": {
                  "type": "integer",
                  "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                },
                "product_marked_price": {
                  "type": "integer",
                  "description": "The self-provided marked price (in cents) to be used in the email receipt."
                },
                "selected_options": {
                  "type": "array",
                  "description": "The list of selected options for the product.",
                  "items": {
                    "required": [
                      "option_id",
                      "quantity"
                    ],
                    "properties": {
                      "option_id": {
                        "type": "string",
                        "description": "Option ID"
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "The option quantity (must be greater than 0)"
                      },
                      "marked_price": {
                        "type": "integer",
                        "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                      }
                    },
                    "type": "object"
                  }
                },
                "notes": {
                  "type": "string",
                  "description": "The product notes for the store."
                }
              },
              "type": "object"
            }
          },
          "pickup": {
            "type": "boolean",
            "description": "Whether to the order fulfillment type is pickup or delivery.",
            "default": false,
            "example": false
          },
          "scheduled_id": {
            "type": "string",
            "description": "The ID corresponding to the desired scheduled pickup/delivery window. If not provided, the ASAP window will be chosen by default. Scheduled IDs are provided by [](https://docs.mealme.ai/reference/get_inventory_details) and [](https://docs.mealme.ai/reference/get_product_details) when `include_quote` is `true`.",
            "example": ""
          },
          "driver_tip_cents": {
            "type": "integer",
            "description": "The tip for the driver, in cents. Note that this field can only be provided for delivery orders and when `quote.accepts_delivery_tip` is `true` from [](https://docs.mealme.ai/reference/get_inventory_details) or [](https://docs.mealme.ai/reference/get_product_details).",
            "default": 100,
            "example": 100
          },
          "pickup_tip_cents": {
            "type": "integer",
            "description": "The tip for the store, in cents. Note that this field can only be provided for pickup orders and when `quote.accepts_pickup_tip` is `true` from [](https://docs.mealme.ai/reference/get_inventory_details) or [](https://docs.mealme.ai/reference/get_product_details).",
            "default": 0,
            "example": 100
          },
          "user_latitude": {
            "type": "number",
            "description": "Latitude of the user. Not required for `pickup` orders.",
            "default": 37.7786357,
            "example": 37.7786357
          },
          "user_longitude": {
            "type": "number",
            "description": "Longitude of the user. Not required for `pickup` orders.",
            "default": -122.3918135,
            "example": -122.3918135
          },
          "user_street_num": {
            "type": "string",
            "description": "Street number of the user. Not required for `pickup` orders.",
            "default": "188",
            "example": "188"
          },
          "user_street_name": {
            "type": "string",
            "description": "Street name of the user. Not required for `pickup` orders.",
            "default": "King Street",
            "example": "King Street"
          },
          "user_apt_num": {
            "type": "string",
            "description": "Apartment number of the user. Not required for `pickup` orders.",
            "example": "108"
          },
          "user_city": {
            "type": "string",
            "description": "City of the user. Not required for `pickup` orders.",
            "default": "San Francisco",
            "example": "San Francisco"
          },
          "user_state": {
            "type": "string",
            "description": "State of the user. Not required for `pickup` orders.",
            "default": "CA",
            "example": "CA"
          },
          "user_country": {
            "type": "string",
            "description": "Country of the user. Can either be `US` or `CA`. Not required for `pickup` orders.",
            "default": "US",
            "example": "US"
          },
          "user_zipcode": {
            "type": "string",
            "description": "Zipcode of the user. Not required for `pickup` orders.",
            "default": "94107",
            "example": "94107"
          },
          "user_dropoff_notes": {
            "type": "string",
            "description": "Dropoff delivery notes for the user. Not required for `pickup` orders.",
            "default": "Leave in lobby",
            "example": "Leave in lobby"
          },
          "user_pickup_notes": {
            "type": "string",
            "description": "User pickup notes for the store. Not required for `delivery` orders.  Note that this field can only be provided when `quote.accepts_pickup_note` is `true` from [](https://docs.mealme.ai/reference/get_inventory_details).",
            "example": "This pickup order is for Steve"
          },
          "user_name": {
            "type": "string",
            "description": "User's name. This is required so that the store and/or driver know who to give the products to at dropoff. The `user_name` must consist of a first and last name that are both at least 2 alphabetic characters each, separated by one space. Optionally, the first and last name can be prefixed with any combination of alphabetic characters and spaces, followed by a leading space (i.e. 'Company ABC John Doe').",
            "default": "Steve Jobs",
            "example": "Steve Jobs"
          },
          "user_email": {
            "type": "string",
            "description": "User's email. Order confirmation, updates, and tracking link will be sent to the email provided here.",
            "default": "steve@apple.com",
            "example": "steve@apple.com"
          },
          "user_phone": {
            "type": "integer",
            "description": "User's phone number. This is required so that the store and/or driver know who to call for handling product replacements, drop-off, etc. Must include country code.",
            "default": 14044442058,
            "example": 14044442058
          },
          "user_id": {
            "type": "string",
            "description": "Unique User ID. This is a self-provided unique identifier for a user, which can later be supplied to [Get Orders](https://docs.mealme.ai/reference/get_account_orders) to fetch a user's order(s). The `user_id` must only consist of alphanumeric characters.",
            "default": "7B36A9CF",
            "example": "7B36A9CF"
          },
          "payment_method_id": {
            "type": "string",
            "description": "User's payment method ID. The ID is provided by [](https://docs.mealme.ai/reference/post_payment_create), and the corresponding payment method will be charged if `charge_user` is `true`.",
            "default": "",
            "example": "pm_1MZBBkEFrDExIlIksM7oTHEI"
          },
          "charge_user": {
            "type": "boolean",
            "description": "If `true`, the payment method corresponding to the supplied `payment_method_id` will be charged an amount equal to the `total_with_tip` specified in the response. This amount will also include any additional fees supplied via the `misc_fees` or `added_fees` input parameters. Any price markup(s), whether automatically applied or supplied via the `product_marked_price` and `marked_price` input parameters, will also be included in the total amount charged.",
            "default": true,
            "example": true
          },
          "include_final_quote": {
            "type": "boolean",
            "description": "Whether to return the final quote.",
            "default": true,
            "example": true
          },
          "disable_sms": {
            "type": "boolean",
            "description": "Whether to send the user order status updates via SMS. It's highly recommended to enable SMS, so that the user can receive order updates from the store and/or driver.",
            "default": false,
            "example": false
          },
          "email_receipt_specifications": {
            "description": "Set of optional configurations used to modify email reciept",
            "allOf": [
              {
                "properties": {
                  "prices_marked": {
                    "type": "boolean",
                    "description": "If `true`, the price(s) in the email receipt will reflect the amount(s) specified via the `product_marked_price` and `marked_price` input parameters. If `charge_user` is `true`, the total charged will also reflect these amount(s).",
                    "default": false,
                    "example": false
                  },
                  "added_fee": {
                    "description": "Your added service fee. Any added fees will be reflected in the email receipt and included in the total charged when `charger_user` is `true`.",
                    "allOf": [
                      {
                        "properties": {
                          "added_fee_flat": {
                            "type": "integer",
                            "description": "Flat fee added by API client, in cents.",
                            "default": 0,
                            "example": 100
                          },
                          "added_fee_percent": {
                            "type": "integer",
                            "description": "Percent fee added by API client, range [0-100].",
                            "default": 0,
                            "example": 50
                          },
                          "is_added_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether API client added fee is taxable.",
                            "example": false
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "unify_service_fee": {
                    "type": "boolean",
                    "description": "Whether to combine the underlying service's service fee and your `added_fee` in one line item in the email receipt.",
                    "default": false,
                    "example": false
                  },
                  "misc_fees": {
                    "type": "array",
                    "description": "List of miscellaneous fees or discounts to display in the email receipt.",
                    "example": [
                      {
                        "fee_name": "Chef tip",
                        "fee_amount": 200
                      }
                    ],
                    "items": {
                      "required": [
                        "fee_amount",
                        "fee_name"
                      ],
                      "properties": {
                        "fee_name": {
                          "type": "string",
                          "description": "Name of the fee"
                        },
                        "fee_amount": {
                          "type": "integer",
                          "description": "The fee amount, in cents"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "disable_email": {
                    "type": "boolean",
                    "description": "Whether to send the user an email receipt.",
                    "default": false,
                    "example": false
                  }
                },
                "type": "object"
              }
            ]
          },
          "sms_options": {
            "description": "Set of optional SMS-specific configurations.",
            "allOf": [
              {
                "properties": {
                  "notifications": {
                    "description": "The set of optional custom SMS messages to send to `user_phone` for each event.",
                    "allOf": [
                      {
                        "properties": {
                          "order_placed": {
                            "type": "string",
                            "description": "The SMS message to send to `user_phone` upon an order being successfully placed.",
                            "example": "Your order is confirmed, here is your tracking link https://tracking.example.com/tracking?tracking_id=<>"
                          },
                          "store_confirmed": {
                            "type": "string",
                            "description": "The SMS message to send to `user_phone` upon the store confirming the order.",
                            "example": "McDonald's has confirmed your order."
                          },
                          "pickup_ready": {
                            "type": "string",
                            "description": "The SMS message to send to `user_phone` when the store confirms the pickup order is ready.",
                            "example": "Your order is ready for pickup."
                          },
                          "driver_arriving": {
                            "type": "string",
                            "description": "The SMS message to send to `user_phone` when the driver is arriving to the delivery address.",
                            "example": "You delivery driver is on the way."
                          }
                        },
                        "type": "object"
                      }
                    ]
                  }
                },
                "type": "object"
              }
            ]
          },
          "favorited": {
            "type": "boolean",
            "description": "Whether to add this order as a favorited order",
            "default": false,
            "example": false
          },
          "enable_substitution": {
            "type": "boolean",
            "description": "Whether to automatically substitute the cart with an equivalent one at a different nearby chain location, upon encountering a checkout failure",
            "default": false,
            "example": false
          },
          "customer_order_id": {
            "type": "string",
            "description": "A unique ID of the order generated in your system. This will be returned in the response from [Get Orders](https://docs.mealme.ai/reference/get_account_orders) when looking up an order.",
            "example": "ABC123"
          },
          "autofill_selected_options": {
            "type": "boolean",
            "description": "Whether to automatically select the default quantity for all options and fulfill all customization requirements.",
            "default": false,
            "example": false
          },
          "metadata": {
            "description": "A set of key-value pairs that you can attach to an order, and later reference with '/account/orders`.",
            "example": {
              "Promo Code": "ABC123"
            },
            "allOf": [
              {
                "properties": {
                  "*": {
                    "type": "string",
                    "description": "Any metadata value",
                    "example": "ABC123"
                  }
                },
                "type": "object"
              }
            ]
          },
          "tracking_link": {
            "type": "string",
            "description": "The tracking link to communicate with the customer via SMS/email. If provided, the MealMe tracking link will be replaced with this one. If the tracking link is to be composed of the MealMe order ID, use `<>` as the placedholder. For example, if the tracking link `https://tracking.example.com/tracking?tracking_id=<>` is provided, and the `order_id` in the response is `-Mxak0IAuif3TvN9hBP7`, then the final tracking link will be `https://tracking.example.com/tracking?tracking_id=-Mxak0IAuif3TvN9hBP7`",
            "example": "https://tracking.example.com/tracking?tracking_id=<>"
          },
          "dropoff_window": {
            "description": "The desired delivery drop-off window. Only applies to `delivery` orders. If `scheduled_id` is provided, `dropoff_window` will be ignored.",
            "allOf": [
              {
                "required": [
                  "end_time",
                  "start_time"
                ],
                "properties": {
                  "start_time": {
                    "type": "number",
                    "description": "The start of the drop-off window, represented by a unix timestamp.",
                    "example": 1688772600
                  },
                  "end_time": {
                    "type": "number",
                    "description": "The end of the drop-off window, represented by a unix timestamp. Note that `end_time` must be at least 20 minutes greater than `start_time`.",
                    "example": 1688774400
                  }
                },
                "type": "object"
              }
            ]
          }
        },
        "type": "object"
      },
      "Cart_Item": {
        "required": [
          "product_id"
        ],
        "properties": {
          "product_id": {
            "type": "string",
            "description": "The product's ID."
          },
          "quantity": {
            "type": "integer",
            "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
          },
          "product_marked_price": {
            "type": "integer",
            "description": "The self-provided marked price (in cents) to be used in the email receipt."
          },
          "selected_options": {
            "type": "array",
            "description": "The list of selected options for the product.",
            "items": {
              "required": [
                "option_id",
                "quantity"
              ],
              "properties": {
                "option_id": {
                  "type": "string",
                  "description": "Option ID"
                },
                "quantity": {
                  "type": "integer",
                  "description": "The option quantity (must be greater than 0)"
                },
                "marked_price": {
                  "type": "integer",
                  "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                }
              },
              "type": "object"
            }
          },
          "notes": {
            "type": "string",
            "description": "The product notes for the store."
          }
        },
        "type": "object"
      },
      "Selected_Option": {
        "required": [
          "option_id",
          "quantity"
        ],
        "properties": {
          "option_id": {
            "type": "string",
            "description": "Option ID"
          },
          "quantity": {
            "type": "integer",
            "description": "The option quantity (must be greater than 0)"
          },
          "marked_price": {
            "type": "integer",
            "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
          }
        },
        "type": "object"
      },
      "Email_Receipt_Specifications": {
        "properties": {
          "prices_marked": {
            "type": "boolean",
            "description": "If `true`, the price(s) in the email receipt will reflect the amount(s) specified via the `product_marked_price` and `marked_price` input parameters. If `charge_user` is `true`, the total charged will also reflect these amount(s).",
            "default": false,
            "example": false
          },
          "added_fee": {
            "description": "Your added service fee. Any added fees will be reflected in the email receipt and included in the total charged when `charger_user` is `true`.",
            "allOf": [
              {
                "properties": {
                  "added_fee_flat": {
                    "type": "integer",
                    "description": "Flat fee added by API client, in cents.",
                    "default": 0,
                    "example": 100
                  },
                  "added_fee_percent": {
                    "type": "integer",
                    "description": "Percent fee added by API client, range [0-100].",
                    "default": 0,
                    "example": 50
                  },
                  "is_added_fee_taxable": {
                    "type": "boolean",
                    "description": "Whether API client added fee is taxable.",
                    "example": false
                  }
                },
                "type": "object"
              }
            ]
          },
          "unify_service_fee": {
            "type": "boolean",
            "description": "Whether to combine the underlying service's service fee and your `added_fee` in one line item in the email receipt.",
            "default": false,
            "example": false
          },
          "misc_fees": {
            "type": "array",
            "description": "List of miscellaneous fees or discounts to display in the email receipt.",
            "example": [
              {
                "fee_name": "Chef tip",
                "fee_amount": 200
              }
            ],
            "items": {
              "required": [
                "fee_amount",
                "fee_name"
              ],
              "properties": {
                "fee_name": {
                  "type": "string",
                  "description": "Name of the fee"
                },
                "fee_amount": {
                  "type": "integer",
                  "description": "The fee amount, in cents"
                }
              },
              "type": "object"
            }
          },
          "disable_email": {
            "type": "boolean",
            "description": "Whether to send the user an email receipt.",
            "default": false,
            "example": false
          }
        },
        "type": "object"
      },
      "Added_Fee": {
        "properties": {
          "added_fee_flat": {
            "type": "integer",
            "description": "Flat fee added by API client, in cents.",
            "default": 0,
            "example": 100
          },
          "added_fee_percent": {
            "type": "integer",
            "description": "Percent fee added by API client, range [0-100].",
            "default": 0,
            "example": 50
          },
          "is_added_fee_taxable": {
            "type": "boolean",
            "description": "Whether API client added fee is taxable.",
            "example": false
          }
        },
        "type": "object"
      },
      "Miscellaneous_Fee": {
        "required": [
          "fee_amount",
          "fee_name"
        ],
        "properties": {
          "fee_name": {
            "type": "string",
            "description": "Name of the fee"
          },
          "fee_amount": {
            "type": "integer",
            "description": "The fee amount, in cents"
          }
        },
        "type": "object"
      },
      "SMS_Options": {
        "properties": {
          "notifications": {
            "description": "The set of optional custom SMS messages to send to `user_phone` for each event.",
            "allOf": [
              {
                "properties": {
                  "order_placed": {
                    "type": "string",
                    "description": "The SMS message to send to `user_phone` upon an order being successfully placed.",
                    "example": "Your order is confirmed, here is your tracking link https://tracking.example.com/tracking?tracking_id=<>"
                  },
                  "store_confirmed": {
                    "type": "string",
                    "description": "The SMS message to send to `user_phone` upon the store confirming the order.",
                    "example": "McDonald's has confirmed your order."
                  },
                  "pickup_ready": {
                    "type": "string",
                    "description": "The SMS message to send to `user_phone` when the store confirms the pickup order is ready.",
                    "example": "Your order is ready for pickup."
                  },
                  "driver_arriving": {
                    "type": "string",
                    "description": "The SMS message to send to `user_phone` when the driver is arriving to the delivery address.",
                    "example": "You delivery driver is on the way."
                  }
                },
                "type": "object"
              }
            ]
          }
        },
        "type": "object"
      },
      "Drop-off_Window": {
        "required": [
          "end_time",
          "start_time"
        ],
        "properties": {
          "start_time": {
            "type": "number",
            "description": "The start of the drop-off window, represented by a unix timestamp.",
            "example": 1688772600
          },
          "end_time": {
            "type": "number",
            "description": "The end of the drop-off window, represented by a unix timestamp. Note that `end_time` must be at least 20 minutes greater than `start_time`.",
            "example": 1688774400
          }
        },
        "type": "object"
      },
      "Gateway_Timeout": {
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "The gateway timeout error message.",
            "example": "Gateway Timeout"
          }
        },
        "type": "object"
      },
      "Checkout_error": {
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "The reason a checkout error was encountered.",
            "example": "Checkout Error: Does not meet order minimum requirement."
          },
          "invalid_option_ids": {
            "type": "array",
            "description": "The list of invalid option IDs.",
            "example": [
              "n2z3o2ndeC_xNeD918jRVrgI-Oq6vUhuLkgiTnoAIhxWmZhKsqPRqcmz1joT4IvIPh1HnMC01yM070ODKJrE62x95u1IfLF1-89nJiFWkjEqUA6Gq4VKN14-MhZBc_d0gKU5AkrJYGIIpCbfzbK0pOhj3NIEhQHRkQaQr7CtID0UyQp-AxZRCobu80WU3rDACmdCMWHL3K_2ChtpMWS8eoVh_1xvqwUEEDEMio_98vLwamPyehQUTmebfgwz3RtjetNZR2fXIx3OLEUWGXbyzIlY7NGI9D3qD52PyxOSmQYEGf3lsaoXa03CIx8H1f19NrPOuGh2pnbZS-83Mf6DWKmDDjVXvq7JCCamVO1GPYxEeh5Hz9AnZsDJaLXVGGplwMu6zYRhxBMMG8nSu-UFc7UOGrBTBJlVJyC6Q3s-MlW3R8KaUA=="
            ],
            "items": {
              "type": "string",
              "description": "The option ID."
            }
          }
        },
        "type": "object"
      },
      "Product_Unavailable_error": {
        "required": [
          "error",
          "invalid_product_ids"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "The product unavailable error description.",
            "example": "Checkout Error: Invalid Products. Either product_id is invalid or product is no longer available."
          },
          "invalid_product_ids": {
            "type": "array",
            "description": "The list of invalid product IDs.",
            "example": [
              "ngxZD7tEA1cQGCuOYBF05Ckft2ZP3z3JY4VJbh51cudkXQBVef49AFAABAnR0x195id8kuvAiMi_n76hwel8exLfo2rW6b9P6K_4Cx6wa4hw1jMY5VERrv32nlRaV2c5p5pW9leEsX20Z6HSXjRJyfSC_xSYQeAbpuQyaCE3EgP3ZFw7MkFhGI-VlM2HvN3nDLl3U_hYBcPHP5xlXETSmieiiAdfs23yHcXTLLq2tK6RB43-IO7Xt0vAyU758RQIzCd8WHzVzUWwu_wmeDUyD7nhcljHv2AnTfOY8NCXK36o01eLodaEvWcMUAq9m5wJ8HL7l1dpiLD4XmJB4-ULh9kj2DoCVeTfgcVMYYfKcPMYGhz1llROquoWXeM4suQEmcIEq3pLBDpkwL8c09bJwMmnXxFf6m8h0_IgfAVb2Epx59d_UWZD0xsZVzbE4R1AhLwo2O0MtXx6LjuXJl4UfWMYJ6rXFOP8qDZxVPQYkQYthAHmUBkp-FEmLcw9VgL_5bZh4DDZVAYMa0V7VphsxKAfqeqaAEezoZwXYWL7xAewd1vQUWngr24ZulZdo7lOJIGurzmmfrB7aEbeZU59KGJZWOMbng3s2gnagH2vaVXtJUU9lN-DNkggz4wvFWEqfsYToAisCvUKIb2Uxnim_dZsLJGnb4lPKQU-Gsn7C5lCIvAWp8fm02ba3zPeH9EiIF7PiGU8RhFBbTqM6-47paigETk9JbJMopKgTOlioeIgzvVTK7vTpmf5ROeZ5xguj8OBRloHgUkzdmS03tvv1a5ELxmXrKF7U4ql_QIJFuDs15CI6USg_Q==",
              "ngxZD7tEA1cQGCuOYBF05Ckft2ZP3z3JRW08zp0qtVOAmZx2N9UBmANSA16G0xh65iJ4yOHAiMzsz76iwL4oe0_Sqz2HvOVO6K3-DR6wa4hw1jMY5VERrv32nlRaV2c5p5pW9leEsX20Z6HSXjRJyfSC_xSYQeAbpediMH45EgX0Yls7MkllSI-Wyp-HvNy2A7olVPYOB5bJYpxlXETSmieiiAdfs23yHcXTLLq2tK6RB43-IO7Xt0vAyU758RQIzCd8WHzVzUWwu_wmeDUyD7nhcljHv2AnTfOY8NCXK36o01eLodaEvWcMUAq9m5wJ8HL7l1dpiLD4XmJB4-ULh9kj2DoCVeTfgcVMYYfKcPMYGhz1llROquoWXeM4suQEmcIEq3pLBDpkwL8c09bJwMmnXxFf6m8h0_IgfAVb2Epx59d_UWZD0xsZVzbE4R1AhLwo2O0MtXx6LjuXJl4UfWMYJ6rXFOP8qDZxVPQYkQYthAHmUBkp-FEmLcw9VgL_5bZh4DDZVAYMa0V7VphsxKAfqeqaAEezoZwXYWL7xAewd1vQUWngr24ZulZdo7lOJIGurzmmfrB7aEbeZU59KGJZWOMbng3s2gnagH2vaVXtJUU9lN-DNkggz4wvFWEqfsYToAisCvUKIb2Uxnim_dZsLJGnb4lPKQU-Gsn7C5lCIvAWp8fm02ba3zPeH9EiIF7PiGU8RhFBbTqM6-47paigETk9JbJMopKoSO1i6IASyfFayVaShGf3StWcg19v1JL_MxYkwGYyeknhpcn40sFYPgHT5I52RtmQwkRHeff_x9rDyH_2q30zUgJP2DaOM7UUWjNC"
            ],
            "items": {
              "type": "string",
              "description": "The product ID."
            }
          }
        },
        "type": "object"
      },
      "Quote_Unavailable": {
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string",
            "description": "The reason a quote is unavailable.",
            "example": "Delivery is currently unavailable for this store."
          }
        },
        "type": "object"
      },
      "Order_Output": {
        "required": [
          "final_quote",
          "order_id"
        ],
        "properties": {
          "order_placed": {
            "type": "boolean",
            "description": "Whether or not the order was successfully placed.",
            "default": false,
            "example": false
          },
          "final_quote": {
            "description": "Final validated quote for the given products.",
            "example": {
              "store": "Denny's",
              "store_address": "816 Mission Street, San Francisco, CA, 94103, US",
              "store_id": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2",
              "quote_id": "gAAAAABjG7umYvJfg_ehbOj-lSgmxf2BIbq9fgIx0p93xiGAqjpvKfn39koqrh-GFREtE6eF_9UpeHhT6RjXbAFIn1sYedSxCQCVz6J-UU7_cp8thURW5HIk9POHlOoOT8Hjg7hcywN0tdyFTBi1vOuKQCISLaA7esnZW8mdeH765ORynidGKhV4c_r695XvJ5hdLok1DbB7BCvA1MsL3SMxv1N2zr9KYOg0ZV4zFtU7l1s78cGhE5Fl91cio9ijS5RzVkMRVno-3JlSuULwThHLTPwQ4NCxDMtt_tdrDaOE1pTz26uAYezx_-Sqr3f1LTOrgaavvMX-kBpCvt2puVbHufiuYT9ytvsj9x6lOpZCe2Jgelh4a348e7bbD7DiO1d4GKS6zVF4",
              "quote": {
                "subtotal": 1840,
                "delivery_fee_cents": 49,
                "service_fee_cents": 680,
                "small_order_fee_cents": 0,
                "sales_tax_cents": 148,
                "delivery_time_min": 25,
                "delivery_time_max": 40,
                "total_without_tips": 2717,
                "expected_time_of_arrival": "04:31 PM",
                "scheduled": {}
              },
              "items": [
                {
                  "name": "New York Style Cheesecake",
                  "base_price": 1050,
                  "image": "https://cdn-img.mealme.ai/6244bce354dcb96f0581dc043e7912ef3c4ed7ae/68747470733a2f2f636e2d67656f312e756265722e636f6d2f696d6167652d70726f632f726573697a652f656174732f666f726d61743d776562702f77696474683d3234302f6865696768743d3139322f7175616c6974793d37302f7372636236343d6148523063484d364c79396b4d584a6862484e765a323571626d637a4e79356a624739315a475a79623235304c6d356c6443396d4f546c6a59324d325a53316a4d445a6d4c5451315a446b74596d59794e79316b4e5441344e3259794d545a684e324d75616e426c5a773d3d",
                  "description": "Plain or with strawberry topping and whipped cream.",
                  "product_id": "gAAAAABjG8USnlR2aO5GxjRKvzASB5R9v_Qa52BAwQr1uNbJUwrgLpzH_knEMYY-1LwsEhUaT5yfv8vg7STQrF-E-7H8w2tUhyFhmNIrTw74LujKsomvvjkfGpMjpeYaeyOylespcVKUbXrfruR28OM2LTC27rbo5TyIJ0hlZYnIs17dynR3frklATV1Mt1uSDJhbyrRv_7EFxSa9tGf0lrTcHd4hbF8_JIoWR_MIXgtHoqjlgjtv4_FvKML1VEFm-fPPiP8BEfQdJQgr3NHk3asIpWJfO-Lvv-z_IgAO4JCOEj9uBzDQIUbNd2_p9KMhO-CJNg_TsESjAvRbeMJO9jzKvgoplBEcmAUoUgRrcsfsfEJw9vyp_YqA35b_RdC3UXNbjYkumdiGUpF2qKcc89uvNKwPq2QnUBi4NrIo4UWmx759xZCcmewFaGl4BUIlSSjCwwTycsslG2pJE_fLel6_9STFg12gXhyS8bd-s1FmvMu74hL3q21QSgQnqmIJZv_BQgtPPNlAb_u1imw0ErM2KK9jMB3X3mA5DlE7x8gOoBetJzTkDoQVjxoqINwRFppWF8XB3JdOqbV3pj1_0Twj2gTKXqjs7xEeWf2n9aPVPrSX-lg0-UiFdhSR77yPdmW1auQHjykafD6xvdq6SgHXTOsnE24uIBiHPqJHX3KjKhYJw_Q0LLp9p8dFsgA9hEJkFGJhTEp9biQZ4SSopEHbdML0CcRxbWtN0O8isSAzjo48cAiUbJFBLSfsqz65qpoOdiliBHx7DY2RhpKTSMV-OjN3NnuCcQ3pIPAMt-HZ6TxGBc_LI0=",
                  "customizations": [
                    {
                      "name": "Add Strawberry Topping",
                      "selected_options": [
                        {
                          "name": "Strawberry Topping",
                          "price": 0,
                          "quantity": 1,
                          "option_id": "gAAAAABjG8DMnsHajy2D0a93d4ofw5KVFPudW524M9IP7SJheejkk-o58OPdAyj0vmEZ6xHmadTleYn2pQ2yTPj--zwKPqelw46-W1JMy-fGpHh7BbZPUIGUYtg1-wr7Tr-eHOJ-Jr9AIKsqncELgUH-s5r9EerP0NP9veLmJMUBLhIl0JY66-_ZJlk4MCJ7Aagu6VjD7h058NqAqLz1S1L3GH07znrnMLCQpC9a8Jjlvz_H-WvTJCw=",
                          "customizations": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Wavy Cut French Fries",
                  "base_price": 790,
                  "image": "https://cdn-img.mealme.ai/52823d72ddc90b4efe7e85def6784947ef459ef9/68747470733a2f2f636e2d67656f312e756265722e636f6d2f696d6167652d70726f632f726573697a652f656174732f666f726d61743d776562702f77696474683d3234302f6865696768743d3139322f7175616c6974793d37302f7372636236343d6148523063484d364c79396b4d584a6862484e765a323571626d637a4e79356a624739315a475a79623235304c6d356c644338304d6a426d4d7a41344e4330784e3251304c54526a4f544574596d466b5a69316d4d4463774d6d526959574a6d5a574975616e426c5a773d3d",
                  "description": "Side of wavy cut French Fries",
                  "product_id": "gAAAAABjG8USIYa1Z_dCVTEZkQrGwouHh1Q-a53IpBVqPoCn-r1v9sh2Yh1MQUDGrfl14mcB-W6bWRja5lYhRIL-0WWPQWXCX7mb9R3zFQXfrGdNzyxft4g4Ua3hBMcDCEZVOjyv087_F1RPA8O4SlrBCnfxWVytxWqNRPKskW-RBDwnF5gY4bO_uSsyv9LDhLz6d6KNANOf8maMDsYN_kkrpcw3r4PH6h6hPvzausGZ7NZsIT6GyJqJktvA9htbjQbwO5ttS86hKLxSSgIHRhynPwxi0f7uX8UGa3hqCPQlxv40vilaS7SzqXEu6VRl3bRkUDVKBftJtAgDjS2F3JLN4KiFONFaXFs5aFhwCjW_x800HpDiccufYxYPMMjr47wsUy-_Wyn9BlJL0sFupgKAAJqcX7fYIUJ-tiNUA5ubTa7NkP6ve6B66l5sw0xaQOH7xDnSp3-Ugu4guzy4s-ubwa-VBBKv60q4BI9VvM5WzFCk-ouBJMJ25NXiVcwde1wW-vUwRY2vLo4yNDbsXXI8WJnISvY5VQW13Si21QxaBz2jdqNMuaYIOd7e9jaQnjddtwuNyGnf4umSwSgPyDoywFE4eSvm7uoUSR8pVzLyaUuZuKZlJx2_vPIHNxVPnbMyKMw9uJ44-HFcBl81dL5Y8UHCCn0OD0Lg6OqdUu9TOxlCyVLtGBsAFOqtrKk90oWaikbLTZkG4WrAtaPHNvPxYmkeSE3E_ZsBlKpR30z1qohDRjAnaRsM5CM9r6JVUqNJUYJAsf1FHqeWrCHwHnhZZTJsEVE5A80lfNH_JW3nS0t5bYQj5dc=",
                  "customizations": []
                }
              ],
              "tip": 100,
              "total_with_tip": 2817,
              "added_fees": {
                "flat_fee_cents": 100,
                "percent_fee": 50,
                "is_fee_taxable": false,
                "total_fee_cents": 936,
                "sales_tax_cents": 0
              }
            },
            "allOf": [
              {
                "required": [
                  "added_fees",
                  "items",
                  "misc_fees",
                  "quote",
                  "quote_id",
                  "store",
                  "store_address",
                  "store_id",
                  "tip",
                  "total_with_tip"
                ],
                "properties": {
                  "store": {
                    "type": "string",
                    "description": "The name of the store where the order was placed",
                    "example": "Denny's"
                  },
                  "store_address": {
                    "type": "string",
                    "description": "The address of the store where the order was placed",
                    "example": "816 Mission St, San Francisco, CA, 94103, US"
                  },
                  "store_id": {
                    "type": "string",
                    "description": "The MealMe store ID",
                    "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
                  },
                  "quote_id": {
                    "type": "string",
                    "description": "The MealMe Quote ID",
                    "example": "gAAAAABihzvxA4pMVWefTSN3GFOL7b3CYG5yPIRnGUNnEu8oD72y0SiHcDkoloajAINb3pI4Kw6R5qR694t5fCXc8_DnvoB0_BeBlCZ_zJmelaZ4jWfcnF5ySNVt29YYobrl5PMQduRavTxgb5E2IvgZakNNbAzP9rYwyApbdaZ6n_RCwz09IlN2iOoqUlnNVL1WF8dDwqI6-XWMiA3XDI_A-k4QyVPZ0yMZDP_LuRzEnQOYIQ23CCyHHz2imKBP4ySAMNgeIKv0ynYV-a1ZfMC_MjFVyK_OHCds8KmiAM8RHZWt6-wR2m2xqMhKOg8NFWU5gWzYFVL_"
                  },
                  "quote": {
                    "description": "The final quote summary including subtotal, tax, time estimate, quote fees, etc.",
                    "allOf": [
                      {
                        "required": [
                          "delivery_fee_cents",
                          "delivery_time_max",
                          "delivery_time_min",
                          "expected_time_of_arrival",
                          "sales_tax_cents",
                          "scheduled",
                          "service_fee_cents",
                          "small_order_fee_cents",
                          "subtotal",
                          "total_without_tips"
                        ],
                        "properties": {
                          "subtotal": {
                            "type": "integer",
                            "description": "The subtotal of the cart",
                            "example": 1770
                          },
                          "delivery_fee_cents": {
                            "type": "integer",
                            "description": "The total delivery fee, in cents",
                            "example": 49
                          },
                          "service_fee_cents": {
                            "type": "integer",
                            "description": "The total service fee, in cents",
                            "example": 667
                          },
                          "small_order_fee_cents": {
                            "type": "integer",
                            "description": "The total small order fee, in cents",
                            "example": 0
                          },
                          "sales_tax_cents": {
                            "type": "integer",
                            "description": "The total sales tax, in cents",
                            "example": 142
                          },
                          "delivery_time_min": {
                            "type": "integer",
                            "description": "The minimum delivery time estimate, in minutes",
                            "example": 25
                          },
                          "delivery_time_max": {
                            "type": "integer",
                            "description": "The maximum delivery time estimate, in minutes",
                            "example": 40
                          },
                          "total_without_tips": {
                            "type": "integer",
                            "description": "The order amount excluding tips, in cents",
                            "example": 2628
                          },
                          "expected_time_of_arrival": {
                            "type": "string",
                            "description": "The expected time of arrival, in user's timezone",
                            "example": "09:20 PM"
                          },
                          "scheduled": {
                            "description": "The scheduled delivery window corresponding to input parameter `scheduled_id` passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3)",
                            "allOf": [
                              {
                                "required": [
                                  "delivery_fee",
                                  "maximum",
                                  "minimum"
                                ],
                                "properties": {
                                  "minimum": {
                                    "type": "integer",
                                    "description": "Timestamp (seconds since 1970)"
                                  },
                                  "maximum": {
                                    "type": "integer",
                                    "description": "Timestamp (seconds since 1970)"
                                  },
                                  "delivery_fee": {
                                    "description": "",
                                    "required": [
                                      "delivery_fee_flat",
                                      "delivery_fee_percent"
                                    ],
                                    "properties": {
                                      "delivery_fee_flat": {
                                        "type": "integer",
                                        "description": "Delivery fee amount in cents"
                                      },
                                      "delivery_fee_percent": {
                                        "type": "number",
                                        "description": "Delivery fee percentage"
                                      },
                                      "delivery_fee_taxable": {
                                        "type": "boolean",
                                        "description": "Whether the delivery fee is taxable or not"
                                      },
                                      "threshold_fees": {
                                        "type": "array",
                                        "description": "Threshold Fees, if they exist",
                                        "items": {
                                          "required": [
                                            "threshold_cents",
                                            "threshold_fee_cents"
                                          ],
                                          "properties": {
                                            "threshold_cents": {
                                              "type": "integer",
                                              "description": "Subtotal that enacts a specific fee"
                                            },
                                            "threshold_fee_cents": {
                                              "type": "integer",
                                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "marked_subtotal": {
                            "type": "integer",
                            "description": "The subtotal of the cart including any provided marked prices, in cents",
                            "example": 2000
                          },
                          "marked_total_without_tips": {
                            "type": "integer",
                            "description": "The order amount excluding tips, and including any provided marked prices, in cents",
                            "example": 2800
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "items": {
                    "type": "array",
                    "description": "List of cart items",
                    "example": [
                      {
                        "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                        "notes": "No whipped cream."
                      }
                    ],
                    "items": {
                      "required": [
                        "product_id"
                      ],
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "description": "The product's ID."
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                        },
                        "product_marked_price": {
                          "type": "integer",
                          "description": "The self-provided marked price (in cents) to be used in the email receipt."
                        },
                        "selected_options": {
                          "type": "array",
                          "description": "The list of selected options for the product.",
                          "items": {
                            "required": [
                              "option_id",
                              "quantity"
                            ],
                            "properties": {
                              "option_id": {
                                "type": "string",
                                "description": "Option ID"
                              },
                              "quantity": {
                                "type": "integer",
                                "description": "The option quantity (must be greater than 0)"
                              },
                              "marked_price": {
                                "type": "integer",
                                "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                              }
                            },
                            "type": "object"
                          }
                        },
                        "notes": {
                          "type": "string",
                          "description": "The product notes for the store."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "tip": {
                    "type": "integer",
                    "description": "The total tip amount, in cents",
                    "example": 100
                  },
                  "total_with_tip": {
                    "type": "integer",
                    "description": "The total order amount including tip, in cents",
                    "example": 40
                  },
                  "added_fees": {
                    "description": "The total added fees for the cart, computed using the input `added_fee`passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3) or [](https://docs.mealme.ai/reference/post_courier_order)",
                    "example": 200,
                    "allOf": [
                      {
                        "required": [
                          "flat_fee_cents",
                          "is_fee_taxable",
                          "percent_fee",
                          "sales_tax_cents",
                          "total_fee_cents"
                        ],
                        "properties": {
                          "flat_fee_cents": {
                            "type": "integer",
                            "description": "The API client added flat fee amount, in cents",
                            "example": 100
                          },
                          "percent_fee": {
                            "type": "integer",
                            "description": "The API client added percent fee amount, in range 1-100",
                            "example": 50
                          },
                          "is_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether the API client added fee is taxable",
                            "example": false
                          },
                          "total_fee_cents": {
                            "type": "integer",
                            "description": "The API client total added fee amount, in cents",
                            "example": 985
                          },
                          "sales_tax_cents": {
                            "type": "integer",
                            "description": "The total sales tax amount charged for the API client added fee, in cents",
                            "example": 0
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "misc_fees": {
                    "type": "array",
                    "description": "The list of miscellaneous fees applied on the order.",
                    "example": [
                      {
                        "fee_name": "Chef tip",
                        "fee_amount": 200
                      }
                    ],
                    "items": {
                      "required": [
                        "fee_amount",
                        "fee_name"
                      ],
                      "properties": {
                        "fee_name": {
                          "type": "string",
                          "description": "Name of the fee"
                        },
                        "fee_amount": {
                          "type": "integer",
                          "description": "The fee amount, in cents"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "marked_total_with_tip": {
                    "type": "integer",
                    "description": "The total order amount including tip, and including any provided marked prices, in cents",
                    "example": 50
                  }
                },
                "type": "object"
              }
            ]
          },
          "order_id": {
            "type": "string",
            "description": "ID of the order ready to be placed.",
            "example": "-Mxak0IAuif3TvN9hBP7"
          }
        },
        "type": "object"
      },
      "Final_Quote": {
        "required": [
          "added_fees",
          "items",
          "misc_fees",
          "quote",
          "quote_id",
          "store",
          "store_address",
          "store_id",
          "tip",
          "total_with_tip"
        ],
        "properties": {
          "store": {
            "type": "string",
            "description": "The name of the store where the order was placed",
            "example": "Denny's"
          },
          "store_address": {
            "type": "string",
            "description": "The address of the store where the order was placed",
            "example": "816 Mission St, San Francisco, CA, 94103, US"
          },
          "store_id": {
            "type": "string",
            "description": "The MealMe store ID",
            "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
          },
          "quote_id": {
            "type": "string",
            "description": "The MealMe Quote ID",
            "example": "gAAAAABihzvxA4pMVWefTSN3GFOL7b3CYG5yPIRnGUNnEu8oD72y0SiHcDkoloajAINb3pI4Kw6R5qR694t5fCXc8_DnvoB0_BeBlCZ_zJmelaZ4jWfcnF5ySNVt29YYobrl5PMQduRavTxgb5E2IvgZakNNbAzP9rYwyApbdaZ6n_RCwz09IlN2iOoqUlnNVL1WF8dDwqI6-XWMiA3XDI_A-k4QyVPZ0yMZDP_LuRzEnQOYIQ23CCyHHz2imKBP4ySAMNgeIKv0ynYV-a1ZfMC_MjFVyK_OHCds8KmiAM8RHZWt6-wR2m2xqMhKOg8NFWU5gWzYFVL_"
          },
          "quote": {
            "description": "The final quote summary including subtotal, tax, time estimate, quote fees, etc.",
            "allOf": [
              {
                "required": [
                  "delivery_fee_cents",
                  "delivery_time_max",
                  "delivery_time_min",
                  "expected_time_of_arrival",
                  "sales_tax_cents",
                  "scheduled",
                  "service_fee_cents",
                  "small_order_fee_cents",
                  "subtotal",
                  "total_without_tips"
                ],
                "properties": {
                  "subtotal": {
                    "type": "integer",
                    "description": "The subtotal of the cart",
                    "example": 1770
                  },
                  "delivery_fee_cents": {
                    "type": "integer",
                    "description": "The total delivery fee, in cents",
                    "example": 49
                  },
                  "service_fee_cents": {
                    "type": "integer",
                    "description": "The total service fee, in cents",
                    "example": 667
                  },
                  "small_order_fee_cents": {
                    "type": "integer",
                    "description": "The total small order fee, in cents",
                    "example": 0
                  },
                  "sales_tax_cents": {
                    "type": "integer",
                    "description": "The total sales tax, in cents",
                    "example": 142
                  },
                  "delivery_time_min": {
                    "type": "integer",
                    "description": "The minimum delivery time estimate, in minutes",
                    "example": 25
                  },
                  "delivery_time_max": {
                    "type": "integer",
                    "description": "The maximum delivery time estimate, in minutes",
                    "example": 40
                  },
                  "total_without_tips": {
                    "type": "integer",
                    "description": "The order amount excluding tips, in cents",
                    "example": 2628
                  },
                  "expected_time_of_arrival": {
                    "type": "string",
                    "description": "The expected time of arrival, in user's timezone",
                    "example": "09:20 PM"
                  },
                  "scheduled": {
                    "description": "The scheduled delivery window corresponding to input parameter `scheduled_id` passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3)",
                    "allOf": [
                      {
                        "required": [
                          "delivery_fee",
                          "maximum",
                          "minimum"
                        ],
                        "properties": {
                          "minimum": {
                            "type": "integer",
                            "description": "Timestamp (seconds since 1970)"
                          },
                          "maximum": {
                            "type": "integer",
                            "description": "Timestamp (seconds since 1970)"
                          },
                          "delivery_fee": {
                            "description": "",
                            "required": [
                              "delivery_fee_flat",
                              "delivery_fee_percent"
                            ],
                            "properties": {
                              "delivery_fee_flat": {
                                "type": "integer",
                                "description": "Delivery fee amount in cents"
                              },
                              "delivery_fee_percent": {
                                "type": "number",
                                "description": "Delivery fee percentage"
                              },
                              "delivery_fee_taxable": {
                                "type": "boolean",
                                "description": "Whether the delivery fee is taxable or not"
                              },
                              "threshold_fees": {
                                "type": "array",
                                "description": "Threshold Fees, if they exist",
                                "items": {
                                  "required": [
                                    "threshold_cents",
                                    "threshold_fee_cents"
                                  ],
                                  "properties": {
                                    "threshold_cents": {
                                      "type": "integer",
                                      "description": "Subtotal that enacts a specific fee"
                                    },
                                    "threshold_fee_cents": {
                                      "type": "integer",
                                      "description": "Flat delivery fee that will be charged for this threshold_cents"
                                    }
                                  },
                                  "type": "object"
                                }
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "marked_subtotal": {
                    "type": "integer",
                    "description": "The subtotal of the cart including any provided marked prices, in cents",
                    "example": 2000
                  },
                  "marked_total_without_tips": {
                    "type": "integer",
                    "description": "The order amount excluding tips, and including any provided marked prices, in cents",
                    "example": 2800
                  }
                },
                "type": "object"
              }
            ]
          },
          "items": {
            "type": "array",
            "description": "List of cart items",
            "example": [
              {
                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                "notes": "No whipped cream."
              }
            ],
            "items": {
              "required": [
                "product_id"
              ],
              "properties": {
                "product_id": {
                  "type": "string",
                  "description": "The product's ID."
                },
                "quantity": {
                  "type": "integer",
                  "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                },
                "product_marked_price": {
                  "type": "integer",
                  "description": "The self-provided marked price (in cents) to be used in the email receipt."
                },
                "selected_options": {
                  "type": "array",
                  "description": "The list of selected options for the product.",
                  "items": {
                    "required": [
                      "option_id",
                      "quantity"
                    ],
                    "properties": {
                      "option_id": {
                        "type": "string",
                        "description": "Option ID"
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "The option quantity (must be greater than 0)"
                      },
                      "marked_price": {
                        "type": "integer",
                        "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                      }
                    },
                    "type": "object"
                  }
                },
                "notes": {
                  "type": "string",
                  "description": "The product notes for the store."
                }
              },
              "type": "object"
            }
          },
          "tip": {
            "type": "integer",
            "description": "The total tip amount, in cents",
            "example": 100
          },
          "total_with_tip": {
            "type": "integer",
            "description": "The total order amount including tip, in cents",
            "example": 40
          },
          "added_fees": {
            "description": "The total added fees for the cart, computed using the input `added_fee`passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3) or [](https://docs.mealme.ai/reference/post_courier_order)",
            "example": 200,
            "allOf": [
              {
                "required": [
                  "flat_fee_cents",
                  "is_fee_taxable",
                  "percent_fee",
                  "sales_tax_cents",
                  "total_fee_cents"
                ],
                "properties": {
                  "flat_fee_cents": {
                    "type": "integer",
                    "description": "The API client added flat fee amount, in cents",
                    "example": 100
                  },
                  "percent_fee": {
                    "type": "integer",
                    "description": "The API client added percent fee amount, in range 1-100",
                    "example": 50
                  },
                  "is_fee_taxable": {
                    "type": "boolean",
                    "description": "Whether the API client added fee is taxable",
                    "example": false
                  },
                  "total_fee_cents": {
                    "type": "integer",
                    "description": "The API client total added fee amount, in cents",
                    "example": 985
                  },
                  "sales_tax_cents": {
                    "type": "integer",
                    "description": "The total sales tax amount charged for the API client added fee, in cents",
                    "example": 0
                  }
                },
                "type": "object"
              }
            ]
          },
          "misc_fees": {
            "type": "array",
            "description": "The list of miscellaneous fees applied on the order.",
            "example": [
              {
                "fee_name": "Chef tip",
                "fee_amount": 200
              }
            ],
            "items": {
              "required": [
                "fee_amount",
                "fee_name"
              ],
              "properties": {
                "fee_name": {
                  "type": "string",
                  "description": "Name of the fee"
                },
                "fee_amount": {
                  "type": "integer",
                  "description": "The fee amount, in cents"
                }
              },
              "type": "object"
            }
          },
          "marked_total_with_tip": {
            "type": "integer",
            "description": "The total order amount including tip, and including any provided marked prices, in cents",
            "example": 50
          }
        },
        "type": "object"
      },
      "Quote_Summary": {
        "required": [
          "delivery_fee_cents",
          "delivery_time_max",
          "delivery_time_min",
          "expected_time_of_arrival",
          "sales_tax_cents",
          "scheduled",
          "service_fee_cents",
          "small_order_fee_cents",
          "subtotal",
          "total_without_tips"
        ],
        "properties": {
          "subtotal": {
            "type": "integer",
            "description": "The subtotal of the cart",
            "example": 1770
          },
          "delivery_fee_cents": {
            "type": "integer",
            "description": "The total delivery fee, in cents",
            "example": 49
          },
          "service_fee_cents": {
            "type": "integer",
            "description": "The total service fee, in cents",
            "example": 667
          },
          "small_order_fee_cents": {
            "type": "integer",
            "description": "The total small order fee, in cents",
            "example": 0
          },
          "sales_tax_cents": {
            "type": "integer",
            "description": "The total sales tax, in cents",
            "example": 142
          },
          "delivery_time_min": {
            "type": "integer",
            "description": "The minimum delivery time estimate, in minutes",
            "example": 25
          },
          "delivery_time_max": {
            "type": "integer",
            "description": "The maximum delivery time estimate, in minutes",
            "example": 40
          },
          "total_without_tips": {
            "type": "integer",
            "description": "The order amount excluding tips, in cents",
            "example": 2628
          },
          "expected_time_of_arrival": {
            "type": "string",
            "description": "The expected time of arrival, in user's timezone",
            "example": "09:20 PM"
          },
          "scheduled": {
            "description": "The scheduled delivery window corresponding to input parameter `scheduled_id` passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3)",
            "allOf": [
              {
                "required": [
                  "delivery_fee",
                  "maximum",
                  "minimum"
                ],
                "properties": {
                  "minimum": {
                    "type": "integer",
                    "description": "Timestamp (seconds since 1970)"
                  },
                  "maximum": {
                    "type": "integer",
                    "description": "Timestamp (seconds since 1970)"
                  },
                  "delivery_fee": {
                    "description": "",
                    "required": [
                      "delivery_fee_flat",
                      "delivery_fee_percent"
                    ],
                    "properties": {
                      "delivery_fee_flat": {
                        "type": "integer",
                        "description": "Delivery fee amount in cents"
                      },
                      "delivery_fee_percent": {
                        "type": "number",
                        "description": "Delivery fee percentage"
                      },
                      "delivery_fee_taxable": {
                        "type": "boolean",
                        "description": "Whether the delivery fee is taxable or not"
                      },
                      "threshold_fees": {
                        "type": "array",
                        "description": "Threshold Fees, if they exist",
                        "items": {
                          "required": [
                            "threshold_cents",
                            "threshold_fee_cents"
                          ],
                          "properties": {
                            "threshold_cents": {
                              "type": "integer",
                              "description": "Subtotal that enacts a specific fee"
                            },
                            "threshold_fee_cents": {
                              "type": "integer",
                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            ]
          },
          "marked_subtotal": {
            "type": "integer",
            "description": "The subtotal of the cart including any provided marked prices, in cents",
            "example": 2000
          },
          "marked_total_without_tips": {
            "type": "integer",
            "description": "The order amount excluding tips, and including any provided marked prices, in cents",
            "example": 2800
          }
        },
        "type": "object"
      },
      "Added_Fees": {
        "required": [
          "flat_fee_cents",
          "is_fee_taxable",
          "percent_fee",
          "sales_tax_cents",
          "total_fee_cents"
        ],
        "properties": {
          "flat_fee_cents": {
            "type": "integer",
            "description": "The API client added flat fee amount, in cents",
            "example": 100
          },
          "percent_fee": {
            "type": "integer",
            "description": "The API client added percent fee amount, in range 1-100",
            "example": 50
          },
          "is_fee_taxable": {
            "type": "boolean",
            "description": "Whether the API client added fee is taxable",
            "example": false
          },
          "total_fee_cents": {
            "type": "integer",
            "description": "The API client total added fee amount, in cents",
            "example": 985
          },
          "sales_tax_cents": {
            "type": "integer",
            "description": "The total sales tax amount charged for the API client added fee, in cents",
            "example": 0
          }
        },
        "type": "object"
      },
      "Order_Placed_Output": {
        "required": [
          "final_quote",
          "is_sandbox",
          "order_id",
          "order_placed",
          "tracking_link"
        ],
        "properties": {
          "order_placed": {
            "type": "boolean",
            "description": "Whether or not the order was successfully placed.",
            "example": true
          },
          "tracking_link": {
            "type": "string",
            "description": "Link to track the order.",
            "example": "https://mealme.cc/tracking?tracking_id=-MpG8lp8Z0l5kU64Wzeq"
          },
          "final_quote": {
            "description": "Final validated quote for the given products.",
            "example": {
              "store": "Denny's",
              "store_address": "816 Mission Street, San Francisco, CA, 94103, US",
              "store_id": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2",
              "quote_id": "gAAAAABjG7umYvJfg_ehbOj-lSgmxf2BIbq9fgIx0p93xiGAqjpvKfn39koqrh-GFREtE6eF_9UpeHhT6RjXbAFIn1sYedSxCQCVz6J-UU7_cp8thURW5HIk9POHlOoOT8Hjg7hcywN0tdyFTBi1vOuKQCISLaA7esnZW8mdeH765ORynidGKhV4c_r695XvJ5hdLok1DbB7BCvA1MsL3SMxv1N2zr9KYOg0ZV4zFtU7l1s78cGhE5Fl91cio9ijS5RzVkMRVno-3JlSuULwThHLTPwQ4NCxDMtt_tdrDaOE1pTz26uAYezx_-Sqr3f1LTOrgaavvMX-kBpCvt2puVbHufiuYT9ytvsj9x6lOpZCe2Jgelh4a348e7bbD7DiO1d4GKS6zVF4",
              "quote": {
                "subtotal": 1840,
                "delivery_fee_cents": 49,
                "service_fee_cents": 680,
                "small_order_fee_cents": 0,
                "sales_tax_cents": 148,
                "delivery_time_min": 25,
                "delivery_time_max": 40,
                "total_without_tips": 2717,
                "expected_time_of_arrival": "04:31 PM",
                "scheduled": {}
              },
              "items": [
                {
                  "name": "New York Style Cheesecake",
                  "base_price": 1050,
                  "image": "https://cdn-img.mealme.ai/6244bce354dcb96f0581dc043e7912ef3c4ed7ae/68747470733a2f2f636e2d67656f312e756265722e636f6d2f696d6167652d70726f632f726573697a652f656174732f666f726d61743d776562702f77696474683d3234302f6865696768743d3139322f7175616c6974793d37302f7372636236343d6148523063484d364c79396b4d584a6862484e765a323571626d637a4e79356a624739315a475a79623235304c6d356c6443396d4f546c6a59324d325a53316a4d445a6d4c5451315a446b74596d59794e79316b4e5441344e3259794d545a684e324d75616e426c5a773d3d",
                  "description": "Plain or with strawberry topping and whipped cream.",
                  "product_id": "gAAAAABjG8USnlR2aO5GxjRKvzASB5R9v_Qa52BAwQr1uNbJUwrgLpzH_knEMYY-1LwsEhUaT5yfv8vg7STQrF-E-7H8w2tUhyFhmNIrTw74LujKsomvvjkfGpMjpeYaeyOylespcVKUbXrfruR28OM2LTC27rbo5TyIJ0hlZYnIs17dynR3frklATV1Mt1uSDJhbyrRv_7EFxSa9tGf0lrTcHd4hbF8_JIoWR_MIXgtHoqjlgjtv4_FvKML1VEFm-fPPiP8BEfQdJQgr3NHk3asIpWJfO-Lvv-z_IgAO4JCOEj9uBzDQIUbNd2_p9KMhO-CJNg_TsESjAvRbeMJO9jzKvgoplBEcmAUoUgRrcsfsfEJw9vyp_YqA35b_RdC3UXNbjYkumdiGUpF2qKcc89uvNKwPq2QnUBi4NrIo4UWmx759xZCcmewFaGl4BUIlSSjCwwTycsslG2pJE_fLel6_9STFg12gXhyS8bd-s1FmvMu74hL3q21QSgQnqmIJZv_BQgtPPNlAb_u1imw0ErM2KK9jMB3X3mA5DlE7x8gOoBetJzTkDoQVjxoqINwRFppWF8XB3JdOqbV3pj1_0Twj2gTKXqjs7xEeWf2n9aPVPrSX-lg0-UiFdhSR77yPdmW1auQHjykafD6xvdq6SgHXTOsnE24uIBiHPqJHX3KjKhYJw_Q0LLp9p8dFsgA9hEJkFGJhTEp9biQZ4SSopEHbdML0CcRxbWtN0O8isSAzjo48cAiUbJFBLSfsqz65qpoOdiliBHx7DY2RhpKTSMV-OjN3NnuCcQ3pIPAMt-HZ6TxGBc_LI0=",
                  "customizations": [
                    {
                      "name": "Add Strawberry Topping",
                      "selected_options": [
                        {
                          "name": "Strawberry Topping",
                          "price": 0,
                          "quantity": 1,
                          "option_id": "gAAAAABjG8DMnsHajy2D0a93d4ofw5KVFPudW524M9IP7SJheejkk-o58OPdAyj0vmEZ6xHmadTleYn2pQ2yTPj--zwKPqelw46-W1JMy-fGpHh7BbZPUIGUYtg1-wr7Tr-eHOJ-Jr9AIKsqncELgUH-s5r9EerP0NP9veLmJMUBLhIl0JY66-_ZJlk4MCJ7Aagu6VjD7h058NqAqLz1S1L3GH07znrnMLCQpC9a8Jjlvz_H-WvTJCw=",
                          "customizations": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Wavy Cut French Fries",
                  "base_price": 790,
                  "image": "https://cdn-img.mealme.ai/52823d72ddc90b4efe7e85def6784947ef459ef9/68747470733a2f2f636e2d67656f312e756265722e636f6d2f696d6167652d70726f632f726573697a652f656174732f666f726d61743d776562702f77696474683d3234302f6865696768743d3139322f7175616c6974793d37302f7372636236343d6148523063484d364c79396b4d584a6862484e765a323571626d637a4e79356a624739315a475a79623235304c6d356c644338304d6a426d4d7a41344e4330784e3251304c54526a4f544574596d466b5a69316d4d4463774d6d526959574a6d5a574975616e426c5a773d3d",
                  "description": "Side of wavy cut French Fries",
                  "product_id": "gAAAAABjG8USIYa1Z_dCVTEZkQrGwouHh1Q-a53IpBVqPoCn-r1v9sh2Yh1MQUDGrfl14mcB-W6bWRja5lYhRIL-0WWPQWXCX7mb9R3zFQXfrGdNzyxft4g4Ua3hBMcDCEZVOjyv087_F1RPA8O4SlrBCnfxWVytxWqNRPKskW-RBDwnF5gY4bO_uSsyv9LDhLz6d6KNANOf8maMDsYN_kkrpcw3r4PH6h6hPvzausGZ7NZsIT6GyJqJktvA9htbjQbwO5ttS86hKLxSSgIHRhynPwxi0f7uX8UGa3hqCPQlxv40vilaS7SzqXEu6VRl3bRkUDVKBftJtAgDjS2F3JLN4KiFONFaXFs5aFhwCjW_x800HpDiccufYxYPMMjr47wsUy-_Wyn9BlJL0sFupgKAAJqcX7fYIUJ-tiNUA5ubTa7NkP6ve6B66l5sw0xaQOH7xDnSp3-Ugu4guzy4s-ubwa-VBBKv60q4BI9VvM5WzFCk-ouBJMJ25NXiVcwde1wW-vUwRY2vLo4yNDbsXXI8WJnISvY5VQW13Si21QxaBz2jdqNMuaYIOd7e9jaQnjddtwuNyGnf4umSwSgPyDoywFE4eSvm7uoUSR8pVzLyaUuZuKZlJx2_vPIHNxVPnbMyKMw9uJ44-HFcBl81dL5Y8UHCCn0OD0Lg6OqdUu9TOxlCyVLtGBsAFOqtrKk90oWaikbLTZkG4WrAtaPHNvPxYmkeSE3E_ZsBlKpR30z1qohDRjAnaRsM5CM9r6JVUqNJUYJAsf1FHqeWrCHwHnhZZTJsEVE5A80lfNH_JW3nS0t5bYQj5dc=",
                  "customizations": []
                }
              ],
              "tip": 100,
              "total_with_tip": 2817,
              "added_fees": {
                "flat_fee_cents": 100,
                "percent_fee": 50,
                "is_fee_taxable": false,
                "total_fee_cents": 936,
                "sales_tax_cents": 0
              }
            },
            "allOf": [
              {
                "required": [
                  "added_fees",
                  "items",
                  "misc_fees",
                  "quote",
                  "quote_id",
                  "store",
                  "store_address",
                  "store_id",
                  "tip",
                  "total_with_tip"
                ],
                "properties": {
                  "store": {
                    "type": "string",
                    "description": "The name of the store where the order was placed",
                    "example": "Denny's"
                  },
                  "store_address": {
                    "type": "string",
                    "description": "The address of the store where the order was placed",
                    "example": "816 Mission St, San Francisco, CA, 94103, US"
                  },
                  "store_id": {
                    "type": "string",
                    "description": "The MealMe store ID",
                    "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
                  },
                  "quote_id": {
                    "type": "string",
                    "description": "The MealMe Quote ID",
                    "example": "gAAAAABihzvxA4pMVWefTSN3GFOL7b3CYG5yPIRnGUNnEu8oD72y0SiHcDkoloajAINb3pI4Kw6R5qR694t5fCXc8_DnvoB0_BeBlCZ_zJmelaZ4jWfcnF5ySNVt29YYobrl5PMQduRavTxgb5E2IvgZakNNbAzP9rYwyApbdaZ6n_RCwz09IlN2iOoqUlnNVL1WF8dDwqI6-XWMiA3XDI_A-k4QyVPZ0yMZDP_LuRzEnQOYIQ23CCyHHz2imKBP4ySAMNgeIKv0ynYV-a1ZfMC_MjFVyK_OHCds8KmiAM8RHZWt6-wR2m2xqMhKOg8NFWU5gWzYFVL_"
                  },
                  "quote": {
                    "description": "The final quote summary including subtotal, tax, time estimate, quote fees, etc.",
                    "allOf": [
                      {
                        "required": [
                          "delivery_fee_cents",
                          "delivery_time_max",
                          "delivery_time_min",
                          "expected_time_of_arrival",
                          "sales_tax_cents",
                          "scheduled",
                          "service_fee_cents",
                          "small_order_fee_cents",
                          "subtotal",
                          "total_without_tips"
                        ],
                        "properties": {
                          "subtotal": {
                            "type": "integer",
                            "description": "The subtotal of the cart",
                            "example": 1770
                          },
                          "delivery_fee_cents": {
                            "type": "integer",
                            "description": "The total delivery fee, in cents",
                            "example": 49
                          },
                          "service_fee_cents": {
                            "type": "integer",
                            "description": "The total service fee, in cents",
                            "example": 667
                          },
                          "small_order_fee_cents": {
                            "type": "integer",
                            "description": "The total small order fee, in cents",
                            "example": 0
                          },
                          "sales_tax_cents": {
                            "type": "integer",
                            "description": "The total sales tax, in cents",
                            "example": 142
                          },
                          "delivery_time_min": {
                            "type": "integer",
                            "description": "The minimum delivery time estimate, in minutes",
                            "example": 25
                          },
                          "delivery_time_max": {
                            "type": "integer",
                            "description": "The maximum delivery time estimate, in minutes",
                            "example": 40
                          },
                          "total_without_tips": {
                            "type": "integer",
                            "description": "The order amount excluding tips, in cents",
                            "example": 2628
                          },
                          "expected_time_of_arrival": {
                            "type": "string",
                            "description": "The expected time of arrival, in user's timezone",
                            "example": "09:20 PM"
                          },
                          "scheduled": {
                            "description": "The scheduled delivery window corresponding to input parameter `scheduled_id` passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3)",
                            "allOf": [
                              {
                                "required": [
                                  "delivery_fee",
                                  "maximum",
                                  "minimum"
                                ],
                                "properties": {
                                  "minimum": {
                                    "type": "integer",
                                    "description": "Timestamp (seconds since 1970)"
                                  },
                                  "maximum": {
                                    "type": "integer",
                                    "description": "Timestamp (seconds since 1970)"
                                  },
                                  "delivery_fee": {
                                    "description": "",
                                    "required": [
                                      "delivery_fee_flat",
                                      "delivery_fee_percent"
                                    ],
                                    "properties": {
                                      "delivery_fee_flat": {
                                        "type": "integer",
                                        "description": "Delivery fee amount in cents"
                                      },
                                      "delivery_fee_percent": {
                                        "type": "number",
                                        "description": "Delivery fee percentage"
                                      },
                                      "delivery_fee_taxable": {
                                        "type": "boolean",
                                        "description": "Whether the delivery fee is taxable or not"
                                      },
                                      "threshold_fees": {
                                        "type": "array",
                                        "description": "Threshold Fees, if they exist",
                                        "items": {
                                          "required": [
                                            "threshold_cents",
                                            "threshold_fee_cents"
                                          ],
                                          "properties": {
                                            "threshold_cents": {
                                              "type": "integer",
                                              "description": "Subtotal that enacts a specific fee"
                                            },
                                            "threshold_fee_cents": {
                                              "type": "integer",
                                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "marked_subtotal": {
                            "type": "integer",
                            "description": "The subtotal of the cart including any provided marked prices, in cents",
                            "example": 2000
                          },
                          "marked_total_without_tips": {
                            "type": "integer",
                            "description": "The order amount excluding tips, and including any provided marked prices, in cents",
                            "example": 2800
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "items": {
                    "type": "array",
                    "description": "List of cart items",
                    "example": [
                      {
                        "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                        "notes": "No whipped cream."
                      }
                    ],
                    "items": {
                      "required": [
                        "product_id"
                      ],
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "description": "The product's ID."
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                        },
                        "product_marked_price": {
                          "type": "integer",
                          "description": "The self-provided marked price (in cents) to be used in the email receipt."
                        },
                        "selected_options": {
                          "type": "array",
                          "description": "The list of selected options for the product.",
                          "items": {
                            "required": [
                              "option_id",
                              "quantity"
                            ],
                            "properties": {
                              "option_id": {
                                "type": "string",
                                "description": "Option ID"
                              },
                              "quantity": {
                                "type": "integer",
                                "description": "The option quantity (must be greater than 0)"
                              },
                              "marked_price": {
                                "type": "integer",
                                "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                              }
                            },
                            "type": "object"
                          }
                        },
                        "notes": {
                          "type": "string",
                          "description": "The product notes for the store."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "tip": {
                    "type": "integer",
                    "description": "The total tip amount, in cents",
                    "example": 100
                  },
                  "total_with_tip": {
                    "type": "integer",
                    "description": "The total order amount including tip, in cents",
                    "example": 40
                  },
                  "added_fees": {
                    "description": "The total added fees for the cart, computed using the input `added_fee`passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3) or [](https://docs.mealme.ai/reference/post_courier_order)",
                    "example": 200,
                    "allOf": [
                      {
                        "required": [
                          "flat_fee_cents",
                          "is_fee_taxable",
                          "percent_fee",
                          "sales_tax_cents",
                          "total_fee_cents"
                        ],
                        "properties": {
                          "flat_fee_cents": {
                            "type": "integer",
                            "description": "The API client added flat fee amount, in cents",
                            "example": 100
                          },
                          "percent_fee": {
                            "type": "integer",
                            "description": "The API client added percent fee amount, in range 1-100",
                            "example": 50
                          },
                          "is_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether the API client added fee is taxable",
                            "example": false
                          },
                          "total_fee_cents": {
                            "type": "integer",
                            "description": "The API client total added fee amount, in cents",
                            "example": 985
                          },
                          "sales_tax_cents": {
                            "type": "integer",
                            "description": "The total sales tax amount charged for the API client added fee, in cents",
                            "example": 0
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "misc_fees": {
                    "type": "array",
                    "description": "The list of miscellaneous fees applied on the order.",
                    "example": [
                      {
                        "fee_name": "Chef tip",
                        "fee_amount": 200
                      }
                    ],
                    "items": {
                      "required": [
                        "fee_amount",
                        "fee_name"
                      ],
                      "properties": {
                        "fee_name": {
                          "type": "string",
                          "description": "Name of the fee"
                        },
                        "fee_amount": {
                          "type": "integer",
                          "description": "The fee amount, in cents"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "marked_total_with_tip": {
                    "type": "integer",
                    "description": "The total order amount including tip, and including any provided marked prices, in cents",
                    "example": 50
                  }
                },
                "type": "object"
              }
            ]
          },
          "order_id": {
            "type": "string",
            "description": "The ID of the placed order",
            "example": "-N8vZEd-UnW_gZu6c4iO"
          },
          "is_sandbox": {
            "type": "boolean",
            "description": "Whether the order is a sandbox order.",
            "example": true
          }
        },
        "type": "object"
      },
      "Finalize_Order_Input": {
        "required": [
          "order_id"
        ],
        "properties": {
          "order_id": {
            "type": "string",
            "description": "The ID of the order to be finalized. The order ID is provided by [Create Order](https://docs.mealme.ai/reference/post_order_v3), and can only be finalized when `place_order` is `false`. The final quote of orders finalized 10 minutes after making a request to [Create Order](https://docs.mealme.ai/reference/post_order_v3) is subject to change.",
            "example": "-Mxak0IAuif3TvN9hBP7"
          }
        },
        "type": "object"
      },
      "Finalize_Order_Output": {
        "required": [
          "final_quote",
          "is_sandbox",
          "order_id",
          "order_placed",
          "tracking_link"
        ],
        "properties": {
          "order_placed": {
            "type": "boolean",
            "description": "Whether or not the order was successfully placed.",
            "example": true
          },
          "tracking_link": {
            "type": "string",
            "description": "Link to track the order.",
            "example": "https://mealme.cc/tracking?tracking_id=-MpG8lp8Z0l5kU64Wzeq"
          },
          "final_quote": {
            "description": "Final validated quote for the given products.",
            "example": {
              "store": "Denny's",
              "store_address": "816 Mission Street, San Francisco, CA, 94103, US",
              "store_id": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2",
              "quote_id": "gAAAAABjG7umYvJfg_ehbOj-lSgmxf2BIbq9fgIx0p93xiGAqjpvKfn39koqrh-GFREtE6eF_9UpeHhT6RjXbAFIn1sYedSxCQCVz6J-UU7_cp8thURW5HIk9POHlOoOT8Hjg7hcywN0tdyFTBi1vOuKQCISLaA7esnZW8mdeH765ORynidGKhV4c_r695XvJ5hdLok1DbB7BCvA1MsL3SMxv1N2zr9KYOg0ZV4zFtU7l1s78cGhE5Fl91cio9ijS5RzVkMRVno-3JlSuULwThHLTPwQ4NCxDMtt_tdrDaOE1pTz26uAYezx_-Sqr3f1LTOrgaavvMX-kBpCvt2puVbHufiuYT9ytvsj9x6lOpZCe2Jgelh4a348e7bbD7DiO1d4GKS6zVF4",
              "quote": {
                "subtotal": 1840,
                "delivery_fee_cents": 49,
                "service_fee_cents": 680,
                "small_order_fee_cents": 0,
                "sales_tax_cents": 148,
                "delivery_time_min": 25,
                "delivery_time_max": 40,
                "total_without_tips": 2717,
                "expected_time_of_arrival": "04:31 PM",
                "scheduled": {}
              },
              "items": [
                {
                  "name": "New York Style Cheesecake",
                  "base_price": 1050,
                  "image": "https://cdn-img.mealme.ai/6244bce354dcb96f0581dc043e7912ef3c4ed7ae/68747470733a2f2f636e2d67656f312e756265722e636f6d2f696d6167652d70726f632f726573697a652f656174732f666f726d61743d776562702f77696474683d3234302f6865696768743d3139322f7175616c6974793d37302f7372636236343d6148523063484d364c79396b4d584a6862484e765a323571626d637a4e79356a624739315a475a79623235304c6d356c6443396d4f546c6a59324d325a53316a4d445a6d4c5451315a446b74596d59794e79316b4e5441344e3259794d545a684e324d75616e426c5a773d3d",
                  "description": "Plain or with strawberry topping and whipped cream.",
                  "product_id": "gAAAAABjG8USnlR2aO5GxjRKvzASB5R9v_Qa52BAwQr1uNbJUwrgLpzH_knEMYY-1LwsEhUaT5yfv8vg7STQrF-E-7H8w2tUhyFhmNIrTw74LujKsomvvjkfGpMjpeYaeyOylespcVKUbXrfruR28OM2LTC27rbo5TyIJ0hlZYnIs17dynR3frklATV1Mt1uSDJhbyrRv_7EFxSa9tGf0lrTcHd4hbF8_JIoWR_MIXgtHoqjlgjtv4_FvKML1VEFm-fPPiP8BEfQdJQgr3NHk3asIpWJfO-Lvv-z_IgAO4JCOEj9uBzDQIUbNd2_p9KMhO-CJNg_TsESjAvRbeMJO9jzKvgoplBEcmAUoUgRrcsfsfEJw9vyp_YqA35b_RdC3UXNbjYkumdiGUpF2qKcc89uvNKwPq2QnUBi4NrIo4UWmx759xZCcmewFaGl4BUIlSSjCwwTycsslG2pJE_fLel6_9STFg12gXhyS8bd-s1FmvMu74hL3q21QSgQnqmIJZv_BQgtPPNlAb_u1imw0ErM2KK9jMB3X3mA5DlE7x8gOoBetJzTkDoQVjxoqINwRFppWF8XB3JdOqbV3pj1_0Twj2gTKXqjs7xEeWf2n9aPVPrSX-lg0-UiFdhSR77yPdmW1auQHjykafD6xvdq6SgHXTOsnE24uIBiHPqJHX3KjKhYJw_Q0LLp9p8dFsgA9hEJkFGJhTEp9biQZ4SSopEHbdML0CcRxbWtN0O8isSAzjo48cAiUbJFBLSfsqz65qpoOdiliBHx7DY2RhpKTSMV-OjN3NnuCcQ3pIPAMt-HZ6TxGBc_LI0=",
                  "customizations": [
                    {
                      "name": "Add Strawberry Topping",
                      "selected_options": [
                        {
                          "name": "Strawberry Topping",
                          "price": 0,
                          "quantity": 1,
                          "option_id": "gAAAAABjG8DMnsHajy2D0a93d4ofw5KVFPudW524M9IP7SJheejkk-o58OPdAyj0vmEZ6xHmadTleYn2pQ2yTPj--zwKPqelw46-W1JMy-fGpHh7BbZPUIGUYtg1-wr7Tr-eHOJ-Jr9AIKsqncELgUH-s5r9EerP0NP9veLmJMUBLhIl0JY66-_ZJlk4MCJ7Aagu6VjD7h058NqAqLz1S1L3GH07znrnMLCQpC9a8Jjlvz_H-WvTJCw=",
                          "customizations": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "name": "Wavy Cut French Fries",
                  "base_price": 790,
                  "image": "https://cdn-img.mealme.ai/52823d72ddc90b4efe7e85def6784947ef459ef9/68747470733a2f2f636e2d67656f312e756265722e636f6d2f696d6167652d70726f632f726573697a652f656174732f666f726d61743d776562702f77696474683d3234302f6865696768743d3139322f7175616c6974793d37302f7372636236343d6148523063484d364c79396b4d584a6862484e765a323571626d637a4e79356a624739315a475a79623235304c6d356c644338304d6a426d4d7a41344e4330784e3251304c54526a4f544574596d466b5a69316d4d4463774d6d526959574a6d5a574975616e426c5a773d3d",
                  "description": "Side of wavy cut French Fries",
                  "product_id": "gAAAAABjG8USIYa1Z_dCVTEZkQrGwouHh1Q-a53IpBVqPoCn-r1v9sh2Yh1MQUDGrfl14mcB-W6bWRja5lYhRIL-0WWPQWXCX7mb9R3zFQXfrGdNzyxft4g4Ua3hBMcDCEZVOjyv087_F1RPA8O4SlrBCnfxWVytxWqNRPKskW-RBDwnF5gY4bO_uSsyv9LDhLz6d6KNANOf8maMDsYN_kkrpcw3r4PH6h6hPvzausGZ7NZsIT6GyJqJktvA9htbjQbwO5ttS86hKLxSSgIHRhynPwxi0f7uX8UGa3hqCPQlxv40vilaS7SzqXEu6VRl3bRkUDVKBftJtAgDjS2F3JLN4KiFONFaXFs5aFhwCjW_x800HpDiccufYxYPMMjr47wsUy-_Wyn9BlJL0sFupgKAAJqcX7fYIUJ-tiNUA5ubTa7NkP6ve6B66l5sw0xaQOH7xDnSp3-Ugu4guzy4s-ubwa-VBBKv60q4BI9VvM5WzFCk-ouBJMJ25NXiVcwde1wW-vUwRY2vLo4yNDbsXXI8WJnISvY5VQW13Si21QxaBz2jdqNMuaYIOd7e9jaQnjddtwuNyGnf4umSwSgPyDoywFE4eSvm7uoUSR8pVzLyaUuZuKZlJx2_vPIHNxVPnbMyKMw9uJ44-HFcBl81dL5Y8UHCCn0OD0Lg6OqdUu9TOxlCyVLtGBsAFOqtrKk90oWaikbLTZkG4WrAtaPHNvPxYmkeSE3E_ZsBlKpR30z1qohDRjAnaRsM5CM9r6JVUqNJUYJAsf1FHqeWrCHwHnhZZTJsEVE5A80lfNH_JW3nS0t5bYQj5dc=",
                  "customizations": []
                }
              ],
              "tip": 100,
              "total_with_tip": 2817,
              "added_fees": {
                "flat_fee_cents": 100,
                "percent_fee": 50,
                "is_fee_taxable": false,
                "total_fee_cents": 936,
                "sales_tax_cents": 0
              }
            },
            "allOf": [
              {
                "required": [
                  "added_fees",
                  "items",
                  "misc_fees",
                  "quote",
                  "quote_id",
                  "store",
                  "store_address",
                  "store_id",
                  "tip",
                  "total_with_tip"
                ],
                "properties": {
                  "store": {
                    "type": "string",
                    "description": "The name of the store where the order was placed",
                    "example": "Denny's"
                  },
                  "store_address": {
                    "type": "string",
                    "description": "The address of the store where the order was placed",
                    "example": "816 Mission St, San Francisco, CA, 94103, US"
                  },
                  "store_id": {
                    "type": "string",
                    "description": "The MealMe store ID",
                    "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
                  },
                  "quote_id": {
                    "type": "string",
                    "description": "The MealMe Quote ID",
                    "example": "gAAAAABihzvxA4pMVWefTSN3GFOL7b3CYG5yPIRnGUNnEu8oD72y0SiHcDkoloajAINb3pI4Kw6R5qR694t5fCXc8_DnvoB0_BeBlCZ_zJmelaZ4jWfcnF5ySNVt29YYobrl5PMQduRavTxgb5E2IvgZakNNbAzP9rYwyApbdaZ6n_RCwz09IlN2iOoqUlnNVL1WF8dDwqI6-XWMiA3XDI_A-k4QyVPZ0yMZDP_LuRzEnQOYIQ23CCyHHz2imKBP4ySAMNgeIKv0ynYV-a1ZfMC_MjFVyK_OHCds8KmiAM8RHZWt6-wR2m2xqMhKOg8NFWU5gWzYFVL_"
                  },
                  "quote": {
                    "description": "The final quote summary including subtotal, tax, time estimate, quote fees, etc.",
                    "allOf": [
                      {
                        "required": [
                          "delivery_fee_cents",
                          "delivery_time_max",
                          "delivery_time_min",
                          "expected_time_of_arrival",
                          "sales_tax_cents",
                          "scheduled",
                          "service_fee_cents",
                          "small_order_fee_cents",
                          "subtotal",
                          "total_without_tips"
                        ],
                        "properties": {
                          "subtotal": {
                            "type": "integer",
                            "description": "The subtotal of the cart",
                            "example": 1770
                          },
                          "delivery_fee_cents": {
                            "type": "integer",
                            "description": "The total delivery fee, in cents",
                            "example": 49
                          },
                          "service_fee_cents": {
                            "type": "integer",
                            "description": "The total service fee, in cents",
                            "example": 667
                          },
                          "small_order_fee_cents": {
                            "type": "integer",
                            "description": "The total small order fee, in cents",
                            "example": 0
                          },
                          "sales_tax_cents": {
                            "type": "integer",
                            "description": "The total sales tax, in cents",
                            "example": 142
                          },
                          "delivery_time_min": {
                            "type": "integer",
                            "description": "The minimum delivery time estimate, in minutes",
                            "example": 25
                          },
                          "delivery_time_max": {
                            "type": "integer",
                            "description": "The maximum delivery time estimate, in minutes",
                            "example": 40
                          },
                          "total_without_tips": {
                            "type": "integer",
                            "description": "The order amount excluding tips, in cents",
                            "example": 2628
                          },
                          "expected_time_of_arrival": {
                            "type": "string",
                            "description": "The expected time of arrival, in user's timezone",
                            "example": "09:20 PM"
                          },
                          "scheduled": {
                            "description": "The scheduled delivery window corresponding to input parameter `scheduled_id` passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3)",
                            "allOf": [
                              {
                                "required": [
                                  "delivery_fee",
                                  "maximum",
                                  "minimum"
                                ],
                                "properties": {
                                  "minimum": {
                                    "type": "integer",
                                    "description": "Timestamp (seconds since 1970)"
                                  },
                                  "maximum": {
                                    "type": "integer",
                                    "description": "Timestamp (seconds since 1970)"
                                  },
                                  "delivery_fee": {
                                    "description": "",
                                    "required": [
                                      "delivery_fee_flat",
                                      "delivery_fee_percent"
                                    ],
                                    "properties": {
                                      "delivery_fee_flat": {
                                        "type": "integer",
                                        "description": "Delivery fee amount in cents"
                                      },
                                      "delivery_fee_percent": {
                                        "type": "number",
                                        "description": "Delivery fee percentage"
                                      },
                                      "delivery_fee_taxable": {
                                        "type": "boolean",
                                        "description": "Whether the delivery fee is taxable or not"
                                      },
                                      "threshold_fees": {
                                        "type": "array",
                                        "description": "Threshold Fees, if they exist",
                                        "items": {
                                          "required": [
                                            "threshold_cents",
                                            "threshold_fee_cents"
                                          ],
                                          "properties": {
                                            "threshold_cents": {
                                              "type": "integer",
                                              "description": "Subtotal that enacts a specific fee"
                                            },
                                            "threshold_fee_cents": {
                                              "type": "integer",
                                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "marked_subtotal": {
                            "type": "integer",
                            "description": "The subtotal of the cart including any provided marked prices, in cents",
                            "example": 2000
                          },
                          "marked_total_without_tips": {
                            "type": "integer",
                            "description": "The order amount excluding tips, and including any provided marked prices, in cents",
                            "example": 2800
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "items": {
                    "type": "array",
                    "description": "List of cart items",
                    "example": [
                      {
                        "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                        "notes": "No whipped cream."
                      }
                    ],
                    "items": {
                      "required": [
                        "product_id"
                      ],
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "description": "The product's ID."
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                        },
                        "product_marked_price": {
                          "type": "integer",
                          "description": "The self-provided marked price (in cents) to be used in the email receipt."
                        },
                        "selected_options": {
                          "type": "array",
                          "description": "The list of selected options for the product.",
                          "items": {
                            "required": [
                              "option_id",
                              "quantity"
                            ],
                            "properties": {
                              "option_id": {
                                "type": "string",
                                "description": "Option ID"
                              },
                              "quantity": {
                                "type": "integer",
                                "description": "The option quantity (must be greater than 0)"
                              },
                              "marked_price": {
                                "type": "integer",
                                "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                              }
                            },
                            "type": "object"
                          }
                        },
                        "notes": {
                          "type": "string",
                          "description": "The product notes for the store."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "tip": {
                    "type": "integer",
                    "description": "The total tip amount, in cents",
                    "example": 100
                  },
                  "total_with_tip": {
                    "type": "integer",
                    "description": "The total order amount including tip, in cents",
                    "example": 40
                  },
                  "added_fees": {
                    "description": "The total added fees for the cart, computed using the input `added_fee`passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3) or [](https://docs.mealme.ai/reference/post_courier_order)",
                    "example": 200,
                    "allOf": [
                      {
                        "required": [
                          "flat_fee_cents",
                          "is_fee_taxable",
                          "percent_fee",
                          "sales_tax_cents",
                          "total_fee_cents"
                        ],
                        "properties": {
                          "flat_fee_cents": {
                            "type": "integer",
                            "description": "The API client added flat fee amount, in cents",
                            "example": 100
                          },
                          "percent_fee": {
                            "type": "integer",
                            "description": "The API client added percent fee amount, in range 1-100",
                            "example": 50
                          },
                          "is_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether the API client added fee is taxable",
                            "example": false
                          },
                          "total_fee_cents": {
                            "type": "integer",
                            "description": "The API client total added fee amount, in cents",
                            "example": 985
                          },
                          "sales_tax_cents": {
                            "type": "integer",
                            "description": "The total sales tax amount charged for the API client added fee, in cents",
                            "example": 0
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "misc_fees": {
                    "type": "array",
                    "description": "The list of miscellaneous fees applied on the order.",
                    "example": [
                      {
                        "fee_name": "Chef tip",
                        "fee_amount": 200
                      }
                    ],
                    "items": {
                      "required": [
                        "fee_amount",
                        "fee_name"
                      ],
                      "properties": {
                        "fee_name": {
                          "type": "string",
                          "description": "Name of the fee"
                        },
                        "fee_amount": {
                          "type": "integer",
                          "description": "The fee amount, in cents"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "marked_total_with_tip": {
                    "type": "integer",
                    "description": "The total order amount including tip, and including any provided marked prices, in cents",
                    "example": 50
                  }
                },
                "type": "object"
              }
            ]
          },
          "order_id": {
            "type": "string",
            "description": "The ID of the finalized order.",
            "example": "-N8vZEd-UnW_gZu6c4iO"
          },
          "is_sandbox": {
            "type": "boolean",
            "description": "Whether the order is a sandbox order.",
            "example": true
          }
        },
        "type": "object"
      },
      "Courier_Quote_Input": {
        "required": [
          "driver_tip_cents",
          "items",
          "pickup_minutes_eta",
          "prefer_cheapest",
          "sales_tax_cents",
          "store_city",
          "store_country",
          "store_latitude",
          "store_longitude",
          "store_name",
          "store_phone",
          "store_state",
          "store_street_name",
          "store_street_num",
          "store_zipcode",
          "user_city",
          "user_country",
          "user_email",
          "user_latitude",
          "user_longitude",
          "user_name",
          "user_phone",
          "user_state",
          "user_street_name",
          "user_street_num",
          "user_zipcode"
        ],
        "properties": {
          "pickup_order_id": {
            "type": "string",
            "description": "The optional ID for the order at the store for the driver to pick up",
            "example": "ABC123"
          },
          "pickup_minutes_eta": {
            "type": "integer",
            "description": "Estimated minutes until the pickup order is ready",
            "default": 10,
            "example": 10
          },
          "prefer_cheapest": {
            "type": "boolean",
            "description": "`true` for the cheapest delivery quote, `false` for the fastest delivery quotes.",
            "default": true,
            "example": true
          },
          "driver_tip_cents": {
            "type": "integer",
            "description": "The tip for the driver, in cents.",
            "default": 100,
            "example": 100
          },
          "store_name": {
            "type": "string",
            "description": "The name of the store for delivery pickup",
            "default": "Denny's",
            "example": "Denny's"
          },
          "store_phone": {
            "type": "integer",
            "description": "The phone number of the store",
            "default": 14152438800,
            "example": 14152438800
          },
          "pickup_notes": {
            "type": "string",
            "description": "Pickup instructions to assist the delivery driver.",
            "example": "Pickup the order at Apartment 9. Please ask for the order under the name Steve Jobs."
          },
          "user_dropoff_notes": {
            "type": "string",
            "description": "Dropoff delivery notes from the user. Not required for pickup.",
            "example": "Leave in lobby"
          },
          "user_name": {
            "type": "string",
            "description": "User's name, so the store and/or driver know who to give the food to at dropoff.",
            "default": "Steve Jobs",
            "example": "Steve Jobs"
          },
          "user_email": {
            "type": "string",
            "description": "User's email, for the order confirmation, updates, and tracking link.",
            "default": "steve@apple.com",
            "example": "steve@apple.com"
          },
          "user_phone": {
            "type": "integer",
            "description": "User's phone number, so the store and/or driver know who to call for pickup or delivery.",
            "default": 14044442058,
            "example": 14044442058
          },
          "user_latitude": {
            "type": "number",
            "description": "The latitude of the user",
            "default": 37.7786357,
            "example": 37.7786357
          },
          "user_longitude": {
            "type": "number",
            "description": "The longitude of the user",
            "default": -122.3918135,
            "example": -122.3918135
          },
          "user_street_num": {
            "type": "string",
            "description": "Street number of the user",
            "default": "188",
            "example": "188"
          },
          "user_street_name": {
            "type": "string",
            "description": "Street name of the user",
            "default": "King Street",
            "example": "King Street"
          },
          "user_apt_num": {
            "type": "string",
            "description": "Apartment number of the user",
            "example": ""
          },
          "user_city": {
            "type": "string",
            "description": "City of the user",
            "default": "San Francisco",
            "example": "San Francisco"
          },
          "user_id": {
            "type": "string",
            "description": "Unique User ID for the API customer's platform. This is optional and is only needed for the /order/user endpoint to work.",
            "example": "7B36A9CF"
          },
          "user_state": {
            "type": "string",
            "description": "State of the user",
            "default": "CA",
            "example": "CA"
          },
          "user_country": {
            "type": "string",
            "description": "Country of the user. Can be `US` or `CA`.",
            "default": "US",
            "example": "US"
          },
          "user_zipcode": {
            "type": "string",
            "description": "Zipcode of the user",
            "default": "94107",
            "example": "94107"
          },
          "store_latitude": {
            "type": "number",
            "description": "The latitude of the store",
            "default": 37.7843083,
            "example": 37.7843083
          },
          "store_longitude": {
            "type": "number",
            "description": "The longitude of the store",
            "default": -122.4050638,
            "example": -122.4050638
          },
          "store_street_num": {
            "type": "string",
            "description": "Street number of the store",
            "default": "816",
            "example": "816"
          },
          "store_street_name": {
            "type": "string",
            "description": "Street name of the store",
            "default": "Mission Street",
            "example": "Mission Street"
          },
          "store_apt_num": {
            "type": "string",
            "description": "Apartment number of the store",
            "example": ""
          },
          "store_city": {
            "type": "string",
            "description": "City of the store",
            "default": "San Francisco",
            "example": "San Francisco"
          },
          "store_state": {
            "type": "string",
            "description": "State of the store",
            "default": "CA",
            "example": "CA"
          },
          "store_country": {
            "type": "string",
            "description": "Country of the store",
            "default": "US",
            "example": "US"
          },
          "store_zipcode": {
            "type": "string",
            "description": "Zipcode of the store",
            "default": "94103",
            "example": "94103"
          },
          "items": {
            "type": "array",
            "description": "List of cart items for the driver to pick up",
            "default": [
              {
                "name": "Vanilla Milkshake",
                "price": 1090,
                "quantity": 1
              },
              {
                "name": "Wavy Cut French Fries",
                "price": 730,
                "quantity": 1
              }
            ],
            "example": [
              {
                "name": "Vanilla Milkshake",
                "price": 1090,
                "quantity": 1
              },
              {
                "name": "Wavy Cut French Fries",
                "price": 730,
                "quantity": 1
              }
            ],
            "items": {
              "required": [
                "name",
                "price",
                "quantity"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the item"
                },
                "price": {
                  "type": "integer",
                  "description": "Price of the item, including added customizations if they exist"
                },
                "quantity": {
                  "type": "integer",
                  "description": "Quantity of the item"
                }
              },
              "type": "object"
            }
          },
          "sales_tax_cents": {
            "type": "integer",
            "description": "Sales tax total for order, in cents.",
            "default": 63,
            "example": 63
          },
          "added_fee_flat": {
            "type": "integer",
            "description": "Flat fee added by API client, in cents.",
            "example": 100
          },
          "added_fee_percent": {
            "type": "integer",
            "description": "Percent fee added by API client, range [0-100].",
            "example": 50
          },
          "tracking_link": {
            "type": "string",
            "description": "The tracking link to communicate with the customer via SMS/email. If provided, the MealMe tracking link will be replaced with this one. If the tracking link is to be composed of the MealMe order ID, use `<>` as the placedholder. For example, if the tracking link `https://tracking.example.com/tracking?tracking_id=<>` is provided, and the `order_id` in the response is `-Mxak0IAuif3TvN9hBP7`, then the final tracking link will be `https://tracking.example.com/tracking?tracking_id=-Mxak0IAuif3TvN9hBP7`",
            "example": "https://tracking.example.com/tracking?tracking_id=<>"
          }
        },
        "type": "object"
      },
      "Courier_Item": {
        "required": [
          "name",
          "price",
          "quantity"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the item"
          },
          "price": {
            "type": "integer",
            "description": "Price of the item, including added customizations if they exist"
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity of the item"
          }
        },
        "type": "object"
      },
      "Courier_Quote_Output": {
        "required": [
          "courier_quote_id",
          "quote"
        ],
        "properties": {
          "quote": {
            "description": "The quote for the given courier quote ID",
            "example": {
              "time_estimate": {
                "minimum": 20,
                "maximum": 25
              },
              "sales_tax_percent": 8.5,
              "delivery_fee": {
                "delivery_fee_flat": 500,
                "delivery_fee_percent": 0,
                "delivery_fee_taxable": false
              },
              "service_fee": {
                "service_fee_flat": 0,
                "service_fee_percent": 0
              },
              "threshold_fees": []
            },
            "allOf": [
              {
                "required": [
                  "accepts_delivery_tip",
                  "accepts_pickup_note",
                  "accepts_pickup_tip",
                  "asap_available",
                  "courier_quote",
                  "delivery_fee",
                  "first_party_quote",
                  "order_minimum",
                  "sales_tax_percent",
                  "service_fee",
                  "small_order_fee",
                  "third_party_quote",
                  "time_estimate"
                ],
                "properties": {
                  "time_estimate": {
                    "description": "",
                    "required": [
                      "maximum",
                      "minimum"
                    ],
                    "properties": {
                      "minimum": {
                        "type": "integer",
                        "description": "Lower bound of delivery time estimate (in minutes)"
                      },
                      "maximum": {
                        "type": "integer",
                        "description": "Upper bound of delivery time estimate (in minutes)"
                      },
                      "scheduled": {
                        "type": "array",
                        "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                        "items": {
                          "required": [
                            "delivery_fee",
                            "maximum",
                            "minimum"
                          ],
                          "properties": {
                            "minimum": {
                              "type": "integer",
                              "description": "Timestamp (seconds since 1970)"
                            },
                            "maximum": {
                              "type": "integer",
                              "description": "Timestamp (seconds since 1970)"
                            },
                            "delivery_fee": {
                              "description": "",
                              "required": [
                                "delivery_fee_flat",
                                "delivery_fee_percent"
                              ],
                              "properties": {
                                "delivery_fee_flat": {
                                  "type": "integer",
                                  "description": "Delivery fee amount in cents"
                                },
                                "delivery_fee_percent": {
                                  "type": "number",
                                  "description": "Delivery fee percentage"
                                },
                                "delivery_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether the delivery fee is taxable or not"
                                },
                                "threshold_fees": {
                                  "type": "array",
                                  "description": "Threshold Fees, if they exist",
                                  "items": {
                                    "required": [
                                      "threshold_cents",
                                      "threshold_fee_cents"
                                    ],
                                    "properties": {
                                      "threshold_cents": {
                                        "type": "integer",
                                        "description": "Subtotal that enacts a specific fee"
                                      },
                                      "threshold_fee_cents": {
                                        "type": "integer",
                                        "description": "Flat delivery fee that will be charged for this threshold_cents"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "sales_tax_percent": {
                    "type": "integer",
                    "description": "Sales tax in percentage terms"
                  },
                  "delivery_fee": {
                    "description": "",
                    "required": [
                      "delivery_fee_flat",
                      "delivery_fee_percent"
                    ],
                    "properties": {
                      "delivery_fee_flat": {
                        "type": "integer",
                        "description": "Delivery fee amount in cents"
                      },
                      "delivery_fee_percent": {
                        "type": "number",
                        "description": "Delivery fee percentage"
                      },
                      "delivery_fee_taxable": {
                        "type": "boolean",
                        "description": "Whether the delivery fee is taxable or not"
                      },
                      "threshold_fees": {
                        "type": "array",
                        "description": "Threshold Fees, if they exist",
                        "items": {
                          "required": [
                            "threshold_cents",
                            "threshold_fee_cents"
                          ],
                          "properties": {
                            "threshold_cents": {
                              "type": "integer",
                              "description": "Subtotal that enacts a specific fee"
                            },
                            "threshold_fee_cents": {
                              "type": "integer",
                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "service_fee": {
                    "description": "",
                    "required": [
                      "service_fee_flat",
                      "service_fee_percent"
                    ],
                    "properties": {
                      "service_fee_flat": {
                        "type": "integer",
                        "description": "Service fee amount in cents"
                      },
                      "service_fee_percent": {
                        "type": "number",
                        "description": "Service fee percentage from 0 to 100"
                      },
                      "service_fee_min": {
                        "type": "integer",
                        "description": "Minimum service fee amount in cents"
                      },
                      "service_fee_max": {
                        "type": "integer",
                        "description": "Maximum service fee amount in cents"
                      },
                      "service_fee_taxable": {
                        "type": "boolean",
                        "description": "Whether the service fee is taxable or not"
                      },
                      "threshold_fees": {
                        "type": "array",
                        "description": "Threshold Fees, if they exist",
                        "items": {
                          "required": [
                            "threshold_cents",
                            "threshold_fee_cents"
                          ],
                          "properties": {
                            "threshold_cents": {
                              "type": "integer",
                              "description": "Subtotal that enacts a specific fee"
                            },
                            "threshold_fee_cents": {
                              "type": "integer",
                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "small_order_fee": {
                    "description": "",
                    "required": [
                      "minimum_order_value",
                      "small_order_fee_flat",
                      "small_order_fee_percent"
                    ],
                    "properties": {
                      "minimum_order_value": {
                        "type": "integer",
                        "description": "Minimum amount to not incur small order fee in cents",
                        "example": 0
                      },
                      "small_order_fee_flat": {
                        "type": "integer",
                        "description": "Small order fee amount in cents",
                        "example": 0
                      },
                      "small_order_fee_percent": {
                        "type": "number",
                        "description": "Small order fee percentage",
                        "example": 0
                      }
                    },
                    "type": "object"
                  },
                  "order_minimum": {
                    "type": "integer",
                    "description": "Minimum order amount in cents"
                  },
                  "min_tip": {
                    "type": "integer",
                    "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                  },
                  "asap_available": {
                    "type": "integer",
                    "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                  },
                  "first_party_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by the store"
                  },
                  "third_party_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by a third party service"
                  },
                  "courier_quote": {
                    "type": "boolean",
                    "description": "Whether this quote is provided by a last-mile delivery service."
                  },
                  "accepts_delivery_tip": {
                    "type": "boolean",
                    "description": "Whether a delivery tip is accepted."
                  },
                  "accepts_pickup_tip": {
                    "type": "boolean",
                    "description": "Whether a pickup tip is accepted."
                  },
                  "accepts_pickup_note": {
                    "type": "boolean",
                    "description": "Whether a pickup note is accepted."
                  }
                },
                "type": "object"
              }
            ]
          },
          "courier_quote_id": {
            "type": "string",
            "description": "The output MealMe Courier Quote ID to be used for courier checkout",
            "example": "gAAAAABhsfvEyECui0n4tV2vHioms-0VhZuqyPG9EyLIDymMY_53eF_Q4chJNSx7tUyae-kl0ovBPjMhM6XA4rzFZJIi7JIsjommF8E1mwpkH13DoUiZSoRKAncWZfpxXS8YShlwX_I6FKBkad_wVyjNEFWMP5USHA=="
          }
        },
        "type": "object"
      },
      "Courier_Order_Placed_Output": {
        "required": [
          "order_placed",
          "tracking_link"
        ],
        "properties": {
          "order_placed": {
            "type": "boolean",
            "description": "Whether or not the order was successfully placed.",
            "example": true
          },
          "tracking_link": {
            "type": "string",
            "description": "Link to track the order.",
            "example": "https://mealme.cc/tracking?tracking_id=-MpG8lp8Z0l5kU64Wzeq"
          }
        },
        "type": "object"
      },
      "Create_Cart_Input": {
        "required": [
          "items",
          "pickup",
          "user_id"
        ],
        "properties": {
          "cart_id": {
            "type": "string",
            "description": "The optional ID of an existing cart to update.",
            "default": "",
            "example": "-N8vZEd-UnW_gZu6c4iO"
          },
          "items": {
            "type": "array",
            "description": "List of cart items.",
            "default": [
              {
                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                "notes": "No whipped cream."
              }
            ],
            "example": [
              {
                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                "notes": "No whipped cream."
              }
            ],
            "items": {
              "required": [
                "product_id"
              ],
              "properties": {
                "product_id": {
                  "type": "string",
                  "description": "The product's ID."
                },
                "quantity": {
                  "type": "integer",
                  "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                },
                "product_marked_price": {
                  "type": "integer",
                  "description": "The self-provided marked price (in cents) to be used in the email receipt."
                },
                "selected_options": {
                  "type": "array",
                  "description": "The list of selected options for the product.",
                  "items": {
                    "required": [
                      "option_id",
                      "quantity"
                    ],
                    "properties": {
                      "option_id": {
                        "type": "string",
                        "description": "Option ID"
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "The option quantity (must be greater than 0)"
                      },
                      "marked_price": {
                        "type": "integer",
                        "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                      }
                    },
                    "type": "object"
                  }
                },
                "notes": {
                  "type": "string",
                  "description": "The product notes for the store."
                }
              },
              "type": "object"
            }
          },
          "pickup": {
            "type": "boolean",
            "description": "`true` for pickup quotes, `false` for delivery quotes.",
            "default": false,
            "example": false
          },
          "driver_tip_cents": {
            "type": "integer",
            "description": "The tip for the driver, in cents.",
            "default": 100,
            "example": 100
          },
          "user_latitude": {
            "type": "number",
            "description": "The latitude of the user.",
            "default": 37.7786357,
            "example": 37.7786357
          },
          "user_longitude": {
            "type": "number",
            "description": "The longitude of the user.",
            "default": -122.3918135,
            "example": -122.3918135
          },
          "user_street_num": {
            "type": "string",
            "description": "Street number of the user.",
            "default": "188",
            "example": "188"
          },
          "user_street_name": {
            "type": "string",
            "description": "Street name of the user.",
            "default": "King Street",
            "example": "King Street"
          },
          "user_apt_num": {
            "type": "string",
            "description": "Apartment number of the user",
            "example": "108"
          },
          "user_city": {
            "type": "string",
            "description": "City of the user.",
            "default": "San Francisco",
            "example": "San Francisco"
          },
          "user_state": {
            "type": "string",
            "description": "State of the user.",
            "default": "CA",
            "example": "CA"
          },
          "user_country": {
            "type": "string",
            "description": "Country of the user. Can be `US` or `CA`.",
            "default": "US",
            "example": "US"
          },
          "user_zipcode": {
            "type": "string",
            "description": "Zipcode of the user.",
            "default": "94107",
            "example": "94107"
          },
          "user_dropoff_notes": {
            "type": "string",
            "description": "Dropoff delivery notes for the user.",
            "default": "Leave in lobby",
            "example": "Leave in lobby"
          },
          "user_name": {
            "type": "string",
            "description": "User's name, so the store and/or driver know who to give the food to at dropoff.",
            "default": "Steve Jobs",
            "example": "Steve Jobs"
          },
          "user_email": {
            "type": "string",
            "description": "User's email, for the order confirmation, updates, and tracking link.",
            "default": "steve@apple.com",
            "example": "steve@apple.com"
          },
          "user_phone": {
            "type": "integer",
            "description": "User's phone number, so the store and/or driver know who to call for pickup or delivery. Must include country code.",
            "default": 14044442058,
            "example": 14044442058
          },
          "user_id": {
            "type": "string",
            "description": "Unique User ID for the API customer's platform.",
            "default": "7B36A9CF",
            "example": "7B36A9CF"
          },
          "disable_sms": {
            "type": "boolean",
            "description": "Whether to send the user order status updates via SMS.",
            "default": false,
            "example": false
          },
          "email_receipt_specifications": {
            "description": "Set of optional configurations used to modify email reciept",
            "allOf": [
              {
                "properties": {
                  "prices_marked": {
                    "type": "boolean",
                    "description": "If `true`, the price(s) in the email receipt will reflect the amount(s) specified via the `product_marked_price` and `marked_price` input parameters. If `charge_user` is `true`, the total charged will also reflect these amount(s).",
                    "default": false,
                    "example": false
                  },
                  "added_fee": {
                    "description": "Your added service fee. Any added fees will be reflected in the email receipt and included in the total charged when `charger_user` is `true`.",
                    "allOf": [
                      {
                        "properties": {
                          "added_fee_flat": {
                            "type": "integer",
                            "description": "Flat fee added by API client, in cents.",
                            "default": 0,
                            "example": 100
                          },
                          "added_fee_percent": {
                            "type": "integer",
                            "description": "Percent fee added by API client, range [0-100].",
                            "default": 0,
                            "example": 50
                          },
                          "is_added_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether API client added fee is taxable.",
                            "example": false
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "unify_service_fee": {
                    "type": "boolean",
                    "description": "Whether to combine the underlying service's service fee and your `added_fee` in one line item in the email receipt.",
                    "default": false,
                    "example": false
                  },
                  "misc_fees": {
                    "type": "array",
                    "description": "List of miscellaneous fees or discounts to display in the email receipt.",
                    "example": [
                      {
                        "fee_name": "Chef tip",
                        "fee_amount": 200
                      }
                    ],
                    "items": {
                      "required": [
                        "fee_amount",
                        "fee_name"
                      ],
                      "properties": {
                        "fee_name": {
                          "type": "string",
                          "description": "Name of the fee"
                        },
                        "fee_amount": {
                          "type": "integer",
                          "description": "The fee amount, in cents"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "disable_email": {
                    "type": "boolean",
                    "description": "Whether to send the user an email receipt.",
                    "default": false,
                    "example": false
                  }
                },
                "type": "object"
              }
            ]
          },
          "customer_order_id": {
            "type": "string",
            "description": "The self provided order id to attach to this order. This will be returned in the response from [Get Orders](https://docs.mealme.ai/reference/get_account_orders) when looking up an order.",
            "example": "ABC123"
          },
          "autofill_selected_options": {
            "type": "boolean",
            "description": "Whether to automatically select the default quantity for all options and fulfill all customization requirements.",
            "default": false,
            "example": false
          }
        },
        "type": "object"
      },
      "Create_Cart_Output": {
        "required": [
          "cart_id"
        ],
        "properties": {
          "cart_id": {
            "type": "string",
            "description": "The ID of the newly created cart",
            "example": "-N8vZEd-UnW_gZu6c4iO"
          }
        },
        "type": "object"
      },
      "Fetch_Cart_Output": {
        "required": [
          "cart_id",
          "items",
          "pickup",
          "user_id"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "List of cart items.",
            "example": [
              {
                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                "notes": "No whipped cream."
              }
            ],
            "items": {
              "required": [
                "product_id"
              ],
              "properties": {
                "product_id": {
                  "type": "string",
                  "description": "The product's ID."
                },
                "quantity": {
                  "type": "integer",
                  "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                },
                "product_marked_price": {
                  "type": "integer",
                  "description": "The self-provided marked price (in cents) to be used in the email receipt."
                },
                "selected_options": {
                  "type": "array",
                  "description": "The list of selected options for the product.",
                  "items": {
                    "required": [
                      "option_id",
                      "quantity"
                    ],
                    "properties": {
                      "option_id": {
                        "type": "string",
                        "description": "Option ID"
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "The option quantity (must be greater than 0)"
                      },
                      "marked_price": {
                        "type": "integer",
                        "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                      }
                    },
                    "type": "object"
                  }
                },
                "notes": {
                  "type": "string",
                  "description": "The product notes for the store."
                }
              },
              "type": "object"
            }
          },
          "pickup": {
            "type": "boolean",
            "description": "Whether the order is for pickup.",
            "default": false,
            "example": false
          },
          "driver_tip_cents": {
            "type": "integer",
            "description": "The tip for the driver, in cents.",
            "default": 100,
            "example": 100
          },
          "user_latitude": {
            "type": "number",
            "description": "The latitude of the user.",
            "default": 37.7786357,
            "example": 37.7786357
          },
          "user_longitude": {
            "type": "number",
            "description": "The longitude of the user.",
            "default": -122.3918135,
            "example": -122.3918135
          },
          "user_street_num": {
            "type": "string",
            "description": "Street number of the user.",
            "default": "188",
            "example": "188"
          },
          "user_street_name": {
            "type": "string",
            "description": "Street name of the user.",
            "default": "King Street",
            "example": "King Street"
          },
          "user_apt_num": {
            "type": "string",
            "description": "Apartment number of the user",
            "example": "108"
          },
          "user_city": {
            "type": "string",
            "description": "City of the user.",
            "default": "San Francisco",
            "example": "San Francisco"
          },
          "user_state": {
            "type": "string",
            "description": "State of the user.",
            "default": "CA",
            "example": "CA"
          },
          "user_country": {
            "type": "string",
            "description": "Country of the user. Can be `US` or `CA`.",
            "default": "US",
            "example": "US"
          },
          "user_zipcode": {
            "type": "string",
            "description": "Zipcode of the user.",
            "default": "94107",
            "example": "94107"
          },
          "user_dropoff_notes": {
            "type": "string",
            "description": "Dropoff delivery notes for the user.",
            "default": "Leave in lobby",
            "example": "Leave in lobby"
          },
          "user_name": {
            "type": "string",
            "description": "User's name, so the store and/or driver know who to give the food to at dropoff.",
            "default": "Steve Jobs",
            "example": "Steve Jobs"
          },
          "user_email": {
            "type": "string",
            "description": "User's email, for the order confirmation, updates, and tracking link.",
            "default": "steve@apple.com",
            "example": "steve@apple.com"
          },
          "user_phone": {
            "type": "integer",
            "description": "User's phone number, so the store and/or driver know who to call for pickup or delivery. Must include country code.",
            "default": 14044442058,
            "example": 14044442058
          },
          "user_id": {
            "type": "string",
            "description": "Unique User ID for the API customer's platform.",
            "default": "7B36A9CF",
            "example": "7B36A9CF"
          },
          "disable_sms": {
            "type": "boolean",
            "description": "Whether to send the user order status updates via SMS.",
            "default": false,
            "example": false
          },
          "email_receipt_specifications": {
            "description": "Set of optional configurations used to modify email reciept",
            "allOf": [
              {
                "properties": {
                  "prices_marked": {
                    "type": "boolean",
                    "description": "If `true`, the price(s) in the email receipt will reflect the amount(s) specified via the `product_marked_price` and `marked_price` input parameters. If `charge_user` is `true`, the total charged will also reflect these amount(s).",
                    "default": false,
                    "example": false
                  },
                  "added_fee": {
                    "description": "Your added service fee. Any added fees will be reflected in the email receipt and included in the total charged when `charger_user` is `true`.",
                    "allOf": [
                      {
                        "properties": {
                          "added_fee_flat": {
                            "type": "integer",
                            "description": "Flat fee added by API client, in cents.",
                            "default": 0,
                            "example": 100
                          },
                          "added_fee_percent": {
                            "type": "integer",
                            "description": "Percent fee added by API client, range [0-100].",
                            "default": 0,
                            "example": 50
                          },
                          "is_added_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether API client added fee is taxable.",
                            "example": false
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "unify_service_fee": {
                    "type": "boolean",
                    "description": "Whether to combine the underlying service's service fee and your `added_fee` in one line item in the email receipt.",
                    "default": false,
                    "example": false
                  },
                  "misc_fees": {
                    "type": "array",
                    "description": "List of miscellaneous fees or discounts to display in the email receipt.",
                    "example": [
                      {
                        "fee_name": "Chef tip",
                        "fee_amount": 200
                      }
                    ],
                    "items": {
                      "required": [
                        "fee_amount",
                        "fee_name"
                      ],
                      "properties": {
                        "fee_name": {
                          "type": "string",
                          "description": "Name of the fee"
                        },
                        "fee_amount": {
                          "type": "integer",
                          "description": "The fee amount, in cents"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "disable_email": {
                    "type": "boolean",
                    "description": "Whether to send the user an email receipt.",
                    "default": false,
                    "example": false
                  }
                },
                "type": "object"
              }
            ]
          },
          "customer_order_id": {
            "type": "string",
            "description": "The self provided order id to attach to this order. This will be returned in the response from [Get Orders](https://docs.mealme.ai/reference/get_account_orders) when looking up an order.",
            "example": "ABC123"
          },
          "autofill_selected_options": {
            "type": "boolean",
            "description": "Whether to automatically select the default quantity for all options and fulfill all customization requirements.",
            "default": false,
            "example": false
          },
          "store_id": {
            "type": "string",
            "description": "The ID of the cart's store.",
            "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
          },
          "cart_id": {
            "type": "string",
            "description": "The ID of the cart.",
            "example": "-NPBY2Msvi_c_0GgvKr8"
          }
        },
        "type": "object"
      },
      "List_Carts_Output": {
        "required": [
          "carts"
        ],
        "properties": {
          "carts": {
            "type": "array",
            "description": "List of carts.",
            "example": [
              {
                "items": [
                  {
                    "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                    "selected_options": [
                      {
                        "option_id": "gAAAAAAAAAAAvcAsFofXR7XlzNv5B6-g-rAwJFDta7zt94Yg9eLLrwjlri1BholqW5kmJdCjTdOx-onRBaLrkLH0gJyALVdHPQ3RrgwdzKixuyBDcl2pcC3Yw7WydclLYPdeZoFu7k9hzaSuKxC0RiYH9cUghhNRB6OaBmEWSRIBY_IsFT8uJ0DtFc1v9wF-K0OmBQ6QLrV1dT3fYTTtgnWNrrjZBLL2P1N3d77_CJAlvWNyvnksU2srG3rxM1GuZeN_tmvUQ0cz4NLdq8j8ZTfI8p0ILJ1dyE24krn5_rfalZvV33AylZ5TIHbh5LG6u-QY_NERjzUHK1uLUyjKYgGsq22wM4-uSGi1XTLqN7NngiGl8TQFsrh7r60XiBvB_dl0TN6sUawnDhbc3OLo6QvFWMG0-5ZhWaklnVXP59__N1WE9Jgze9jBfd30KgCNM76hxVCu5Y0seNvrLbDxAvaeW1Cqf37JNb1yxqvfVSI7Y92FnelFAa5OdPTOXdvXtSpGlH8biIvihF-ZTMUpfoGOLD2vF5tQwlImLG0V64l1TpIobps8GxoYChCknaUjGJqJ6H6lN3sHeCntpUd09hDpnlEv2yxRv1ocXmTQwuHXuI7NiZ1pmUpbrktD8iBNgmkIiOFPVqE8",
                        "quantity": 1
                      }
                    ],
                    "notes": "No whipped cream."
                  },
                  {
                    "product_id": "gAAAAABjG7vcilemNMYoldpPlDj4EoX3i0Z2SD02sdIfwANAnRm7inPVS7qqUbRMKZSqsYk_PEbZA6fZ1ek9e50iyhN6YqwoZGL16oC942H9gZ5Kxx6D0nUQXZbiWmrvzq1bjYlu01PTWhJV_RDOF-3iSit3wKQoxDOrguqoEk7jHqRMXEd7pR7IUk01-KaIGVX2YZfELRKLwIJHmdVu1elgRu-7msIiWITDU5VmjeZLo4Zx_D6p4in9T5aecFYowlXj9hhq42J1SpFJynrl06Tw7r8uA04ClKkSBGrSRVyjeGVIHq_0OZQ1cDV5hLfdcn8CUn_duwmjZYcfI5phC_ILtEnS2-l1e9_bcyonB_WRzyQVz_nyFk5ZkUDp9QHZZeCUQb2D_8AW7F9Ly76g0-RJctvXa1SKe9dNGjDFDngvOjr20XgI6Blgr3kwl67K-R7hohZcHLJN0jw-jnUg9iaZA4rJP5NU9cZP5kAEkVMCLK8jKQ7ePxwraG20p6HFYfjZ2MYGPwACtBcpYcxSLuycbSnedWCzL0koFj7uEKfcP8fdJQq0lNa8QjmFYTnoHpQaZTYdxVpJkJBTTg8Xk5tXUYdcnfImU6kO9CXjAIFxU6KXsftphxrNc9dalLxGEBJxYOOQGhROvsrk6S2ECfFwfSIW9nCaBbnw97OOJm91orncP2F1cAprQngbFzrEnKywYeB2E_dRgPXN4KsIEvhXtivA0_DnsSZq30GlO_U6j2Fkuv4KQUHr--XPxzjjeWwYRco1oet-0zbJQwOfHKfiWD9rNxVIQpHiSCmrV4IloldnKoPPY1s=",
                    "selected_options": [],
                    "notes": ""
                  }
                ],
                "pickup": false,
                "driver_tip_cents": 100,
                "user_latitude": 37.7786357,
                "user_longitude": -122.3918135,
                "user_street_num": "188",
                "user_street_name": "King Street",
                "user_apt_num": "108",
                "user_city": "San Francisco",
                "user_state": "CA",
                "user_country": "US",
                "user_zipcode": "94107",
                "user_dropoff_notes": "Leave in lobby",
                "user_name": "Steve Jobs",
                "user_email": "steve@apple.com",
                "user_phone": 14044442058,
                "user_id": "7B36A9CF",
                "disable_sms": false,
                "email_receipt_specifications": {
                  "prices_marked": false,
                  "added_fee": {
                    "added_fee_flat": 100,
                    "added_fee_percent": 50,
                    "is_added_fee_taxable": false
                  },
                  "unify_service_fee": false,
                  "misc_fees": [
                    {
                      "fee_name": "Chef tip",
                      "fee_amount": 200
                    }
                  ],
                  "disable_email": false
                },
                "customer_order_id": "ABC123",
                "autofill_selected_options": false
              }
            ],
            "items": {
              "required": [
                "cart_id",
                "items",
                "pickup",
                "user_id"
              ],
              "properties": {
                "items": {
                  "type": "array",
                  "description": "List of cart items.",
                  "example": [
                    {
                      "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                      "notes": "No whipped cream."
                    }
                  ],
                  "items": {
                    "required": [
                      "product_id"
                    ],
                    "properties": {
                      "product_id": {
                        "type": "string",
                        "description": "The product's ID."
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                      },
                      "product_marked_price": {
                        "type": "integer",
                        "description": "The self-provided marked price (in cents) to be used in the email receipt."
                      },
                      "selected_options": {
                        "type": "array",
                        "description": "The list of selected options for the product.",
                        "items": {
                          "required": [
                            "option_id",
                            "quantity"
                          ],
                          "properties": {
                            "option_id": {
                              "type": "string",
                              "description": "Option ID"
                            },
                            "quantity": {
                              "type": "integer",
                              "description": "The option quantity (must be greater than 0)"
                            },
                            "marked_price": {
                              "type": "integer",
                              "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                            }
                          },
                          "type": "object"
                        }
                      },
                      "notes": {
                        "type": "string",
                        "description": "The product notes for the store."
                      }
                    },
                    "type": "object"
                  }
                },
                "pickup": {
                  "type": "boolean",
                  "description": "Whether the order is for pickup.",
                  "default": false,
                  "example": false
                },
                "driver_tip_cents": {
                  "type": "integer",
                  "description": "The tip for the driver, in cents.",
                  "default": 100,
                  "example": 100
                },
                "user_latitude": {
                  "type": "number",
                  "description": "The latitude of the user.",
                  "default": 37.7786357,
                  "example": 37.7786357
                },
                "user_longitude": {
                  "type": "number",
                  "description": "The longitude of the user.",
                  "default": -122.3918135,
                  "example": -122.3918135
                },
                "user_street_num": {
                  "type": "string",
                  "description": "Street number of the user.",
                  "default": "188",
                  "example": "188"
                },
                "user_street_name": {
                  "type": "string",
                  "description": "Street name of the user.",
                  "default": "King Street",
                  "example": "King Street"
                },
                "user_apt_num": {
                  "type": "string",
                  "description": "Apartment number of the user",
                  "example": "108"
                },
                "user_city": {
                  "type": "string",
                  "description": "City of the user.",
                  "default": "San Francisco",
                  "example": "San Francisco"
                },
                "user_state": {
                  "type": "string",
                  "description": "State of the user.",
                  "default": "CA",
                  "example": "CA"
                },
                "user_country": {
                  "type": "string",
                  "description": "Country of the user. Can be `US` or `CA`.",
                  "default": "US",
                  "example": "US"
                },
                "user_zipcode": {
                  "type": "string",
                  "description": "Zipcode of the user.",
                  "default": "94107",
                  "example": "94107"
                },
                "user_dropoff_notes": {
                  "type": "string",
                  "description": "Dropoff delivery notes for the user.",
                  "default": "Leave in lobby",
                  "example": "Leave in lobby"
                },
                "user_name": {
                  "type": "string",
                  "description": "User's name, so the store and/or driver know who to give the food to at dropoff.",
                  "default": "Steve Jobs",
                  "example": "Steve Jobs"
                },
                "user_email": {
                  "type": "string",
                  "description": "User's email, for the order confirmation, updates, and tracking link.",
                  "default": "steve@apple.com",
                  "example": "steve@apple.com"
                },
                "user_phone": {
                  "type": "integer",
                  "description": "User's phone number, so the store and/or driver know who to call for pickup or delivery. Must include country code.",
                  "default": 14044442058,
                  "example": 14044442058
                },
                "user_id": {
                  "type": "string",
                  "description": "Unique User ID for the API customer's platform.",
                  "default": "7B36A9CF",
                  "example": "7B36A9CF"
                },
                "disable_sms": {
                  "type": "boolean",
                  "description": "Whether to send the user order status updates via SMS.",
                  "default": false,
                  "example": false
                },
                "email_receipt_specifications": {
                  "description": "Set of optional configurations used to modify email reciept",
                  "allOf": [
                    {
                      "properties": {
                        "prices_marked": {
                          "type": "boolean",
                          "description": "If `true`, the price(s) in the email receipt will reflect the amount(s) specified via the `product_marked_price` and `marked_price` input parameters. If `charge_user` is `true`, the total charged will also reflect these amount(s).",
                          "default": false,
                          "example": false
                        },
                        "added_fee": {
                          "description": "Your added service fee. Any added fees will be reflected in the email receipt and included in the total charged when `charger_user` is `true`.",
                          "allOf": [
                            {
                              "properties": {
                                "added_fee_flat": {
                                  "type": "integer",
                                  "description": "Flat fee added by API client, in cents.",
                                  "default": 0,
                                  "example": 100
                                },
                                "added_fee_percent": {
                                  "type": "integer",
                                  "description": "Percent fee added by API client, range [0-100].",
                                  "default": 0,
                                  "example": 50
                                },
                                "is_added_fee_taxable": {
                                  "type": "boolean",
                                  "description": "Whether API client added fee is taxable.",
                                  "example": false
                                }
                              },
                              "type": "object"
                            }
                          ]
                        },
                        "unify_service_fee": {
                          "type": "boolean",
                          "description": "Whether to combine the underlying service's service fee and your `added_fee` in one line item in the email receipt.",
                          "default": false,
                          "example": false
                        },
                        "misc_fees": {
                          "type": "array",
                          "description": "List of miscellaneous fees or discounts to display in the email receipt.",
                          "example": [
                            {
                              "fee_name": "Chef tip",
                              "fee_amount": 200
                            }
                          ],
                          "items": {
                            "required": [
                              "fee_amount",
                              "fee_name"
                            ],
                            "properties": {
                              "fee_name": {
                                "type": "string",
                                "description": "Name of the fee"
                              },
                              "fee_amount": {
                                "type": "integer",
                                "description": "The fee amount, in cents"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "disable_email": {
                          "type": "boolean",
                          "description": "Whether to send the user an email receipt.",
                          "default": false,
                          "example": false
                        }
                      },
                      "type": "object"
                    }
                  ]
                },
                "customer_order_id": {
                  "type": "string",
                  "description": "The self provided order id to attach to this order. This will be returned in the response from [Get Orders](https://docs.mealme.ai/reference/get_account_orders) when looking up an order.",
                  "example": "ABC123"
                },
                "autofill_selected_options": {
                  "type": "boolean",
                  "description": "Whether to automatically select the default quantity for all options and fulfill all customization requirements.",
                  "default": false,
                  "example": false
                },
                "store_id": {
                  "type": "string",
                  "description": "The ID of the cart's store.",
                  "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
                },
                "cart_id": {
                  "type": "string",
                  "description": "The ID of the cart.",
                  "example": "-NPBY2Msvi_c_0GgvKr8"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Add_to_Cart_Input": {
        "required": [
          "cart_id",
          "items"
        ],
        "properties": {
          "cart_id": {
            "type": "string",
            "description": "The ID of the cart to add item(s) to.",
            "default": "",
            "example": "-N8vZEd-UnW_gZu6c4iO"
          },
          "items": {
            "type": "array",
            "description": "List of items to add to a cart.",
            "default": [
              {
                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                "notes": "No whipped cream."
              }
            ],
            "example": [
              {
                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                "notes": "No whipped cream."
              }
            ],
            "items": {
              "required": [
                "product_id"
              ],
              "properties": {
                "product_id": {
                  "type": "string",
                  "description": "The product's ID."
                },
                "quantity": {
                  "type": "integer",
                  "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                },
                "product_marked_price": {
                  "type": "integer",
                  "description": "The self-provided marked price (in cents) to be used in the email receipt."
                },
                "selected_options": {
                  "type": "array",
                  "description": "The list of selected options for the product.",
                  "items": {
                    "required": [
                      "option_id",
                      "quantity"
                    ],
                    "properties": {
                      "option_id": {
                        "type": "string",
                        "description": "Option ID"
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "The option quantity (must be greater than 0)"
                      },
                      "marked_price": {
                        "type": "integer",
                        "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                      }
                    },
                    "type": "object"
                  }
                },
                "notes": {
                  "type": "string",
                  "description": "The product notes for the store."
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Add_to_Cart_Output": {
        "required": [
          "cart_id",
          "items",
          "pickup",
          "user_id"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "List of cart items.",
            "default": [
              {
                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                "notes": "No whipped cream."
              }
            ],
            "example": [
              {
                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                "notes": "No whipped cream."
              }
            ],
            "items": {
              "required": [
                "product_id"
              ],
              "properties": {
                "product_id": {
                  "type": "string",
                  "description": "The product's ID."
                },
                "quantity": {
                  "type": "integer",
                  "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                },
                "product_marked_price": {
                  "type": "integer",
                  "description": "The self-provided marked price (in cents) to be used in the email receipt."
                },
                "selected_options": {
                  "type": "array",
                  "description": "The list of selected options for the product.",
                  "items": {
                    "required": [
                      "option_id",
                      "quantity"
                    ],
                    "properties": {
                      "option_id": {
                        "type": "string",
                        "description": "Option ID"
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "The option quantity (must be greater than 0)"
                      },
                      "marked_price": {
                        "type": "integer",
                        "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                      }
                    },
                    "type": "object"
                  }
                },
                "notes": {
                  "type": "string",
                  "description": "The product notes for the store."
                }
              },
              "type": "object"
            }
          },
          "pickup": {
            "type": "boolean",
            "description": "Whether the order is for pickup.",
            "default": false,
            "example": false
          },
          "driver_tip_cents": {
            "type": "integer",
            "description": "The tip for the driver, in cents.",
            "default": 100,
            "example": 100
          },
          "user_latitude": {
            "type": "number",
            "description": "The latitude of the user.",
            "default": 37.7786357,
            "example": 37.7786357
          },
          "user_longitude": {
            "type": "number",
            "description": "The longitude of the user.",
            "default": -122.3918135,
            "example": -122.3918135
          },
          "user_street_num": {
            "type": "string",
            "description": "Street number of the user.",
            "default": "188",
            "example": "188"
          },
          "user_street_name": {
            "type": "string",
            "description": "Street name of the user.",
            "default": "King Street",
            "example": "King Street"
          },
          "user_apt_num": {
            "type": "string",
            "description": "Apartment number of the user",
            "example": "108"
          },
          "user_city": {
            "type": "string",
            "description": "City of the user.",
            "default": "San Francisco",
            "example": "San Francisco"
          },
          "user_state": {
            "type": "string",
            "description": "State of the user.",
            "default": "CA",
            "example": "CA"
          },
          "user_country": {
            "type": "string",
            "description": "Country of the user. Can be `US` or `CA`.",
            "default": "US",
            "example": "US"
          },
          "user_zipcode": {
            "type": "string",
            "description": "Zipcode of the user.",
            "default": "94107",
            "example": "94107"
          },
          "user_dropoff_notes": {
            "type": "string",
            "description": "Dropoff delivery notes for the user.",
            "default": "Leave in lobby",
            "example": "Leave in lobby"
          },
          "user_name": {
            "type": "string",
            "description": "User's name, so the store and/or driver know who to give the food to at dropoff.",
            "default": "Steve Jobs",
            "example": "Steve Jobs"
          },
          "user_email": {
            "type": "string",
            "description": "User's email, for the order confirmation, updates, and tracking link.",
            "default": "steve@apple.com",
            "example": "steve@apple.com"
          },
          "user_phone": {
            "type": "integer",
            "description": "User's phone number, so the store and/or driver know who to call for pickup or delivery. Must include country code.",
            "default": 14044442058,
            "example": 14044442058
          },
          "user_id": {
            "type": "string",
            "description": "Unique User ID for the API customer's platform.",
            "default": "7B36A9CF",
            "example": "7B36A9CF"
          },
          "disable_sms": {
            "type": "boolean",
            "description": "Whether to send the user order status updates via SMS.",
            "default": false,
            "example": false
          },
          "email_receipt_specifications": {
            "description": "Set of optional configurations used to modify email reciept",
            "allOf": [
              {
                "properties": {
                  "prices_marked": {
                    "type": "boolean",
                    "description": "If `true`, the price(s) in the email receipt will reflect the amount(s) specified via the `product_marked_price` and `marked_price` input parameters. If `charge_user` is `true`, the total charged will also reflect these amount(s).",
                    "default": false,
                    "example": false
                  },
                  "added_fee": {
                    "description": "Your added service fee. Any added fees will be reflected in the email receipt and included in the total charged when `charger_user` is `true`.",
                    "allOf": [
                      {
                        "properties": {
                          "added_fee_flat": {
                            "type": "integer",
                            "description": "Flat fee added by API client, in cents.",
                            "default": 0,
                            "example": 100
                          },
                          "added_fee_percent": {
                            "type": "integer",
                            "description": "Percent fee added by API client, range [0-100].",
                            "default": 0,
                            "example": 50
                          },
                          "is_added_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether API client added fee is taxable.",
                            "example": false
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "unify_service_fee": {
                    "type": "boolean",
                    "description": "Whether to combine the underlying service's service fee and your `added_fee` in one line item in the email receipt.",
                    "default": false,
                    "example": false
                  },
                  "misc_fees": {
                    "type": "array",
                    "description": "List of miscellaneous fees or discounts to display in the email receipt.",
                    "example": [
                      {
                        "fee_name": "Chef tip",
                        "fee_amount": 200
                      }
                    ],
                    "items": {
                      "required": [
                        "fee_amount",
                        "fee_name"
                      ],
                      "properties": {
                        "fee_name": {
                          "type": "string",
                          "description": "Name of the fee"
                        },
                        "fee_amount": {
                          "type": "integer",
                          "description": "The fee amount, in cents"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "disable_email": {
                    "type": "boolean",
                    "description": "Whether to send the user an email receipt.",
                    "default": false,
                    "example": false
                  }
                },
                "type": "object"
              }
            ]
          },
          "customer_order_id": {
            "type": "string",
            "description": "The self provided order id to attach to this order. This will be returned in the response from [Get Orders](https://docs.mealme.ai/reference/get_account_orders) when looking up an order.",
            "example": "ABC123"
          },
          "autofill_selected_options": {
            "type": "boolean",
            "description": "Whether to automatically select the default quantity for all options and fulfill all customization requirements.",
            "default": false,
            "example": false
          },
          "store_id": {
            "type": "string",
            "description": "The ID of the cart's store.",
            "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
          },
          "cart_id": {
            "type": "string",
            "description": "The ID of the cart.",
            "example": "-NPBY2Msvi_c_0GgvKr8"
          }
        },
        "type": "object"
      },
      "Remove_from_Cart_Input": {
        "required": [
          "cart_id",
          "items"
        ],
        "properties": {
          "cart_id": {
            "type": "string",
            "description": "The ID of the cart to remove item(s) from.",
            "default": "",
            "example": "-N8vZEd-UnW_gZu6c4iO"
          },
          "items": {
            "type": "array",
            "description": "List of items to remove from a cart.",
            "default": [
              {
                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                "notes": "No whipped cream."
              }
            ],
            "example": [
              {
                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                "notes": "No whipped cream."
              }
            ],
            "items": {
              "required": [
                "product_id"
              ],
              "properties": {
                "product_id": {
                  "type": "string",
                  "description": "The product's ID."
                },
                "quantity": {
                  "type": "integer",
                  "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                },
                "product_marked_price": {
                  "type": "integer",
                  "description": "The self-provided marked price (in cents) to be used in the email receipt."
                },
                "selected_options": {
                  "type": "array",
                  "description": "The list of selected options for the product.",
                  "items": {
                    "required": [
                      "option_id",
                      "quantity"
                    ],
                    "properties": {
                      "option_id": {
                        "type": "string",
                        "description": "Option ID"
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "The option quantity (must be greater than 0)"
                      },
                      "marked_price": {
                        "type": "integer",
                        "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                      }
                    },
                    "type": "object"
                  }
                },
                "notes": {
                  "type": "string",
                  "description": "The product notes for the store."
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Remove_from_Cart_Output": {
        "required": [
          "cart_id",
          "items",
          "pickup",
          "user_id"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "List of cart items.",
            "default": [
              {
                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                "notes": "No whipped cream."
              }
            ],
            "example": [
              {
                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                "notes": "No whipped cream."
              }
            ],
            "items": {
              "required": [
                "product_id"
              ],
              "properties": {
                "product_id": {
                  "type": "string",
                  "description": "The product's ID."
                },
                "quantity": {
                  "type": "integer",
                  "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                },
                "product_marked_price": {
                  "type": "integer",
                  "description": "The self-provided marked price (in cents) to be used in the email receipt."
                },
                "selected_options": {
                  "type": "array",
                  "description": "The list of selected options for the product.",
                  "items": {
                    "required": [
                      "option_id",
                      "quantity"
                    ],
                    "properties": {
                      "option_id": {
                        "type": "string",
                        "description": "Option ID"
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "The option quantity (must be greater than 0)"
                      },
                      "marked_price": {
                        "type": "integer",
                        "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                      }
                    },
                    "type": "object"
                  }
                },
                "notes": {
                  "type": "string",
                  "description": "The product notes for the store."
                }
              },
              "type": "object"
            }
          },
          "pickup": {
            "type": "boolean",
            "description": "Whether the order is for pickup.",
            "default": false,
            "example": false
          },
          "driver_tip_cents": {
            "type": "integer",
            "description": "The tip for the driver, in cents.",
            "default": 100,
            "example": 100
          },
          "user_latitude": {
            "type": "number",
            "description": "The latitude of the user.",
            "default": 37.7786357,
            "example": 37.7786357
          },
          "user_longitude": {
            "type": "number",
            "description": "The longitude of the user.",
            "default": -122.3918135,
            "example": -122.3918135
          },
          "user_street_num": {
            "type": "string",
            "description": "Street number of the user.",
            "default": "188",
            "example": "188"
          },
          "user_street_name": {
            "type": "string",
            "description": "Street name of the user.",
            "default": "King Street",
            "example": "King Street"
          },
          "user_apt_num": {
            "type": "string",
            "description": "Apartment number of the user",
            "example": "108"
          },
          "user_city": {
            "type": "string",
            "description": "City of the user.",
            "default": "San Francisco",
            "example": "San Francisco"
          },
          "user_state": {
            "type": "string",
            "description": "State of the user.",
            "default": "CA",
            "example": "CA"
          },
          "user_country": {
            "type": "string",
            "description": "Country of the user. Can be `US` or `CA`.",
            "default": "US",
            "example": "US"
          },
          "user_zipcode": {
            "type": "string",
            "description": "Zipcode of the user.",
            "default": "94107",
            "example": "94107"
          },
          "user_dropoff_notes": {
            "type": "string",
            "description": "Dropoff delivery notes for the user.",
            "default": "Leave in lobby",
            "example": "Leave in lobby"
          },
          "user_name": {
            "type": "string",
            "description": "User's name, so the store and/or driver know who to give the food to at dropoff.",
            "default": "Steve Jobs",
            "example": "Steve Jobs"
          },
          "user_email": {
            "type": "string",
            "description": "User's email, for the order confirmation, updates, and tracking link.",
            "default": "steve@apple.com",
            "example": "steve@apple.com"
          },
          "user_phone": {
            "type": "integer",
            "description": "User's phone number, so the store and/or driver know who to call for pickup or delivery. Must include country code.",
            "default": 14044442058,
            "example": 14044442058
          },
          "user_id": {
            "type": "string",
            "description": "Unique User ID for the API customer's platform.",
            "default": "7B36A9CF",
            "example": "7B36A9CF"
          },
          "disable_sms": {
            "type": "boolean",
            "description": "Whether to send the user order status updates via SMS.",
            "default": false,
            "example": false
          },
          "email_receipt_specifications": {
            "description": "Set of optional configurations used to modify email reciept",
            "allOf": [
              {
                "properties": {
                  "prices_marked": {
                    "type": "boolean",
                    "description": "If `true`, the price(s) in the email receipt will reflect the amount(s) specified via the `product_marked_price` and `marked_price` input parameters. If `charge_user` is `true`, the total charged will also reflect these amount(s).",
                    "default": false,
                    "example": false
                  },
                  "added_fee": {
                    "description": "Your added service fee. Any added fees will be reflected in the email receipt and included in the total charged when `charger_user` is `true`.",
                    "allOf": [
                      {
                        "properties": {
                          "added_fee_flat": {
                            "type": "integer",
                            "description": "Flat fee added by API client, in cents.",
                            "default": 0,
                            "example": 100
                          },
                          "added_fee_percent": {
                            "type": "integer",
                            "description": "Percent fee added by API client, range [0-100].",
                            "default": 0,
                            "example": 50
                          },
                          "is_added_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether API client added fee is taxable.",
                            "example": false
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "unify_service_fee": {
                    "type": "boolean",
                    "description": "Whether to combine the underlying service's service fee and your `added_fee` in one line item in the email receipt.",
                    "default": false,
                    "example": false
                  },
                  "misc_fees": {
                    "type": "array",
                    "description": "List of miscellaneous fees or discounts to display in the email receipt.",
                    "example": [
                      {
                        "fee_name": "Chef tip",
                        "fee_amount": 200
                      }
                    ],
                    "items": {
                      "required": [
                        "fee_amount",
                        "fee_name"
                      ],
                      "properties": {
                        "fee_name": {
                          "type": "string",
                          "description": "Name of the fee"
                        },
                        "fee_amount": {
                          "type": "integer",
                          "description": "The fee amount, in cents"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "disable_email": {
                    "type": "boolean",
                    "description": "Whether to send the user an email receipt.",
                    "default": false,
                    "example": false
                  }
                },
                "type": "object"
              }
            ]
          },
          "customer_order_id": {
            "type": "string",
            "description": "The self provided order id to attach to this order. This will be returned in the response from [Get Orders](https://docs.mealme.ai/reference/get_account_orders) when looking up an order.",
            "example": "ABC123"
          },
          "autofill_selected_options": {
            "type": "boolean",
            "description": "Whether to automatically select the default quantity for all options and fulfill all customization requirements.",
            "default": false,
            "example": false
          },
          "store_id": {
            "type": "string",
            "description": "The ID of the cart's store.",
            "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
          },
          "cart_id": {
            "type": "string",
            "description": "The ID of the cart.",
            "example": "-NPBY2Msvi_c_0GgvKr8"
          }
        },
        "type": "object"
      },
      "Single_Order_History_Output": {
        "required": [
          "customer_order_id",
          "driver_tip_cents",
          "eta_timestamp",
          "favorited",
          "is_ready",
          "items",
          "pickup",
          "pickup_tip_cents",
          "realtime_tracking_available",
          "receipt_url",
          "refunded_amount",
          "status",
          "store_confirmed_timestamp",
          "timestamp",
          "total_with_tip",
          "tracking",
          "tracking_link",
          "user_city",
          "user_country",
          "user_email",
          "user_latitude",
          "user_longitude",
          "user_name",
          "user_phone",
          "user_state",
          "user_street_name",
          "user_street_num",
          "user_time_zone",
          "user_zipcode"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "List of cart items.",
            "example": [
              {
                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                "notes": "No whipped cream."
              }
            ],
            "items": {
              "required": [
                "product_id"
              ],
              "properties": {
                "product_id": {
                  "type": "string",
                  "description": "The product's ID."
                },
                "quantity": {
                  "type": "integer",
                  "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                },
                "product_marked_price": {
                  "type": "integer",
                  "description": "The self-provided marked price (in cents) to be used in the email receipt."
                },
                "selected_options": {
                  "type": "array",
                  "description": "The list of selected options for the product.",
                  "items": {
                    "required": [
                      "option_id",
                      "quantity"
                    ],
                    "properties": {
                      "option_id": {
                        "type": "string",
                        "description": "Option ID"
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "The option quantity (must be greater than 0)"
                      },
                      "marked_price": {
                        "type": "integer",
                        "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                      }
                    },
                    "type": "object"
                  }
                },
                "notes": {
                  "type": "string",
                  "description": "The product notes for the store."
                }
              },
              "type": "object"
            }
          },
          "pickup": {
            "type": "boolean",
            "description": "`true` for pickup quotes, `false` for delivery quotes.",
            "default": false,
            "example": false
          },
          "driver_tip_cents": {
            "type": "integer",
            "description": "The tip for the driver, in cents.",
            "example": 100
          },
          "pickup_tip_cents": {
            "type": "integer",
            "description": "The tip for the store, in cents.",
            "example": 100
          },
          "user_latitude": {
            "type": "number",
            "description": "The latitude of the user.",
            "example": 37.7786357
          },
          "user_longitude": {
            "type": "number",
            "description": "The longitude of the user.",
            "example": -122.3918135
          },
          "user_street_num": {
            "type": "string",
            "description": "Street number of the user.",
            "example": "188"
          },
          "user_street_name": {
            "type": "string",
            "description": "Street name of the user.",
            "example": "King Street"
          },
          "user_apt_num": {
            "type": "string",
            "description": "Apartment number of the user.",
            "example": ""
          },
          "user_city": {
            "type": "string",
            "description": "City of the user.",
            "example": "San Francisco"
          },
          "user_state": {
            "type": "string",
            "description": "State of the user.",
            "example": "CA"
          },
          "user_zipcode": {
            "type": "string",
            "description": "Zipcode of the user.",
            "example": "94107"
          },
          "user_country": {
            "type": "string",
            "description": "Country of the user.",
            "example": "US"
          },
          "user_time_zone": {
            "type": "string",
            "description": "Time Zone of the user.",
            "example": "America/Los_Angeles"
          },
          "user_dropoff_notes": {
            "type": "string",
            "description": "Dropoff delivery notes for the user. Not required for pickup.",
            "example": "Leave in lobby"
          },
          "user_name": {
            "type": "string",
            "description": "User's name, so the store and/or driver know who to give the food to at dropoff.",
            "example": "Will Said"
          },
          "user_email": {
            "type": "string",
            "description": "User's email, for the order confirmation, updates, and tracking link.",
            "example": "will@mealme.ai"
          },
          "user_phone": {
            "type": "integer",
            "description": "User's phone number, so the store and/or driver know who to call for pickup or delivery.",
            "example": 14044442058
          },
          "tracking_link": {
            "type": "string",
            "description": "Tracking link for the particular order.",
            "example": "https://mealme.cc/tracking?tracking_id=-Mn8_a0-R1ERnHlCQUZp"
          },
          "total_with_tip": {
            "type": "integer",
            "description": "Total with tips.",
            "example": 3380
          },
          "final_quote": {
            "description": "Final validated quote for the given products.",
            "example": {
              "id": "gAAAAABh6hxmfTtGA3vxjN-ZfyO55tnvcrAWVF3tCnWpWuRRcn9PQiE30TvrumkQ01jRJDmtpAGEhXQMEJ8BK_2HAkBB3qzi-K7ScyWikcBKaDWv7qdgO9y1dcV638PTer1ZGIypWDzrO_Q35LmDB5mgby8b1V0T82bFljxyrbjRH48swnM7IBCjEiA6_GC0Aj6PA0IfJ4HqTFY9aEQfI7brM_az3VhLK4IIQ59EWGftEKEpf2-a4R7mvf08M2PEY8MB5Qz8Pjwbvlu926JNvIVpx4Ckj_qJ6CIjbrEMDxqQLTrJFuYGAlU=",
              "store": "Seniore's Pizza",
              "store_address": "456 Haight St, San Francisco, CA, 94117, US",
              "quote": {
                "delivery_fee_cents": 0,
                "time_max": 30,
                "time_min": 20,
                "expected_time_of_arrival": "06:57 PM",
                "sales_tax_cents": 257,
                "service_fee_cents": 0,
                "small_order_fee_cents": 0,
                "subtotal": 3023,
                "total": 3280
              }
            },
            "allOf": [
              {
                "required": [
                  "added_fees",
                  "items",
                  "misc_fees",
                  "quote",
                  "quote_id",
                  "store",
                  "store_address",
                  "store_id",
                  "tip",
                  "total_with_tip"
                ],
                "properties": {
                  "store": {
                    "type": "string",
                    "description": "The name of the store where the order was placed",
                    "example": "Denny's"
                  },
                  "store_address": {
                    "type": "string",
                    "description": "The address of the store where the order was placed",
                    "example": "816 Mission St, San Francisco, CA, 94103, US"
                  },
                  "store_id": {
                    "type": "string",
                    "description": "The MealMe store ID",
                    "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
                  },
                  "quote_id": {
                    "type": "string",
                    "description": "The MealMe Quote ID",
                    "example": "gAAAAABihzvxA4pMVWefTSN3GFOL7b3CYG5yPIRnGUNnEu8oD72y0SiHcDkoloajAINb3pI4Kw6R5qR694t5fCXc8_DnvoB0_BeBlCZ_zJmelaZ4jWfcnF5ySNVt29YYobrl5PMQduRavTxgb5E2IvgZakNNbAzP9rYwyApbdaZ6n_RCwz09IlN2iOoqUlnNVL1WF8dDwqI6-XWMiA3XDI_A-k4QyVPZ0yMZDP_LuRzEnQOYIQ23CCyHHz2imKBP4ySAMNgeIKv0ynYV-a1ZfMC_MjFVyK_OHCds8KmiAM8RHZWt6-wR2m2xqMhKOg8NFWU5gWzYFVL_"
                  },
                  "quote": {
                    "description": "The final quote summary including subtotal, tax, time estimate, quote fees, etc.",
                    "allOf": [
                      {
                        "required": [
                          "delivery_fee_cents",
                          "delivery_time_max",
                          "delivery_time_min",
                          "expected_time_of_arrival",
                          "sales_tax_cents",
                          "scheduled",
                          "service_fee_cents",
                          "small_order_fee_cents",
                          "subtotal",
                          "total_without_tips"
                        ],
                        "properties": {
                          "subtotal": {
                            "type": "integer",
                            "description": "The subtotal of the cart",
                            "example": 1770
                          },
                          "delivery_fee_cents": {
                            "type": "integer",
                            "description": "The total delivery fee, in cents",
                            "example": 49
                          },
                          "service_fee_cents": {
                            "type": "integer",
                            "description": "The total service fee, in cents",
                            "example": 667
                          },
                          "small_order_fee_cents": {
                            "type": "integer",
                            "description": "The total small order fee, in cents",
                            "example": 0
                          },
                          "sales_tax_cents": {
                            "type": "integer",
                            "description": "The total sales tax, in cents",
                            "example": 142
                          },
                          "delivery_time_min": {
                            "type": "integer",
                            "description": "The minimum delivery time estimate, in minutes",
                            "example": 25
                          },
                          "delivery_time_max": {
                            "type": "integer",
                            "description": "The maximum delivery time estimate, in minutes",
                            "example": 40
                          },
                          "total_without_tips": {
                            "type": "integer",
                            "description": "The order amount excluding tips, in cents",
                            "example": 2628
                          },
                          "expected_time_of_arrival": {
                            "type": "string",
                            "description": "The expected time of arrival, in user's timezone",
                            "example": "09:20 PM"
                          },
                          "scheduled": {
                            "description": "The scheduled delivery window corresponding to input parameter `scheduled_id` passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3)",
                            "allOf": [
                              {
                                "required": [
                                  "delivery_fee",
                                  "maximum",
                                  "minimum"
                                ],
                                "properties": {
                                  "minimum": {
                                    "type": "integer",
                                    "description": "Timestamp (seconds since 1970)"
                                  },
                                  "maximum": {
                                    "type": "integer",
                                    "description": "Timestamp (seconds since 1970)"
                                  },
                                  "delivery_fee": {
                                    "description": "",
                                    "required": [
                                      "delivery_fee_flat",
                                      "delivery_fee_percent"
                                    ],
                                    "properties": {
                                      "delivery_fee_flat": {
                                        "type": "integer",
                                        "description": "Delivery fee amount in cents"
                                      },
                                      "delivery_fee_percent": {
                                        "type": "number",
                                        "description": "Delivery fee percentage"
                                      },
                                      "delivery_fee_taxable": {
                                        "type": "boolean",
                                        "description": "Whether the delivery fee is taxable or not"
                                      },
                                      "threshold_fees": {
                                        "type": "array",
                                        "description": "Threshold Fees, if they exist",
                                        "items": {
                                          "required": [
                                            "threshold_cents",
                                            "threshold_fee_cents"
                                          ],
                                          "properties": {
                                            "threshold_cents": {
                                              "type": "integer",
                                              "description": "Subtotal that enacts a specific fee"
                                            },
                                            "threshold_fee_cents": {
                                              "type": "integer",
                                              "description": "Flat delivery fee that will be charged for this threshold_cents"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "type": "object"
                              }
                            ]
                          },
                          "marked_subtotal": {
                            "type": "integer",
                            "description": "The subtotal of the cart including any provided marked prices, in cents",
                            "example": 2000
                          },
                          "marked_total_without_tips": {
                            "type": "integer",
                            "description": "The order amount excluding tips, and including any provided marked prices, in cents",
                            "example": 2800
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "items": {
                    "type": "array",
                    "description": "List of cart items",
                    "example": [
                      {
                        "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                        "notes": "No whipped cream."
                      }
                    ],
                    "items": {
                      "required": [
                        "product_id"
                      ],
                      "properties": {
                        "product_id": {
                          "type": "string",
                          "description": "The product's ID."
                        },
                        "quantity": {
                          "type": "integer",
                          "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                        },
                        "product_marked_price": {
                          "type": "integer",
                          "description": "The self-provided marked price (in cents) to be used in the email receipt."
                        },
                        "selected_options": {
                          "type": "array",
                          "description": "The list of selected options for the product.",
                          "items": {
                            "required": [
                              "option_id",
                              "quantity"
                            ],
                            "properties": {
                              "option_id": {
                                "type": "string",
                                "description": "Option ID"
                              },
                              "quantity": {
                                "type": "integer",
                                "description": "The option quantity (must be greater than 0)"
                              },
                              "marked_price": {
                                "type": "integer",
                                "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                              }
                            },
                            "type": "object"
                          }
                        },
                        "notes": {
                          "type": "string",
                          "description": "The product notes for the store."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "tip": {
                    "type": "integer",
                    "description": "The total tip amount, in cents",
                    "example": 100
                  },
                  "total_with_tip": {
                    "type": "integer",
                    "description": "The total order amount including tip, in cents",
                    "example": 40
                  },
                  "added_fees": {
                    "description": "The total added fees for the cart, computed using the input `added_fee`passed to [Create Order](https://docs.mealme.ai/reference/post_order_v3) or [](https://docs.mealme.ai/reference/post_courier_order)",
                    "example": 200,
                    "allOf": [
                      {
                        "required": [
                          "flat_fee_cents",
                          "is_fee_taxable",
                          "percent_fee",
                          "sales_tax_cents",
                          "total_fee_cents"
                        ],
                        "properties": {
                          "flat_fee_cents": {
                            "type": "integer",
                            "description": "The API client added flat fee amount, in cents",
                            "example": 100
                          },
                          "percent_fee": {
                            "type": "integer",
                            "description": "The API client added percent fee amount, in range 1-100",
                            "example": 50
                          },
                          "is_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether the API client added fee is taxable",
                            "example": false
                          },
                          "total_fee_cents": {
                            "type": "integer",
                            "description": "The API client total added fee amount, in cents",
                            "example": 985
                          },
                          "sales_tax_cents": {
                            "type": "integer",
                            "description": "The total sales tax amount charged for the API client added fee, in cents",
                            "example": 0
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "misc_fees": {
                    "type": "array",
                    "description": "The list of miscellaneous fees applied on the order.",
                    "example": [
                      {
                        "fee_name": "Chef tip",
                        "fee_amount": 200
                      }
                    ],
                    "items": {
                      "required": [
                        "fee_amount",
                        "fee_name"
                      ],
                      "properties": {
                        "fee_name": {
                          "type": "string",
                          "description": "Name of the fee"
                        },
                        "fee_amount": {
                          "type": "integer",
                          "description": "The fee amount, in cents"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "marked_total_with_tip": {
                    "type": "integer",
                    "description": "The total order amount including tip, and including any provided marked prices, in cents",
                    "example": 50
                  }
                },
                "type": "object"
              }
            ]
          },
          "eta_timestamp": {
            "type": "number",
            "description": "Expected time of arrival timestamp.",
            "example": 1650578850.31
          },
          "timestamp": {
            "type": "number",
            "description": "Order creation timestamp.",
            "example": 1650578800.31
          },
          "tracking": {
            "description": "Contains map coordinates, driver details, vehicle information.",
            "example": {
              "driver_latitude": 37.778574400295234,
              "driver_longitude": -122.39151731697541,
              "course": 225.5277862548828,
              "last_update_timestamp": 1646722410.22385,
              "completion_timestamp": 1646763375.141831,
              "vehicle_type": "car",
              "driver_name": "Gustavo",
              "driver_phone": 13124719334,
              "driver_photo_url": "https://cdn-img.mealme.ai/347fa4c596569c42e6acb0739b9484fdf6b18501/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f67682d70726f642d647269766572732d646174612f647269766572732f31623837346135612d373034622d343638622d626139392d3062656436616439656231642e706e67",
              "driver_rating": 0
            },
            "allOf": [
              {
                "required": [
                  "completion_timestamp",
                  "course",
                  "driver_latitude",
                  "driver_longitude",
                  "driver_name",
                  "driver_phone",
                  "driver_photo_url",
                  "driver_rating",
                  "dropoff_photo_url",
                  "last_update_timestamp",
                  "vehicle",
                  "vehicle_type"
                ],
                "properties": {
                  "driver_latitude": {
                    "type": "number",
                    "description": "The latitude of the driver",
                    "example": 37.778574400295234
                  },
                  "driver_longitude": {
                    "type": "number",
                    "description": "The longitude of the driver",
                    "example": -122.39151731697541
                  },
                  "course": {
                    "type": "number",
                    "description": "The course of the driver",
                    "example": 225.5277862548828
                  },
                  "last_update_timestamp": {
                    "type": "number",
                    "description": "The last time that tracking information was updated",
                    "example": 1646722410.22385
                  },
                  "completion_timestamp": {
                    "type": "number",
                    "description": "The timestamp of order completion",
                    "example": 1646763375.141831
                  },
                  "vehicle_type": {
                    "type": "string",
                    "description": "The type of vehicle of the driver",
                    "example": "car"
                  },
                  "driver_name": {
                    "type": "string",
                    "description": "The name of the driver",
                    "example": "Gustavo"
                  },
                  "driver_phone": {
                    "type": "integer",
                    "description": "The phone number of the driver",
                    "example": 13124719334
                  },
                  "driver_photo_url": {
                    "type": "string",
                    "description": "The photo of the driver",
                    "example": "https://cdn-img.mealme.ai/347fa4c596569c42e6acb0739b9484fdf6b18501/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f67682d70726f642d647269766572732d646174612f647269766572732f31623837346135612d373034622d343638622d626139392d3062656436616439656231642e706e67"
                  },
                  "driver_rating": {
                    "type": "integer",
                    "description": "The rating of the driver, range [1-5)",
                    "example": 5
                  },
                  "dropoff_photo_url": {
                    "type": "string",
                    "description": "The dropoff photo provided by the driver",
                    "example": "https://cdn-img.mealme.ai/7a58ee7d0dbf011ab4c723d105ae97d601aadccd/68747470733a2f2f636e2d67656f312e756265722e636f6d2f696d6167652d70726f632f726573697a652f656174732f666f726d61743d776562702f77696474683d313038302f6865696768743d302f7175616c6974793d39302f7372636236343d6148523063484d364c793930596e4d746333526864476c6a4c6e56695a584975593239744c334279623251765a6d6c735a5331316347787659575176645842736232466b6379396a62335679615756794c32786c59585a6c4c5746304c575276623349764d6d51325a44466b5a6d55744e445577595330304f57497a4c5749785a574d744e7a55335a544a6a4d5745344e6a67354c6d70775a7a39516232787059336b395a586c4b56475248526a4261567a4673596d3552615539736444644a62457073597a49354d574e74546d784a616d3970595568534d474e4954545a4d65546b775757354e64474d7a556d686b5232787154473557615670595358565a4d6a6c3054444e436557497955585a616257787a576c4d784d574e4865485a5a563146325a46684363324979526d746a65546c71596a4e5765574658566e6c4d4d6e68735756686162457858526a424d56314a32596a4e4a646b317455544a6152455a72576d3156644535455658645a557a41775431644a656b78585358686156303130546e70564d317055536d704e56305530546d706e4e5578746348646165556c7a5357744f646d4a74556e426b52327832596d6c4a4e6d5635536b565a57464a7356456457656d4d78556d395a567a52705432357a615646575a46525061315a33596a4a4f62315a486248526155306b325456526a654535365454524f52466c3454544d784f575a574d546b6d55326c6e626d463064584a6c5057707a5933524364454654593156505a484e4355586c71526e5a4e62444a7351565a754e55317a4e544a6a55544e584d466c524e6a465655326c34626c646e52444e4d4d6c42696444686f5648354c5556427063446b32556c70464d487042536e4e7564476c4f513045345a47567951326845517a4232626a644759336b3262326c494d554e70534467326158566a5758564a6148553064444974536a5a6b5430356c5332644d5a6b464353486b304f574d34636a46764e485a59627a64515256684a534538774e464a51596d677762556f784c584978563151785633424e513246426355743464464e75515852355356677a64453877576e46795a47745951554e4756455935516d3830556c647a576c45334e5538744e314174616b465262574a584e453958656d4a695447557851566779666c64355958593562307856526d354a56587033576b316d64474e7364566b77666b5a7651305255645578724d585a4861554a2b5a46425459575131565331734c57786a6155467a51324a344f544533636a68554e464e51636a52325546466f596e46564f4770725754524959793152564552344c5659314e30563055306f78614664515348356d4f45704462326858576b5179515639664a6b746c6553315159576c794c556c6b505546515330464b4d304a4d565668485531564556454e4c556b7052"
                  },
                  "vehicle": {
                    "type": "string",
                    "description": "The driver's vehicle details",
                    "example": "Honda Accord"
                  }
                },
                "type": "object"
              }
            ]
          },
          "status": {
            "type": "string",
            "description": "Status of the order.",
            "example": "in_progress"
          },
          "favorited": {
            "type": "boolean",
            "description": "Whether the order is favorited.",
            "default": false,
            "example": false
          },
          "is_ready": {
            "type": "boolean",
            "description": "Whether the order is ready for pickup.",
            "default": false,
            "example": false
          },
          "customer_order_id": {
            "type": "string",
            "description": "The external order ID provided to [Create Order](https://docs.mealme.ai/reference/post_order_v3).",
            "example": "ABC123"
          },
          "realtime_tracking_available": {
            "type": "boolean",
            "description": "Whether realtime tracking is available for this order.",
            "default": false,
            "example": false
          },
          "profit": {
            "type": "integer",
            "description": "The total profit from this order, including any markup and/or additional fees applied, in cents.",
            "example": 1000
          },
          "promotion": {
            "description": "All promotions related info for the order",
            "example": {
              "code": "GRUB7OFF",
              "description": "$7 OFF",
              "discount_flat": 700,
              "discount_percent": 0,
              "discount_total": 700
            },
            "allOf": [
              {
                "required": [
                  "code",
                  "description",
                  "discount_flat",
                  "discount_percent",
                  "discount_total"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "The promo code applied on the order.",
                    "example": "GRUB7OFF"
                  },
                  "description": {
                    "type": "string",
                    "description": "The promotion's description.",
                    "example": "$7 off first order"
                  },
                  "discount_flat": {
                    "type": "integer",
                    "description": "The promotion's flat discounted amount, in cents.",
                    "example": 700
                  },
                  "discount_percent": {
                    "type": "integer",
                    "description": "The promotion's percent discounted amount, with range [0-100].",
                    "example": 10
                  },
                  "discount_total": {
                    "type": "integer",
                    "description": "The total discounted amount, in cents. If the order value is $10 with the a 10 percent discount, the discount total would 100 ($1).",
                    "example": 100
                  }
                },
                "type": "object"
              }
            ]
          },
          "receipt_url": {
            "type": "string",
            "description": "The order receipt URl. This will only be available if MealMe processed the payment for the order.",
            "example": "https://pay.stripe.com/receipts/payment/123456789"
          },
          "refunded_amount": {
            "type": "integer",
            "description": "The total amount refunded, in cents.",
            "example": 500
          },
          "store_confirmed_timestamp": {
            "type": "number",
            "description": "The time the store confirmed the order, represented by a unix timestamp.",
            "example": 1650578800.31
          },
          "pickup_instructions": {
            "type": "string",
            "description": "The pickup instructions for pickup orders.",
            "example": "Ask for the pickup order for Steve Jobs."
          },
          "pickup_order_number": {
            "type": "string",
            "description": "The pickup order number. The availability of this property varies across different stores.",
            "example": "3456"
          },
          "metadata": {
            "description": "The set of key-value pairs provided when creating the order with '/order/order`.",
            "example": {
              "Promo Code": "ABC123"
            },
            "allOf": [
              {
                "properties": {
                  "*": {
                    "type": "string",
                    "description": "Any metadata value",
                    "example": "ABC123"
                  }
                },
                "type": "object"
              }
            ]
          }
        },
        "type": "object"
      },
      "Tracking_details_of_the_order.": {
        "required": [
          "completion_timestamp",
          "course",
          "driver_latitude",
          "driver_longitude",
          "driver_name",
          "driver_phone",
          "driver_photo_url",
          "driver_rating",
          "dropoff_photo_url",
          "last_update_timestamp",
          "vehicle",
          "vehicle_type"
        ],
        "properties": {
          "driver_latitude": {
            "type": "number",
            "description": "The latitude of the driver",
            "example": 37.778574400295234
          },
          "driver_longitude": {
            "type": "number",
            "description": "The longitude of the driver",
            "example": -122.39151731697541
          },
          "course": {
            "type": "number",
            "description": "The course of the driver",
            "example": 225.5277862548828
          },
          "last_update_timestamp": {
            "type": "number",
            "description": "The last time that tracking information was updated",
            "example": 1646722410.22385
          },
          "completion_timestamp": {
            "type": "number",
            "description": "The timestamp of order completion",
            "example": 1646763375.141831
          },
          "vehicle_type": {
            "type": "string",
            "description": "The type of vehicle of the driver",
            "example": "car"
          },
          "driver_name": {
            "type": "string",
            "description": "The name of the driver",
            "example": "Gustavo"
          },
          "driver_phone": {
            "type": "integer",
            "description": "The phone number of the driver",
            "example": 13124719334
          },
          "driver_photo_url": {
            "type": "string",
            "description": "The photo of the driver",
            "example": "https://cdn-img.mealme.ai/347fa4c596569c42e6acb0739b9484fdf6b18501/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f67682d70726f642d647269766572732d646174612f647269766572732f31623837346135612d373034622d343638622d626139392d3062656436616439656231642e706e67"
          },
          "driver_rating": {
            "type": "integer",
            "description": "The rating of the driver, range [1-5)",
            "example": 5
          },
          "dropoff_photo_url": {
            "type": "string",
            "description": "The dropoff photo provided by the driver",
            "example": "https://cdn-img.mealme.ai/7a58ee7d0dbf011ab4c723d105ae97d601aadccd/68747470733a2f2f636e2d67656f312e756265722e636f6d2f696d6167652d70726f632f726573697a652f656174732f666f726d61743d776562702f77696474683d313038302f6865696768743d302f7175616c6974793d39302f7372636236343d6148523063484d364c793930596e4d746333526864476c6a4c6e56695a584975593239744c334279623251765a6d6c735a5331316347787659575176645842736232466b6379396a62335679615756794c32786c59585a6c4c5746304c575276623349764d6d51325a44466b5a6d55744e445577595330304f57497a4c5749785a574d744e7a55335a544a6a4d5745344e6a67354c6d70775a7a39516232787059336b395a586c4b56475248526a4261567a4673596d3552615539736444644a62457073597a49354d574e74546d784a616d3970595568534d474e4954545a4d65546b775757354e64474d7a556d686b5232787154473557615670595358565a4d6a6c3054444e436557497955585a616257787a576c4d784d574e4865485a5a563146325a46684363324979526d746a65546c71596a4e5765574658566e6c4d4d6e68735756686162457858526a424d56314a32596a4e4a646b317455544a6152455a72576d3156644535455658645a557a41775431644a656b78585358686156303130546e70564d317055536d704e56305530546d706e4e5578746348646165556c7a5357744f646d4a74556e426b52327832596d6c4a4e6d5635536b565a57464a7356456457656d4d78556d395a567a52705432357a615646575a46525061315a33596a4a4f62315a486248526155306b325456526a654535365454524f52466c3454544d784f575a574d546b6d55326c6e626d463064584a6c5057707a5933524364454654593156505a484e4355586c71526e5a4e62444a7351565a754e55317a4e544a6a55544e584d466c524e6a465655326c34626c646e52444e4d4d6c42696444686f5648354c5556427063446b32556c70464d487042536e4e7564476c4f513045345a47567951326845517a4232626a644759336b3262326c494d554e70534467326158566a5758564a6148553064444974536a5a6b5430356c5332644d5a6b464353486b304f574d34636a46764e485a59627a64515256684a534538774e464a51596d677762556f784c584978563151785633424e513246426355743464464e75515852355356677a64453877576e46795a47745951554e4756455935516d3830556c647a576c45334e5538744e314174616b465262574a584e453958656d4a695447557851566779666c64355958593562307856526d354a56587033576b316d64474e7364566b77666b5a7651305255645578724d585a4861554a2b5a46425459575131565331734c57786a6155467a51324a344f544533636a68554e464e51636a52325546466f596e46564f4770725754524959793152564552344c5659314e30563055306f78614664515348356d4f45704462326858576b5179515639664a6b746c6553315159576c794c556c6b505546515330464b4d304a4d565668485531564556454e4c556b7052"
          },
          "vehicle": {
            "type": "string",
            "description": "The driver's vehicle details",
            "example": "Honda Accord"
          }
        },
        "type": "object"
      },
      "Add_Tracking_Webhook_Input": {
        "required": [
          "endpoint"
        ],
        "properties": {
          "endpoint": {
            "type": "string",
            "description": "The endpoint to receive tracking updates for",
            "example": "https://mealme.ai/tracking_webhook"
          }
        },
        "type": "object"
      },
      "Add_Tracking_Webhook_Output": {
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "string",
            "description": "Description of whether adding/updating tracking webhook was successful",
            "example": "Current tracking webhook attached to account: https://mealme.ai/tracking_webhook"
          }
        },
        "type": "object"
      },
      "Create_Payment_Input_V1": {
        "required": [
          "user_email",
          "user_id"
        ],
        "properties": {
          "user_email": {
            "type": "string",
            "description": "The email of the user to create a payment method for.",
            "example": "steve@apple.com"
          },
          "user_id": {
            "type": "string",
            "description": "The unique user ID of the user to create a payment method for.",
            "example": "7B36A9CF"
          },
          "payment_method": {
            "description": "",
            "required": [
              "card_number",
              "cvc",
              "expiration_month",
              "expiration_year"
            ],
            "properties": {
              "card_number": {
                "type": "integer",
                "description": "The card number of the payment method",
                "example": 4242424242424242
              },
              "expiration_year": {
                "type": "integer",
                "description": "The expiration year of the payment method, like `2025`",
                "example": 2034
              },
              "expiration_month": {
                "type": "integer",
                "description": "The expiration month of the payment method, like `1` for the month of January",
                "example": 12
              },
              "cvc": {
                "type": "integer",
                "description": "CVC code of the payment method",
                "example": 123
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Payment_Method_Input_V2": {
        "required": [
          "card_number",
          "cvc",
          "expiration_month",
          "expiration_year"
        ],
        "properties": {
          "card_number": {
            "type": "integer",
            "description": "The card number of the payment method",
            "example": 4242424242424242
          },
          "expiration_year": {
            "type": "integer",
            "description": "The expiration year of the payment method, like `2025`",
            "example": 2034
          },
          "expiration_month": {
            "type": "integer",
            "description": "The expiration month of the payment method, like `1` for the month of January",
            "example": 12
          },
          "cvc": {
            "type": "integer",
            "description": "CVC code of the payment method",
            "example": 123
          }
        },
        "type": "object"
      },
      "Payment_user_id_email_mismatch": {
        "properties": {
          "error": {
            "type": "string",
            "description": "User id does not match user email",
            "example": "User ID linked to user_email does not match user_id.",
            "enum": [
              "User ID linked to user_email does not match user_id."
            ]
          }
        },
        "type": "object"
      },
      "Create_Payment_Output": {
        "required": [
          "payment_method_id",
          "status"
        ],
        "properties": {
          "status": {
            "type": "string",
            "description": "Message describing whether payment creation was successful.",
            "example": "Successfully created payment method"
          },
          "payment_method_id": {
            "type": "string",
            "description": "The ID of the newly created payment method. The payment method ID can be supplied to [Create Order](https://docs.mealme.ai/reference/post_order_v3) to place an order.",
            "example": "pm_1MZBBkEFrDExIlIksM7oTHEI"
          }
        },
        "type": "object"
      },
      "Create_Payment_Input": {
        "required": [
          "user_email",
          "user_id"
        ],
        "properties": {
          "user_email": {
            "type": "string",
            "description": "The email of the user to create a payment method for.",
            "example": "steve@apple.com"
          },
          "user_id": {
            "type": "string",
            "description": "The unique user ID of the user to create a payment method for.",
            "example": "7B36A9CF"
          },
          "payment_method": {
            "description": "",
            "required": [
              "card_number",
              "cvc",
              "expiration_month",
              "expiration_year"
            ],
            "properties": {
              "card_number": {
                "type": "integer",
                "description": "The card number of the payment method",
                "example": 4242424242424242
              },
              "expiration_year": {
                "type": "integer",
                "description": "The expiration year of the payment method, like `2025`",
                "example": 2034
              },
              "expiration_month": {
                "type": "integer",
                "description": "The expiration month of the payment method, like `1` for the month of January",
                "example": 12
              },
              "cvc": {
                "type": "string",
                "description": "CVC code of the payment method",
                "example": "123"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Payment_Method_Input": {
        "required": [
          "card_number",
          "cvc",
          "expiration_month",
          "expiration_year"
        ],
        "properties": {
          "card_number": {
            "type": "integer",
            "description": "The card number of the payment method",
            "example": 4242424242424242
          },
          "expiration_year": {
            "type": "integer",
            "description": "The expiration year of the payment method, like `2025`",
            "example": 2034
          },
          "expiration_month": {
            "type": "integer",
            "description": "The expiration month of the payment method, like `1` for the month of January",
            "example": 12
          },
          "cvc": {
            "type": "string",
            "description": "CVC code of the payment method",
            "example": "123"
          }
        },
        "type": "object"
      },
      "List_Payment_Methods_Output": {
        "required": [
          "payment_methods"
        ],
        "properties": {
          "payment_methods": {
            "type": "array",
            "description": "The user's list of payment methods",
            "example": [
              {
                "id": "pm_1MZAMnEFrDExIlIkxivWVP8p",
                "exp_month": 12,
                "exp_year": 2034,
                "last4": "4242",
                "network": "visa"
              }
            ],
            "items": {
              "required": [
                "exp_month",
                "exp_year",
                "id",
                "last4",
                "network"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The payment method ID.",
                  "example": "pm_1MZAMnEFrDExIlIkxivWVP8p"
                },
                "exp_month": {
                  "type": "integer",
                  "description": "The payment method expiration month.",
                  "example": 12
                },
                "exp_year": {
                  "type": "integer",
                  "description": "The payment method expiration year.",
                  "example": 2034
                },
                "last4": {
                  "type": "string",
                  "description": "The 4 digits of the payment method.",
                  "example": "4242"
                },
                "network": {
                  "type": "string",
                  "description": "The payment method network.",
                  "example": "visa"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Payment_Method": {
        "required": [
          "exp_month",
          "exp_year",
          "id",
          "last4",
          "network"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "The payment method ID.",
            "example": "pm_1MZAMnEFrDExIlIkxivWVP8p"
          },
          "exp_month": {
            "type": "integer",
            "description": "The payment method expiration month.",
            "example": 12
          },
          "exp_year": {
            "type": "integer",
            "description": "The payment method expiration year.",
            "example": 2034
          },
          "last4": {
            "type": "string",
            "description": "The 4 digits of the payment method.",
            "example": "4242"
          },
          "network": {
            "type": "string",
            "description": "The payment method network.",
            "example": "visa"
          }
        },
        "type": "object"
      },
      "Delete_Payment_Input": {
        "required": [
          "payment_method_id",
          "user_email",
          "user_id"
        ],
        "properties": {
          "user_email": {
            "type": "string",
            "description": "The email of the user to create a payment method for.",
            "example": "steve@apple.com"
          },
          "user_id": {
            "type": "string",
            "description": "The unique user ID of the user to create a payment method for.",
            "example": "7B36A9CF"
          },
          "payment_method_id": {
            "type": "string",
            "description": "The ID of the payment method to delete.",
            "example": "pm_1MZBBkEFrDExIlIksM7oTHEI"
          }
        },
        "type": "object"
      },
      "Delete_payment_Output": {
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "string",
            "description": "Status of attempt to delete a payment method.",
            "example": "Successfully created payment method"
          }
        },
        "type": "object"
      },
      "Get_Payment_Intent_Input": {
        "required": [
          "items",
          "pickup",
          "user_email",
          "user_id",
          "user_name",
          "user_phone"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "The list of items to include in the order. All items must come from the same menu.",
            "default": [
              {
                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                "notes": "No whipped cream."
              }
            ],
            "example": [
              {
                "product_id": "gAAAAABjG7vcneDPtykGbsBcLjJUqW8qqJFctTqQDovWuSkEd9VlTM0dNVVKPLcDAMHXhna_dsa-RJOrXBO82jvvMCDXHYCz3Qwv9qEznaqGB2OXKA-k9cWAQFv1S7epy-C5yCDj7MLlDLl1psRTBRtUcv2PUnaYMMnMvonWGbzQbkGr0_0yjtFNS38EosYy-0-l3_0wLfSzQjSPVQ2Go9FUL4Dw_lvLYMkPHnGnewXnh0HtztKYrMn4lZQppC505ReRYfWxMQkMnqq10EbYMYRGDlEkYCNQX8TFtrNeq3ikYpmctjinfqdhs1-AjapHL6wpkyoRoY6rnKE7dBQjIkn_nIQ1aXmznzKpR5P0Xr9xvp5w2IkCWK8_MhHEenGct1y7n3yGteXzQM4o5Md1yynTwRal7Bq4QoVt-EzyLoW-ZtX8-snYWnDpNLduZLW7j3XCo8EIEBlKUSWkvNl0gbQgyosKgZB573GNQ-rEu3RYvJ_S_Ri62ywBYf_zTexUJtERtIpd6lawr6sty3Wpyq1zhve2zuhsRJ8wj_uorThApJreOXRiOpzyFXTZWxjXz3EklKoqPjUCVllMjVkVQUYkUghVvfr9dO7GWhkqGsRkRHjGxX7coYlI3GaVEQdaIcVrAo2zJBOJt42j5xwgOz0Gw2oupiwQwYtWpUVnYX0JHssDlbmbDON8ddU7YJdGxhC3TOFAGXLIzCPbRifamoEu2np7wbNQ8pDB5tX07lwVQIbrVs0thXYpdGxKk1eKx_c1aKQcf-srjZKHVUvO_4zSRC2FqIpdaYPU0pDDlIovXu6NgoB7CL0=",
                "notes": "No whipped cream."
              }
            ],
            "items": {
              "required": [
                "product_id"
              ],
              "properties": {
                "product_id": {
                  "type": "string",
                  "description": "The product's ID."
                },
                "quantity": {
                  "type": "integer",
                  "description": "The selected quantity (must be greater than 0). If not provided, a quantity of 1 is selected."
                },
                "product_marked_price": {
                  "type": "integer",
                  "description": "The self-provided marked price (in cents) to be used in the email receipt."
                },
                "selected_options": {
                  "type": "array",
                  "description": "The list of selected options for the product.",
                  "items": {
                    "required": [
                      "option_id",
                      "quantity"
                    ],
                    "properties": {
                      "option_id": {
                        "type": "string",
                        "description": "Option ID"
                      },
                      "quantity": {
                        "type": "integer",
                        "description": "The option quantity (must be greater than 0)"
                      },
                      "marked_price": {
                        "type": "integer",
                        "description": "The self-provided option marked price (in cents). This will only affect prices shown in the reciept email sent to the customer."
                      }
                    },
                    "type": "object"
                  }
                },
                "notes": {
                  "type": "string",
                  "description": "The product notes for the store."
                }
              },
              "type": "object"
            }
          },
          "pickup": {
            "type": "boolean",
            "description": "Whether to the order fulfillment type is pickup or delivery.",
            "default": false,
            "example": false
          },
          "scheduled_id": {
            "type": "string",
            "description": "The ID corresponding to the desired scheduled pickup/delivery window. If not provided, the ASAP window will be chosen by default. Scheduled IDs are provided by [](https://docs.mealme.ai/reference/get_inventory_details) and [](https://docs.mealme.ai/reference/get_product_details) when `include_quote` is `true`.",
            "example": ""
          },
          "driver_tip_cents": {
            "type": "integer",
            "description": "The tip for the driver, in cents. This field will be ignored for `pickup` orders.",
            "default": 100,
            "example": 100
          },
          "pickup_tip_cents": {
            "type": "integer",
            "description": "The tip for the store, in cents. Note that this field can only be provided when `quote.accepts_pickup_tip` is `true` from [](https://docs.mealme.ai/reference/get_inventory_details).",
            "default": 0,
            "example": 100
          },
          "user_latitude": {
            "type": "number",
            "description": "Latitude of the user. Not required for `pickup` orders.",
            "default": 37.7786357,
            "example": 37.7786357
          },
          "user_longitude": {
            "type": "number",
            "description": "Longitude of the user. Not required for `pickup` orders.",
            "default": -122.3918135,
            "example": -122.3918135
          },
          "user_street_num": {
            "type": "string",
            "description": "Street number of the user. Not required for `pickup` orders.",
            "default": "188",
            "example": "188"
          },
          "user_street_name": {
            "type": "string",
            "description": "Street name of the user. Not required for `pickup` orders.",
            "default": "King Street",
            "example": "King Street"
          },
          "user_apt_num": {
            "type": "string",
            "description": "Apartment number of the user. Not required for `pickup` orders.",
            "example": "108"
          },
          "user_city": {
            "type": "string",
            "description": "City of the user. Not required for `pickup` orders.",
            "default": "San Francisco",
            "example": "San Francisco"
          },
          "user_state": {
            "type": "string",
            "description": "State of the user. Not required for `pickup` orders.",
            "default": "CA",
            "example": "CA"
          },
          "user_country": {
            "type": "string",
            "description": "Country of the user. Can either be `US` or `CA`. Not required for `pickup` orders.",
            "default": "US",
            "example": "US"
          },
          "user_zipcode": {
            "type": "string",
            "description": "Zipcode of the user. Not required for `pickup` orders.",
            "default": "94107",
            "example": "94107"
          },
          "user_dropoff_notes": {
            "type": "string",
            "description": "Dropoff delivery notes for the user. Not required for `pickup` orders.",
            "default": "Leave in lobby",
            "example": "Leave in lobby"
          },
          "user_pickup_notes": {
            "type": "string",
            "description": "User pickup notes for the store. Not required for `delivery` orders.  Note that this field can only be provided when `quote.accepts_pickup_note` is `true` from [](https://docs.mealme.ai/reference/get_inventory_details).",
            "example": "This pickup order is for Steve"
          },
          "user_name": {
            "type": "string",
            "description": "User's name. This is required so that the store and/or driver know who to give the products to at dropoff.",
            "default": "Steve Jobs",
            "example": "Steve Jobs"
          },
          "user_email": {
            "type": "string",
            "description": "User's email. Order confirmation, updates, and tracking link will be sent to the email provided here.",
            "default": "steve@apple.com",
            "example": "steve@apple.com"
          },
          "user_phone": {
            "type": "integer",
            "description": "User's phone number. This is required so that the store and/or driver know who to call for handling product replacements, drop-off, etc. Must include country code.",
            "default": 14044442058,
            "example": 14044442058
          },
          "user_id": {
            "type": "string",
            "description": "A unique ID for the user generated in your system, which can later be supplied to [Get Orders](https://docs.mealme.ai/reference/get_account_orders) to fetch a user's order(s).",
            "default": "7B36A9CF",
            "example": "7B36A9CF"
          },
          "disable_sms": {
            "type": "boolean",
            "description": "Whether to send the user order status updates via SMS. It's highly recommended to enable SMS, so that the user can receive order updates from the store and/or driver.",
            "default": false,
            "example": false
          },
          "email_receipt_specifications": {
            "description": "Set of optional configurations used to modify email reciept",
            "allOf": [
              {
                "properties": {
                  "prices_marked": {
                    "type": "boolean",
                    "description": "If `true`, the price(s) in the email receipt will reflect the amount(s) specified via the `product_marked_price` and `marked_price` input parameters. If `charge_user` is `true`, the total charged will also reflect these amount(s).",
                    "default": false,
                    "example": false
                  },
                  "added_fee": {
                    "description": "Your added service fee. Any added fees will be reflected in the email receipt and included in the total charged when `charger_user` is `true`.",
                    "allOf": [
                      {
                        "properties": {
                          "added_fee_flat": {
                            "type": "integer",
                            "description": "Flat fee added by API client, in cents.",
                            "default": 0,
                            "example": 100
                          },
                          "added_fee_percent": {
                            "type": "integer",
                            "description": "Percent fee added by API client, range [0-100].",
                            "default": 0,
                            "example": 50
                          },
                          "is_added_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether API client added fee is taxable.",
                            "example": false
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "unify_service_fee": {
                    "type": "boolean",
                    "description": "Whether to combine the underlying service's service fee and your `added_fee` in one line item in the email receipt.",
                    "default": false,
                    "example": false
                  },
                  "misc_fees": {
                    "type": "array",
                    "description": "List of miscellaneous fees or discounts to display in the email receipt.",
                    "example": [
                      {
                        "fee_name": "Chef tip",
                        "fee_amount": 200
                      }
                    ],
                    "items": {
                      "required": [
                        "fee_amount",
                        "fee_name"
                      ],
                      "properties": {
                        "fee_name": {
                          "type": "string",
                          "description": "Name of the fee"
                        },
                        "fee_amount": {
                          "type": "integer",
                          "description": "The fee amount, in cents"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "disable_email": {
                    "type": "boolean",
                    "description": "Whether to send the user an email receipt.",
                    "default": false,
                    "example": false
                  }
                },
                "type": "object"
              }
            ]
          },
          "sms_options": {
            "description": "Set of optional SMS-specific configurations.",
            "allOf": [
              {
                "properties": {
                  "notifications": {
                    "description": "The set of optional custom SMS messages to send to `user_phone` for each event.",
                    "allOf": [
                      {
                        "properties": {
                          "order_placed": {
                            "type": "string",
                            "description": "The SMS message to send to `user_phone` upon an order being successfully placed.",
                            "example": "Your order is confirmed, here is your tracking link https://tracking.example.com/tracking?tracking_id=<>"
                          },
                          "store_confirmed": {
                            "type": "string",
                            "description": "The SMS message to send to `user_phone` upon the store confirming the order.",
                            "example": "McDonald's has confirmed your order."
                          },
                          "pickup_ready": {
                            "type": "string",
                            "description": "The SMS message to send to `user_phone` when the store confirms the pickup order is ready.",
                            "example": "Your order is ready for pickup."
                          },
                          "driver_arriving": {
                            "type": "string",
                            "description": "The SMS message to send to `user_phone` when the driver is arriving to the delivery address.",
                            "example": "You delivery driver is on the way."
                          }
                        },
                        "type": "object"
                      }
                    ]
                  }
                },
                "type": "object"
              }
            ]
          },
          "favorited": {
            "type": "boolean",
            "description": "Whether to add this order as a favorited order",
            "default": false,
            "example": false
          },
          "enable_substitution": {
            "type": "boolean",
            "description": "Whether to automatically substitute the cart with an equivalent one at a different nearby chain location, upon encountering a checkout failure",
            "default": false,
            "example": false
          },
          "customer_order_id": {
            "type": "string",
            "description": "A unique ID for the order generated in your system. This will be returned in the response from [Get Orders](https://docs.mealme.ai/reference/get_account_orders) when looking up an order.",
            "example": "ABC123"
          },
          "autofill_selected_options": {
            "type": "boolean",
            "description": "Whether to automatically select the default quantity for all options and fulfill all customization requirements.",
            "default": false,
            "example": false
          },
          "metadata": {
            "description": "A set of key-value pairs that you can attach to an order, and later reference with '/account/orders`.",
            "example": {
              "Promo Code": "ABC123"
            },
            "allOf": [
              {
                "properties": {
                  "*": {
                    "type": "string",
                    "description": "Any metadata value",
                    "example": "ABC123"
                  }
                },
                "type": "object"
              }
            ]
          },
          "tracking_link": {
            "type": "string",
            "description": "The tracking link to communicate with the customer via SMS/email. If provided, the MealMe tracking link will be replaced with this one. If the tracking link is to be composed of the MealMe order ID, use `<>` as the placedholder. For example, if the tracking link `https://tracking.example.com/tracking?tracking_id=<>` is provided, and the `order_id` in the response is `-Mxak0IAuif3TvN9hBP7`, then the final tracking link will be `https://tracking.example.com/tracking?tracking_id=-Mxak0IAuif3TvN9hBP7`",
            "example": "https://tracking.example.com/tracking?tracking_id=<>"
          }
        },
        "type": "object"
      },
      "Get_Payment_Intent_Output": {
        "required": [
          "client_secret",
          "order_id",
          "payment_intent_id",
          "tracking_link"
        ],
        "properties": {
          "client_secret": {
            "type": "string",
            "description": "The payment intent's client secret, used for completing payments on your front-end, along with a publishable key (provided by MealMe).",
            "example": "ABC123"
          },
          "order_id": {
            "type": "string",
            "description": "The ID of the order, ready to be confirmed upon successfully capturing payment on your front-end.",
            "example": "-Mxak0IAuif3TvN9hBP7"
          },
          "payment_intent_id": {
            "type": "string",
            "description": "The ID of an uncofirmed payment intent attached to the order, which encapsulates the transaction details.",
            "example": "pi_123456789DExIlIk080MvIam"
          },
          "tracking_link": {
            "type": "string",
            "description": "Tracking link for the order.",
            "example": "https://mealme.cc/tracking?tracking_id=-Mn8_a0-R1ERnHlCQUZp"
          }
        },
        "type": "object"
      },
      "Initiate_Chat_Input": {
        "required": [
          "message",
          "order_id",
          "user_id"
        ],
        "properties": {
          "user_id": {
            "type": "string",
            "description": "Customer's user id",
            "example": "cJAhoiGUtvXF8sS8o4SLvZJOATm2"
          },
          "order_id": {
            "type": "string",
            "description": "Customer's order id",
            "example": "-N-yPvDSivF-ide2NOIr"
          },
          "message": {
            "type": "string",
            "description": "Message to initiate the chat",
            "example": "Hello, I cannot find my order"
          }
        },
        "type": "object"
      },
      "Initiate_Chat_Output": {
        "properties": {
          "chat_id": {
            "type": "string",
            "description": "System generated chat id",
            "example": "6274d3ce49db2c71cb32547f"
          },
          "success": {
            "type": "boolean",
            "description": "Indicate whether request is successful or not",
            "example": true
          }
        },
        "type": "object"
      },
      "Send_Chat_Input": {
        "required": [
          "chat_id",
          "message",
          "user_id"
        ],
        "properties": {
          "user_id": {
            "type": "string",
            "description": "Customer's user id",
            "example": "cJAhoiGUtvXF8sS8o4SLvZJOATm2"
          },
          "chat_id": {
            "type": "string",
            "description": "Customer's chat id",
            "example": "6274d3ce49db2c71cb32547f"
          },
          "message": {
            "type": "string",
            "description": "Message to initiate the chat",
            "example": "Hello, I cannot find my order"
          }
        },
        "type": "object"
      },
      "Send_Chat_Output": {
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicate whether request is successful or not",
            "example": true
          }
        },
        "type": "object"
      },
      "Read_Messages_Input": {
        "required": [
          "chat_id"
        ],
        "properties": {
          "chat_id": {
            "type": "string",
            "description": "Customer's chat id",
            "example": "625f245f1acec81fb012b263"
          }
        },
        "type": "object"
      },
      "Read_Messages_Output": {
        "properties": {
          "chat": {
            "description": "",
            "properties": {
              "user_id": {
                "type": "string",
                "description": "Customer's user id",
                "example": "cJAhoiGUtvXF8sS8o4SLvZJOATm2"
              },
              "agent_id": {
                "type": "string",
                "description": "Agent id",
                "example": "mj"
              },
              "messages": {
                "type": "array",
                "description": "List of messages in the chat",
                "items": {
                  "required": [
                    "timestamp"
                  ],
                  "properties": {
                    "sender": {
                      "type": "string",
                      "description": "Sender's user id",
                      "example": "cJAhoiGUtvXF8sS8o4SLvZJOATm2"
                    },
                    "message": {
                      "type": "string",
                      "description": "Message",
                      "example": "Hello, I cannot find my order"
                    },
                    "timestamp": {
                      "type": "number",
                      "description": "message creation timestamp",
                      "example": 1650578800.31
                    },
                    "is_customer_service_message": {
                      "type": "boolean",
                      "description": "Indicate whether message is from customer service or not",
                      "example": true
                    }
                  },
                  "type": "object"
                }
              },
              "initiated_at": {
                "type": "number",
                "description": "Chat initiated timestamp",
                "example": 1650578800.31
              },
              "details": {
                "type": "string",
                "description": "Details of the chat",
                "example": "Initial message from customer"
              },
              "exited_at": {
                "type": "number",
                "description": "Chat exited timestamp",
                "example": 1650578800.31
              },
              "order_id": {
                "type": "string",
                "description": "Order id",
                "example": "-N-yPvDSivF-ide2NOIr"
              },
              "agent_claimed_at": {
                "type": "number",
                "description": "Agent claimed timestamp",
                "example": 1650578800.31
              },
              "last_seen": {
                "type": "number",
                "description": "Last seen timestamp",
                "example": 1650578800.31
              },
              "first_name": {
                "type": "string",
                "description": "First name",
                "example": "John"
              },
              "last_name": {
                "type": "string",
                "description": "Last name",
                "example": "Doe"
              }
            },
            "type": "object"
          },
          "success": {
            "type": "boolean",
            "description": "Indicate whether request is successful or not",
            "example": true
          }
        },
        "type": "object"
      },
      "Details_of_Chat": {
        "properties": {
          "user_id": {
            "type": "string",
            "description": "Customer's user id",
            "example": "cJAhoiGUtvXF8sS8o4SLvZJOATm2"
          },
          "agent_id": {
            "type": "string",
            "description": "Agent id",
            "example": "mj"
          },
          "messages": {
            "type": "array",
            "description": "List of messages in the chat",
            "items": {
              "required": [
                "timestamp"
              ],
              "properties": {
                "sender": {
                  "type": "string",
                  "description": "Sender's user id",
                  "example": "cJAhoiGUtvXF8sS8o4SLvZJOATm2"
                },
                "message": {
                  "type": "string",
                  "description": "Message",
                  "example": "Hello, I cannot find my order"
                },
                "timestamp": {
                  "type": "number",
                  "description": "message creation timestamp",
                  "example": 1650578800.31
                },
                "is_customer_service_message": {
                  "type": "boolean",
                  "description": "Indicate whether message is from customer service or not",
                  "example": true
                }
              },
              "type": "object"
            }
          },
          "initiated_at": {
            "type": "number",
            "description": "Chat initiated timestamp",
            "example": 1650578800.31
          },
          "details": {
            "type": "string",
            "description": "Details of the chat",
            "example": "Initial message from customer"
          },
          "exited_at": {
            "type": "number",
            "description": "Chat exited timestamp",
            "example": 1650578800.31
          },
          "order_id": {
            "type": "string",
            "description": "Order id",
            "example": "-N-yPvDSivF-ide2NOIr"
          },
          "agent_claimed_at": {
            "type": "number",
            "description": "Agent claimed timestamp",
            "example": 1650578800.31
          },
          "last_seen": {
            "type": "number",
            "description": "Last seen timestamp",
            "example": 1650578800.31
          },
          "first_name": {
            "type": "string",
            "description": "First name",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "description": "Last name",
            "example": "Doe"
          }
        },
        "type": "object"
      },
      "Details_of_message": {
        "required": [
          "timestamp"
        ],
        "properties": {
          "sender": {
            "type": "string",
            "description": "Sender's user id",
            "example": "cJAhoiGUtvXF8sS8o4SLvZJOATm2"
          },
          "message": {
            "type": "string",
            "description": "Message",
            "example": "Hello, I cannot find my order"
          },
          "timestamp": {
            "type": "number",
            "description": "message creation timestamp",
            "example": 1650578800.31
          },
          "is_customer_service_message": {
            "type": "boolean",
            "description": "Indicate whether message is from customer service or not",
            "example": true
          }
        },
        "type": "object"
      },
      "Fetch_Chat_Ids_Input": {
        "properties": {
          "user_id": {
            "type": "string",
            "description": "Customer's user id",
            "example": "cJAhoiGUtvXF8sS8o4SLvZJOATm2"
          }
        },
        "type": "object"
      },
      "Fetch_Message_Output": {
        "properties": {
          "active_chats": {
            "description": "Active chats by chat id as the key",
            "allOf": [
              {
                "properties": {
                  "*": {
                    "type": "object",
                    "additionalProperties": {
                      "properties": {
                        "chat_id": {
                          "type": "string",
                          "description": "Chat id",
                          "example": "625f245f1acec81fb012b263"
                        },
                        "order_id": {
                          "type": "string",
                          "description": "Order id",
                          "example": "-N-yPvDSivF-ide2NOIr"
                        },
                        "timestamp": {
                          "type": "number",
                          "description": "Timestamp",
                          "example": 1650578800.31
                        }
                      },
                      "type": "object"
                    },
                    "description": ""
                  }
                },
                "type": "object"
              }
            ]
          },
          "completed_chats": {
            "description": "Completed chats by chat id as the key",
            "allOf": [
              {
                "properties": {
                  "*": {
                    "type": "object",
                    "additionalProperties": {
                      "properties": {
                        "chat_id": {
                          "type": "string",
                          "description": "Chat id",
                          "example": "625f245f1acec81fb012b263"
                        },
                        "order_id": {
                          "type": "string",
                          "description": "Order id",
                          "example": "-N-yPvDSivF-ide2NOIr"
                        },
                        "timestamp": {
                          "type": "number",
                          "description": "Timestamp",
                          "example": 1650578800.31
                        }
                      },
                      "type": "object"
                    },
                    "description": ""
                  }
                },
                "type": "object"
              }
            ]
          }
        },
        "type": "object"
      },
      "Fetch_Chat_Ids_Output": {
        "properties": {
          "chat_id": {
            "type": "string",
            "description": "Chat id",
            "example": "625f245f1acec81fb012b263"
          },
          "order_id": {
            "type": "string",
            "description": "Order id",
            "example": "-N-yPvDSivF-ide2NOIr"
          },
          "timestamp": {
            "type": "number",
            "description": "Timestamp",
            "example": 1650578800.31
          }
        },
        "type": "object"
      },
      "Exit_Chat_Input": {
        "required": [
          "chat_id"
        ],
        "properties": {
          "chat_id": {
            "type": "string",
            "description": "Chat id",
            "example": "625f245f1acec81fb012b263"
          }
        },
        "type": "object"
      },
      "Exit_Message_Output": {
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicate whether request is successful or not",
            "example": true
          }
        },
        "type": "object"
      },
      "Geocode_Address_Input": {
        "required": [
          "address"
        ],
        "properties": {
          "address": {
            "type": "string",
            "description": "Address",
            "example": "1344 Clayton St, San Francisco, CA 94114"
          }
        },
        "type": "object"
      },
      "Geocode_Address_Output": {
        "required": [
          "lat",
          "lng"
        ],
        "properties": {
          "lat": {
            "type": "number",
            "description": "Latitude",
            "example": 37.7595832
          },
          "lng": {
            "type": "number",
            "description": "Longitude",
            "example": -122.4462994
          }
        },
        "type": "object"
      },
      "Reverse_Geocode_Address_Input": {
        "required": [
          "lat",
          "lng"
        ],
        "properties": {
          "lat": {
            "type": "number",
            "description": "Latitude",
            "example": "37.7597036"
          },
          "lng": {
            "type": "number",
            "description": "Longitude",
            "example": "-122.4463143"
          }
        },
        "type": "object"
      },
      "Reverse_Geocode_Address_Output": {
        "required": [
          "address_components",
          "formatted_address"
        ],
        "properties": {
          "formatted_address": {
            "type": "string",
            "description": "Address",
            "example": "1340 Clayton St, San Francisco, CA 94114, USA"
          },
          "address_components": {
            "description": "Address broken down into its different parts (street, state, zipcode, etc.)",
            "allOf": [
              {
                "required": [
                  "city",
                  "country",
                  "state",
                  "street_name",
                  "street_num",
                  "zipcode"
                ],
                "properties": {
                  "street_num": {
                    "type": "string",
                    "example": "1340",
                    "description": ""
                  },
                  "street_name": {
                    "type": "string",
                    "example": "Clayton Street",
                    "description": ""
                  },
                  "city": {
                    "type": "string",
                    "example": "San Francisco",
                    "description": ""
                  },
                  "zipcode": {
                    "type": "string",
                    "example": "94114",
                    "description": ""
                  },
                  "state": {
                    "type": "string",
                    "example": "CA",
                    "description": ""
                  },
                  "country": {
                    "type": "string",
                    "example": "US",
                    "description": ""
                  }
                },
                "type": "object"
              }
            ]
          }
        },
        "type": "object"
      },
      "Address_Components": {
        "required": [
          "city",
          "country",
          "state",
          "street_name",
          "street_num",
          "zipcode"
        ],
        "properties": {
          "street_num": {
            "type": "string",
            "example": "1340",
            "description": ""
          },
          "street_name": {
            "type": "string",
            "example": "Clayton Street",
            "description": ""
          },
          "city": {
            "type": "string",
            "example": "San Francisco",
            "description": ""
          },
          "zipcode": {
            "type": "string",
            "example": "94114",
            "description": ""
          },
          "state": {
            "type": "string",
            "example": "CA",
            "description": ""
          },
          "country": {
            "type": "string",
            "example": "US",
            "description": ""
          }
        },
        "type": "object"
      },
      "Places_Search_Output": {
        "required": [
          "places"
        ],
        "properties": {
          "places": {
            "type": "array",
            "description": "List of nearby places or addresses",
            "items": {
              "required": [
                "place_address",
                "place_address_components"
              ],
              "properties": {
                "mealme_store_id": {
                  "type": "string",
                  "description": "MealMe ID of the place, if it exists in MealMe",
                  "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
                },
                "mealme_place_id": {
                  "type": "string",
                  "description": "MealMe Place ID",
                  "example": "ed23c9c7-6e3e-46f6-b7d4-54aee08c9708"
                },
                "google_place_id": {
                  "type": "string",
                  "description": "Google Place ID",
                  "example": "ed23c9c7-6e3e-46f6-b7d4-54aee08c9708"
                },
                "place_link": {
                  "type": "string",
                  "description": "Website link of the Place",
                  "example": "https://locations.dennys.com/CA/SAN-FRANCISCO/246873"
                },
                "place_name": {
                  "type": "string",
                  "description": "Name of the place",
                  "example": "Denny's"
                },
                "place_address": {
                  "type": "string",
                  "description": "Address of the place",
                  "example": "816 Mission St, San Francisco, CA 94103, US"
                },
                "place_address_components": {
                  "description": "Address of the place broken down into its different parts (street address, state, zipcode, etc.)",
                  "allOf": [
                    {
                      "required": [
                        "city",
                        "country",
                        "state",
                        "street_addr",
                        "zipcode"
                      ],
                      "properties": {
                        "street_addr": {
                          "type": "string",
                          "example": "816 Mission St",
                          "description": ""
                        },
                        "city": {
                          "type": "string",
                          "example": "San Francisco",
                          "description": ""
                        },
                        "state": {
                          "type": "string",
                          "example": "CA",
                          "description": ""
                        },
                        "zipcode": {
                          "type": "string",
                          "example": "94103",
                          "description": ""
                        },
                        "country": {
                          "type": "string",
                          "example": "US",
                          "description": ""
                        }
                      },
                      "type": "object"
                    }
                  ]
                },
                "place_location": {
                  "type": "array",
                  "description": "Coordinates of the place",
                  "example": [
                    37.7842287,
                    -122.4049526
                  ],
                  "items": {
                    "type": "number",
                    "description": "Latitude or Longitude of the place"
                  }
                },
                "place_phone": {
                  "type": "integer",
                  "description": "Phone number of the place",
                  "example": 14152438800
                },
                "place_hours": {
                  "type": "array",
                  "description": "Hours of the place",
                  "example": [
                    "Monday: Closed",
                    "Tuesday: Open 24 hours",
                    "Wednesday: Open 24 hours",
                    "Thursday: Open 24 hours",
                    "Friday: 11:30 AM – 2:00 PM, 5:30 – 9:30 PM",
                    "Saturday: 10:00 AM – 2:00 AM",
                    "Sunday: 5:00 AM – 11:00 PM"
                  ],
                  "items": {
                    "type": "string",
                    "description": "Hours on a given day, either \"Closed\" or \"Open 24 hours\" or a time window like \"5:00 AM – 11:00 PM\" or a range of time periods like \"11:30 AM – 2:00 PM, 5:30 – 9:30 PM\". Can also be past midnight: \"10:00 AM – 2:00 AM\""
                  }
                },
                "status": {
                  "type": "string",
                  "description": "The current operational status of the place. Can be `OPERATIONAL`, `CLOSED_TEMPORARILY`, or `CLOSED_PERMANENTLY`",
                  "example": "OPERATIONAL"
                },
                "type": {
                  "type": "string",
                  "description": "Type of the place, either \"grocery\" or \"restaurant\"",
                  "example": "restaurant"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object"
      },
      "Places_Search_Result": {
        "required": [
          "place_address",
          "place_address_components"
        ],
        "properties": {
          "mealme_store_id": {
            "type": "string",
            "description": "MealMe ID of the place, if it exists in MealMe",
            "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
          },
          "mealme_place_id": {
            "type": "string",
            "description": "MealMe Place ID",
            "example": "ed23c9c7-6e3e-46f6-b7d4-54aee08c9708"
          },
          "google_place_id": {
            "type": "string",
            "description": "Google Place ID",
            "example": "ed23c9c7-6e3e-46f6-b7d4-54aee08c9708"
          },
          "place_link": {
            "type": "string",
            "description": "Website link of the Place",
            "example": "https://locations.dennys.com/CA/SAN-FRANCISCO/246873"
          },
          "place_name": {
            "type": "string",
            "description": "Name of the place",
            "example": "Denny's"
          },
          "place_address": {
            "type": "string",
            "description": "Address of the place",
            "example": "816 Mission St, San Francisco, CA 94103, US"
          },
          "place_address_components": {
            "description": "Address of the place broken down into its different parts (street address, state, zipcode, etc.)",
            "allOf": [
              {
                "required": [
                  "city",
                  "country",
                  "state",
                  "street_addr",
                  "zipcode"
                ],
                "properties": {
                  "street_addr": {
                    "type": "string",
                    "example": "816 Mission St",
                    "description": ""
                  },
                  "city": {
                    "type": "string",
                    "example": "San Francisco",
                    "description": ""
                  },
                  "state": {
                    "type": "string",
                    "example": "CA",
                    "description": ""
                  },
                  "zipcode": {
                    "type": "string",
                    "example": "94103",
                    "description": ""
                  },
                  "country": {
                    "type": "string",
                    "example": "US",
                    "description": ""
                  }
                },
                "type": "object"
              }
            ]
          },
          "place_location": {
            "type": "array",
            "description": "Coordinates of the place",
            "example": [
              37.7842287,
              -122.4049526
            ],
            "items": {
              "type": "number",
              "description": "Latitude or Longitude of the place"
            }
          },
          "place_phone": {
            "type": "integer",
            "description": "Phone number of the place",
            "example": 14152438800
          },
          "place_hours": {
            "type": "array",
            "description": "Hours of the place",
            "example": [
              "Monday: Closed",
              "Tuesday: Open 24 hours",
              "Wednesday: Open 24 hours",
              "Thursday: Open 24 hours",
              "Friday: 11:30 AM – 2:00 PM, 5:30 – 9:30 PM",
              "Saturday: 10:00 AM – 2:00 AM",
              "Sunday: 5:00 AM – 11:00 PM"
            ],
            "items": {
              "type": "string",
              "description": "Hours on a given day, either \"Closed\" or \"Open 24 hours\" or a time window like \"5:00 AM – 11:00 PM\" or a range of time periods like \"11:30 AM – 2:00 PM, 5:30 – 9:30 PM\". Can also be past midnight: \"10:00 AM – 2:00 AM\""
            }
          },
          "status": {
            "type": "string",
            "description": "The current operational status of the place. Can be `OPERATIONAL`, `CLOSED_TEMPORARILY`, or `CLOSED_PERMANENTLY`",
            "example": "OPERATIONAL"
          },
          "type": {
            "type": "string",
            "description": "Type of the place, either \"grocery\" or \"restaurant\"",
            "example": "restaurant"
          }
        },
        "type": "object"
      },
      "Place_Address_Components": {
        "required": [
          "city",
          "country",
          "state",
          "street_addr",
          "zipcode"
        ],
        "properties": {
          "street_addr": {
            "type": "string",
            "example": "816 Mission St",
            "description": ""
          },
          "city": {
            "type": "string",
            "example": "San Francisco",
            "description": ""
          },
          "state": {
            "type": "string",
            "example": "CA",
            "description": ""
          },
          "zipcode": {
            "type": "string",
            "example": "94103",
            "description": ""
          },
          "country": {
            "type": "string",
            "example": "US",
            "description": ""
          }
        },
        "type": "object"
      },
      "Google_place_ID_error": {
        "properties": {
          "error": {
            "type": "string",
            "description": "Google Place ID error",
            "example": "Google Place ID does not exist or is not available for ordering",
            "enum": [
              "Google Place ID does not exist or is not available for ordering"
            ]
          }
        },
        "type": "object"
      },
      "Google_Place_ID_Conversion_Output": {
        "required": [
          "mealme_place_id",
          "mealme_store_id",
          "mealme_store_type"
        ],
        "properties": {
          "mealme_store_id": {
            "type": "string",
            "description": "The MealMe Store ID (\"_id\") in the Search API for this Google Place ID",
            "example": "b6613a4b-f38d-416e-aa54-d8a2fbb4bfb2"
          },
          "mealme_place_id": {
            "type": "string",
            "description": "The MealMe Places ID (\"mealme_place_id\") in the Places API for this Google Place ID",
            "example": "ChIJlanQUIaAhYARfCTRw_DJ2Ss"
          },
          "mealme_store_type": {
            "type": "string",
            "description": "The type of the store, such as \"restaurant\" or \"grocery\"",
            "example": "restaurant"
          }
        },
        "type": "object"
      },
      "Store_Lookup_Output": {
        "required": [
          "store"
        ],
        "properties": {
          "store": {
            "description": "The store corresponding to the provided store ID.",
            "example": {
              "_id": "bd409a61-c837-4146-a4ee-870c6364a172",
              "name": "Zaika India Cuisine",
              "phone_number": 14158729957,
              "address": {
                "street_addr": "737 3rd Street",
                "city": "San Francisco",
                "state": "CA",
                "zipcode": "94107",
                "country": "US",
                "street_addr_2": "",
                "latitude": 37.77861022,
                "longitude": -122.39210511
              },
              "type": "restaurant",
              "description": "Indian, Takeout",
              "local_hours": {
                "operational": {
                  "Monday": "08:00AM - 11:00PM",
                  "Tuesday": "08:00AM - 11:00PM",
                  "Wednesday": "08:00AM - 11:00PM",
                  "Thursday": "12:00AM - 02:00AM, 08:00AM - 02:00AM",
                  "Friday": "08:00AM - 02:00AM",
                  "Saturday": "08:00AM - 12:00AM",
                  "Sunday": "08:00AM - 11:00PM"
                },
                "delivery": {
                  "Monday": "09:45AM - 11:00PM",
                  "Tuesday": "09:45AM - 11:00PM",
                  "Wednesday": "09:45AM - 11:00PM",
                  "Thursday": "12:00AM - 02:00AM, 09:45AM - 02:00AM",
                  "Friday": "09:45AM - 12:00AM",
                  "Saturday": "Open 24 hours",
                  "Sunday": "10:15AM - 11:00PM"
                },
                "pickup": {
                  "Monday": "08:30AM - 11:00PM",
                  "Tuesday": "08:30AM - 11:00PM",
                  "Wednesday": "08:30AM - 11:00PM",
                  "Thursday": "12:00AM - 02:00AM, 08:30AM - 02:00AM",
                  "Friday": "08:30AM - 02:00AM",
                  "Saturday": "08:30AM - 12:00AM",
                  "Sunday": "08:30AM - 11:00PM"
                },
                "dine_in": {
                  "Monday": "08:00AM - 11:00PM",
                  "Tuesday": "08:00AM - 11:00PM",
                  "Wednesday": "08:00AM - 11:00PM",
                  "Thursday": "12:00AM - 02:00AM, 08:00AM - 02:00AM",
                  "Friday": "08:00AM - 02:00AM",
                  "Saturday": "08:00AM - 12:00AM",
                  "Sunday": "08:00AM - 11:00PM"
                }
              },
              "cuisines": [
                "Asian",
                "Curry",
                "Halal",
                "Healthy",
                "Indian",
                "Indian Curry",
                "Takeout",
                "Vegetarian"
              ],
              "food_photos": [
                "https://cdn-img.mealme.ai/e1488986c60af1c92ee6736e68f30ce9c8e29c4f/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f61725f312e302c635f6c696d69742c685f3132352c775f3132352f74686c73796c686a637a6533697a696838777a712e6a7067"
              ],
              "logo_photos": [
                "https://cdn-img.mealme.ai/a31fc1bd7ccb30a52fbefb74b12a13d69f306c7b/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f76313539333038363434302f78737177747577656d6677306f6f31636275737a2e6a7067"
              ],
              "store_photos": [
                "https://cdn-img.mealme.ai/04df36e38f7fa786af7ab71c170c7b75e6d21d00/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f61725f312e302c635f6c696d69742c685f3132352c775f3132352f6569637a6e6f62376e736f7a776d7a68693474792e6a7067"
              ],
              "dollar_signs": 2,
              "pickup_enabled": true,
              "delivery_enabled": true,
              "offers_first_party_delivery": false,
              "offers_third_party_delivery": true,
              "weighted_rating_value": 4.3137614678899086,
              "aggregated_rating_count": 109
            },
            "allOf": [
              {
                "required": [
                  "_id",
                  "address",
                  "aggregated_rating_count",
                  "cuisines",
                  "delivery_enabled",
                  "description",
                  "dollar_signs",
                  "food_photos",
                  "hours",
                  "local_hours",
                  "logo_photos",
                  "name",
                  "offers_first_party_delivery",
                  "offers_third_party_delivery",
                  "phone_number",
                  "pickup_enabled",
                  "store_photos",
                  "supports_upc_codes",
                  "type",
                  "weighted_rating_value"
                ],
                "properties": {
                  "_id": {
                    "type": "string",
                    "description": "MealMe ID of the store. Can be null in some cases.",
                    "example": "7c0360a5-20f4-470a-b8a0-124a509ad827"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the store",
                    "example": "7-Eleven"
                  },
                  "phone_number": {
                    "type": "integer",
                    "description": "Phone number of the store",
                    "example": 14158638332
                  },
                  "address": {
                    "description": "",
                    "required": [
                      "city",
                      "country",
                      "latitude",
                      "longitude",
                      "state",
                      "street_addr",
                      "street_addr_2",
                      "zipcode"
                    ],
                    "properties": {
                      "street_addr": {
                        "type": "string",
                        "description": "Street Address",
                        "example": "1390 Market Street"
                      },
                      "city": {
                        "type": "string",
                        "description": "City",
                        "example": "San Francisco"
                      },
                      "state": {
                        "type": "string",
                        "description": "State abbreviation",
                        "example": "CA"
                      },
                      "zipcode": {
                        "type": "string",
                        "description": "Zipcode",
                        "example": "94102"
                      },
                      "country": {
                        "type": "string",
                        "description": "Country abbreviation",
                        "example": "US"
                      },
                      "street_addr_2": {
                        "type": "string",
                        "description": "Street Address 2",
                        "example": "Apt. 123"
                      },
                      "latitude": {
                        "type": "number",
                        "description": "Latitude",
                        "example": 37.77709
                      },
                      "longitude": {
                        "type": "number",
                        "description": "Longitude",
                        "example": -122.4172976
                      }
                    },
                    "type": "object"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the store, either \"grocery\" or \"restaurant\"",
                    "example": "grocery"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the store",
                    "example": "Local convenience store with snacks, beverages, and more."
                  },
                  "local_hours": {
                    "description": "",
                    "properties": {
                      "operational": {
                        "description": "",
                        "properties": {
                          "Monday": {
                            "type": "string",
                            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                            "example": "09:30AM - 01:00AM"
                          },
                          "Tuesday": {
                            "type": "string",
                            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                          },
                          "Wednesday": {
                            "type": "string",
                            "description": "If a restaurant is opens at midnight, it will show as above. ",
                            "example": "12:00AM - 4:00PM"
                          },
                          "Thursday": {
                            "type": "string",
                            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                            "example": "8:00AM - 4:00AM"
                          },
                          "Friday": {
                            "type": "string",
                            "description": "If a restaurant is open until midnight, it will show as above.",
                            "example": "10:00AM - 12:00AM"
                          },
                          "Saturday": {
                            "type": "string",
                            "description": "If a restaurant shows “Closed“, it is closed for that day.",
                            "example": "Closed"
                          },
                          "Sunday": {
                            "type": "string",
                            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                            "example": "Open 24 hours"
                          }
                        },
                        "type": "object"
                      },
                      "delivery": {
                        "description": "",
                        "properties": {
                          "Monday": {
                            "type": "string",
                            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                            "example": "09:30AM - 01:00AM"
                          },
                          "Tuesday": {
                            "type": "string",
                            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                          },
                          "Wednesday": {
                            "type": "string",
                            "description": "If a restaurant is opens at midnight, it will show as above. ",
                            "example": "12:00AM - 4:00PM"
                          },
                          "Thursday": {
                            "type": "string",
                            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                            "example": "8:00AM - 4:00AM"
                          },
                          "Friday": {
                            "type": "string",
                            "description": "If a restaurant is open until midnight, it will show as above.",
                            "example": "10:00AM - 12:00AM"
                          },
                          "Saturday": {
                            "type": "string",
                            "description": "If a restaurant shows “Closed“, it is closed for that day.",
                            "example": "Closed"
                          },
                          "Sunday": {
                            "type": "string",
                            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                            "example": "Open 24 hours"
                          }
                        },
                        "type": "object"
                      },
                      "pickup": {
                        "description": "",
                        "properties": {
                          "Monday": {
                            "type": "string",
                            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                            "example": "09:30AM - 01:00AM"
                          },
                          "Tuesday": {
                            "type": "string",
                            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                          },
                          "Wednesday": {
                            "type": "string",
                            "description": "If a restaurant is opens at midnight, it will show as above. ",
                            "example": "12:00AM - 4:00PM"
                          },
                          "Thursday": {
                            "type": "string",
                            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                            "example": "8:00AM - 4:00AM"
                          },
                          "Friday": {
                            "type": "string",
                            "description": "If a restaurant is open until midnight, it will show as above.",
                            "example": "10:00AM - 12:00AM"
                          },
                          "Saturday": {
                            "type": "string",
                            "description": "If a restaurant shows “Closed“, it is closed for that day.",
                            "example": "Closed"
                          },
                          "Sunday": {
                            "type": "string",
                            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                            "example": "Open 24 hours"
                          }
                        },
                        "type": "object"
                      },
                      "dine_in": {
                        "description": "",
                        "properties": {
                          "Monday": {
                            "type": "string",
                            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                            "example": "09:30AM - 01:00AM"
                          },
                          "Tuesday": {
                            "type": "string",
                            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                          },
                          "Wednesday": {
                            "type": "string",
                            "description": "If a restaurant is opens at midnight, it will show as above. ",
                            "example": "12:00AM - 4:00PM"
                          },
                          "Thursday": {
                            "type": "string",
                            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                            "example": "8:00AM - 4:00AM"
                          },
                          "Friday": {
                            "type": "string",
                            "description": "If a restaurant is open until midnight, it will show as above.",
                            "example": "10:00AM - 12:00AM"
                          },
                          "Saturday": {
                            "type": "string",
                            "description": "If a restaurant shows “Closed“, it is closed for that day.",
                            "example": "Closed"
                          },
                          "Sunday": {
                            "type": "string",
                            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                            "example": "Open 24 hours"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "hours": {
                    "description": "A mapping of quote ID(s) to their respective local hours.",
                    "allOf": [
                      {
                        "properties": {
                          "*": {
                            "description": "",
                            "properties": {
                              "operational": {
                                "description": "",
                                "properties": {
                                  "Monday": {
                                    "type": "string",
                                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                    "example": "09:30AM - 01:00AM"
                                  },
                                  "Tuesday": {
                                    "type": "string",
                                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                  },
                                  "Wednesday": {
                                    "type": "string",
                                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                                    "example": "12:00AM - 4:00PM"
                                  },
                                  "Thursday": {
                                    "type": "string",
                                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                    "example": "8:00AM - 4:00AM"
                                  },
                                  "Friday": {
                                    "type": "string",
                                    "description": "If a restaurant is open until midnight, it will show as above.",
                                    "example": "10:00AM - 12:00AM"
                                  },
                                  "Saturday": {
                                    "type": "string",
                                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                    "example": "Closed"
                                  },
                                  "Sunday": {
                                    "type": "string",
                                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                    "example": "Open 24 hours"
                                  }
                                },
                                "type": "object"
                              },
                              "delivery": {
                                "description": "",
                                "properties": {
                                  "Monday": {
                                    "type": "string",
                                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                    "example": "09:30AM - 01:00AM"
                                  },
                                  "Tuesday": {
                                    "type": "string",
                                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                  },
                                  "Wednesday": {
                                    "type": "string",
                                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                                    "example": "12:00AM - 4:00PM"
                                  },
                                  "Thursday": {
                                    "type": "string",
                                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                    "example": "8:00AM - 4:00AM"
                                  },
                                  "Friday": {
                                    "type": "string",
                                    "description": "If a restaurant is open until midnight, it will show as above.",
                                    "example": "10:00AM - 12:00AM"
                                  },
                                  "Saturday": {
                                    "type": "string",
                                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                    "example": "Closed"
                                  },
                                  "Sunday": {
                                    "type": "string",
                                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                    "example": "Open 24 hours"
                                  }
                                },
                                "type": "object"
                              },
                              "pickup": {
                                "description": "",
                                "properties": {
                                  "Monday": {
                                    "type": "string",
                                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                    "example": "09:30AM - 01:00AM"
                                  },
                                  "Tuesday": {
                                    "type": "string",
                                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                  },
                                  "Wednesday": {
                                    "type": "string",
                                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                                    "example": "12:00AM - 4:00PM"
                                  },
                                  "Thursday": {
                                    "type": "string",
                                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                    "example": "8:00AM - 4:00AM"
                                  },
                                  "Friday": {
                                    "type": "string",
                                    "description": "If a restaurant is open until midnight, it will show as above.",
                                    "example": "10:00AM - 12:00AM"
                                  },
                                  "Saturday": {
                                    "type": "string",
                                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                    "example": "Closed"
                                  },
                                  "Sunday": {
                                    "type": "string",
                                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                    "example": "Open 24 hours"
                                  }
                                },
                                "type": "object"
                              },
                              "dine_in": {
                                "description": "",
                                "properties": {
                                  "Monday": {
                                    "type": "string",
                                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                                    "example": "09:30AM - 01:00AM"
                                  },
                                  "Tuesday": {
                                    "type": "string",
                                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                                  },
                                  "Wednesday": {
                                    "type": "string",
                                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                                    "example": "12:00AM - 4:00PM"
                                  },
                                  "Thursday": {
                                    "type": "string",
                                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                                    "example": "8:00AM - 4:00AM"
                                  },
                                  "Friday": {
                                    "type": "string",
                                    "description": "If a restaurant is open until midnight, it will show as above.",
                                    "example": "10:00AM - 12:00AM"
                                  },
                                  "Saturday": {
                                    "type": "string",
                                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                                    "example": "Closed"
                                  },
                                  "Sunday": {
                                    "type": "string",
                                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                                    "example": "Open 24 hours"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      }
                    ]
                  },
                  "utc_hours": {
                    "description": "",
                    "properties": {
                      "operational": {
                        "description": "",
                        "required": [
                          "Friday",
                          "Monday",
                          "Saturday",
                          "Sunday",
                          "Thursday",
                          "Tuesday",
                          "Wednesday"
                        ],
                        "properties": {
                          "Monday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Monday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Tuesday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Tuesday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Wednesday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Wednesday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Thursday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Thursday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Friday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Friday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Saturday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Saturday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Sunday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Sunday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "delivery": {
                        "description": "",
                        "required": [
                          "Friday",
                          "Monday",
                          "Saturday",
                          "Sunday",
                          "Thursday",
                          "Tuesday",
                          "Wednesday"
                        ],
                        "properties": {
                          "Monday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Monday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Tuesday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Tuesday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Wednesday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Wednesday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Thursday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Thursday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Friday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Friday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Saturday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Saturday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Sunday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Sunday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "pickup": {
                        "description": "",
                        "required": [
                          "Friday",
                          "Monday",
                          "Saturday",
                          "Sunday",
                          "Thursday",
                          "Tuesday",
                          "Wednesday"
                        ],
                        "properties": {
                          "Monday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Monday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Tuesday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Tuesday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Wednesday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Wednesday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Thursday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Thursday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Friday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Friday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Saturday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Saturday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Sunday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Sunday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "dine_in": {
                        "description": "",
                        "required": [
                          "Friday",
                          "Monday",
                          "Saturday",
                          "Sunday",
                          "Thursday",
                          "Tuesday",
                          "Wednesday"
                        ],
                        "properties": {
                          "Monday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Monday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Tuesday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Tuesday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Wednesday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Wednesday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Thursday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Thursday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Friday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Friday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Saturday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Saturday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "Sunday": {
                            "type": "array",
                            "description": "The list of opening and closing times on Sunday.",
                            "items": {
                              "required": [
                                "closed",
                                "open"
                              ],
                              "properties": {
                                "open": {
                                  "type": "string",
                                  "description": "The store opening UTC time.",
                                  "example": "01:00:00+00:00"
                                },
                                "closed": {
                                  "type": "string",
                                  "description": "The store closing UTC time.",
                                  "example": "17:00:00+00:00"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "cuisines": {
                    "type": "array",
                    "description": "The cuisine types",
                    "example": [
                      "Snacks",
                      "Convenience",
                      "Ice Cream"
                    ],
                    "items": {
                      "type": "string",
                      "description": "Cuisine of the store"
                    }
                  },
                  "food_photos": {
                    "type": "array",
                    "description": "Photos of the food at the store",
                    "example": [
                      "https://cdn-img.mealme.ai/f9ccb38a3d986eeb3f25e5b021d85a73c5d492ba/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f65303762376261372d663036612d346237302d383861302d3466633932656261346236322e6a706567"
                    ],
                    "items": {
                      "type": "string",
                      "description": "Photo of the store"
                    }
                  },
                  "logo_photos": {
                    "type": "array",
                    "description": "Photos of the store's logo",
                    "example": [
                      "https://cdn-img.mealme.ai/9a55bb89e411b1ef87210731a2e7f9fe850cc979/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f76313630313330373339332f656a6e376377756b74766537766e696867616b782e6a7067"
                    ],
                    "items": {
                      "type": "string",
                      "description": "Photo of the store's logo"
                    }
                  },
                  "store_photos": {
                    "type": "array",
                    "description": "Photos of the store",
                    "example": [
                      "https://cdn-img.mealme.ai/7aba9346a8f2e1d8ecf453a86fe3be1b53f98270/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f36393264376333342d626465362d343337612d616435342d3961303633656333666161642e6a706567"
                    ],
                    "items": {
                      "type": "string",
                      "description": "Photo of the store"
                    }
                  },
                  "dollar_signs": {
                    "type": "integer",
                    "description": "Estimated cost of the store, like 1 representing \"$\" or 2 representing \"$$\"",
                    "example": 1
                  },
                  "pickup_enabled": {
                    "type": "boolean",
                    "description": "Whether the store supports pickup.",
                    "example": false
                  },
                  "delivery_enabled": {
                    "type": "boolean",
                    "description": "Whether the store supports delivery.",
                    "example": true
                  },
                  "quotes": {
                    "description": "",
                    "properties": {
                      "cheapest_delivery": {
                        "example": {
                          "time_estimate": {
                            "minimum": 43,
                            "maximum": 45
                          },
                          "sales_tax_percent": 10.5,
                          "delivery_fee": {
                            "delivery_fee_flat": 0,
                            "delivery_fee_percent": 0,
                            "delivery_fee_taxable": false
                          },
                          "service_fee": {
                            "service_fee_flat": 0,
                            "service_fee_percent": 10,
                            "service_fee_min": 300,
                            "service_fee_max": 700,
                            "service_fee_taxable": false
                          },
                          "small_order_fee": {
                            "minimum_order_value": 0,
                            "small_order_fee_flat": 0,
                            "small_order_fee_percent": 0
                          },
                          "order_minimum": 1500,
                          "threshold_fees": [],
                          "asap_available": true
                        },
                        "allOf": [
                          {
                            "required": [
                              "accepts_delivery_tip",
                              "accepts_pickup_note",
                              "accepts_pickup_tip",
                              "asap_available",
                              "courier_quote",
                              "delivery_fee",
                              "first_party_quote",
                              "order_minimum",
                              "sales_tax_percent",
                              "service_fee",
                              "small_order_fee",
                              "third_party_quote",
                              "time_estimate"
                            ],
                            "properties": {
                              "time_estimate": {
                                "description": "",
                                "required": [
                                  "maximum",
                                  "minimum"
                                ],
                                "properties": {
                                  "minimum": {
                                    "type": "integer",
                                    "description": "Lower bound of delivery time estimate (in minutes)"
                                  },
                                  "maximum": {
                                    "type": "integer",
                                    "description": "Upper bound of delivery time estimate (in minutes)"
                                  },
                                  "scheduled": {
                                    "type": "array",
                                    "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                    "items": {
                                      "required": [
                                        "delivery_fee",
                                        "maximum",
                                        "minimum"
                                      ],
                                      "properties": {
                                        "minimum": {
                                          "type": "integer",
                                          "description": "Timestamp (seconds since 1970)"
                                        },
                                        "maximum": {
                                          "type": "integer",
                                          "description": "Timestamp (seconds since 1970)"
                                        },
                                        "delivery_fee": {
                                          "description": "",
                                          "required": [
                                            "delivery_fee_flat",
                                            "delivery_fee_percent"
                                          ],
                                          "properties": {
                                            "delivery_fee_flat": {
                                              "type": "integer",
                                              "description": "Delivery fee amount in cents"
                                            },
                                            "delivery_fee_percent": {
                                              "type": "number",
                                              "description": "Delivery fee percentage"
                                            },
                                            "delivery_fee_taxable": {
                                              "type": "boolean",
                                              "description": "Whether the delivery fee is taxable or not"
                                            },
                                            "threshold_fees": {
                                              "type": "array",
                                              "description": "Threshold Fees, if they exist",
                                              "items": {
                                                "required": [
                                                  "threshold_cents",
                                                  "threshold_fee_cents"
                                                ],
                                                "properties": {
                                                  "threshold_cents": {
                                                    "type": "integer",
                                                    "description": "Subtotal that enacts a specific fee"
                                                  },
                                                  "threshold_fee_cents": {
                                                    "type": "integer",
                                                    "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "sales_tax_percent": {
                                "type": "integer",
                                "description": "Sales tax in percentage terms"
                              },
                              "delivery_fee": {
                                "description": "",
                                "required": [
                                  "delivery_fee_flat",
                                  "delivery_fee_percent"
                                ],
                                "properties": {
                                  "delivery_fee_flat": {
                                    "type": "integer",
                                    "description": "Delivery fee amount in cents"
                                  },
                                  "delivery_fee_percent": {
                                    "type": "number",
                                    "description": "Delivery fee percentage"
                                  },
                                  "delivery_fee_taxable": {
                                    "type": "boolean",
                                    "description": "Whether the delivery fee is taxable or not"
                                  },
                                  "threshold_fees": {
                                    "type": "array",
                                    "description": "Threshold Fees, if they exist",
                                    "items": {
                                      "required": [
                                        "threshold_cents",
                                        "threshold_fee_cents"
                                      ],
                                      "properties": {
                                        "threshold_cents": {
                                          "type": "integer",
                                          "description": "Subtotal that enacts a specific fee"
                                        },
                                        "threshold_fee_cents": {
                                          "type": "integer",
                                          "description": "Flat delivery fee that will be charged for this threshold_cents"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "service_fee": {
                                "description": "",
                                "required": [
                                  "service_fee_flat",
                                  "service_fee_percent"
                                ],
                                "properties": {
                                  "service_fee_flat": {
                                    "type": "integer",
                                    "description": "Service fee amount in cents"
                                  },
                                  "service_fee_percent": {
                                    "type": "number",
                                    "description": "Service fee percentage from 0 to 100"
                                  },
                                  "service_fee_min": {
                                    "type": "integer",
                                    "description": "Minimum service fee amount in cents"
                                  },
                                  "service_fee_max": {
                                    "type": "integer",
                                    "description": "Maximum service fee amount in cents"
                                  },
                                  "service_fee_taxable": {
                                    "type": "boolean",
                                    "description": "Whether the service fee is taxable or not"
                                  },
                                  "threshold_fees": {
                                    "type": "array",
                                    "description": "Threshold Fees, if they exist",
                                    "items": {
                                      "required": [
                                        "threshold_cents",
                                        "threshold_fee_cents"
                                      ],
                                      "properties": {
                                        "threshold_cents": {
                                          "type": "integer",
                                          "description": "Subtotal that enacts a specific fee"
                                        },
                                        "threshold_fee_cents": {
                                          "type": "integer",
                                          "description": "Flat delivery fee that will be charged for this threshold_cents"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "small_order_fee": {
                                "description": "",
                                "required": [
                                  "minimum_order_value",
                                  "small_order_fee_flat",
                                  "small_order_fee_percent"
                                ],
                                "properties": {
                                  "minimum_order_value": {
                                    "type": "integer",
                                    "description": "Minimum amount to not incur small order fee in cents",
                                    "example": 0
                                  },
                                  "small_order_fee_flat": {
                                    "type": "integer",
                                    "description": "Small order fee amount in cents",
                                    "example": 0
                                  },
                                  "small_order_fee_percent": {
                                    "type": "number",
                                    "description": "Small order fee percentage",
                                    "example": 0
                                  }
                                },
                                "type": "object"
                              },
                              "order_minimum": {
                                "type": "integer",
                                "description": "Minimum order amount in cents"
                              },
                              "min_tip": {
                                "type": "integer",
                                "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                              },
                              "asap_available": {
                                "type": "integer",
                                "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                              },
                              "first_party_quote": {
                                "type": "boolean",
                                "description": "Whether this quote is provided by the store"
                              },
                              "third_party_quote": {
                                "type": "boolean",
                                "description": "Whether this quote is provided by a third party service"
                              },
                              "courier_quote": {
                                "type": "boolean",
                                "description": "Whether this quote is provided by a last-mile delivery service."
                              },
                              "accepts_delivery_tip": {
                                "type": "boolean",
                                "description": "Whether a delivery tip is accepted."
                              },
                              "accepts_pickup_tip": {
                                "type": "boolean",
                                "description": "Whether a pickup tip is accepted."
                              },
                              "accepts_pickup_note": {
                                "type": "boolean",
                                "description": "Whether a pickup note is accepted."
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "description": ""
                      },
                      "fastest_delivery": {
                        "example": {
                          "time_estimate": {
                            "minimum": 15,
                            "maximum": 30
                          },
                          "sales_tax_percent": 10.5,
                          "delivery_fee": {
                            "delivery_fee_flat": 199,
                            "delivery_fee_percent": 0,
                            "delivery_fee_taxable": false
                          },
                          "service_fee": {
                            "service_fee_flat": 0,
                            "service_fee_percent": 5
                          },
                          "small_order_fee": {
                            "minimum_order_value": 1200,
                            "small_order_fee_flat": 200,
                            "small_order_fee_percent": 0
                          },
                          "order_minimum": 0,
                          "threshold_fees": [
                            {
                              "threshold_cents": 10000,
                              "threshold_fee_cents": 1000
                            },
                            {
                              "threshold_cents": 20000,
                              "threshold_fee_cents": 2000
                            }
                          ]
                        },
                        "allOf": [
                          {
                            "required": [
                              "accepts_delivery_tip",
                              "accepts_pickup_note",
                              "accepts_pickup_tip",
                              "asap_available",
                              "courier_quote",
                              "delivery_fee",
                              "first_party_quote",
                              "order_minimum",
                              "sales_tax_percent",
                              "service_fee",
                              "small_order_fee",
                              "third_party_quote",
                              "time_estimate"
                            ],
                            "properties": {
                              "time_estimate": {
                                "description": "",
                                "required": [
                                  "maximum",
                                  "minimum"
                                ],
                                "properties": {
                                  "minimum": {
                                    "type": "integer",
                                    "description": "Lower bound of delivery time estimate (in minutes)"
                                  },
                                  "maximum": {
                                    "type": "integer",
                                    "description": "Upper bound of delivery time estimate (in minutes)"
                                  },
                                  "scheduled": {
                                    "type": "array",
                                    "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                    "items": {
                                      "required": [
                                        "delivery_fee",
                                        "maximum",
                                        "minimum"
                                      ],
                                      "properties": {
                                        "minimum": {
                                          "type": "integer",
                                          "description": "Timestamp (seconds since 1970)"
                                        },
                                        "maximum": {
                                          "type": "integer",
                                          "description": "Timestamp (seconds since 1970)"
                                        },
                                        "delivery_fee": {
                                          "description": "",
                                          "required": [
                                            "delivery_fee_flat",
                                            "delivery_fee_percent"
                                          ],
                                          "properties": {
                                            "delivery_fee_flat": {
                                              "type": "integer",
                                              "description": "Delivery fee amount in cents"
                                            },
                                            "delivery_fee_percent": {
                                              "type": "number",
                                              "description": "Delivery fee percentage"
                                            },
                                            "delivery_fee_taxable": {
                                              "type": "boolean",
                                              "description": "Whether the delivery fee is taxable or not"
                                            },
                                            "threshold_fees": {
                                              "type": "array",
                                              "description": "Threshold Fees, if they exist",
                                              "items": {
                                                "required": [
                                                  "threshold_cents",
                                                  "threshold_fee_cents"
                                                ],
                                                "properties": {
                                                  "threshold_cents": {
                                                    "type": "integer",
                                                    "description": "Subtotal that enacts a specific fee"
                                                  },
                                                  "threshold_fee_cents": {
                                                    "type": "integer",
                                                    "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "sales_tax_percent": {
                                "type": "integer",
                                "description": "Sales tax in percentage terms"
                              },
                              "delivery_fee": {
                                "description": "",
                                "required": [
                                  "delivery_fee_flat",
                                  "delivery_fee_percent"
                                ],
                                "properties": {
                                  "delivery_fee_flat": {
                                    "type": "integer",
                                    "description": "Delivery fee amount in cents"
                                  },
                                  "delivery_fee_percent": {
                                    "type": "number",
                                    "description": "Delivery fee percentage"
                                  },
                                  "delivery_fee_taxable": {
                                    "type": "boolean",
                                    "description": "Whether the delivery fee is taxable or not"
                                  },
                                  "threshold_fees": {
                                    "type": "array",
                                    "description": "Threshold Fees, if they exist",
                                    "items": {
                                      "required": [
                                        "threshold_cents",
                                        "threshold_fee_cents"
                                      ],
                                      "properties": {
                                        "threshold_cents": {
                                          "type": "integer",
                                          "description": "Subtotal that enacts a specific fee"
                                        },
                                        "threshold_fee_cents": {
                                          "type": "integer",
                                          "description": "Flat delivery fee that will be charged for this threshold_cents"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "service_fee": {
                                "description": "",
                                "required": [
                                  "service_fee_flat",
                                  "service_fee_percent"
                                ],
                                "properties": {
                                  "service_fee_flat": {
                                    "type": "integer",
                                    "description": "Service fee amount in cents"
                                  },
                                  "service_fee_percent": {
                                    "type": "number",
                                    "description": "Service fee percentage from 0 to 100"
                                  },
                                  "service_fee_min": {
                                    "type": "integer",
                                    "description": "Minimum service fee amount in cents"
                                  },
                                  "service_fee_max": {
                                    "type": "integer",
                                    "description": "Maximum service fee amount in cents"
                                  },
                                  "service_fee_taxable": {
                                    "type": "boolean",
                                    "description": "Whether the service fee is taxable or not"
                                  },
                                  "threshold_fees": {
                                    "type": "array",
                                    "description": "Threshold Fees, if they exist",
                                    "items": {
                                      "required": [
                                        "threshold_cents",
                                        "threshold_fee_cents"
                                      ],
                                      "properties": {
                                        "threshold_cents": {
                                          "type": "integer",
                                          "description": "Subtotal that enacts a specific fee"
                                        },
                                        "threshold_fee_cents": {
                                          "type": "integer",
                                          "description": "Flat delivery fee that will be charged for this threshold_cents"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "small_order_fee": {
                                "description": "",
                                "required": [
                                  "minimum_order_value",
                                  "small_order_fee_flat",
                                  "small_order_fee_percent"
                                ],
                                "properties": {
                                  "minimum_order_value": {
                                    "type": "integer",
                                    "description": "Minimum amount to not incur small order fee in cents",
                                    "example": 0
                                  },
                                  "small_order_fee_flat": {
                                    "type": "integer",
                                    "description": "Small order fee amount in cents",
                                    "example": 0
                                  },
                                  "small_order_fee_percent": {
                                    "type": "number",
                                    "description": "Small order fee percentage",
                                    "example": 0
                                  }
                                },
                                "type": "object"
                              },
                              "order_minimum": {
                                "type": "integer",
                                "description": "Minimum order amount in cents"
                              },
                              "min_tip": {
                                "type": "integer",
                                "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                              },
                              "asap_available": {
                                "type": "integer",
                                "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                              },
                              "first_party_quote": {
                                "type": "boolean",
                                "description": "Whether this quote is provided by the store"
                              },
                              "third_party_quote": {
                                "type": "boolean",
                                "description": "Whether this quote is provided by a third party service"
                              },
                              "courier_quote": {
                                "type": "boolean",
                                "description": "Whether this quote is provided by a last-mile delivery service."
                              },
                              "accepts_delivery_tip": {
                                "type": "boolean",
                                "description": "Whether a delivery tip is accepted."
                              },
                              "accepts_pickup_tip": {
                                "type": "boolean",
                                "description": "Whether a pickup tip is accepted."
                              },
                              "accepts_pickup_note": {
                                "type": "boolean",
                                "description": "Whether a pickup note is accepted."
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "description": ""
                      },
                      "pickup": {
                        "example": {
                          "time_estimate": {
                            "minimum": 5,
                            "maximum": 5
                          },
                          "sales_tax_percent": 10.5,
                          "delivery_fee": {
                            "delivery_fee_flat": 0,
                            "delivery_fee_percent": 0,
                            "delivery_fee_taxable": false
                          },
                          "service_fee": {
                            "service_fee_flat": 0,
                            "service_fee_percent": 0
                          },
                          "small_order_fee": {
                            "minimum_order_value": 1200,
                            "small_order_fee_flat": 200,
                            "small_order_fee_percent": 0
                          },
                          "order_minimum": 100,
                          "threshold_fees": []
                        },
                        "allOf": [
                          {
                            "required": [
                              "accepts_delivery_tip",
                              "accepts_pickup_note",
                              "accepts_pickup_tip",
                              "asap_available",
                              "courier_quote",
                              "delivery_fee",
                              "first_party_quote",
                              "order_minimum",
                              "sales_tax_percent",
                              "service_fee",
                              "small_order_fee",
                              "third_party_quote",
                              "time_estimate"
                            ],
                            "properties": {
                              "time_estimate": {
                                "description": "",
                                "required": [
                                  "maximum",
                                  "minimum"
                                ],
                                "properties": {
                                  "minimum": {
                                    "type": "integer",
                                    "description": "Lower bound of delivery time estimate (in minutes)"
                                  },
                                  "maximum": {
                                    "type": "integer",
                                    "description": "Upper bound of delivery time estimate (in minutes)"
                                  },
                                  "scheduled": {
                                    "type": "array",
                                    "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                                    "items": {
                                      "required": [
                                        "delivery_fee",
                                        "maximum",
                                        "minimum"
                                      ],
                                      "properties": {
                                        "minimum": {
                                          "type": "integer",
                                          "description": "Timestamp (seconds since 1970)"
                                        },
                                        "maximum": {
                                          "type": "integer",
                                          "description": "Timestamp (seconds since 1970)"
                                        },
                                        "delivery_fee": {
                                          "description": "",
                                          "required": [
                                            "delivery_fee_flat",
                                            "delivery_fee_percent"
                                          ],
                                          "properties": {
                                            "delivery_fee_flat": {
                                              "type": "integer",
                                              "description": "Delivery fee amount in cents"
                                            },
                                            "delivery_fee_percent": {
                                              "type": "number",
                                              "description": "Delivery fee percentage"
                                            },
                                            "delivery_fee_taxable": {
                                              "type": "boolean",
                                              "description": "Whether the delivery fee is taxable or not"
                                            },
                                            "threshold_fees": {
                                              "type": "array",
                                              "description": "Threshold Fees, if they exist",
                                              "items": {
                                                "required": [
                                                  "threshold_cents",
                                                  "threshold_fee_cents"
                                                ],
                                                "properties": {
                                                  "threshold_cents": {
                                                    "type": "integer",
                                                    "description": "Subtotal that enacts a specific fee"
                                                  },
                                                  "threshold_fee_cents": {
                                                    "type": "integer",
                                                    "description": "Flat delivery fee that will be charged for this threshold_cents"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "sales_tax_percent": {
                                "type": "integer",
                                "description": "Sales tax in percentage terms"
                              },
                              "delivery_fee": {
                                "description": "",
                                "required": [
                                  "delivery_fee_flat",
                                  "delivery_fee_percent"
                                ],
                                "properties": {
                                  "delivery_fee_flat": {
                                    "type": "integer",
                                    "description": "Delivery fee amount in cents"
                                  },
                                  "delivery_fee_percent": {
                                    "type": "number",
                                    "description": "Delivery fee percentage"
                                  },
                                  "delivery_fee_taxable": {
                                    "type": "boolean",
                                    "description": "Whether the delivery fee is taxable or not"
                                  },
                                  "threshold_fees": {
                                    "type": "array",
                                    "description": "Threshold Fees, if they exist",
                                    "items": {
                                      "required": [
                                        "threshold_cents",
                                        "threshold_fee_cents"
                                      ],
                                      "properties": {
                                        "threshold_cents": {
                                          "type": "integer",
                                          "description": "Subtotal that enacts a specific fee"
                                        },
                                        "threshold_fee_cents": {
                                          "type": "integer",
                                          "description": "Flat delivery fee that will be charged for this threshold_cents"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "service_fee": {
                                "description": "",
                                "required": [
                                  "service_fee_flat",
                                  "service_fee_percent"
                                ],
                                "properties": {
                                  "service_fee_flat": {
                                    "type": "integer",
                                    "description": "Service fee amount in cents"
                                  },
                                  "service_fee_percent": {
                                    "type": "number",
                                    "description": "Service fee percentage from 0 to 100"
                                  },
                                  "service_fee_min": {
                                    "type": "integer",
                                    "description": "Minimum service fee amount in cents"
                                  },
                                  "service_fee_max": {
                                    "type": "integer",
                                    "description": "Maximum service fee amount in cents"
                                  },
                                  "service_fee_taxable": {
                                    "type": "boolean",
                                    "description": "Whether the service fee is taxable or not"
                                  },
                                  "threshold_fees": {
                                    "type": "array",
                                    "description": "Threshold Fees, if they exist",
                                    "items": {
                                      "required": [
                                        "threshold_cents",
                                        "threshold_fee_cents"
                                      ],
                                      "properties": {
                                        "threshold_cents": {
                                          "type": "integer",
                                          "description": "Subtotal that enacts a specific fee"
                                        },
                                        "threshold_fee_cents": {
                                          "type": "integer",
                                          "description": "Flat delivery fee that will be charged for this threshold_cents"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  }
                                },
                                "type": "object"
                              },
                              "small_order_fee": {
                                "description": "",
                                "required": [
                                  "minimum_order_value",
                                  "small_order_fee_flat",
                                  "small_order_fee_percent"
                                ],
                                "properties": {
                                  "minimum_order_value": {
                                    "type": "integer",
                                    "description": "Minimum amount to not incur small order fee in cents",
                                    "example": 0
                                  },
                                  "small_order_fee_flat": {
                                    "type": "integer",
                                    "description": "Small order fee amount in cents",
                                    "example": 0
                                  },
                                  "small_order_fee_percent": {
                                    "type": "number",
                                    "description": "Small order fee percentage",
                                    "example": 0
                                  }
                                },
                                "type": "object"
                              },
                              "order_minimum": {
                                "type": "integer",
                                "description": "Minimum order amount in cents"
                              },
                              "min_tip": {
                                "type": "integer",
                                "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                              },
                              "asap_available": {
                                "type": "integer",
                                "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                              },
                              "first_party_quote": {
                                "type": "boolean",
                                "description": "Whether this quote is provided by the store"
                              },
                              "third_party_quote": {
                                "type": "boolean",
                                "description": "Whether this quote is provided by a third party service"
                              },
                              "courier_quote": {
                                "type": "boolean",
                                "description": "Whether this quote is provided by a last-mile delivery service."
                              },
                              "accepts_delivery_tip": {
                                "type": "boolean",
                                "description": "Whether a delivery tip is accepted."
                              },
                              "accepts_pickup_tip": {
                                "type": "boolean",
                                "description": "Whether a pickup tip is accepted."
                              },
                              "accepts_pickup_note": {
                                "type": "boolean",
                                "description": "Whether a pickup note is accepted."
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "description": ""
                      }
                    },
                    "type": "object"
                  },
                  "quote_types": {
                    "description": "",
                    "properties": {
                      "<quote id>": {
                        "type": "array",
                        "description": "The list of quote types available for this quote id.",
                        "items": {
                          "type": "string",
                          "description": "Quote Type",
                          "example": "pickup",
                          "enum": [
                            "pickup",
                            "delivery"
                          ]
                        }
                      }
                    },
                    "type": "object"
                  },
                  "offers_first_party_delivery": {
                    "type": "boolean",
                    "description": "Whether or not the store delivers directly.",
                    "example": false
                  },
                  "offers_third_party_delivery": {
                    "type": "boolean",
                    "description": "Whether or not the store delivers with third-party services.",
                    "example": false
                  },
                  "weighted_rating_value": {
                    "type": "number",
                    "description": "The weighted average rating of this store across all the websites it appears on. Floating-point from 1 to 5 (inclusive) or 0.",
                    "example": 4.83
                  },
                  "aggregated_rating_count": {
                    "type": "integer",
                    "description": "Number of total aggregated ratings for this store across all the websites it appears on. Non-negative integer.",
                    "example": 956
                  },
                  "supports_upc_codes": {
                    "type": "boolean",
                    "description": "Whether the store's inventory supports UPC codes.",
                    "example": false
                  }
                },
                "type": "object"
              }
            ]
          }
        },
        "type": "object"
      },
      "Store_Lookup": {
        "required": [
          "_id",
          "address",
          "aggregated_rating_count",
          "cuisines",
          "delivery_enabled",
          "description",
          "dollar_signs",
          "food_photos",
          "hours",
          "local_hours",
          "logo_photos",
          "name",
          "offers_first_party_delivery",
          "offers_third_party_delivery",
          "phone_number",
          "pickup_enabled",
          "store_photos",
          "supports_upc_codes",
          "type",
          "weighted_rating_value"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "description": "MealMe ID of the store. Can be null in some cases.",
            "example": "7c0360a5-20f4-470a-b8a0-124a509ad827"
          },
          "name": {
            "type": "string",
            "description": "Name of the store",
            "example": "7-Eleven"
          },
          "phone_number": {
            "type": "integer",
            "description": "Phone number of the store",
            "example": 14158638332
          },
          "address": {
            "description": "",
            "required": [
              "city",
              "country",
              "latitude",
              "longitude",
              "state",
              "street_addr",
              "street_addr_2",
              "zipcode"
            ],
            "properties": {
              "street_addr": {
                "type": "string",
                "description": "Street Address",
                "example": "1390 Market Street"
              },
              "city": {
                "type": "string",
                "description": "City",
                "example": "San Francisco"
              },
              "state": {
                "type": "string",
                "description": "State abbreviation",
                "example": "CA"
              },
              "zipcode": {
                "type": "string",
                "description": "Zipcode",
                "example": "94102"
              },
              "country": {
                "type": "string",
                "description": "Country abbreviation",
                "example": "US"
              },
              "street_addr_2": {
                "type": "string",
                "description": "Street Address 2",
                "example": "Apt. 123"
              },
              "latitude": {
                "type": "number",
                "description": "Latitude",
                "example": 37.77709
              },
              "longitude": {
                "type": "number",
                "description": "Longitude",
                "example": -122.4172976
              }
            },
            "type": "object"
          },
          "type": {
            "type": "string",
            "description": "Type of the store, either \"grocery\" or \"restaurant\"",
            "example": "grocery"
          },
          "description": {
            "type": "string",
            "description": "Description of the store",
            "example": "Local convenience store with snacks, beverages, and more."
          },
          "local_hours": {
            "description": "",
            "properties": {
              "operational": {
                "description": "",
                "properties": {
                  "Monday": {
                    "type": "string",
                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                    "example": "09:30AM - 01:00AM"
                  },
                  "Tuesday": {
                    "type": "string",
                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                  },
                  "Wednesday": {
                    "type": "string",
                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                    "example": "12:00AM - 4:00PM"
                  },
                  "Thursday": {
                    "type": "string",
                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                    "example": "8:00AM - 4:00AM"
                  },
                  "Friday": {
                    "type": "string",
                    "description": "If a restaurant is open until midnight, it will show as above.",
                    "example": "10:00AM - 12:00AM"
                  },
                  "Saturday": {
                    "type": "string",
                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                    "example": "Closed"
                  },
                  "Sunday": {
                    "type": "string",
                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                    "example": "Open 24 hours"
                  }
                },
                "type": "object"
              },
              "delivery": {
                "description": "",
                "properties": {
                  "Monday": {
                    "type": "string",
                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                    "example": "09:30AM - 01:00AM"
                  },
                  "Tuesday": {
                    "type": "string",
                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                  },
                  "Wednesday": {
                    "type": "string",
                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                    "example": "12:00AM - 4:00PM"
                  },
                  "Thursday": {
                    "type": "string",
                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                    "example": "8:00AM - 4:00AM"
                  },
                  "Friday": {
                    "type": "string",
                    "description": "If a restaurant is open until midnight, it will show as above.",
                    "example": "10:00AM - 12:00AM"
                  },
                  "Saturday": {
                    "type": "string",
                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                    "example": "Closed"
                  },
                  "Sunday": {
                    "type": "string",
                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                    "example": "Open 24 hours"
                  }
                },
                "type": "object"
              },
              "pickup": {
                "description": "",
                "properties": {
                  "Monday": {
                    "type": "string",
                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                    "example": "09:30AM - 01:00AM"
                  },
                  "Tuesday": {
                    "type": "string",
                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                  },
                  "Wednesday": {
                    "type": "string",
                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                    "example": "12:00AM - 4:00PM"
                  },
                  "Thursday": {
                    "type": "string",
                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                    "example": "8:00AM - 4:00AM"
                  },
                  "Friday": {
                    "type": "string",
                    "description": "If a restaurant is open until midnight, it will show as above.",
                    "example": "10:00AM - 12:00AM"
                  },
                  "Saturday": {
                    "type": "string",
                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                    "example": "Closed"
                  },
                  "Sunday": {
                    "type": "string",
                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                    "example": "Open 24 hours"
                  }
                },
                "type": "object"
              },
              "dine_in": {
                "description": "",
                "properties": {
                  "Monday": {
                    "type": "string",
                    "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                    "example": "09:30AM - 01:00AM"
                  },
                  "Tuesday": {
                    "type": "string",
                    "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                    "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                  },
                  "Wednesday": {
                    "type": "string",
                    "description": "If a restaurant is opens at midnight, it will show as above. ",
                    "example": "12:00AM - 4:00PM"
                  },
                  "Thursday": {
                    "type": "string",
                    "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                    "example": "8:00AM - 4:00AM"
                  },
                  "Friday": {
                    "type": "string",
                    "description": "If a restaurant is open until midnight, it will show as above.",
                    "example": "10:00AM - 12:00AM"
                  },
                  "Saturday": {
                    "type": "string",
                    "description": "If a restaurant shows “Closed“, it is closed for that day.",
                    "example": "Closed"
                  },
                  "Sunday": {
                    "type": "string",
                    "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                    "example": "Open 24 hours"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "hours": {
            "description": "A mapping of quote ID(s) to their respective local hours.",
            "allOf": [
              {
                "properties": {
                  "*": {
                    "description": "",
                    "properties": {
                      "operational": {
                        "description": "",
                        "properties": {
                          "Monday": {
                            "type": "string",
                            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                            "example": "09:30AM - 01:00AM"
                          },
                          "Tuesday": {
                            "type": "string",
                            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                          },
                          "Wednesday": {
                            "type": "string",
                            "description": "If a restaurant is opens at midnight, it will show as above. ",
                            "example": "12:00AM - 4:00PM"
                          },
                          "Thursday": {
                            "type": "string",
                            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                            "example": "8:00AM - 4:00AM"
                          },
                          "Friday": {
                            "type": "string",
                            "description": "If a restaurant is open until midnight, it will show as above.",
                            "example": "10:00AM - 12:00AM"
                          },
                          "Saturday": {
                            "type": "string",
                            "description": "If a restaurant shows “Closed“, it is closed for that day.",
                            "example": "Closed"
                          },
                          "Sunday": {
                            "type": "string",
                            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                            "example": "Open 24 hours"
                          }
                        },
                        "type": "object"
                      },
                      "delivery": {
                        "description": "",
                        "properties": {
                          "Monday": {
                            "type": "string",
                            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                            "example": "09:30AM - 01:00AM"
                          },
                          "Tuesday": {
                            "type": "string",
                            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                          },
                          "Wednesday": {
                            "type": "string",
                            "description": "If a restaurant is opens at midnight, it will show as above. ",
                            "example": "12:00AM - 4:00PM"
                          },
                          "Thursday": {
                            "type": "string",
                            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                            "example": "8:00AM - 4:00AM"
                          },
                          "Friday": {
                            "type": "string",
                            "description": "If a restaurant is open until midnight, it will show as above.",
                            "example": "10:00AM - 12:00AM"
                          },
                          "Saturday": {
                            "type": "string",
                            "description": "If a restaurant shows “Closed“, it is closed for that day.",
                            "example": "Closed"
                          },
                          "Sunday": {
                            "type": "string",
                            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                            "example": "Open 24 hours"
                          }
                        },
                        "type": "object"
                      },
                      "pickup": {
                        "description": "",
                        "properties": {
                          "Monday": {
                            "type": "string",
                            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                            "example": "09:30AM - 01:00AM"
                          },
                          "Tuesday": {
                            "type": "string",
                            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                          },
                          "Wednesday": {
                            "type": "string",
                            "description": "If a restaurant is opens at midnight, it will show as above. ",
                            "example": "12:00AM - 4:00PM"
                          },
                          "Thursday": {
                            "type": "string",
                            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                            "example": "8:00AM - 4:00AM"
                          },
                          "Friday": {
                            "type": "string",
                            "description": "If a restaurant is open until midnight, it will show as above.",
                            "example": "10:00AM - 12:00AM"
                          },
                          "Saturday": {
                            "type": "string",
                            "description": "If a restaurant shows “Closed“, it is closed for that day.",
                            "example": "Closed"
                          },
                          "Sunday": {
                            "type": "string",
                            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                            "example": "Open 24 hours"
                          }
                        },
                        "type": "object"
                      },
                      "dine_in": {
                        "description": "",
                        "properties": {
                          "Monday": {
                            "type": "string",
                            "description": "This is an example of a normal operational time window. Hours and minutes are pre-padded with 0’s if their value is less than 10. “AM/PM“ are always used. “-“ denotes range between open and close time. ",
                            "example": "09:30AM - 01:00AM"
                          },
                          "Tuesday": {
                            "type": "string",
                            "description": "Multiple opening/closing times for a single day are comma delimited. There can be 1 to many opening/closing times for a given day. ",
                            "example": "09:00AM - 2:00PM, 5:00PM - 9:30PM"
                          },
                          "Wednesday": {
                            "type": "string",
                            "description": "If a restaurant is opens at midnight, it will show as above. ",
                            "example": "12:00AM - 4:00PM"
                          },
                          "Thursday": {
                            "type": "string",
                            "description": "If a restaurants closing time is in the “AM“, it is open into the next day. If a restaurants closing time is lower than it's opening time, it is open into the next day.",
                            "example": "8:00AM - 4:00AM"
                          },
                          "Friday": {
                            "type": "string",
                            "description": "If a restaurant is open until midnight, it will show as above.",
                            "example": "10:00AM - 12:00AM"
                          },
                          "Saturday": {
                            "type": "string",
                            "description": "If a restaurant shows “Closed“, it is closed for that day.",
                            "example": "Closed"
                          },
                          "Sunday": {
                            "type": "string",
                            "description": "If a restaurant shows “Open 24 hours“, it is open for that entire day.",
                            "example": "Open 24 hours"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            ]
          },
          "utc_hours": {
            "description": "",
            "properties": {
              "operational": {
                "description": "",
                "required": [
                  "Friday",
                  "Monday",
                  "Saturday",
                  "Sunday",
                  "Thursday",
                  "Tuesday",
                  "Wednesday"
                ],
                "properties": {
                  "Monday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Monday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Tuesday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Tuesday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Wednesday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Wednesday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Thursday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Thursday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Friday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Friday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Saturday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Saturday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Sunday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Sunday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "type": "object"
              },
              "delivery": {
                "description": "",
                "required": [
                  "Friday",
                  "Monday",
                  "Saturday",
                  "Sunday",
                  "Thursday",
                  "Tuesday",
                  "Wednesday"
                ],
                "properties": {
                  "Monday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Monday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Tuesday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Tuesday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Wednesday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Wednesday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Thursday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Thursday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Friday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Friday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Saturday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Saturday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Sunday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Sunday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "type": "object"
              },
              "pickup": {
                "description": "",
                "required": [
                  "Friday",
                  "Monday",
                  "Saturday",
                  "Sunday",
                  "Thursday",
                  "Tuesday",
                  "Wednesday"
                ],
                "properties": {
                  "Monday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Monday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Tuesday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Tuesday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Wednesday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Wednesday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Thursday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Thursday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Friday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Friday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Saturday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Saturday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Sunday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Sunday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "type": "object"
              },
              "dine_in": {
                "description": "",
                "required": [
                  "Friday",
                  "Monday",
                  "Saturday",
                  "Sunday",
                  "Thursday",
                  "Tuesday",
                  "Wednesday"
                ],
                "properties": {
                  "Monday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Monday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Tuesday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Tuesday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Wednesday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Wednesday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Thursday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Thursday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Friday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Friday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Saturday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Saturday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "Sunday": {
                    "type": "array",
                    "description": "The list of opening and closing times on Sunday.",
                    "items": {
                      "required": [
                        "closed",
                        "open"
                      ],
                      "properties": {
                        "open": {
                          "type": "string",
                          "description": "The store opening UTC time.",
                          "example": "01:00:00+00:00"
                        },
                        "closed": {
                          "type": "string",
                          "description": "The store closing UTC time.",
                          "example": "17:00:00+00:00"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "cuisines": {
            "type": "array",
            "description": "The cuisine types",
            "example": [
              "Snacks",
              "Convenience",
              "Ice Cream"
            ],
            "items": {
              "type": "string",
              "description": "Cuisine of the store"
            }
          },
          "food_photos": {
            "type": "array",
            "description": "Photos of the food at the store",
            "example": [
              "https://cdn-img.mealme.ai/f9ccb38a3d986eeb3f25e5b021d85a73c5d492ba/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f65303762376261372d663036612d346237302d383861302d3466633932656261346236322e6a706567"
            ],
            "items": {
              "type": "string",
              "description": "Photo of the store"
            }
          },
          "logo_photos": {
            "type": "array",
            "description": "Photos of the store's logo",
            "example": [
              "https://cdn-img.mealme.ai/9a55bb89e411b1ef87210731a2e7f9fe850cc979/68747470733a2f2f6d656469612d63646e2e677275626875622e636f6d2f696d6167652f75706c6f61642f76313630313330373339332f656a6e376377756b74766537766e696867616b782e6a7067"
            ],
            "items": {
              "type": "string",
              "description": "Photo of the store's logo"
            }
          },
          "store_photos": {
            "type": "array",
            "description": "Photos of the store",
            "example": [
              "https://cdn-img.mealme.ai/7aba9346a8f2e1d8ecf453a86fe3be1b53f98270/68747470733a2f2f643172616c736f676e6a6e6733372e636c6f756466726f6e742e6e65742f36393264376333342d626465362d343337612d616435342d3961303633656333666161642e6a706567"
            ],
            "items": {
              "type": "string",
              "description": "Photo of the store"
            }
          },
          "dollar_signs": {
            "type": "integer",
            "description": "Estimated cost of the store, like 1 representing \"$\" or 2 representing \"$$\"",
            "example": 1
          },
          "pickup_enabled": {
            "type": "boolean",
            "description": "Whether the store supports pickup.",
            "example": false
          },
          "delivery_enabled": {
            "type": "boolean",
            "description": "Whether the store supports delivery.",
            "example": true
          },
          "quotes": {
            "description": "",
            "properties": {
              "cheapest_delivery": {
                "example": {
                  "time_estimate": {
                    "minimum": 43,
                    "maximum": 45
                  },
                  "sales_tax_percent": 10.5,
                  "delivery_fee": {
                    "delivery_fee_flat": 0,
                    "delivery_fee_percent": 0,
                    "delivery_fee_taxable": false
                  },
                  "service_fee": {
                    "service_fee_flat": 0,
                    "service_fee_percent": 10,
                    "service_fee_min": 300,
                    "service_fee_max": 700,
                    "service_fee_taxable": false
                  },
                  "small_order_fee": {
                    "minimum_order_value": 0,
                    "small_order_fee_flat": 0,
                    "small_order_fee_percent": 0
                  },
                  "order_minimum": 1500,
                  "threshold_fees": [],
                  "asap_available": true
                },
                "allOf": [
                  {
                    "required": [
                      "accepts_delivery_tip",
                      "accepts_pickup_note",
                      "accepts_pickup_tip",
                      "asap_available",
                      "courier_quote",
                      "delivery_fee",
                      "first_party_quote",
                      "order_minimum",
                      "sales_tax_percent",
                      "service_fee",
                      "small_order_fee",
                      "third_party_quote",
                      "time_estimate"
                    ],
                    "properties": {
                      "time_estimate": {
                        "description": "",
                        "required": [
                          "maximum",
                          "minimum"
                        ],
                        "properties": {
                          "minimum": {
                            "type": "integer",
                            "description": "Lower bound of delivery time estimate (in minutes)"
                          },
                          "maximum": {
                            "type": "integer",
                            "description": "Upper bound of delivery time estimate (in minutes)"
                          },
                          "scheduled": {
                            "type": "array",
                            "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                            "items": {
                              "required": [
                                "delivery_fee",
                                "maximum",
                                "minimum"
                              ],
                              "properties": {
                                "minimum": {
                                  "type": "integer",
                                  "description": "Timestamp (seconds since 1970)"
                                },
                                "maximum": {
                                  "type": "integer",
                                  "description": "Timestamp (seconds since 1970)"
                                },
                                "delivery_fee": {
                                  "description": "",
                                  "required": [
                                    "delivery_fee_flat",
                                    "delivery_fee_percent"
                                  ],
                                  "properties": {
                                    "delivery_fee_flat": {
                                      "type": "integer",
                                      "description": "Delivery fee amount in cents"
                                    },
                                    "delivery_fee_percent": {
                                      "type": "number",
                                      "description": "Delivery fee percentage"
                                    },
                                    "delivery_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the delivery fee is taxable or not"
                                    },
                                    "threshold_fees": {
                                      "type": "array",
                                      "description": "Threshold Fees, if they exist",
                                      "items": {
                                        "required": [
                                          "threshold_cents",
                                          "threshold_fee_cents"
                                        ],
                                        "properties": {
                                          "threshold_cents": {
                                            "type": "integer",
                                            "description": "Subtotal that enacts a specific fee"
                                          },
                                          "threshold_fee_cents": {
                                            "type": "integer",
                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "sales_tax_percent": {
                        "type": "integer",
                        "description": "Sales tax in percentage terms"
                      },
                      "delivery_fee": {
                        "description": "",
                        "required": [
                          "delivery_fee_flat",
                          "delivery_fee_percent"
                        ],
                        "properties": {
                          "delivery_fee_flat": {
                            "type": "integer",
                            "description": "Delivery fee amount in cents"
                          },
                          "delivery_fee_percent": {
                            "type": "number",
                            "description": "Delivery fee percentage"
                          },
                          "delivery_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether the delivery fee is taxable or not"
                          },
                          "threshold_fees": {
                            "type": "array",
                            "description": "Threshold Fees, if they exist",
                            "items": {
                              "required": [
                                "threshold_cents",
                                "threshold_fee_cents"
                              ],
                              "properties": {
                                "threshold_cents": {
                                  "type": "integer",
                                  "description": "Subtotal that enacts a specific fee"
                                },
                                "threshold_fee_cents": {
                                  "type": "integer",
                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "service_fee": {
                        "description": "",
                        "required": [
                          "service_fee_flat",
                          "service_fee_percent"
                        ],
                        "properties": {
                          "service_fee_flat": {
                            "type": "integer",
                            "description": "Service fee amount in cents"
                          },
                          "service_fee_percent": {
                            "type": "number",
                            "description": "Service fee percentage from 0 to 100"
                          },
                          "service_fee_min": {
                            "type": "integer",
                            "description": "Minimum service fee amount in cents"
                          },
                          "service_fee_max": {
                            "type": "integer",
                            "description": "Maximum service fee amount in cents"
                          },
                          "service_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether the service fee is taxable or not"
                          },
                          "threshold_fees": {
                            "type": "array",
                            "description": "Threshold Fees, if they exist",
                            "items": {
                              "required": [
                                "threshold_cents",
                                "threshold_fee_cents"
                              ],
                              "properties": {
                                "threshold_cents": {
                                  "type": "integer",
                                  "description": "Subtotal that enacts a specific fee"
                                },
                                "threshold_fee_cents": {
                                  "type": "integer",
                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "small_order_fee": {
                        "description": "",
                        "required": [
                          "minimum_order_value",
                          "small_order_fee_flat",
                          "small_order_fee_percent"
                        ],
                        "properties": {
                          "minimum_order_value": {
                            "type": "integer",
                            "description": "Minimum amount to not incur small order fee in cents",
                            "example": 0
                          },
                          "small_order_fee_flat": {
                            "type": "integer",
                            "description": "Small order fee amount in cents",
                            "example": 0
                          },
                          "small_order_fee_percent": {
                            "type": "number",
                            "description": "Small order fee percentage",
                            "example": 0
                          }
                        },
                        "type": "object"
                      },
                      "order_minimum": {
                        "type": "integer",
                        "description": "Minimum order amount in cents"
                      },
                      "min_tip": {
                        "type": "integer",
                        "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                      },
                      "asap_available": {
                        "type": "integer",
                        "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                      },
                      "first_party_quote": {
                        "type": "boolean",
                        "description": "Whether this quote is provided by the store"
                      },
                      "third_party_quote": {
                        "type": "boolean",
                        "description": "Whether this quote is provided by a third party service"
                      },
                      "courier_quote": {
                        "type": "boolean",
                        "description": "Whether this quote is provided by a last-mile delivery service."
                      },
                      "accepts_delivery_tip": {
                        "type": "boolean",
                        "description": "Whether a delivery tip is accepted."
                      },
                      "accepts_pickup_tip": {
                        "type": "boolean",
                        "description": "Whether a pickup tip is accepted."
                      },
                      "accepts_pickup_note": {
                        "type": "boolean",
                        "description": "Whether a pickup note is accepted."
                      }
                    },
                    "type": "object"
                  }
                ],
                "description": ""
              },
              "fastest_delivery": {
                "example": {
                  "time_estimate": {
                    "minimum": 15,
                    "maximum": 30
                  },
                  "sales_tax_percent": 10.5,
                  "delivery_fee": {
                    "delivery_fee_flat": 199,
                    "delivery_fee_percent": 0,
                    "delivery_fee_taxable": false
                  },
                  "service_fee": {
                    "service_fee_flat": 0,
                    "service_fee_percent": 5
                  },
                  "small_order_fee": {
                    "minimum_order_value": 1200,
                    "small_order_fee_flat": 200,
                    "small_order_fee_percent": 0
                  },
                  "order_minimum": 0,
                  "threshold_fees": [
                    {
                      "threshold_cents": 10000,
                      "threshold_fee_cents": 1000
                    },
                    {
                      "threshold_cents": 20000,
                      "threshold_fee_cents": 2000
                    }
                  ]
                },
                "allOf": [
                  {
                    "required": [
                      "accepts_delivery_tip",
                      "accepts_pickup_note",
                      "accepts_pickup_tip",
                      "asap_available",
                      "courier_quote",
                      "delivery_fee",
                      "first_party_quote",
                      "order_minimum",
                      "sales_tax_percent",
                      "service_fee",
                      "small_order_fee",
                      "third_party_quote",
                      "time_estimate"
                    ],
                    "properties": {
                      "time_estimate": {
                        "description": "",
                        "required": [
                          "maximum",
                          "minimum"
                        ],
                        "properties": {
                          "minimum": {
                            "type": "integer",
                            "description": "Lower bound of delivery time estimate (in minutes)"
                          },
                          "maximum": {
                            "type": "integer",
                            "description": "Upper bound of delivery time estimate (in minutes)"
                          },
                          "scheduled": {
                            "type": "array",
                            "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                            "items": {
                              "required": [
                                "delivery_fee",
                                "maximum",
                                "minimum"
                              ],
                              "properties": {
                                "minimum": {
                                  "type": "integer",
                                  "description": "Timestamp (seconds since 1970)"
                                },
                                "maximum": {
                                  "type": "integer",
                                  "description": "Timestamp (seconds since 1970)"
                                },
                                "delivery_fee": {
                                  "description": "",
                                  "required": [
                                    "delivery_fee_flat",
                                    "delivery_fee_percent"
                                  ],
                                  "properties": {
                                    "delivery_fee_flat": {
                                      "type": "integer",
                                      "description": "Delivery fee amount in cents"
                                    },
                                    "delivery_fee_percent": {
                                      "type": "number",
                                      "description": "Delivery fee percentage"
                                    },
                                    "delivery_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the delivery fee is taxable or not"
                                    },
                                    "threshold_fees": {
                                      "type": "array",
                                      "description": "Threshold Fees, if they exist",
                                      "items": {
                                        "required": [
                                          "threshold_cents",
                                          "threshold_fee_cents"
                                        ],
                                        "properties": {
                                          "threshold_cents": {
                                            "type": "integer",
                                            "description": "Subtotal that enacts a specific fee"
                                          },
                                          "threshold_fee_cents": {
                                            "type": "integer",
                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "sales_tax_percent": {
                        "type": "integer",
                        "description": "Sales tax in percentage terms"
                      },
                      "delivery_fee": {
                        "description": "",
                        "required": [
                          "delivery_fee_flat",
                          "delivery_fee_percent"
                        ],
                        "properties": {
                          "delivery_fee_flat": {
                            "type": "integer",
                            "description": "Delivery fee amount in cents"
                          },
                          "delivery_fee_percent": {
                            "type": "number",
                            "description": "Delivery fee percentage"
                          },
                          "delivery_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether the delivery fee is taxable or not"
                          },
                          "threshold_fees": {
                            "type": "array",
                            "description": "Threshold Fees, if they exist",
                            "items": {
                              "required": [
                                "threshold_cents",
                                "threshold_fee_cents"
                              ],
                              "properties": {
                                "threshold_cents": {
                                  "type": "integer",
                                  "description": "Subtotal that enacts a specific fee"
                                },
                                "threshold_fee_cents": {
                                  "type": "integer",
                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "service_fee": {
                        "description": "",
                        "required": [
                          "service_fee_flat",
                          "service_fee_percent"
                        ],
                        "properties": {
                          "service_fee_flat": {
                            "type": "integer",
                            "description": "Service fee amount in cents"
                          },
                          "service_fee_percent": {
                            "type": "number",
                            "description": "Service fee percentage from 0 to 100"
                          },
                          "service_fee_min": {
                            "type": "integer",
                            "description": "Minimum service fee amount in cents"
                          },
                          "service_fee_max": {
                            "type": "integer",
                            "description": "Maximum service fee amount in cents"
                          },
                          "service_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether the service fee is taxable or not"
                          },
                          "threshold_fees": {
                            "type": "array",
                            "description": "Threshold Fees, if they exist",
                            "items": {
                              "required": [
                                "threshold_cents",
                                "threshold_fee_cents"
                              ],
                              "properties": {
                                "threshold_cents": {
                                  "type": "integer",
                                  "description": "Subtotal that enacts a specific fee"
                                },
                                "threshold_fee_cents": {
                                  "type": "integer",
                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "small_order_fee": {
                        "description": "",
                        "required": [
                          "minimum_order_value",
                          "small_order_fee_flat",
                          "small_order_fee_percent"
                        ],
                        "properties": {
                          "minimum_order_value": {
                            "type": "integer",
                            "description": "Minimum amount to not incur small order fee in cents",
                            "example": 0
                          },
                          "small_order_fee_flat": {
                            "type": "integer",
                            "description": "Small order fee amount in cents",
                            "example": 0
                          },
                          "small_order_fee_percent": {
                            "type": "number",
                            "description": "Small order fee percentage",
                            "example": 0
                          }
                        },
                        "type": "object"
                      },
                      "order_minimum": {
                        "type": "integer",
                        "description": "Minimum order amount in cents"
                      },
                      "min_tip": {
                        "type": "integer",
                        "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                      },
                      "asap_available": {
                        "type": "integer",
                        "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                      },
                      "first_party_quote": {
                        "type": "boolean",
                        "description": "Whether this quote is provided by the store"
                      },
                      "third_party_quote": {
                        "type": "boolean",
                        "description": "Whether this quote is provided by a third party service"
                      },
                      "courier_quote": {
                        "type": "boolean",
                        "description": "Whether this quote is provided by a last-mile delivery service."
                      },
                      "accepts_delivery_tip": {
                        "type": "boolean",
                        "description": "Whether a delivery tip is accepted."
                      },
                      "accepts_pickup_tip": {
                        "type": "boolean",
                        "description": "Whether a pickup tip is accepted."
                      },
                      "accepts_pickup_note": {
                        "type": "boolean",
                        "description": "Whether a pickup note is accepted."
                      }
                    },
                    "type": "object"
                  }
                ],
                "description": ""
              },
              "pickup": {
                "example": {
                  "time_estimate": {
                    "minimum": 5,
                    "maximum": 5
                  },
                  "sales_tax_percent": 10.5,
                  "delivery_fee": {
                    "delivery_fee_flat": 0,
                    "delivery_fee_percent": 0,
                    "delivery_fee_taxable": false
                  },
                  "service_fee": {
                    "service_fee_flat": 0,
                    "service_fee_percent": 0
                  },
                  "small_order_fee": {
                    "minimum_order_value": 1200,
                    "small_order_fee_flat": 200,
                    "small_order_fee_percent": 0
                  },
                  "order_minimum": 100,
                  "threshold_fees": []
                },
                "allOf": [
                  {
                    "required": [
                      "accepts_delivery_tip",
                      "accepts_pickup_note",
                      "accepts_pickup_tip",
                      "asap_available",
                      "courier_quote",
                      "delivery_fee",
                      "first_party_quote",
                      "order_minimum",
                      "sales_tax_percent",
                      "service_fee",
                      "small_order_fee",
                      "third_party_quote",
                      "time_estimate"
                    ],
                    "properties": {
                      "time_estimate": {
                        "description": "",
                        "required": [
                          "maximum",
                          "minimum"
                        ],
                        "properties": {
                          "minimum": {
                            "type": "integer",
                            "description": "Lower bound of delivery time estimate (in minutes)"
                          },
                          "maximum": {
                            "type": "integer",
                            "description": "Upper bound of delivery time estimate (in minutes)"
                          },
                          "scheduled": {
                            "type": "array",
                            "description": "List of scheduled time windows, along with their respective delivery fee, for delivery orders",
                            "items": {
                              "required": [
                                "delivery_fee",
                                "maximum",
                                "minimum"
                              ],
                              "properties": {
                                "minimum": {
                                  "type": "integer",
                                  "description": "Timestamp (seconds since 1970)"
                                },
                                "maximum": {
                                  "type": "integer",
                                  "description": "Timestamp (seconds since 1970)"
                                },
                                "delivery_fee": {
                                  "description": "",
                                  "required": [
                                    "delivery_fee_flat",
                                    "delivery_fee_percent"
                                  ],
                                  "properties": {
                                    "delivery_fee_flat": {
                                      "type": "integer",
                                      "description": "Delivery fee amount in cents"
                                    },
                                    "delivery_fee_percent": {
                                      "type": "number",
                                      "description": "Delivery fee percentage"
                                    },
                                    "delivery_fee_taxable": {
                                      "type": "boolean",
                                      "description": "Whether the delivery fee is taxable or not"
                                    },
                                    "threshold_fees": {
                                      "type": "array",
                                      "description": "Threshold Fees, if they exist",
                                      "items": {
                                        "required": [
                                          "threshold_cents",
                                          "threshold_fee_cents"
                                        ],
                                        "properties": {
                                          "threshold_cents": {
                                            "type": "integer",
                                            "description": "Subtotal that enacts a specific fee"
                                          },
                                          "threshold_fee_cents": {
                                            "type": "integer",
                                            "description": "Flat delivery fee that will be charged for this threshold_cents"
                                          }
                                        },
                                        "type": "object"
                                      }
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "sales_tax_percent": {
                        "type": "integer",
                        "description": "Sales tax in percentage terms"
                      },
                      "delivery_fee": {
                        "description": "",
                        "required": [
                          "delivery_fee_flat",
                          "delivery_fee_percent"
                        ],
                        "properties": {
                          "delivery_fee_flat": {
                            "type": "integer",
                            "description": "Delivery fee amount in cents"
                          },
                          "delivery_fee_percent": {
                            "type": "number",
                            "description": "Delivery fee percentage"
                          },
                          "delivery_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether the delivery fee is taxable or not"
                          },
                          "threshold_fees": {
                            "type": "array",
                            "description": "Threshold Fees, if they exist",
                            "items": {
                              "required": [
                                "threshold_cents",
                                "threshold_fee_cents"
                              ],
                              "properties": {
                                "threshold_cents": {
                                  "type": "integer",
                                  "description": "Subtotal that enacts a specific fee"
                                },
                                "threshold_fee_cents": {
                                  "type": "integer",
                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "service_fee": {
                        "description": "",
                        "required": [
                          "service_fee_flat",
                          "service_fee_percent"
                        ],
                        "properties": {
                          "service_fee_flat": {
                            "type": "integer",
                            "description": "Service fee amount in cents"
                          },
                          "service_fee_percent": {
                            "type": "number",
                            "description": "Service fee percentage from 0 to 100"
                          },
                          "service_fee_min": {
                            "type": "integer",
                            "description": "Minimum service fee amount in cents"
                          },
                          "service_fee_max": {
                            "type": "integer",
                            "description": "Maximum service fee amount in cents"
                          },
                          "service_fee_taxable": {
                            "type": "boolean",
                            "description": "Whether the service fee is taxable or not"
                          },
                          "threshold_fees": {
                            "type": "array",
                            "description": "Threshold Fees, if they exist",
                            "items": {
                              "required": [
                                "threshold_cents",
                                "threshold_fee_cents"
                              ],
                              "properties": {
                                "threshold_cents": {
                                  "type": "integer",
                                  "description": "Subtotal that enacts a specific fee"
                                },
                                "threshold_fee_cents": {
                                  "type": "integer",
                                  "description": "Flat delivery fee that will be charged for this threshold_cents"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "small_order_fee": {
                        "description": "",
                        "required": [
                          "minimum_order_value",
                          "small_order_fee_flat",
                          "small_order_fee_percent"
                        ],
                        "properties": {
                          "minimum_order_value": {
                            "type": "integer",
                            "description": "Minimum amount to not incur small order fee in cents",
                            "example": 0
                          },
                          "small_order_fee_flat": {
                            "type": "integer",
                            "description": "Small order fee amount in cents",
                            "example": 0
                          },
                          "small_order_fee_percent": {
                            "type": "number",
                            "description": "Small order fee percentage",
                            "example": 0
                          }
                        },
                        "type": "object"
                      },
                      "order_minimum": {
                        "type": "integer",
                        "description": "Minimum order amount in cents"
                      },
                      "min_tip": {
                        "type": "integer",
                        "description": "Almost always null. Minimum required tip, in cents, for drivers on some delivery services."
                      },
                      "asap_available": {
                        "type": "integer",
                        "description": "Whether ASAP ordering is currently available. If `asap_available=false`, then only scheduled delivery/pickup is available."
                      },
                      "first_party_quote": {
                        "type": "boolean",
                        "description": "Whether this quote is provided by the store"
                      },
                      "third_party_quote": {
                        "type": "boolean",
                        "description": "Whether this quote is provided by a third party service"
                      },
                      "courier_quote": {
                        "type": "boolean",
                        "description": "Whether this quote is provided by a last-mile delivery service."
                      },
                      "accepts_delivery_tip": {
                        "type": "boolean",
                        "description": "Whether a delivery tip is accepted."
                      },
                      "accepts_pickup_tip": {
                        "type": "boolean",
                        "description": "Whether a pickup tip is accepted."
                      },
                      "accepts_pickup_note": {
                        "type": "boolean",
                        "description": "Whether a pickup note is accepted."
                      }
                    },
                    "type": "object"
                  }
                ],
                "description": ""
              }
            },
            "type": "object"
          },
          "quote_types": {
            "description": "",
            "properties": {
              "<quote id>": {
                "type": "array",
                "description": "The list of quote types available for this quote id.",
                "items": {
                  "type": "string",
                  "description": "Quote Type",
                  "example": "pickup",
                  "enum": [
                    "pickup",
                    "delivery"
                  ]
                }
              }
            },
            "type": "object"
          },
          "offers_first_party_delivery": {
            "type": "boolean",
            "description": "Whether or not the store delivers directly.",
            "example": false
          },
          "offers_third_party_delivery": {
            "type": "boolean",
            "description": "Whether or not the store delivers with third-party services.",
            "example": false
          },
          "weighted_rating_value": {
            "type": "number",
            "description": "The weighted average rating of this store across all the websites it appears on. Floating-point from 1 to 5 (inclusive) or 0.",
            "example": 4.83
          },
          "aggregated_rating_count": {
            "type": "integer",
            "description": "Number of total aggregated ratings for this store across all the websites it appears on. Non-negative integer.",
            "example": 956
          },
          "supports_upc_codes": {
            "type": "boolean",
            "description": "Whether the store's inventory supports UPC codes.",
            "example": false
          }
        },
        "type": "object"
      }
    }
  }
}